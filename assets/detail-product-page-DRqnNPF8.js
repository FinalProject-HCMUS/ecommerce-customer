const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/wrapper-CviSselG-Cfp35juQ.js","assets/__vite-browser-external-BIHI7g3E.js"])))=>i.map(i=>d[i]);
var ex=Object.defineProperty;var tx=(e,s,t)=>s in e?ex(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;var ee=(e,s,t)=>tx(e,typeof s!="symbol"?s+"":s,t);import{r as os,j as st,m as sx,t as Ks,_ as Gc,u as Gf,k as Nl}from"./index-CMKLkvCJ.js";import{B as rx}from"./Breadcrumb-C24zk-tg.js";import{R as Ly,C as nx,S as ox,Q as ix,A as ax,g as lx,u as cx,a as ux}from"./products-8PAwZruY.js";import{f as Kf}from"./string-msUNxrnf.js";import{z as Zr,A as dx,H as px}from"./App-unIg4MgN.js";import{f as hx}from"./formatDate-BQfSuUkJ.js";import{u as mx}from"./reviews-DzE4Nij2.js";import{L as fx}from"./Loading-Srjqyb28.js";import{u as _x}from"./cart-qUiRx950.js";import{c as gx}from"./common-BnKALm7p.js";const wx=({images:e})=>{var r;const[s,t]=os.useState(0);return st.jsxs("div",{className:"flex flex-col md:flex-row gap-4",children:[st.jsx("div",{className:"flex md:flex-col gap-2",children:e.map((o,n)=>st.jsx("img",{src:o.url,className:`w-24 h-24 object-cover cursor-pointer rounded-[12px] ${s===n?"border-2 border-blue-500":""}`,onClick:()=>t(n)},o.id))}),st.jsx("div",{className:"flex-1",children:st.jsx("img",{src:(r=e[s])==null?void 0:r.url,className:"w-full h-auto rounded-[12px]"})})]})},yx=({currentPrice:e,originalPrice:s,discountPercentage:t,size:r="md"})=>{var a;const{settings:o}=sx(),n=((a=o.find(l=>l.key==="CurrencyCode"))==null?void 0:a.value)||"VND",i={sm:{current:"text-base font-bold",original:"text-sm text-gray-400 line-through",discount:"text-xs text-red-500 bg-red-100 px-1.5 py-0.5 rounded"},md:{current:"text-xl font-bold",original:"text-base text-gray-400 line-through",discount:"text-xs text-red-500 bg-red-100 px-2 py-0.5 rounded"},lg:{current:"text-2xl font-bold",original:"text-xl text-gray-400 line-through",discount:"text-sm text-red-500 bg-red-100 px-2 py-0.5 rounded"}};return st.jsxs("div",{className:"flex items-center gap-2",children:[st.jsx("span",{className:i[r].current,children:Kf(e,n)}),t!=0&&st.jsx("span",{className:i[r].original,children:Kf(s,n)}),t!=0&&st.jsxs("span",{className:i[r].discount,children:["-",t,"%"]})]})},bx=({product:e,colors:s,productColorSize:t,sizes:r,handleAddToCart:o,isAdding:n})=>{const[i,a]=os.useState(""),[l,c]=os.useState(""),[p,u]=os.useState(""),[d,_]=os.useState(1),[f,y]=os.useState(e.total||0);os.useEffect(()=>{if(i&&l){const w=t.find(g=>g.color.id===i&&g.size.id===l);w?(u(w.id),y(w.quantity)):y(0)}else y(e.total||0)},[i,l,t,e.total]);const $=w=>{_(w==="increase"?g=>g<f?g+1:f:g=>g>1?g-1:1)};return st.jsxs("div",{className:"flex flex-col",children:[st.jsxs("div",{className:"flex items-center justify-between mb-2",children:[st.jsx("h1",{className:"text-2xl font-bold",children:e.name}),st.jsx("span",{className:"text-xs font-semibold text-blue-800 bg-blue-100 px-4 py-1 rounded-full mt-1 inline-block",children:`${Ks("lbl.quantity")}: ${f}`}),st.jsx("span",{className:`text-xs font-semibold ${f>0?"text-green-800 bg-green-100":"text-red-800 bg-red-100"} px-4 py-1 rounded-full`,children:f>0?Ks("lbl.inStock"):Ks("lbl.outOfStock")})]}),st.jsx("div",{className:"flex items-center mb-4",children:st.jsx(Ly,{rating:e.averageRating})}),st.jsx("div",{className:"mb-4",children:st.jsx(yx,{currentPrice:e.price*(100-e.discountPercent)/100,originalPrice:e.price,discountPercentage:e.discountPercent,size:"lg"})}),st.jsx(nx,{colors:s,selectedColor:i,onChange:a}),st.jsx(ox,{sizes:r,selectedSize:l,onChange:c}),f>0&&st.jsxs("div",{className:"flex items-center gap-4",children:[st.jsx(ix,{quantity:d,onDecrement:()=>$("decrease"),onIncrement:()=>$("increase")}),st.jsx(ax,{isAdding:n,onClick:()=>o(d,p)})]})]})},Mx=["Face"],fa=new Map,On=[],vx=(e,s,t)=>{if(s&&typeof s.init=="function"&&typeof s.createInferenceSessionHandler=="function"){const r=fa.get(e);if(r===void 0)fa.set(e,{backend:s,priority:t});else{if(r.priority>t)return;if(r.priority===t&&r.backend!==s)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const o=On.indexOf(e);o!==-1&&On.splice(o,1);for(let n=0;n<On.length;n++)if(fa.get(On[n]).priority<=t){On.splice(n,0,e);return}On.push(e)}return}throw new TypeError("not a valid backend")},xx=async e=>{const s=fa.get(e);if(!s)return"backend not found.";if(s.initialized)return s.backend;if(s.aborted)return s.error;{const t=!!s.initPromise;try{return t||(s.initPromise=s.backend.init(e)),await s.initPromise,s.initialized=!0,s.backend}catch(r){return t||(s.error=`${r}`,s.aborted=!0),s.error}finally{delete s.initPromise}}},Tx=async e=>{const s=e.executionProviders||[],t=s.map(l=>typeof l=="string"?l:l.name),r=t.length===0?On:t;let o;const n=[],i=new Set;for(const l of r){const c=await xx(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=s.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},Ex="1.21.0";let Hf="warning";const Cr={wasm:{},webgl:{},webgpu:{},versions:{common:Ex},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Hf=e}},get logLevel(){return Hf}};Object.defineProperty(Cr,"logLevel",{enumerable:!0});const Px=Cr,Cx=(e,s)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const r=t.getContext("2d");if(r!=null){let o,n;(s==null?void 0:s.tensorLayout)!==void 0&&s.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);const i=(s==null?void 0:s.format)!==void 0?s.format:"RGB",a=s==null?void 0:s.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=n*o;let u=0,d=p,_=p*2,f=-1;i==="RGBA"?(u=0,d=p,_=p*2,f=p*3):i==="RGB"?(u=0,d=p,_=p*2):i==="RBG"&&(u=0,_=p,d=p*2);for(let y=0;y<n;y++)for(let $=0;$<o;$++){const w=(e.data[u++]-c[0])*l[0],g=(e.data[d++]-c[1])*l[1],C=(e.data[_++]-c[2])*l[2],T=f===-1?255:(e.data[f++]-c[3])*l[3];r.fillStyle="rgba("+w+","+g+","+C+","+T+")",r.fillRect($,y,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Sx=(e,s)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(t!=null){let o,n,i;(s==null?void 0:s.tensorLayout)!==void 0&&s.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);const a=s!==void 0&&s.format!==void 0?s.format:"RGB",l=s==null?void 0:s.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const u=n*o;if(s!==void 0&&(s.format!==void 0&&i===4&&s.format!=="RGBA"||i===3&&s.format!=="RGB"&&s.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const d=4;let _=0,f=1,y=2,$=3,w=0,g=u,C=u*2,T=-1;a==="RGBA"?(w=0,g=u,C=u*2,T=u*3):a==="RGB"?(w=0,g=u,C=u*2):a==="RBG"&&(w=0,C=u,g=u*2),r=t.createImageData(o,n);for(let v=0;v<n*o;_+=d,f+=d,y+=d,$+=d,v++)r.data[_]=(e.data[w++]-p[0])*c[0],r.data[f]=(e.data[g++]-p[1])*c[1],r.data[y]=(e.data[C++]-p[2])*c[2],r.data[$]=T===-1?255:(e.data[T++]-p[3])*c[3]}else throw new Error("Can not access image data");return r},Ul=(e,s)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(s.height===void 0||s.width===void 0)throw new Error("Image height and width must be defined");if(s.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:r}=s,o=s.norm??{mean:255,bias:0};let n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const a=s.format!==void 0?s.format:"RGBA",l=s.tensorFormat!==void 0&&s.tensorFormat!==void 0?s.tensorFormat:"RGB",c=t*r,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let u=4,d=0,_=1,f=2,y=3,$=0,w=c,g=c*2,C=-1;a==="RGB"&&(u=3,d=0,_=1,f=2,y=-1),l==="RGBA"?C=c*3:l==="RBG"?($=0,g=c,w=c*2):l==="BGR"&&(g=0,w=c,$=c*2);for(let v=0;v<c;v++,d+=u,f+=u,_+=u,y+=u)p[$++]=(e[d]+i[0])/n[0],p[w++]=(e[_]+i[1])/n[1],p[g++]=(e[f]+i[2])/n[2],C!==-1&&y!==-1&&(p[C++]=(e[y]+i[3])/n[3]);return l==="RGBA"?new pr("float32",p,[1,4,t,r]):new pr("float32",p,[1,3,t,r])},$x=async(e,s)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,r=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let i,a=s??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){let d=e.height,_=e.width;if(s!==void 0&&s.resizedHeight!==void 0&&s.resizedWidth!==void 0&&(d=s.resizedHeight,_=s.resizedWidth),s!==void 0){if(a=s,s.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=_}else a.tensorFormat="RGBA",a.height=d,a.width=_;u.drawImage(e,0,0),i=u.getImageData(0,0,_,d).data}else throw new Error("Can not access image data")}else if(r){let p,u;if(s!==void 0&&s.resizedWidth!==void 0&&s.resizedHeight!==void 0?(p=s.resizedHeight,u=s.resizedWidth):(p=e.height,u=e.width),s!==void 0&&(a=s),a.format="RGBA",a.height=p,a.width=u,s!==void 0){const d=l();d.width=u,d.height=p;const _=c(d);if(_!=null)_.putImageData(e,0,0),i=_.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(s===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){const d=e.height,_=e.width;return u.drawImage(e,0,0,_,d),i=u.getImageData(0,0,_,d).data,a.height=d,a.width=_,Ul(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,u)=>{const d=l(),_=c(d);if(!e||!_)return u();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{d.width=f.width,d.height=f.height,_.drawImage(f,0,0,d.width,d.height);const y=_.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,p(Ul(y.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Ul(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},kx=(e,s)=>{const{width:t,height:r,download:o,dispose:n}=s,i=[1,r,t,4];return new pr({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},Ix=(e,s)=>{const{dataType:t,dims:r,download:o,dispose:n}=s;return new pr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:r,download:o,dispose:n})},Ax=(e,s)=>{const{dataType:t,dims:r,download:o,dispose:n}=s;return new pr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:r,download:o,dispose:n})},Ox=(e,s,t)=>new pr({location:"cpu-pinned",type:e,data:s,dims:t??[s.length]}),io=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),_a=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let qf=!1;const Fx=()=>{if(!qf){qf=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,s=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,r=typeof t<"u"&&t.from;e&&(io.set("int64",BigInt64Array),_a.set(BigInt64Array,"int64")),s&&(io.set("uint64",BigUint64Array),_a.set(BigUint64Array,"uint64")),r?(io.set("float16",t),_a.set(t,"float16")):io.set("float16",Uint16Array)}},Dx=e=>{let s=1;for(let t=0;t<e.length;t++){const r=e[t];if(typeof r!="number"||!Number.isSafeInteger(r))throw new TypeError(`dims[${t}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${r}`);s*=r}return s},Lx=(e,s)=>{switch(e.location){case"cpu":return new pr(e.type,e.data,s);case"cpu-pinned":return new pr({location:"cpu-pinned",data:e.data,type:e.type,dims:s});case"texture":return new pr({location:"texture",texture:e.texture,type:e.type,dims:s});case"gpu-buffer":return new pr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:s});case"ml-tensor":return new pr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:s});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let pr=class{constructor(s,t,r){Fx();let o,n;if(typeof s=="object"&&"location"in s)switch(this.dataLocation=s.location,o=s.type,n=s.dims,s.location){case"cpu-pinned":{const a=io.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(s.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=s.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=s.texture,this.downloader=s.download,this.disposer=s.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=s.gpuBuffer,this.downloader=s.download,this.disposer=s.dispose;break}case"ml-tensor":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint64"&&o!=="int8"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from MLTensor`);this.mlTensorData=s.mlTensor,this.downloader=s.download,this.disposer=s.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof s=="string")if(o=s,l=r,s==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=io.get(s);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${s}.`);if(Array.isArray(t)){if(s==="float16"&&c===Uint16Array||s==="uint4"||s==="int4")throw new TypeError(`Creating a ${s} tensor from number array is not supported. Please use ${c.name} as data.`);s==="uint64"||s==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(s==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(s==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${o} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(s)){if(s.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof s[0];if(c==="string")o="string",a=s;else if(c==="boolean")o="bool",a=Uint8Array.from(s);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(s instanceof Uint8ClampedArray)o="uint8",a=Uint8Array.from(s);else{const c=_a.get(s.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${s.constructor}.`);o=c,a=s}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=a,this.dataLocation="cpu"}const i=Dx(n);if(this.cpuData&&i!==this.cpuData.length&&!((o==="uint4"||o==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=n,this.size=i}static async fromImage(s,t){return $x(s,t)}static fromTexture(s,t){return kx(s,t)}static fromGpuBuffer(s,t){return Ix(s,t)}static fromMLTensor(s,t){return Ax(s,t)}static fromPinnedBuffer(s,t,r){return Ox(s,t,r)}toDataURL(s){return Cx(this,s)}toImageData(s){return Sx(this,s)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(s){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,s&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(s){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Lx(this,s)}};const no=pr,zy=(e,s)=>{(typeof Cr.trace>"u"?!Cr.wasm.trace:!Cr.trace)||console.timeStamp(`${e}::ORT::${s}`)},By=(e,s)=>{var o;const t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[];let r=!1;for(let n=0;n<t.length;n++){if(r&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;s&&(i+=`::${s}`),zy("CPU",i);return}t[n].includes("TRACE_FUNC")&&(r=!0)}},Kc=e=>{(typeof Cr.trace>"u"?!Cr.wasm.trace:!Cr.trace)||By("BEGIN",e)},Hc=e=>{(typeof Cr.trace>"u"?!Cr.wasm.trace:!Cr.trace)||By("END",e)};let zx=class Ry{constructor(s){this.handler=s}async run(s,t,r){Kc();const o={};let n={};if(typeof s!="object"||s===null||s instanceof no||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof no)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const u of this.outputNames)if(p.indexOf(u)!==-1){const d=t[u];(d===null||d instanceof no)&&(c=!0,i=!1,o[u]=d)}if(c){if(typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof s[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(const c of this.outputNames)o[c]=null;const a=await this.handler.run(s,o,n),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof no?l[c]=p:l[c]=new no(p.type,p.data,p.dims)}return Hc(),l}async release(){return this.handler.dispose()}static async create(s,t,r,o){Kc();let n,i={};if(typeof s=="string"){if(n=s,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof Uint8Array){if(n=s,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&s instanceof SharedArrayBuffer){const p=s;let u=0,d=s.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(d=s.byteLength-u,typeof r=="number"){if(d=r,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||u+d>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,u,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await Tx(i),c=await a.createInferenceSessionHandler(n,l);return Hc(),new Ry(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Bx=zx,Rx=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:Bx,TRACE:zy,TRACE_FUNC_BEGIN:Kc,TRACE_FUNC_END:Hc,Tensor:no,env:Px,registerBackend:vx},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var pu=Object.defineProperty,jx=Object.getOwnPropertyDescriptor,Nx=Object.getOwnPropertyNames,Ux=Object.prototype.hasOwnProperty,Vx=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(s,t)=>(typeof require<"u"?require:s)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ne=(e,s)=>()=>(e&&(s=e(e=0)),s),uo=(e,s)=>{for(var t in s)pu(e,t,{get:s[t],enumerable:!0})},Wx=(e,s,t,r)=>{if(s&&typeof s=="object"||typeof s=="function")for(let o of Nx(s))!Ux.call(e,o)&&o!==t&&pu(e,o,{get:()=>s[o],enumerable:!(r=jx(s,o))||r.enumerable});return e},ii=e=>Wx(pu({},"__esModule",{value:!0}),e),Uo,en,Ln,Qf,jy,Ny=Ne(()=>{Uo=new Map,en=[],Ln=(e,s,t)=>{if(s&&typeof s.init=="function"&&typeof s.createInferenceSessionHandler=="function"){let r=Uo.get(e);if(r===void 0)Uo.set(e,{backend:s,priority:t});else{if(r.priority>t)return;if(r.priority===t&&r.backend!==s)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let o=en.indexOf(e);o!==-1&&en.splice(o,1);for(let n=0;n<en.length;n++)if(Uo.get(en[n]).priority<=t){en.splice(n,0,e);return}en.push(e)}return}throw new TypeError("not a valid backend")},Qf=async e=>{let s=Uo.get(e);if(!s)return"backend not found.";if(s.initialized)return s.backend;if(s.aborted)return s.error;{let t=!!s.initPromise;try{return t||(s.initPromise=s.backend.init(e)),await s.initPromise,s.initialized=!0,s.backend}catch(r){return t||(s.error=`${r}`,s.aborted=!0),s.error}finally{delete s.initPromise}}},jy=async e=>{let s=e.executionProviders||[],t=s.map(l=>typeof l=="string"?l:l.name),r=t.length===0?en:t,o,n=[],i=new Set;for(let l of r){let c=await Qf(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=s.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),Gx=Ne(()=>{Ny()}),Uy,Kx=Ne(()=>{Uy="1.22.0-dev.20250409-89f8206ba4"}),Vl,dr,Vy=Ne(()=>{Kx(),Vl="warning",dr={wasm:{},webgl:{},webgpu:{},versions:{common:Uy},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Vl=e}},get logLevel(){return Vl}},Object.defineProperty(dr,"logLevel",{enumerable:!0})}),es,Hx=Ne(()=>{Vy(),es=dr}),Wy,Gy,qx=Ne(()=>{Wy=(e,s)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let r=t.getContext("2d");if(r!=null){let o,n;(s==null?void 0:s.tensorLayout)!==void 0&&s.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);let i=(s==null?void 0:s.format)!==void 0?s.format:"RGB",a=s==null?void 0:s.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=n*o,u=0,d=p,_=p*2,f=-1;i==="RGBA"?(u=0,d=p,_=p*2,f=p*3):i==="RGB"?(u=0,d=p,_=p*2):i==="RBG"&&(u=0,_=p,d=p*2);for(let y=0;y<n;y++)for(let $=0;$<o;$++){let w=(e.data[u++]-c[0])*l[0],g=(e.data[d++]-c[1])*l[1],C=(e.data[_++]-c[2])*l[2],T=f===-1?255:(e.data[f++]-c[3])*l[3];r.fillStyle="rgba("+w+","+g+","+C+","+T+")",r.fillRect($,y,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Gy=(e,s)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),r;if(t!=null){let o,n,i;(s==null?void 0:s.tensorLayout)!==void 0&&s.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);let a=s!==void 0&&s.format!==void 0?s.format:"RGB",l=s==null?void 0:s.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let u=n*o;if(s!==void 0&&(s.format!==void 0&&i===4&&s.format!=="RGBA"||i===3&&s.format!=="RGB"&&s.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let d=4,_=0,f=1,y=2,$=3,w=0,g=u,C=u*2,T=-1;a==="RGBA"?(w=0,g=u,C=u*2,T=u*3):a==="RGB"?(w=0,g=u,C=u*2):a==="RBG"&&(w=0,C=u,g=u*2),r=t.createImageData(o,n);for(let v=0;v<n*o;_+=d,f+=d,y+=d,$+=d,v++)r.data[_]=(e.data[w++]-p[0])*c[0],r.data[f]=(e.data[g++]-p[1])*c[1],r.data[y]=(e.data[C++]-p[2])*c[2],r.data[$]=T===-1?255:(e.data[T++]-p[3])*c[3]}else throw new Error("Can not access image data");return r}}),ta,Ky,Hy,qy,Qy,Xy,Qx=Ne(()=>{hu(),ta=(e,s)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(s.height===void 0||s.width===void 0)throw new Error("Image height and width must be defined");if(s.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:r}=s,o=s.norm??{mean:255,bias:0},n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=s.format!==void 0?s.format:"RGBA",l=s.tensorFormat!==void 0&&s.tensorFormat!==void 0?s.tensorFormat:"RGB",c=t*r,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),u=4,d=0,_=1,f=2,y=3,$=0,w=c,g=c*2,C=-1;a==="RGB"&&(u=3,d=0,_=1,f=2,y=-1),l==="RGBA"?C=c*3:l==="RBG"?($=0,g=c,w=c*2):l==="BGR"&&(g=0,w=c,$=c*2);for(let T=0;T<c;T++,d+=u,f+=u,_+=u,y+=u)p[$++]=(e[d]+i[0])/n[0],p[w++]=(e[_]+i[1])/n[1],p[g++]=(e[f]+i[2])/n[2],C!==-1&&y!==-1&&(p[C++]=(e[y]+i[3])/n[3]);return l==="RGBA"?new er("float32",p,[1,4,t,r]):new er("float32",p,[1,3,t,r])},Ky=async(e,s)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,r=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",i,a=s??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let d=e.height,_=e.width;if(s!==void 0&&s.resizedHeight!==void 0&&s.resizedWidth!==void 0&&(d=s.resizedHeight,_=s.resizedWidth),s!==void 0){if(a=s,s.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=_}else a.tensorFormat="RGBA",a.height=d,a.width=_;u.drawImage(e,0,0),i=u.getImageData(0,0,_,d).data}else throw new Error("Can not access image data")}else if(r){let p,u;if(s!==void 0&&s.resizedWidth!==void 0&&s.resizedHeight!==void 0?(p=s.resizedHeight,u=s.resizedWidth):(p=e.height,u=e.width),s!==void 0&&(a=s),a.format="RGBA",a.height=p,a.width=u,s!==void 0){let d=l();d.width=u,d.height=p;let _=c(d);if(_!=null)_.putImageData(e,0,0),i=_.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(s===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let d=e.height,_=e.width;return u.drawImage(e,0,0,_,d),i=u.getImageData(0,0,_,d).data,a.height=d,a.width=_,ta(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,u)=>{let d=l(),_=c(d);if(!e||!_)return u();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{d.width=f.width,d.height=f.height,_.drawImage(f,0,0,d.width,d.height);let y=_.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,p(ta(y.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return ta(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Hy=(e,s)=>{let{width:t,height:r,download:o,dispose:n}=s,i=[1,r,t,4];return new er({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},qy=(e,s)=>{let{dataType:t,dims:r,download:o,dispose:n}=s;return new er({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:r,download:o,dispose:n})},Qy=(e,s)=>{let{dataType:t,dims:r,download:o,dispose:n}=s;return new er({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:r,download:o,dispose:n})},Xy=(e,s,t)=>new er({location:"cpu-pinned",type:e,data:s,dims:t??[s.length]})}),Fn,ei,Wl,Jy,Xx=Ne(()=>{Fn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ei=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Wl=!1,Jy=()=>{if(!Wl){Wl=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,s=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,r=typeof t<"u"&&t.from;e&&(Fn.set("int64",BigInt64Array),ei.set(BigInt64Array,"int64")),s&&(Fn.set("uint64",BigUint64Array),ei.set(BigUint64Array,"uint64")),r?(Fn.set("float16",t),ei.set(t,"float16")):Fn.set("float16",Uint16Array)}}}),Yy,Zy,Jx=Ne(()=>{hu(),Yy=e=>{let s=1;for(let t=0;t<e.length;t++){let r=e[t];if(typeof r!="number"||!Number.isSafeInteger(r))throw new TypeError(`dims[${t}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${r}`);s*=r}return s},Zy=(e,s)=>{switch(e.location){case"cpu":return new er(e.type,e.data,s);case"cpu-pinned":return new er({location:"cpu-pinned",data:e.data,type:e.type,dims:s});case"texture":return new er({location:"texture",texture:e.texture,type:e.type,dims:s});case"gpu-buffer":return new er({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:s});case"ml-tensor":return new er({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:s});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),er,hu=Ne(()=>{qx(),Qx(),Xx(),Jx(),er=class{constructor(e,s,t){Jy();let r,o;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,r=e.type,o=e.dims,e.location){case"cpu-pinned":{let i=Fn.get(r);if(!i)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(r!=="float32")throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(r!=="float32"&&r!=="float16"&&r!=="int32"&&r!=="int64"&&r!=="uint32"&&r!=="uint8"&&r!=="bool"&&r!=="uint4"&&r!=="int4")throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(r!=="float32"&&r!=="float16"&&r!=="int32"&&r!=="int64"&&r!=="uint32"&&r!=="uint64"&&r!=="int8"&&r!=="uint8"&&r!=="bool"&&r!=="uint4"&&r!=="int4")throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if(typeof e=="string")if(r=e,a=t,e==="string"){if(!Array.isArray(s))throw new TypeError("A string tensor's data must be a string array.");i=s}else{let l=Fn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(s)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(s,BigInt):i=l.from(s)}else if(s instanceof l)i=s;else if(s instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(s);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&s instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(s.buffer,s.byteOffset,s.length);else throw new TypeError(`A ${r} tensor's data must be type of ${l}`)}else if(a=s,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")r="string",i=e;else if(l==="boolean")r="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{let l=ei.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=l,i=e}if(a===void 0)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");o=a,this.cpuData=i,this.dataLocation="cpu"}let n=Yy(o);if(this.cpuData&&n!==this.cpuData.length&&!((r==="uint4"||r==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=o,this.size=n}static async fromImage(e,s){return Ky(e,s)}static fromTexture(e,s){return Hy(e,s)}static fromGpuBuffer(e,s){return qy(e,s)}static fromMLTensor(e,s){return Qy(e,s)}static fromPinnedBuffer(e,s,t){return Xy(e,s,t)}toDataURL(e){return Wy(this,e)}toImageData(e){return Gy(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let s=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=s,e&&this.disposer&&(this.disposer(),this.disposer=void 0),s}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Zy(this,e)}}}),Pr,eb=Ne(()=>{hu(),Pr=er}),ai,Gl,Sr,hr,tb=Ne(()=>{Vy(),ai=(e,s)=>{(typeof dr.trace>"u"?!dr.wasm.trace:!dr.trace)||console.timeStamp(`${e}::ORT::${s}`)},Gl=(e,s)=>{var o;let t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[],r=!1;for(let n=0;n<t.length;n++){if(r&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;s&&(i+=`::${s}`),ai("CPU",i);return}t[n].includes("TRACE_FUNC")&&(r=!0)}},Sr=e=>{(typeof dr.trace>"u"?!dr.wasm.trace:!dr.trace)||Gl("BEGIN",e)},hr=e=>{(typeof dr.trace>"u"?!dr.wasm.trace:!dr.trace)||Gl("END",e)}}),sb,Yx=Ne(()=>{Ny(),eb(),tb(),sb=class rb{constructor(s){this.handler=s}async run(s,t,r){Sr();let o={},n={};if(typeof s!="object"||s===null||s instanceof Pr||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Pr)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let u of this.outputNames)if(p.indexOf(u)!==-1){let d=t[u];(d===null||d instanceof Pr)&&(c=!0,i=!1,o[u]=d)}if(c){if(typeof r=="object"&&r!==null)n=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof s[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(let c of this.outputNames)o[c]=null;let a=await this.handler.run(s,o,n),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof Pr?l[c]=p:l[c]=new Pr(p.type,p.data,p.dims)}return hr(),l}async release(){return this.handler.dispose()}static async create(s,t,r,o){Sr();let n,i={};if(typeof s=="string"){if(n=s,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof Uint8Array){if(n=s,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&s instanceof SharedArrayBuffer){let p=s,u=0,d=s.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(d=s.byteLength-u,typeof r=="number"){if(d=r,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||u+d>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,u,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await jy(i),c=await a.createInferenceSessionHandler(n,l);return hr(),new rb(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),mu,Zx=Ne(()=>{Yx(),mu=sb}),eT=Ne(()=>{}),tT=Ne(()=>{}),sT=Ne(()=>{}),rT=Ne(()=>{}),nb={};uo(nb,{InferenceSession:()=>mu,TRACE:()=>ai,TRACE_FUNC_BEGIN:()=>Sr,TRACE_FUNC_END:()=>hr,Tensor:()=>Pr,env:()=>es,registerBackend:()=>Ln});var $r=Ne(()=>{Gx(),Hx(),Zx(),eb(),eT(),tT(),tb(),sT(),rT()}),fu=Ne(()=>{}),ob={};uo(ob,{default:()=>ib});var Kl,Hl,ib,nT=Ne(()=>{var e;dv(),Nn(),_u(),Kl="ort-wasm-proxy-worker",Hl=((e=globalThis.self)==null?void 0:e.name)===Kl,Hl&&(self.onmessage=s=>{let{type:t,in:r}=s.data;try{switch(t){case"init-wasm":gu(r.wasm).then(()=>{Du(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=r;Lu(n,o).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})});break}case"copy-from":{let{buffer:o}=r,n=Ea(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=r;zu(o,n).then(i=>{postMessage({type:t,out:i})},i=>{postMessage({type:t,err:i})});break}case"release":Bu(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:i,outputIndices:a,options:l}=r;Ru(o,n,i,a,new Array(a.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Nu([...i,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":ju(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}}),ib=Hl?null:s=>new Worker(s??Zs,{type:"module",name:Kl})}),ab={};uo(ab,{default:()=>lb});var ql,Ql,lb,Xf,oT=Ne(()=>{var e,s;Ql=(ql=import.meta.url,async function(t={}){var Zn;var r,o,n=t,i=new Promise((h,E)=>{r=h,o=E}),a=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((Zn=self.name)==null?void 0:Zn.startsWith("em-pthread"));n.mountExternalData=(h,E)=>{h.startsWith("./")&&(h=h.substring(2)),(n.Eb||(n.Eb=new Map)).set(h,E)},n.unmountExternalData=()=>{delete n.Eb};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let u=h=>async(...E)=>{var I;try{if(n.Fb)throw Error("Session already started");let z=n.Fb={dc:E[0],errors:[]},V=await h(...E);if(n.Fb!==z)throw Error("Session mismatch");(I=n.Jb)==null||I.flush();let ce=z.errors;if(0<ce.length){let Pe=await Promise.all(ce);if(Pe=Pe.filter(Be=>Be),0<Pe.length)throw Error(Pe.join(`
`))}return V}finally{n.Fb=null}};n.jsepInit=(h,E)=>{if(h==="webgpu"){[n.Jb,n.Ub,n.Yb,n.Kb,n.Xb,n.jb,n.Zb,n.ac,n.Vb,n.Wb,n.$b]=E;let I=n.Jb;n.jsepRegisterBuffer=(z,V,ce,Pe)=>I.registerBuffer(z,V,ce,Pe),n.jsepGetBuffer=z=>I.getBuffer(z),n.jsepCreateDownloader=(z,V,ce)=>I.createDownloader(z,V,ce),n.jsepOnCreateSession=z=>{I.onCreateSession(z)},n.jsepOnReleaseSession=z=>{I.onReleaseSession(z)},n.jsepOnRunStart=z=>I.onRunStart(z),n.bc=(z,V)=>{I.upload(z,V)}}else if(h==="webnn"){let I=E[0];[n.nc,n.Nb,n.webnnEnsureTensor,n.Ob,n.webnnDownloadTensor]=E.slice(1),n.webnnReleaseTensorId=n.Nb,n.webnnUploadTensor=n.Ob,n.webnnOnRunStart=z=>I.onRunStart(z),n.webnnOnRunEnd=I.onRunEnd.bind(I),n.webnnRegisterMLContext=(z,V)=>{I.registerMLContext(z,V)},n.webnnOnReleaseSession=z=>{I.onReleaseSession(z)},n.webnnCreateMLTensorDownloader=(z,V)=>I.createMLTensorDownloader(z,V),n.webnnRegisterMLTensor=(z,V,ce,Pe)=>I.registerMLTensor(z,V,ce,Pe),n.webnnCreateMLContext=z=>I.createMLContext(z),n.webnnRegisterMLConstant=(z,V,ce,Pe,Be,Qe)=>I.registerMLConstant(z,V,ce,Pe,Be,n.Eb,Qe),n.webnnRegisterGraphInput=I.registerGraphInput.bind(I),n.webnnIsGraphInput=I.isGraphInput.bind(I),n.webnnCreateTemporaryTensor=I.createTemporaryTensor.bind(I),n.webnnIsInt64Supported=I.isInt64Supported.bind(I)}};let d=()=>{let h=(E,I,z)=>(...V)=>{let ce=ts,Pe=I==null?void 0:I();V=E(...V);let Be=I==null?void 0:I();return Pe!==Be&&(E=Be,z(Pe),I=z=null),ts!=ce?new Promise((Qe,rt)=>{Js={resolve:Qe,reject:rt}}):V};(()=>{for(let E of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])n[E]=h(n[E],()=>n[E],I=>n[E]=I)})(),u!==void 0&&(n._OrtRun=u(n._OrtRun),n._OrtRunWithBinding=u(n._OrtRunWithBinding)),d=void 0};n.asyncInit=()=>{d==null||d()};var _,f,y=Object.assign({},n),$=(h,E)=>{throw E},w="";(a||l)&&(l?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),ql&&(w=ql),w=w.startsWith("blob:")?"":w.slice(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(f=h=>{var E=new XMLHttpRequest;return E.open("GET",h,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),_=async h=>{if(R(h))return new Promise((I,z)=>{var V=new XMLHttpRequest;V.open("GET",h,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?I(V.response):z(V.status)},V.onerror=z,V.send(null)});var E=await fetch(h,{credentials:"same-origin"});if(E.ok)return E.arrayBuffer();throw Error(E.status+" : "+E.url)});var g=console.log.bind(console),C=console.error.bind(console),T=g,v=C;Object.assign(n,y),y=null;var b,x,P,A,D,H,K,B,Y,q,Q,X,se,me=n.wasmBinary,le=!1,R=h=>h.startsWith("file://");function O(){return b.buffer!=A.buffer&&re(),A}function N(){return b.buffer!=A.buffer&&re(),D}function Z(){return b.buffer!=A.buffer&&re(),H}function fe(){return b.buffer!=A.buffer&&re(),K}function ie(){return b.buffer!=A.buffer&&re(),B}function Me(){return b.buffer!=A.buffer&&re(),Y}function Re(){return b.buffer!=A.buffer&&re(),q}function We(){return b.buffer!=A.buffer&&re(),se}if(c){let h=function(E){try{var I=E.data,z=I.Bb;if(z==="load"){let V=[];self.onmessage=ce=>V.push(ce),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ce of V)h(ce);self.onmessage=h};for(let ce of I.Rb)n[ce]&&!n[ce].proxy||(n[ce]=(...Pe)=>{postMessage({Bb:"callHandler",Qb:ce,args:Pe})},ce=="print"&&(T=n[ce]),ce=="printErr"&&(v=n[ce]));b=I.kc,re(),pe(I.lc)}else if(z==="run"){j(I.Ab),qn(I.Ab,0,0,1,0,0),sr(),Te(I.Ab),W||(Io(),W=!0);try{te(I.fc,I.Hb)}catch(V){if(V!="unwind")throw V}}else I.target!=="setimmediate"&&(z==="checkMailbox"?W&&je():z&&(v(`worker: received unknown command ${z}`),v(I)))}catch(V){throw Qn(),V}};var pe,W=!1;v=function(...E){E=E.join(" "),console.error(E)},self.alert=function(...E){postMessage({Bb:"alert",text:E.join(" "),ic:yn()})},self.onunhandledrejection=E=>{throw E.reason||E},self.onmessage=h}function re(){var h=b.buffer;n.HEAP8=A=new Int8Array(h),n.HEAP16=H=new Int16Array(h),n.HEAPU8=D=new Uint8Array(h),n.HEAPU16=K=new Uint16Array(h),n.HEAP32=B=new Int32Array(h),n.HEAPU32=Y=new Uint32Array(h),n.HEAPF32=q=new Float32Array(h),n.HEAPF64=se=new Float64Array(h),n.HEAP64=Q=new BigInt64Array(h),n.HEAPU64=X=new BigUint64Array(h)}function G(){c?startWorker(n):pt.Ca()}c||(b=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),re());var ye,he=0,Ee=null;function xe(){if(--he==0&&Ee){var h=Ee;Ee=null,h()}}function ke(h){throw v(h="Aborted("+h+")"),le=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),o(h),h}function Ce(){return{a:{L:Ue,Aa:Ge,b:Le,$:xt,A:it,pa:Nt,X:Yt,Z:zs,qa:rr,na:mr,ga:nr,ma:kr,J:Vs,Y:Ir,V:Qs,oa:fr,W:Ar,va:Fr,E:ct,Q:or,O:ln,D:un,u:dn,r:pn,P:Dr,z:U,R:J,ja:ae,T:Xe,aa:tt,M:wt,F:Lt,ia:Te,sa:Ft,t:gs,Ba:vs,w:xs,o:ms,l:cr,c:ar,n:ci,j:Gr,v:pi,p:hi,f:mi,s:fi,m:_i,e:ho,k:gi,i:wi,g:mo,d:yi,da:fo,ea:Mi,fa:go,ba:wo,ca:gn,N:yo,xa:xi,ua:Ei,h:bo,C:Pi,G:Mo,ta:Ti,x:Rr,ra:Ci,U:Sa,q:vi,y:Si,K:$a,S:$i,za:ki,ya:Ii,ka:To,la:Eo,_:_t,B:Kn,I:Po,ha:Co,H:$o,a:b,wa:Ae}}}var Fe={829644:(h,E,I,z,V)=>{if(n===void 0||!n.Eb)return 1;if((h=ut(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=n.Eb.get(h)))return 2;if(E=Number(E>>>0),I=Number(I>>>0),z=Number(z>>>0),E+I>h.byteLength)return 3;try{let ce=h.subarray(E,E+I);switch(V){case 0:N().set(ce,z>>>0);break;case 1:n.mc?n.mc(z,ce):n.bc(z,ce);break;default:return 4}return 0}catch{return 4}},830468:(h,E,I)=>{n.Ob(h,N().subarray(E>>>0,E+I>>>0))},830532:()=>n.nc(),830574:h=>{n.Nb(h)},830611:()=>{n.Vb()},830642:()=>{n.Wb()},830671:()=>{n.$b()},830696:h=>n.Ub(h),830729:h=>n.Yb(h),830761:(h,E,I)=>{n.Kb(Number(h),Number(E),Number(I),!0)},830824:(h,E,I)=>{n.Kb(Number(h),Number(E),Number(I))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{n.jb("Abs",h,void 0)},830989:h=>{n.jb("Neg",h,void 0)},831040:h=>{n.jb("Floor",h,void 0)},831093:h=>{n.jb("Ceil",h,void 0)},831145:h=>{n.jb("Reciprocal",h,void 0)},831203:h=>{n.jb("Sqrt",h,void 0)},831255:h=>{n.jb("Exp",h,void 0)},831306:h=>{n.jb("Erf",h,void 0)},831357:h=>{n.jb("Sigmoid",h,void 0)},831412:(h,E,I)=>{n.jb("HardSigmoid",h,{alpha:E,beta:I})},831491:h=>{n.jb("Log",h,void 0)},831542:h=>{n.jb("Sin",h,void 0)},831593:h=>{n.jb("Cos",h,void 0)},831644:h=>{n.jb("Tan",h,void 0)},831695:h=>{n.jb("Asin",h,void 0)},831747:h=>{n.jb("Acos",h,void 0)},831799:h=>{n.jb("Atan",h,void 0)},831851:h=>{n.jb("Sinh",h,void 0)},831903:h=>{n.jb("Cosh",h,void 0)},831955:h=>{n.jb("Asinh",h,void 0)},832008:h=>{n.jb("Acosh",h,void 0)},832061:h=>{n.jb("Atanh",h,void 0)},832114:h=>{n.jb("Tanh",h,void 0)},832166:h=>{n.jb("Not",h,void 0)},832217:(h,E,I)=>{n.jb("Clip",h,{min:E,max:I})},832286:h=>{n.jb("Clip",h,void 0)},832338:(h,E)=>{n.jb("Elu",h,{alpha:E})},832396:h=>{n.jb("Gelu",h,void 0)},832448:h=>{n.jb("Relu",h,void 0)},832500:(h,E)=>{n.jb("LeakyRelu",h,{alpha:E})},832564:(h,E)=>{n.jb("ThresholdedRelu",h,{alpha:E})},832634:(h,E)=>{n.jb("Cast",h,{to:E})},832692:h=>{n.jb("Add",h,void 0)},832743:h=>{n.jb("Sub",h,void 0)},832794:h=>{n.jb("Mul",h,void 0)},832845:h=>{n.jb("Div",h,void 0)},832896:h=>{n.jb("Pow",h,void 0)},832947:h=>{n.jb("Equal",h,void 0)},833e3:h=>{n.jb("Greater",h,void 0)},833055:h=>{n.jb("GreaterOrEqual",h,void 0)},833117:h=>{n.jb("Less",h,void 0)},833169:h=>{n.jb("LessOrEqual",h,void 0)},833228:(h,E,I,z,V)=>{n.jb("ReduceMean",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833403:(h,E,I,z,V)=>{n.jb("ReduceMax",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833577:(h,E,I,z,V)=>{n.jb("ReduceMin",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833751:(h,E,I,z,V)=>{n.jb("ReduceProd",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833926:(h,E,I,z,V)=>{n.jb("ReduceSum",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834100:(h,E,I,z,V)=>{n.jb("ReduceL1",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834273:(h,E,I,z,V)=>{n.jb("ReduceL2",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834446:(h,E,I,z,V)=>{n.jb("ReduceLogSum",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834623:(h,E,I,z,V)=>{n.jb("ReduceSumSquare",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834803:(h,E,I,z,V)=>{n.jb("ReduceLogSumExp",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834983:h=>{n.jb("Where",h,void 0)},835036:(h,E,I)=>{n.jb("Transpose",h,{perm:E?Array.from(ie().subarray(Number(E)>>>0,Number(I)>>>0)):[]})},835160:(h,E,I,z)=>{n.jb("DepthToSpace",h,{blocksize:E,mode:ut(I),format:z?"NHWC":"NCHW"})},835293:(h,E,I,z)=>{n.jb("DepthToSpace",h,{blocksize:E,mode:ut(I),format:z?"NHWC":"NCHW"})},835426:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts,zr)=>{n.jb("ConvTranspose",h,{format:Qe?"NHWC":"NCHW",autoPad:E,dilations:[I],group:z,kernelShape:[V],pads:[ce,Pe],strides:[Be],wIsConst:()=>!!O()[rt>>>0],outputPadding:vt?Array.from(ie().subarray(Number(vt)>>>0,Number(At)>>>0)):[],outputShape:Kt?Array.from(ie().subarray(Number(Kt)>>>0,Number(Ts)>>>0)):[],activation:ut(zr)})},835859:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("ConvTranspose",h,{format:Be?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ie().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:z,kernelShape:Array.from(ie().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(ie().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(ie().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!O()[Qe>>>0],outputPadding:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],outputShape:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],activation:ut(Ts)})},836520:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts,zr)=>{n.jb("ConvTranspose",h,{format:Qe?"NHWC":"NCHW",autoPad:E,dilations:[I],group:z,kernelShape:[V],pads:[ce,Pe],strides:[Be],wIsConst:()=>!!O()[rt>>>0],outputPadding:vt?Array.from(ie().subarray(Number(vt)>>>0,Number(At)>>>0)):[],outputShape:Kt?Array.from(ie().subarray(Number(Kt)>>>0,Number(Ts)>>>0)):[],activation:ut(zr)})},836953:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("ConvTranspose",h,{format:Be?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ie().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:z,kernelShape:Array.from(ie().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(ie().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(ie().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!O()[Qe>>>0],outputPadding:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],outputShape:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],activation:ut(Ts)})},837614:(h,E)=>{n.jb("GlobalAveragePool",h,{format:E?"NHWC":"NCHW"})},837705:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("AveragePool",h,{format:Ts?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:Be?Array.from(ie().subarray(Number(Be)>>>0,Number(Qe)>>>0)):[],pads:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],strides:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[]})},838184:(h,E)=>{n.jb("GlobalAveragePool",h,{format:E?"NHWC":"NCHW"})},838275:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("AveragePool",h,{format:Ts?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:Be?Array.from(ie().subarray(Number(Be)>>>0,Number(Qe)>>>0)):[],pads:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],strides:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[]})},838754:(h,E)=>{n.jb("GlobalMaxPool",h,{format:E?"NHWC":"NCHW"})},838841:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("MaxPool",h,{format:Ts?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:Be?Array.from(ie().subarray(Number(Be)>>>0,Number(Qe)>>>0)):[],pads:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],strides:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[]})},839316:(h,E)=>{n.jb("GlobalMaxPool",h,{format:E?"NHWC":"NCHW"})},839403:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts)=>{n.jb("MaxPool",h,{format:Ts?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:Be?Array.from(ie().subarray(Number(Be)>>>0,Number(Qe)>>>0)):[],pads:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],strides:At?Array.from(ie().subarray(Number(At)>>>0,Number(Kt)>>>0)):[]})},839878:(h,E,I,z,V)=>{n.jb("Gemm",h,{alpha:E,beta:I,transA:z,transB:V})},839982:h=>{n.jb("MatMul",h,void 0)},840036:(h,E,I,z)=>{n.jb("ArgMax",h,{keepDims:!!E,selectLastIndex:!!I,axis:z})},840144:(h,E,I,z)=>{n.jb("ArgMin",h,{keepDims:!!E,selectLastIndex:!!I,axis:z})},840252:(h,E)=>{n.jb("Softmax",h,{axis:E})},840315:(h,E)=>{n.jb("Concat",h,{axis:E})},840375:(h,E,I,z,V)=>{n.jb("Split",h,{axis:E,numOutputs:I,splitSizes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},840531:h=>{n.jb("Expand",h,void 0)},840585:(h,E)=>{n.jb("Gather",h,{axis:Number(E)})},840656:(h,E)=>{n.jb("GatherElements",h,{axis:Number(E)})},840735:(h,E)=>{n.jb("GatherND",h,{batch_dims:Number(E)})},840814:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt)=>{n.jb("Resize",h,{antialias:E,axes:I?Array.from(ie().subarray(Number(I)>>>0,Number(z)>>>0)):[],coordinateTransformMode:ut(V),cubicCoeffA:ce,excludeOutside:Pe,extrapolationValue:Be,keepAspectRatioPolicy:ut(Qe),mode:ut(rt),nearestMode:ut(vt)})},841176:(h,E,I,z,V,ce,Pe)=>{n.jb("Slice",h,{starts:E?Array.from(ie().subarray(Number(E)>>>0,Number(I)>>>0)):[],ends:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[],axes:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[]})},841440:h=>{n.jb("Tile",h,void 0)},841492:(h,E,I)=>{n.jb("InstanceNormalization",h,{epsilon:E,format:I?"NHWC":"NCHW"})},841606:(h,E,I)=>{n.jb("InstanceNormalization",h,{epsilon:E,format:I?"NHWC":"NCHW"})},841720:h=>{n.jb("Range",h,void 0)},841773:(h,E)=>{n.jb("Einsum",h,{equation:ut(E)})},841854:(h,E,I,z,V)=>{n.jb("Pad",h,{mode:E,value:I,pads:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},841997:(h,E,I,z,V,ce)=>{n.jb("BatchNormalization",h,{epsilon:E,momentum:I,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842166:(h,E,I,z,V,ce)=>{n.jb("BatchNormalization",h,{epsilon:E,momentum:I,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842335:(h,E,I)=>{n.jb("CumSum",h,{exclusive:Number(E),reverse:Number(I)})},842432:(h,E,I)=>{n.jb("DequantizeLinear",h,{axis:E,blockSize:I})},842522:(h,E,I,z,V)=>{n.jb("GridSample",h,{align_corners:E,mode:ut(I),padding_mode:ut(z),format:V?"NHWC":"NCHW"})},842692:(h,E,I,z,V)=>{n.jb("GridSample",h,{align_corners:E,mode:ut(I),padding_mode:ut(z),format:V?"NHWC":"NCHW"})},842862:(h,E)=>{n.jb("ScatterND",h,{reduction:ut(E)})},842947:(h,E,I,z,V,ce,Pe,Be,Qe)=>{n.jb("Attention",h,{numHeads:E,isUnidirectional:I,maskFilterValue:z,scale:V,doRotary:ce,qkvHiddenSizes:Pe?Array.from(ie().subarray(Number(Be)>>>0,Number(Be)+Pe>>>0)):[],pastPresentShareBuffer:!!Qe})},843219:h=>{n.jb("BiasAdd",h,void 0)},843274:h=>{n.jb("BiasSplitGelu",h,void 0)},843335:h=>{n.jb("FastGelu",h,void 0)},843391:(h,E,I,z,V,ce,Pe,Be,Qe,rt,vt,At,Kt,Ts,zr,Oi)=>{n.jb("Conv",h,{format:At?"NHWC":"NCHW",auto_pad:E,dilations:I?Array.from(ie().subarray(Number(I)>>>0,Number(z)>>>0)):[],group:V,kernel_shape:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],pads:Be?Array.from(ie().subarray(Number(Be)>>>0,Number(Qe)>>>0)):[],strides:rt?Array.from(ie().subarray(Number(rt)>>>0,Number(vt)>>>0)):[],w_is_const:()=>!!O()[Number(Kt)>>>0],activation:ut(Ts),activation_params:zr?Array.from(Re().subarray(Number(zr)>>>0,Number(Oi)>>>0)):[]})},843975:h=>{n.jb("Gelu",h,void 0)},844027:(h,E,I,z,V,ce,Pe,Be,Qe)=>{n.jb("GroupQueryAttention",h,{numHeads:E,kvNumHeads:I,scale:z,softcap:V,doRotary:ce,rotaryInterleaved:Pe,smoothSoftmax:Be,localWindowSize:Qe})},844244:(h,E,I,z)=>{n.jb("LayerNormalization",h,{axis:E,epsilon:I,simplified:!!z})},844355:(h,E,I,z)=>{n.jb("LayerNormalization",h,{axis:E,epsilon:I,simplified:!!z})},844466:(h,E,I,z,V,ce)=>{n.jb("MatMulNBits",h,{k:E,n:I,accuracyLevel:z,bits:V,blockSize:ce})},844593:(h,E,I,z,V,ce)=>{n.jb("MultiHeadAttention",h,{numHeads:E,isUnidirectional:I,maskFilterValue:z,scale:V,doRotary:ce})},844752:(h,E)=>{n.jb("QuickGelu",h,{alpha:E})},844816:(h,E,I,z,V)=>{n.jb("RotaryEmbedding",h,{interleaved:!!E,numHeads:I,rotaryEmbeddingDim:z,scale:V})},844955:(h,E,I)=>{n.jb("SkipLayerNormalization",h,{epsilon:E,simplified:!!I})},845057:(h,E,I)=>{n.jb("SkipLayerNormalization",h,{epsilon:E,simplified:!!I})},845159:(h,E,I,z)=>{n.jb("GatherBlockQuantized",h,{gatherAxis:E,quantizeAxis:I,blockSize:z})},845280:h=>{n.Zb(h)},845314:(h,E)=>n.ac(Number(h),Number(E),n.Fb.dc,n.Fb.errors)};function Ge(h,E,I){return Rs(async()=>{await n.Xb(Number(h),Number(E),Number(I))})}function Ue(){return typeof wasmOffsetConverter<"u"}class Ie{constructor(E){ee(this,"name","ExitStatus");this.message=`Program terminated with exit(${E})`,this.status=E}}var De=h=>{h.terminate(),h.onmessage=()=>{}},qe=[],Ye=h=>{zt.length==0&&(oe(),L(zt[0]));var E=zt.pop();if(!E)return 6;jt.push(E),ls[h.Ab]=E,E.Ab=h.Ab;var I={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return E.postMessage(I,h.Mb),0},ot=0,Ke=(h,E,...I)=>{for(var z=2*I.length,V=xn(),ce=Jn(8*z),Pe=ce>>>3,Be=0;Be<I.length;Be++){var Qe=I[Be];typeof Qe=="bigint"?(Q[Pe+2*Be]=1n,Q[Pe+2*Be+1]=Qe):(Q[Pe+2*Be]=0n,We()[Pe+2*Be+1>>>0]=Qe)}return h=Ao(h,0,z,ce,E),vn(V),h};function Ae(h){if(c)return Ke(0,1,h);if(P=h,!(0<ot)){for(var E of jt)De(E);for(E of zt)De(E);zt=[],jt=[],ls={},le=!0}$(0,new Ie(h))}function et(h){if(c)return Ke(1,0,h);_t(h)}var _t=h=>{if(P=h,c)throw et(h),"unwind";Ae(h)},zt=[],jt=[],bs=[],ls={},Mt=h=>{var E=h.Ab;delete ls[E],zt.push(h),jt.splice(jt.indexOf(h),1),h.Ab=0,Oo(E)};function sr(){bs.forEach(h=>h())}var L=h=>new Promise(E=>{h.onmessage=V=>{var ce=(V=V.data).Bb;if(V.Gb&&V.Gb!=yn()){var Pe=ls[V.Gb];Pe?Pe.postMessage(V,V.Mb):v(`Internal error! Worker sent a message "${ce}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else ce==="checkMailbox"?je():ce==="spawnThread"?Ye(V):ce==="cleanupThread"?Mt(ls[V.hc]):ce==="loaded"?(h.loaded=!0,E(h)):ce==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?h.postMessage(V):ce==="callHandler"?n[V.Qb](...V.args):ce&&v(`worker sent an unknown command ${ce}`)},h.onerror=V=>{throw v(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var I,z=[];for(I of[])n.propertyIsEnumerable(I)&&z.push(I);h.postMessage({Bb:"load",Rb:z,kc:b,lc:x})});function oe(){var h=new Worker((()=>{let E=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new E("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});zt.push(h)}var j=h=>{re();var E=Me()[h+52>>>2>>>0];h=Me()[h+56>>>2>>>0],Xn(E,E-h),vn(E)},te=(h,E)=>{ot=0,h=Lo(h,E),0<ot?P=h:Mn(h)};class ge{constructor(E){this.Ib=E-24}}function Le(h,E,I){var z=new ge(h>>>=0);throw E>>>=0,I>>>=0,Me()[z.Ib+16>>>2>>>0]=0,Me()[z.Ib+4>>>2>>>0]=E,Me()[z.Ib+8>>>2>>>0]=I,h}function ve(h,E,I,z){return c?Ke(2,1,h,E,I,z):xt(h,E,I,z)}function xt(h,E,I,z){if(h>>>=0,I>>>=0,z>>>=0,p===void 0)return 6;var V=[];return c&&V.length===0?ve(h,E>>>=0,I,z):(h={ec:I,Ab:h,Hb:z,Mb:V},c?(h.Bb="spawnThread",postMessage(h,V),0):Ye(h))}var Dt=typeof TextDecoder<"u"?new TextDecoder:void 0,mt=(h,E=0,I=NaN)=>{var z=(E>>>=0)+I;for(I=E;h[I]&&!(I>=z);)++I;if(16<I-E&&h.buffer&&Dt)return Dt.decode(h.buffer instanceof ArrayBuffer?h.subarray(E,I):h.slice(E,I));for(z="";E<I;){var V=h[E++];if(128&V){var ce=63&h[E++];if((224&V)==192)z+=String.fromCharCode((31&V)<<6|ce);else{var Pe=63&h[E++];65536>(V=(240&V)==224?(15&V)<<12|ce<<6|Pe:(7&V)<<18|ce<<12|Pe<<6|63&h[E++])?z+=String.fromCharCode(V):(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else z+=String.fromCharCode(V)}return z},ut=(h,E)=>(h>>>=0)?mt(N(),h,E):"";function it(h,E,I){return c?Ke(3,1,h,E,I):0}function Nt(h,E){if(c)return Ke(4,1,h,E)}var Qt=h=>{for(var E=0,I=0;I<h.length;++I){var z=h.charCodeAt(I);127>=z?E++:2047>=z?E+=2:55296<=z&&57343>=z?(E+=4,++I):E+=3}return E},Ms=(h,E,I)=>{var z=N();if(E>>>=0,0<I){var V=E;I=E+I-1;for(var ce=0;ce<h.length;++ce){var Pe=h.charCodeAt(ce);if(55296<=Pe&&57343>=Pe&&(Pe=65536+((1023&Pe)<<10)|1023&h.charCodeAt(++ce)),127>=Pe){if(E>=I)break;z[E++>>>0]=Pe}else{if(2047>=Pe){if(E+1>=I)break;z[E++>>>0]=192|Pe>>6}else{if(65535>=Pe){if(E+2>=I)break;z[E++>>>0]=224|Pe>>12}else{if(E+3>=I)break;z[E++>>>0]=240|Pe>>18,z[E++>>>0]=128|Pe>>12&63}z[E++>>>0]=128|Pe>>6&63}z[E++>>>0]=128|63&Pe}}z[E>>>0]=0,h=E-V}else h=0;return h};function Yt(h,E){if(c)return Ke(5,1,h,E)}function zs(h,E,I){if(c)return Ke(6,1,h,E,I)}function rr(h,E,I){return c?Ke(7,1,h,E,I):0}function mr(h,E){if(c)return Ke(8,1,h,E)}function nr(h,E,I){if(c)return Ke(9,1,h,E,I)}function kr(h,E,I,z){if(c)return Ke(10,1,h,E,I,z)}function Vs(h,E,I,z){if(c)return Ke(11,1,h,E,I,z)}function Ir(h,E,I,z){if(c)return Ke(12,1,h,E,I,z)}function Qs(h){if(c)return Ke(13,1,h)}function fr(h,E){if(c)return Ke(14,1,h,E)}function Ar(h,E,I){if(c)return Ke(15,1,h,E,I)}var Or,cs,Fr=()=>ke(""),Cs=h=>{for(var E="";N()[h>>>0];)E+=Or[N()[h++>>>0]];return E},_r={},js={};function Oe(h,E,I={}){return function(z,V,ce={}){var Pe=V.name;if(!z)throw new cs(`type "${Pe}" must have a positive integer typeid pointer`);if(js.hasOwnProperty(z)){if(ce.Sb)return;throw new cs(`Cannot register type '${Pe}' twice`)}js[z]=V,_r.hasOwnProperty(z)&&(V=_r[z],delete _r[z],V.forEach(Be=>Be()))}(h,E,I)}var Ze=(h,E,I)=>{switch(E){case 1:return I?z=>O()[z>>>0]:z=>N()[z>>>0];case 2:return I?z=>Z()[z>>>1>>>0]:z=>fe()[z>>>1>>>0];case 4:return I?z=>ie()[z>>>2>>>0]:z=>Me()[z>>>2>>>0];case 8:return I?z=>Q[z>>>3]:z=>X[z>>>3];default:throw new TypeError(`invalid integer width (${E}): ${h}`)}};function ct(h,E,I){I>>>=0,Oe(h>>>=0,{name:E=Cs(E>>>0),fromWireType:z=>z,toWireType:function(z,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(z=typeof V)=="object"||z==="array"||z==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:Ut,readValueFromPointer:Ze(E,I,E.indexOf("u")==-1),Db:null})}var Ut=8;function or(h,E,I,z){Oe(h>>>=0,{name:E=Cs(E>>>0),fromWireType:function(V){return!!V},toWireType:function(V,ce){return ce?I:z},Cb:Ut,readValueFromPointer:function(V){return this.fromWireType(N()[V>>>0])},Db:null})}var ir=[],ps=[];function ar(h){9<(h>>>=0)&&--ps[h+1]==0&&(ps[h]=void 0,ir.push(h))}var hs=h=>{if(!h)throw new cs("Cannot use deleted val. handle = "+h);return ps[h]},_s=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let E=ir.pop()||ps.length;return ps[E]=h,ps[E+1]=1,E}};function lr(h){return this.fromWireType(Me()[h>>>2>>>0])}var gr={name:"emscripten::val",fromWireType:h=>{var E=hs(h);return ar(h),E},toWireType:(h,E)=>_s(E),Cb:Ut,readValueFromPointer:lr,Db:null};function ln(h){return Oe(h>>>0,gr)}var cn=(h,E)=>{switch(E){case 4:return function(I){return this.fromWireType(Re()[I>>>2>>>0])};case 8:return function(I){return this.fromWireType(We()[I>>>3>>>0])};default:throw new TypeError(`invalid float width (${E}): ${h}`)}};function un(h,E,I){I>>>=0,Oe(h>>>=0,{name:E=Cs(E>>>0),fromWireType:z=>z,toWireType:(z,V)=>V,Cb:Ut,readValueFromPointer:cn(E,I),Db:null})}function dn(h,E,I,z,V){if(h>>>=0,I>>>=0,E=Cs(E>>>0),V===-1&&(V=4294967295),V=Be=>Be,z===0){var ce=32-8*I;V=Be=>Be<<ce>>>ce}var Pe=E.includes("unsigned")?function(Be,Qe){return Qe>>>0}:function(Be,Qe){return Qe};Oe(h,{name:E,fromWireType:V,toWireType:Pe,Cb:Ut,readValueFromPointer:Ze(E,I,z!==0),Db:null})}function pn(h,E,I){function z(ce){var Pe=Me()[ce>>>2>>>0];return ce=Me()[ce+4>>>2>>>0],new V(O().buffer,ce,Pe)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][E];Oe(h>>>=0,{name:I=Cs(I>>>0),fromWireType:z,Cb:Ut,readValueFromPointer:z},{Sb:!0})}function Dr(h,E){Oe(h>>>=0,{name:E=Cs(E>>>0),fromWireType:function(I){for(var z,V=Me()[I>>>2>>>0],ce=I+4,Pe=ce,Be=0;Be<=V;++Be){var Qe=ce+Be;Be!=V&&N()[Qe>>>0]!=0||(Pe=ut(Pe,Qe-Pe),z===void 0?z=Pe:(z+="\0",z+=Pe),Pe=Qe+1)}return Hs(I),z},toWireType:function(I,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var V=typeof z=="string";if(!(V||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new cs("Cannot pass non-string to std::string");var ce=V?Qt(z):z.length,Pe=bn(4+ce+1),Be=Pe+4;if(Me()[Pe>>>2>>>0]=ce,V)Ms(z,Be,ce+1);else if(V)for(V=0;V<ce;++V){var Qe=z.charCodeAt(V);if(255<Qe)throw Hs(Pe),new cs("String has UTF-16 code units that do not fit in 8 bits");N()[Be+V>>>0]=Qe}else for(V=0;V<ce;++V)N()[Be+V>>>0]=z[V];return I!==null&&I.push(Hs,Pe),Pe},Cb:Ut,readValueFromPointer:lr,Db(I){Hs(I)}})}var Wr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,hn=(h,E)=>{for(var I=h>>1,z=I+E/2;!(I>=z)&&fe()[I>>>0];)++I;if(32<(I<<=1)-h&&Wr)return Wr.decode(N().slice(h,I));for(I="",z=0;!(z>=E/2);++z){var V=Z()[h+2*z>>>1>>>0];if(V==0)break;I+=String.fromCharCode(V)}return I},mn=(h,E,I)=>{if(I??(I=2147483647),2>I)return 0;var z=E;I=(I-=2)<2*h.length?I/2:h.length;for(var V=0;V<I;++V){var ce=h.charCodeAt(V);Z()[E>>>1>>>0]=ce,E+=2}return Z()[E>>>1>>>0]=0,E-z},fn=h=>2*h.length,Lr=(h,E)=>{for(var I=0,z="";!(I>=E/4);){var V=ie()[h+4*I>>>2>>>0];if(V==0)break;++I,65536<=V?(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V)):z+=String.fromCharCode(V)}return z},de=(h,E,I)=>{if(E>>>=0,I??(I=2147483647),4>I)return 0;var z=E;I=z+I-4;for(var V=0;V<h.length;++V){var ce=h.charCodeAt(V);if(55296<=ce&&57343>=ce&&(ce=65536+((1023&ce)<<10)|1023&h.charCodeAt(++V)),ie()[E>>>2>>>0]=ce,(E+=4)+4>I)break}return ie()[E>>>2>>>0]=0,E-z},k=h=>{for(var E=0,I=0;I<h.length;++I){var z=h.charCodeAt(I);55296<=z&&57343>=z&&++I,E+=4}return E};function U(h,E,I){if(h>>>=0,E>>>=0,I=Cs(I>>>=0),E===2)var z=hn,V=mn,ce=fn,Pe=Be=>fe()[Be>>>1>>>0];else E===4&&(z=Lr,V=de,ce=k,Pe=Be=>Me()[Be>>>2>>>0]);Oe(h,{name:I,fromWireType:Be=>{for(var Qe,rt=Me()[Be>>>2>>>0],vt=Be+4,At=0;At<=rt;++At){var Kt=Be+4+At*E;At!=rt&&Pe(Kt)!=0||(vt=z(vt,Kt-vt),Qe===void 0?Qe=vt:(Qe+="\0",Qe+=vt),vt=Kt+E)}return Hs(Be),Qe},toWireType:(Be,Qe)=>{if(typeof Qe!="string")throw new cs(`Cannot pass non-string to C++ string type ${I}`);var rt=ce(Qe),vt=bn(4+rt+E);return Me()[vt>>>2>>>0]=rt/E,V(Qe,vt+4,rt+E),Be!==null&&Be.push(Hs,vt),vt},Cb:Ut,readValueFromPointer:lr,Db(Be){Hs(Be)}})}function J(h,E){Oe(h>>>=0,{Tb:!0,name:E=Cs(E>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function ae(h){qn(h>>>0,!l,1,!a,131072,!1),sr()}var ue=h=>{if(!le)try{if(h(),!(0<ot))try{c?Mn(P):_t(P)}catch(E){E instanceof Ie||E=="unwind"||$(0,E)}}catch(E){E instanceof Ie||E=="unwind"||$(0,E)}};function Te(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(ie(),h>>>2,h).value.then(je),h+=128,Atomics.store(ie(),h>>>2,1))}var je=()=>{var h=yn();h&&(Te(h),ue(Do))};function Xe(h,E){(h>>>=0)==E>>>0?setTimeout(je):c?postMessage({Gb:h,Bb:"checkMailbox"}):(h=ls[h])&&h.postMessage({Bb:"checkMailbox"})}var He=[];function tt(h,E,I,z,V){for(E>>>=0,z/=2,He.length=z,I=V>>>0>>>3,V=0;V<z;V++)He[V]=Q[I+2*V]?Q[I+2*V+1]:We()[I+2*V+1>>>0];return(E?Fe[E]:Ai[h])(...He)}var wt=()=>{ot=0};function Lt(h){h>>>=0,c?postMessage({Bb:"cleanupThread",hc:h}):Mt(ls[h])}function Ft(h){}var Zt=(h,E)=>{var I=js[h];if(I===void 0)throw h=Hn(h),I=Cs(h),Hs(h),new cs(`${E} has unknown type ${I}`);return I},Gt=(h,E,I)=>{var z=[];return h=h.toWireType(z,I),z.length&&(Me()[E>>>2>>>0]=_s(z)),h};function gs(h,E,I){return E>>>=0,I>>>=0,h=hs(h>>>0),E=Zt(E,"emval::as"),Gt(E,I,h)}function vs(h,E){return E>>>=0,h=hs(h>>>0),(E=Zt(E,"emval::as")).toWireType(null,h)}var Ss=h=>{try{h()}catch(E){ke(E)}},$s=0,ts=null,wr=0,qt=[],ws={},Bs={},Xs=0,Js=null,Os=[];function Rs(h){return function(E){if(!le){if($s===0){var I=!1,z=!1;E((V=0)=>{if(!le&&(wr=V,I=!0,z)){$s=2,Ss(()=>Bo(ts)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var ce=function(){var Qe=ie()[ts+8>>>2>>>0];return Qe=pt[Bs[Qe]],--ot,Qe()}()}catch(Qe){ce=Qe,V=!0}var Pe=!1;if(!ts){var Be=Js;Be&&(Js=null,(V?Be.reject:Be.resolve)(ce),Pe=!0)}if(V&&!Pe)throw ce}}),z=!0,I||($s=1,ts=function(){var V=bn(65548),ce=V+12;Me()[V>>>2>>>0]=ce,Me()[V+4>>>2>>>0]=ce+65536,ce=qt[0];var Pe=ws[ce];return Pe===void 0&&(Pe=Xs++,ws[ce]=Pe,Bs[Pe]=ce),ce=Pe,ie()[V+8>>>2>>>0]=ce,V}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),Ss(()=>zo(ts)))}else $s===2?($s=0,Ss(Ro),Hs(ts),ts=null,Os.forEach(ue)):ke(`invalid state: ${$s}`);return wr}}(E=>{h().then(E)})}function xs(h){return h>>>=0,Rs(async()=>{var E=await hs(h);return _s(E)})}var ss=[];function ms(h,E,I,z){return I>>>=0,z>>>=0,(h=ss[h>>>0])(null,E=hs(E>>>0),I,z)}var fs={},Fs=h=>{var E=fs[h];return E===void 0?Cs(h):E};function cr(h,E,I,z,V){return I>>>=0,z>>>=0,V>>>=0,(h=ss[h>>>0])(E=hs(E>>>0),E[I=Fs(I)],z,V)}var _n=()=>typeof globalThis=="object"?globalThis:Function("return this")();function ci(h){return(h>>>=0)==0?_s(_n()):(h=Fs(h),_s(_n()[h]))}var ui=h=>{var E=ss.length;return ss.push(h),E},di=(h,E)=>{for(var I=Array(h),z=0;z<h;++z)I[z]=Zt(Me()[E+4*z>>>2>>>0],"parameter "+z);return I},po=(h,E)=>Object.defineProperty(E,"name",{value:h});function Gr(h,E,I){var z=(E=di(h,E>>>0)).shift();h--;var V=`return function (obj, func, destructorsRef, args) {
`,ce=0,Pe=[];I===0&&Pe.push("obj");for(var Be=["retType"],Qe=[z],rt=0;rt<h;++rt)Pe.push("arg"+rt),Be.push("argType"+rt),Qe.push(E[rt]),V+=`  var arg${rt} = argType${rt}.readValueFromPointer(args${ce?"+"+ce:""});
`,ce+=E[rt].Cb;return V+=`  var rv = ${I===1?"new func":"func.call"}(${Pe.join(", ")});
`,z.Tb||(Be.push("emval_returnValue"),Qe.push(Gt),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Be.push(V+`};
`),h=function(vt){var At=Function;if(!(At instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof At} which is not a function`);var Kt=po(At.name||"unknownFunctionName",function(){});return Kt.prototype=At.prototype,Kt=new Kt,(vt=At.apply(Kt,vt))instanceof Object?vt:Kt}(Be)(...Qe),I=`methodCaller<(${E.map(vt=>vt.name).join(", ")}) => ${z.name}>`,ui(po(I,h))}function pi(h){return h=Fs(h>>>0),_s(n[h])}function hi(h,E){return E>>>=0,h=hs(h>>>0),E=hs(E),_s(h[E])}function mi(h){9<(h>>>=0)&&(ps[h+1]+=1)}function fi(){return _s([])}function _i(h){h=hs(h>>>0);for(var E=Array(h.length),I=0;I<h.length;I++)E[I]=h[I];return _s(E)}function ho(h){return _s(Fs(h>>>0))}function gi(){return _s({})}function wi(h){for(var E=hs(h>>>=0);E.length;){var I=E.pop();E.pop()(I)}ar(h)}function mo(h,E,I){E>>>=0,I>>>=0,h=hs(h>>>0),E=hs(E),I=hs(I),h[E]=I}function yi(h,E){return E>>>=0,h=(h=Zt(h>>>0,"_emval_take_value")).readValueFromPointer(E),_s(h)}function fo(h,E){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),E>>>=0,h=new Date(1e3*h),ie()[E>>>2>>>0]=h.getUTCSeconds(),ie()[E+4>>>2>>>0]=h.getUTCMinutes(),ie()[E+8>>>2>>>0]=h.getUTCHours(),ie()[E+12>>>2>>>0]=h.getUTCDate(),ie()[E+16>>>2>>>0]=h.getUTCMonth(),ie()[E+20>>>2>>>0]=h.getUTCFullYear()-1900,ie()[E+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,ie()[E+28>>>2>>>0]=h}var _o=h=>h%4==0&&(h%100!=0||h%400==0),Vn=[0,31,60,91,121,152,182,213,244,274,305,335],bi=[0,31,59,90,120,151,181,212,243,273,304,334];function Mi(h,E){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),E>>>=0,h=new Date(1e3*h),ie()[E>>>2>>>0]=h.getSeconds(),ie()[E+4>>>2>>>0]=h.getMinutes(),ie()[E+8>>>2>>>0]=h.getHours(),ie()[E+12>>>2>>>0]=h.getDate(),ie()[E+16>>>2>>>0]=h.getMonth(),ie()[E+20>>>2>>>0]=h.getFullYear()-1900,ie()[E+24>>>2>>>0]=h.getDay();var I=(_o(h.getFullYear())?Vn:bi)[h.getMonth()]+h.getDate()-1|0;ie()[E+28>>>2>>>0]=I,ie()[E+36>>>2>>>0]=-60*h.getTimezoneOffset(),I=new Date(h.getFullYear(),6,1).getTimezoneOffset();var z=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(I!=z&&h.getTimezoneOffset()==Math.min(z,I)),ie()[E+32>>>2>>>0]=h}function go(h){h>>>=0;var E=new Date(ie()[h+20>>>2>>>0]+1900,ie()[h+16>>>2>>>0],ie()[h+12>>>2>>>0],ie()[h+8>>>2>>>0],ie()[h+4>>>2>>>0],ie()[h>>>2>>>0],0),I=ie()[h+32>>>2>>>0],z=E.getTimezoneOffset(),V=new Date(E.getFullYear(),6,1).getTimezoneOffset(),ce=new Date(E.getFullYear(),0,1).getTimezoneOffset(),Pe=Math.min(ce,V);return 0>I?ie()[h+32>>>2>>>0]=+(V!=ce&&Pe==z):0<I!=(Pe==z)&&(V=Math.max(ce,V),E.setTime(E.getTime()+6e4*((0<I?Pe:V)-z))),ie()[h+24>>>2>>>0]=E.getDay(),I=(_o(E.getFullYear())?Vn:bi)[E.getMonth()]+E.getDate()-1|0,ie()[h+28>>>2>>>0]=I,ie()[h>>>2>>>0]=E.getSeconds(),ie()[h+4>>>2>>>0]=E.getMinutes(),ie()[h+8>>>2>>>0]=E.getHours(),ie()[h+12>>>2>>>0]=E.getDate(),ie()[h+16>>>2>>>0]=E.getMonth(),ie()[h+20>>>2>>>0]=E.getYear(),h=E.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function wo(h,E,I,z,V,ce,Pe){return c?Ke(16,1,h,E,I,z,V,ce,Pe):-52}function gn(h,E,I,z,V,ce){if(c)return Ke(17,1,h,E,I,z,V,ce)}var Kr={},vi=()=>performance.timeOrigin+performance.now();function yo(h,E){if(c)return Ke(18,1,h,E);if(Kr[h]&&(clearTimeout(Kr[h].id),delete Kr[h]),!E)return 0;var I=setTimeout(()=>{delete Kr[h],ue(()=>Fo(h,performance.timeOrigin+performance.now()))},E);return Kr[h]={id:I,qc:E},0}function xi(h,E,I,z){h>>>=0,E>>>=0,I>>>=0,z>>>=0;var V=new Date().getFullYear(),ce=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var Pe=Math.max(ce,V);Me()[h>>>2>>>0]=60*Pe,ie()[E>>>2>>>0]=+(ce!=V),h=(E=Be=>{var Qe=Math.abs(Be);return`UTC${0<=Be?"-":"+"}${String(Math.floor(Qe/60)).padStart(2,"0")}${String(Qe%60).padStart(2,"0")}`})(ce),E=E(V),V<ce?(Ms(h,I,17),Ms(E,z,17)):(Ms(h,z,17),Ms(E,I,17))}var Ti=()=>Date.now();function Ei(h,E,I){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),Q[I>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var Wn=[],wn=(h,E)=>{Wn.length=0;for(var I;I=N()[h++>>>0];){var z=I!=105;E+=(z&=I!=112)&&E%8?4:0,Wn.push(I==112?Me()[E>>>2>>>0]:I==106?Q[E>>>3]:I==105?ie()[E>>>2>>>0]:We()[E>>>3>>>0]),E+=z?8:4}return Wn};function bo(h,E,I){return h>>>=0,E=wn(E>>>0,I>>>0),Fe[h](...E)}function Pi(h,E,I){return h>>>=0,E=wn(E>>>0,I>>>0),Fe[h](...E)}var Mo=()=>{};function Rr(h,E){return v(ut(h>>>0,E>>>0))}var Ci=()=>{throw ot+=1,"unwind"};function Sa(){return 4294901760}var Si=()=>navigator.hardwareConcurrency;function $a(){return ke("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function $i(h){h>>>=0;var E=N().length;if(h<=E||4294901760<h)return!1;for(var I=1;4>=I;I*=2){var z=E*(1+.2/I);z=Math.min(z,h+100663296);e:{z=(Math.min(4294901760,65536*Math.ceil(Math.max(h,z)/65536))-b.buffer.byteLength+65535)/65536|0;try{b.grow(z),re();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var Hr=()=>(ke("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),qr={},vo=h=>{h.forEach(E=>{Hr()})};function ki(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),vo(h),qr.Lb=Hr(),qr.cc=h,qr.Lb}function Ii(h,E,I){if(h>>>=0,E>>>=0,qr.Lb==h)var z=qr.cc;else(z=Error().stack.toString().split(`
`))[0]=="Error"&&z.shift(),vo(z);for(var V=3;z[V]&&Hr()!=h;)++V;for(h=0;h<I&&z[h+V];++h)ie()[E+4*h>>>2>>>0]=Hr();return h}var Gn,Qr={},xo=()=>{if(!Gn){var h,E={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in Qr)Qr[h]===void 0?delete E[h]:E[h]=Qr[h];var I=[];for(h in E)I.push(`${h}=${E[h]}`);Gn=I}return Gn};function To(h,E){if(c)return Ke(19,1,h,E);h>>>=0,E>>>=0;var I=0;return xo().forEach((z,V)=>{var ce=E+I;for(V=Me()[h+4*V>>>2>>>0]=ce,ce=0;ce<z.length;++ce)O()[V++>>>0]=z.charCodeAt(ce);O()[V>>>0]=0,I+=z.length+1}),0}function Eo(h,E){if(c)return Ke(20,1,h,E);h>>>=0,E>>>=0;var I=xo();Me()[h>>>2>>>0]=I.length;var z=0;return I.forEach(V=>z+=V.length+1),Me()[E>>>2>>>0]=z,0}function Kn(h){return c?Ke(21,1,h):52}function Po(h,E,I,z){return c?Ke(22,1,h,E,I,z):52}function Co(h,E,I,z){return c?Ke(23,1,h,E,I,z):70}var So=[null,[],[]];function $o(h,E,I,z){if(c)return Ke(24,1,h,E,I,z);E>>>=0,I>>>=0,z>>>=0;for(var V=0,ce=0;ce<I;ce++){var Pe=Me()[E>>>2>>>0],Be=Me()[E+4>>>2>>>0];E+=8;for(var Qe=0;Qe<Be;Qe++){var rt=N()[Pe+Qe>>>0],vt=So[h];rt===0||rt===10?((h===1?T:v)(mt(vt)),vt.length=0):vt.push(rt)}V+=Be}return Me()[z>>>2>>>0]=V,0}c||function(){for(var h=n.numThreads-1;h--;)oe();qe.unshift(()=>{he++,function(E){c?E():Promise.all(zt.map(L)).then(E)}(()=>xe())})}();for(var ko=Array(256),Xr=0;256>Xr;++Xr)ko[Xr]=String.fromCharCode(Xr);Or=ko,cs=n.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},n.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},ps.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>ps.length/2-5-ir.length;var pt,Ai=[Ae,et,ve,it,Nt,Yt,zs,rr,mr,nr,kr,Vs,Ir,Qs,fr,Ar,wo,gn,yo,To,Eo,Kn,Po,Co,$o];(async function(){function h(z,V){return pt=z.exports,pt=function(){var ce=pt,Pe={};for(let[Be,Qe]of Object.entries(ce))Pe[Be]=typeof Qe=="function"?(...rt)=>{qt.push(Be);try{return Qe(...rt)}finally{le||(qt.pop(),ts&&$s===1&&qt.length===0&&($s=0,ot+=1,Ss(Yn),typeof Fibers<"u"&&Fibers.rc()))}}:Qe;return Pe}(),pt=function(){var ce=pt,Pe=Qe=>rt=>Qe(rt)>>>0,Be=Qe=>()=>Qe()>>>0;return(ce=Object.assign({},ce)).Da=Pe(ce.Da),ce.fb=Be(ce.fb),ce.hb=Pe(ce.hb),ce.tb=Pe(ce.tb),ce.ub=Be(ce.ub),ce.__cxa_get_exception_ptr=Pe(ce.__cxa_get_exception_ptr),ce}(),bs.push(pt.ib),x=V,xe(),pt}he++;var E=Ce();if(n.instantiateWasm)return new Promise(z=>{n.instantiateWasm(E,(V,ce)=>{h(V,ce),z(V.exports)})});if(c)return new Promise(z=>{pe=V=>{var ce=new WebAssembly.Instance(V,Ce());z(h(ce,V))}});ye??(ye=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",w):w+"ort-wasm-simd-threaded.jsep.wasm":new URL("/ecommerce-customer/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var I=await async function(z){var V=ye;if(!me&&typeof WebAssembly.instantiateStreaming=="function"&&!R(V))try{var ce=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ce,z)}catch(Pe){v(`wasm streaming compile failed: ${Pe}`),v("falling back to ArrayBuffer instantiation")}return async function(Pe,Be){try{var Qe=await async function(rt){if(!me)try{var vt=await _(rt);return new Uint8Array(vt)}catch{}if(rt==ye&&me)rt=new Uint8Array(me);else{if(!f)throw"both async and sync fetching of the wasm failed";rt=f(rt)}return rt}(Pe);return await WebAssembly.instantiate(Qe,Be)}catch(rt){v(`failed to asynchronously prepare wasm: ${rt}`),ke(rt)}}(V,z)}(E);return h(I.instance,I.module)}catch(z){return o(z),Promise.reject(z)}})();var Hn=h=>(Hn=pt.Da)(h),Io=()=>(Io=pt.Ea)();n._OrtInit=(h,E)=>(n._OrtInit=pt.Fa)(h,E),n._OrtGetLastError=(h,E)=>(n._OrtGetLastError=pt.Ga)(h,E),n._OrtCreateSessionOptions=(h,E,I,z,V,ce,Pe,Be,Qe,rt)=>(n._OrtCreateSessionOptions=pt.Ha)(h,E,I,z,V,ce,Pe,Be,Qe,rt),n._OrtAppendExecutionProvider=(h,E,I,z,V)=>(n._OrtAppendExecutionProvider=pt.Ia)(h,E,I,z,V),n._OrtAddFreeDimensionOverride=(h,E,I)=>(n._OrtAddFreeDimensionOverride=pt.Ja)(h,E,I),n._OrtAddSessionConfigEntry=(h,E,I)=>(n._OrtAddSessionConfigEntry=pt.Ka)(h,E,I),n._OrtReleaseSessionOptions=h=>(n._OrtReleaseSessionOptions=pt.La)(h),n._OrtCreateSession=(h,E,I)=>(n._OrtCreateSession=pt.Ma)(h,E,I),n._OrtReleaseSession=h=>(n._OrtReleaseSession=pt.Na)(h),n._OrtGetInputOutputCount=(h,E,I)=>(n._OrtGetInputOutputCount=pt.Oa)(h,E,I),n._OrtGetInputOutputMetadata=(h,E,I,z)=>(n._OrtGetInputOutputMetadata=pt.Pa)(h,E,I,z),n._OrtFree=h=>(n._OrtFree=pt.Qa)(h),n._OrtCreateTensor=(h,E,I,z,V,ce)=>(n._OrtCreateTensor=pt.Ra)(h,E,I,z,V,ce),n._OrtGetTensorData=(h,E,I,z,V)=>(n._OrtGetTensorData=pt.Sa)(h,E,I,z,V),n._OrtReleaseTensor=h=>(n._OrtReleaseTensor=pt.Ta)(h),n._OrtCreateRunOptions=(h,E,I,z)=>(n._OrtCreateRunOptions=pt.Ua)(h,E,I,z),n._OrtAddRunConfigEntry=(h,E,I)=>(n._OrtAddRunConfigEntry=pt.Va)(h,E,I),n._OrtReleaseRunOptions=h=>(n._OrtReleaseRunOptions=pt.Wa)(h),n._OrtCreateBinding=h=>(n._OrtCreateBinding=pt.Xa)(h),n._OrtBindInput=(h,E,I)=>(n._OrtBindInput=pt.Ya)(h,E,I),n._OrtBindOutput=(h,E,I,z)=>(n._OrtBindOutput=pt.Za)(h,E,I,z),n._OrtClearBoundOutputs=h=>(n._OrtClearBoundOutputs=pt._a)(h),n._OrtReleaseBinding=h=>(n._OrtReleaseBinding=pt.$a)(h),n._OrtRunWithBinding=(h,E,I,z,V)=>(n._OrtRunWithBinding=pt.ab)(h,E,I,z,V),n._OrtRun=(h,E,I,z,V,ce,Pe,Be)=>(n._OrtRun=pt.bb)(h,E,I,z,V,ce,Pe,Be),n._OrtEndProfiling=h=>(n._OrtEndProfiling=pt.cb)(h),n._JsepOutput=(h,E,I)=>(n._JsepOutput=pt.db)(h,E,I),n._JsepGetNodeName=h=>(n._JsepGetNodeName=pt.eb)(h);var yn=()=>(yn=pt.fb)(),Hs=n._free=h=>(Hs=n._free=pt.gb)(h),bn=n._malloc=h=>(bn=n._malloc=pt.hb)(h),qn=(h,E,I,z,V,ce)=>(qn=pt.kb)(h,E,I,z,V,ce),Qn=()=>(Qn=pt.lb)(),Ao=(h,E,I,z,V)=>(Ao=pt.mb)(h,E,I,z,V),Oo=h=>(Oo=pt.nb)(h),Mn=h=>(Mn=pt.ob)(h),Fo=(h,E)=>(Fo=pt.pb)(h,E),Do=()=>(Do=pt.qb)(),Xn=(h,E)=>(Xn=pt.rb)(h,E),vn=h=>(vn=pt.sb)(h),Jn=h=>(Jn=pt.tb)(h),xn=()=>(xn=pt.ub)(),Lo=n.dynCall_ii=(h,E)=>(Lo=n.dynCall_ii=pt.vb)(h,E),zo=h=>(zo=pt.wb)(h),Yn=()=>(Yn=pt.xb)(),Bo=h=>(Bo=pt.yb)(h),Ro=()=>(Ro=pt.zb)();return n.stackSave=()=>xn(),n.stackRestore=h=>vn(h),n.stackAlloc=h=>Jn(h),n.setValue=function(h,E,I="i8"){switch(I.endsWith("*")&&(I="*"),I){case"i1":case"i8":O()[h>>>0]=E;break;case"i16":Z()[h>>>1>>>0]=E;break;case"i32":ie()[h>>>2>>>0]=E;break;case"i64":Q[h>>>3]=BigInt(E);break;case"float":Re()[h>>>2>>>0]=E;break;case"double":We()[h>>>3>>>0]=E;break;case"*":Me()[h>>>2>>>0]=E;break;default:ke(`invalid type for setValue: ${I}`)}},n.getValue=function(h,E="i8"){switch(E.endsWith("*")&&(E="*"),E){case"i1":case"i8":return O()[h>>>0];case"i16":return Z()[h>>>1>>>0];case"i32":return ie()[h>>>2>>>0];case"i64":return Q[h>>>3];case"float":return Re()[h>>>2>>>0];case"double":return We()[h>>>3>>>0];case"*":return Me()[h>>>2>>>0];default:ke(`invalid type for getValue: ${E}`)}},n.UTF8ToString=ut,n.stringToUTF8=Ms,n.lengthBytesUTF8=Qt,function h(){if(0<he)Ee=h;else if(c)r(n),G();else{for(;0<qe.length;)qe.shift()(n);0<he?Ee=h:(n.calledRun=!0,le||(G(),r(n)))}}(),n.PTR_SIZE=4,i}),lb=Ql,Xf=(s=(e=globalThis.self)==null?void 0:e.name)==null?void 0:s.startsWith("em-pthread"),Xf&&Ql()}),Xl,qc,Jf,Zs,cb,sa,Yf,Zf,Jl,e_,Yl,ub,Zl,db,_u=Ne(()=>{fu(),Xl=typeof location>"u"?void 0:location.origin,qc=import.meta.url>"file:"&&import.meta.url<"file;",Jf=()=>{{if(qc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Xl).href}return import.meta.url}},Zs=Jf(),cb=()=>{if(Zs&&!Zs.startsWith("blob:"))return Zs.substring(0,Zs.lastIndexOf("/")+1)},sa=(e,s)=>{try{let t=s??Zs;return(t?new URL(e,t):new URL(e)).origin===Xl}catch{return!1}},Yf=(e,s)=>{let t=s??Zs;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Zf=(e,s)=>`${s??"./"}${e}`,Jl=async e=>{let s=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(s)},e_=async e=>(await import(e)).default,Yl=(nT(),ii(ob)).default,ub=async()=>{if(!Zs)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(sa(Zs))return[void 0,Yl()];let e=await Jl(Zs);return[e,Yl(e)]},Zl=(oT(),ii(ab)).default,db=async(e,s,t)=>{if(!e&&!s&&Zl&&Zs&&sa(Zs))return[void 0,Zl];{let r="ort-wasm-simd-threaded.jsep.mjs",o=e??Yf(r,s),n=t&&o&&!sa(o,s),i=n?await Jl(o):o??Zf(r,s);return[n?i:void 0,await e_(i)]}}}),ec,ra,Vo,tc,t_,s_,r_,gu,Jt,Nn=Ne(()=>{_u(),ra=!1,Vo=!1,tc=!1,t_=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},s_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},r_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},gu=async e=>{if(ra)return Promise.resolve();if(Vo)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(tc)throw new Error("previous call to 'initializeWebAssembly()' failed.");Vo=!0;let s=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!r_())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!s_())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let r=t_();t>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let o=e.wasmPaths,n=typeof o=="string"?o:void 0,i=o==null?void 0:o.mjs,a=(i==null?void 0:i.href)??i,l=o==null?void 0:o.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[u,d]=await db(a,n,t>1),_=!1,f=[];if(s>0&&f.push(new Promise(y=>{setTimeout(()=>{_=!0,y()},s)})),f.push(new Promise((y,$)=>{let w={numThreads:t};if(p)w.wasmBinary=p;else if(c||n)w.locateFile=g=>c??n+g;else if(a&&a.indexOf("blob:")!==0)w.locateFile=g=>new URL(g,a).href;else if(u){let g=cb();g&&(w.locateFile=C=>g+C)}d(w).then(g=>{Vo=!1,ra=!0,ec=g,y(),u&&URL.revokeObjectURL(u)},g=>{Vo=!1,tc=!0,$(g)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${s}ms`)},Jt=()=>{if(ra&&ec)return ec;throw new Error("WebAssembly is not initialized yet.")}}),Er,ya,Ht,wu=Ne(()=>{Nn(),Er=(e,s)=>{let t=Jt(),r=t.lengthBytesUTF8(e)+1,o=t._malloc(r);return t.stringToUTF8(e,o,r),s.push(o),o},ya=(e,s,t,r)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([o,n])=>{let i=s?s+o:o;if(typeof n=="object")ya(n,i+".",t,r);else if(typeof n=="string"||typeof n=="number")r(i,n.toString());else if(typeof n=="boolean")r(i,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},Ht=e=>{let s=Jt(),t=s.stackSave();try{let r=s.PTR_SIZE,o=s.stackAlloc(2*r);s._OrtGetLastError(o,o+r);let n=Number(s.getValue(o,r===4?"i32":"i64")),i=s.getValue(o+r,"*"),a=i?s.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${a}`)}finally{s.stackRestore(t)}}}),pb,iT=Ne(()=>{Nn(),wu(),pb=e=>{let s=Jt(),t=0,r=[],o=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)o.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)o.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(o.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Er(e.tag,r)),t=s._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,n),t===0&&Ht("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&ya(e.extra,"",new WeakSet,(i,a)=>{let l=Er(i,r),c=Er(a,r);s._OrtAddRunConfigEntry(t,l,c)!==0&&Ht(`Can't set a run config entry: ${i} - ${a}.`)}),[t,r]}catch(n){throw t!==0&&s._OrtReleaseRunOptions(t),r.forEach(i=>s._free(i)),n}}}),n_,o_,i_,Wo,a_,hb,aT=Ne(()=>{Nn(),wu(),n_=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},o_=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},i_=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let s=e.extra.session;s.use_ort_model_bytes_directly||(s.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Wo=(e,s,t,r)=>{let o=Er(s,r),n=Er(t,r);Jt()._OrtAddSessionConfigEntry(e,o,n)!==0&&Ht(`Can't set a session config entry: ${s} - ${t}.`)},a_=async(e,s,t)=>{for(let r of s){let o=typeof r=="string"?r:r.name,n=[];switch(o){case"webnn":if(o="WEBNN",typeof r!="string"){let p=r==null?void 0:r.deviceType;p&&Wo(e,"deviceType",p,t)}break;case"webgpu":if(o="JS",typeof r!="string"){let p=r;if(p!=null&&p.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);Wo(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=Er(o,t),a=n.length,l=0,c=0;if(a>0){l=Jt()._malloc(a*Jt().PTR_SIZE),t.push(l),c=Jt()._malloc(a*Jt().PTR_SIZE),t.push(c);for(let p=0;p<a;p++)Jt().setValue(l+p*Jt().PTR_SIZE,n[p][0],"*"),Jt().setValue(c+p*Jt().PTR_SIZE,n[p][1],"*")}await Jt()._OrtAppendExecutionProvider(e,i,l,c,a)!==0&&Ht(`Can't append execution provider: ${o}.`)}},hb=async e=>{let s=Jt(),t=0,r=[],o=e||{};i_(o);try{let n=n_(o.graphOptimizationLevel??"all"),i=o_(o.executionMode??"sequential"),a=typeof o.logId=="string"?Er(o.logId,r):0,l=o.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=o.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof o.optimizedModelFilePath=="string"?Er(o.optimizedModelFilePath,r):0;if(t=s._OrtCreateSessionOptions(n,!!o.enableCpuMemArena,!!o.enableMemPattern,i,!!o.enableProfiling,0,a,l,c,p),t===0&&Ht("Can't create session options."),o.executionProviders&&await a_(t,o.executionProviders,r),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);Wo(t,"enableGraphCapture",o.enableGraphCapture.toString(),r)}if(o.freeDimensionOverrides)for(let[u,d]of Object.entries(o.freeDimensionOverrides)){if(typeof u!="string")throw new Error(`free dimension override name must be a string: ${u}`);if(typeof d!="number"||!Number.isInteger(d)||d<0)throw new Error(`free dimension override value must be a non-negative integer: ${d}`);let _=Er(u,r);s._OrtAddFreeDimensionOverride(t,_,d)!==0&&Ht(`Can't set a free dimension override: ${u} - ${d}.`)}return o.extra!==void 0&&ya(o.extra,"",new WeakSet,(u,d)=>{Wo(t,u,d,r)}),[t,r]}catch(n){throw t!==0&&s._OrtReleaseSessionOptions(t)!==0&&Ht("Can't release session options."),r.forEach(i=>s._free(i)),n}}}),oo,Ur,Dn,yu,ba,bu,Mu,Qc,gt=Ne(()=>{oo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ur=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Dn=(e,s)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r=typeof s=="number"?s:s.reduce((o,n)=>o*n,1);return t>0?Math.ceil(r*t):void 0},yu=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ba=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},bu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Mu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Qc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),vu,mb=Ne(()=>{fu(),vu=async e=>{if(typeof e=="string"){let s=await fetch(e);if(!s.ok)throw new Error(`failed to load external data file: ${e}`);let t=s.headers.get("Content-Length"),r=t?parseInt(t,10):0;if(r<1073741824)return new Uint8Array(await s.arrayBuffer());{if(!s.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let o=s.body.getReader(),n;try{n=new ArrayBuffer(r)}catch(a){if(a instanceof RangeError){let l=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let i=0;for(;;){let{done:a,value:l}=await o.read();if(a)break;let c=l.byteLength;new Uint8Array(n,i,c).set(l),i+=c}return new Uint8Array(n,0,r)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),l_,c_,u_,d_,xu,p_,Ot,Vr=Ne(()=>{gt(),l_=["V","I","W","E","F"],c_=(e,s)=>{console.log(`[${l_[e]},${new Date().toISOString()}]${s}`)},xu=(e,s)=>{u_=e,d_=s},p_=(e,s)=>{let t=ba(e),r=ba(u_);t>=r&&c_(t,typeof s=="function"?s():s)},Ot=(...e)=>{d_&&p_(...e)}}),h_,lo,be,Ma,fb,_b,gb,Et=Ne(()=>{h_=class{static calcMatMulShape(e,s){return e[1]!==s[0]?void 0:[e[0],s[1]]}},lo=class{static calcShape(e,s,t=!1){let r=e.length,o=s.length;if(r===0)return s;if(o===0)return e;let n=Math.max(e.length,s.length),i=new Array(n);if(t){if(r<2||o<2)return;let a=h_.calcMatMulShape([e[r-2],e[r-1]],[s[o-2],s[o-1]]);if(a===void 0)return;[i[n-2],i[n-1]]=a}for(let a=t?3:1;a<=n;a++){let l=r-a<0?1:e[r-a],c=o-a<0?1:s[o-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)i[n-a]=Math.max(l,c);else{if(p>1)return;i[n-a]=0}}return i}static isValidBroadcast(e,s){let t=e.length,r=s.length;if(t>r)return!1;for(let o=1;o<=t;o++)if(e[t-o]!==1&&e[t-o]!==s[r-o])return!1;return!0}},be=class ga{static size(s){return ga.getSizeFromDimensionRange(s,0,s.length)}static convertShape(s,t=4){let r=s.length;if(r===0)return[];let o=new Array(r),n=r-1;for(;n>=0;){if(s[n]%t===0){o[n]=s[n]/t;break}if(t%s[n]!==0)throw new Error("cannot convert shape");o[n]=1,t/=s[n],n--}for(n--;n>=0;n--)o[n]=s[n];return o}static sizeFromDimension(s,t){if(t<0||t>s.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${s.length} dimensions.`);return ga.getSizeFromDimensionRange(s,t,s.length)}static sizeToDimension(s,t){if(t<0||t>s.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${s.length} dimensions.`);return ga.getSizeFromDimensionRange(s,0,t)}static getSizeFromDimensionRange(s,t,r){let o=1;for(let n=t;n<r;n++){if(s[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=Number(s[n])}return o}static computeStrides(s){let t=s.length;if(t===0)return[];if(t===1)return[1];let r=new Array(t);r[t-1]=1,r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=r[o+1]*s[o+1];return r}static normalizeAxis(s,t){if(s<-t&&s>=t)throw new Error("unsupported axis for this operation.");return s<0?s+t:s}static normalizeAxes(s,t){return s.map(r=>this.normalizeAxis(r,t??s.length))}static sortBasedOnPerm(s,t){return t?t.map(r=>s[r]):s.slice().reverse()}static padShape(s,t){let r=s.length;return s.map((o,n)=>o+t[n]+t[n+r])}static areEqual(s,t){return s.length!==t.length?!1:s.every((r,o)=>r===t[o])}},Ma=class ti{static adjustPoolAttributes(s,t,r,o,n,i){if(!s&&r.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(s)for(let a=0;a<t.length-2;a++)a>=r.length?r.push(t[a+2]):r[a]=t[a+2];for(let a=0;a<r.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<r.length;a++)if(a<n.length){if(n[a]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let a=0;a<r.length*2;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<r.length;a++){if(r[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=r[a]||i[a+r.length]>=r[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(s,t,r,o,n,i,a){if(a){if(n.length!==2*(s.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==s.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==s.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<s.length-2;l++)ti.adjustPadAndReturnShape(s[l+(i?1:2)],t[l],r[l],o[l],n,l,l+s.length-2,a)}}static computePoolOutputShape(s,t,r,o,n,i,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return ti.computeShapeHelper(s,t,l,r,o,n,i,a),l}static computeConvOutputShape(s,t,r,o,n,i,a){if(s.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[s[0],t[0]];return ti.computeShapeHelper(!1,s,l,r,o,n,i,a),l}static computeShapeHelper(s,t,r,o,n,i,a,l){if(s)for(let c=0;c<t.length-2;c++)r.push(1);else for(let c=0;c<t.length-2;c++)r.push(ti.adjustPadAndReturnShape(t[c+2],o[c],n[c],i[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(s,t,r,o,n,i,a,l){let c=r*(o-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[i]=0,n[a]=0,Math.floor((s-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(r!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((s+t-1)/t-1)*t+o-s;return n[i]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[a]=p-n[i],Math.floor((s+p-o)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((s+n[i]+n[a]-c)/t+1)}},fb=class{static getShapeOfGemmResult(e,s,t,r,o){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,i,a;s?(n=e[1],i=e[0]):(n=e[0],i=e[1]);let l=-1;if(r?(a=t[0],l=1):(a=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(n<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(o&&!lo.isValidBroadcast(o,[n,a]))throw new Error("gemm: invalid bias shape for broadcast");return[n,a,i]}},_b=-34028234663852886e22,gb=34028234663852886e22}),Tu,wb=Ne(()=>{gt(),Tu=(e,s)=>new(yu(s))(e)}),Xc,sc,m_,rc,f_,nc,oc,ic,__,yb,lT=Ne(()=>{Vr(),Xc=(e,s=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,r=new BigInt64Array(e.buffer,e.byteOffset,t),o=new Int32Array(t);for(let n=0;n<t;n++){let i=r[n];if(i>2147483647n||i<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${n}: ${i}`);o[n]=Number(i)}return s?new Uint8Array(o.buffer):o},sc=(e,s=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,r=new Int32Array(e.buffer,e.byteOffset,t),o=BigInt64Array.from(r,BigInt);return s?new Uint8Array(o.buffer):o},m_=1,rc=()=>m_++,f_=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),nc=(e,s)=>{let t=f_.get(e);if(!t)throw new Error("Unsupported data type.");return s.length>0?Math.ceil(s.reduce((r,o)=>r*o)*t/8):0},oc=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:s,context:t,tensor:r,dataType:o,shape:n,shouldConvertInt64toInt32:i=!1}=e;this.sessionId=s,this.mlContext=t,this.mlTensor=r,this.dataType=o,this.tensorShape=n,this.shouldConvertInt64toInt32=i}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return nc(this.dataType,this.tensorShape)}destroy(){Ot("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,s){if(e){let t=await this.mlContext.readTensor(this.mlTensor),r=sc(new Uint8Array(t));if(s){(s instanceof ArrayBuffer?new Uint8Array(s):new Uint8Array(s.buffer,s.byteOffset,s.byteLength)).set(r);return}else return r.buffer}else return s?this.mlContext.readTensor(this.mlTensor,s):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,s,t){return this.mlContext===e&&this.dataType===s&&this.tensorShape.length===t.length&&this.tensorShape.every((r,o)=>r===t[o])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},ic=class{constructor(e,s){this.tensorManager=e,this.wrapper=s}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,s,t,r){let o=s,n=this.tensorManager.getMLContext(e),i=o==="int64"&&!n.opSupportLimits().input.dataTypes.includes("int64");if(i&&(o="int32",Ot("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,o,t))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==nc(o,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,o,t,a,!0,!0,i),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let s=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(s=Xc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),s.byteLength===this.wrapper.byteLength){this.wrapper.write(s);return}else Ot("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(s):this.activeUpload=new Uint8Array(s)}async download(e){var s,t,r;if(this.activeUpload){let o=(s=this.wrapper)!=null&&s.isInt64ToInt32Converted?sc(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(o):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(o);return}else return o.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,e):this.wrapper.read((r=this.wrapper)==null?void 0:r.shouldConvertInt64toInt32)}},__=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let s=this.backend.getMLContext(e);if(!s)throw new Error("MLContext not found for session.");return s}reserveTensorId(){let e=rc();return this.tensorTrackersById.set(e,new ic(this)),e}releaseTensorId(e){let s=this.tensorTrackersById.get(e);s&&(this.tensorTrackersById.delete(e),s.tensorWrapper&&this.releaseTensor(s.tensorWrapper))}async ensureTensor(e,s,t,r,o){Ot("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${s}, dataType: ${t}, shape: ${r}, copyOld: ${o}}`);let n=this.tensorTrackersById.get(s);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,r,o)}upload(e,s){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(s)}async download(e,s){Ot("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${s==null?void 0:s.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(s)}releaseTensorsForSession(e){for(let s of this.freeTensors)s.sessionId===e&&s.destroy();this.freeTensors=this.freeTensors.filter(s=>s.sessionId!==e)}registerTensor(e,s,t,r){let o=this.getMLContext(e),n=rc(),i=new oc({sessionId:e,context:o,tensor:s,dataType:t,shape:r});return this.tensorTrackersById.set(n,new ic(this,i)),this.externalTensors.add(i),n}async getCachedTensor(e,s,t,r,o,n,i=!1){let a=this.getMLContext(e);for(let[c,p]of this.freeTensors.entries())if(p.canReuseTensor(a,s,t)){Ot("verbose",()=>`[WebNN] Reusing tensor {dataType: ${s}, shape: ${t}}`);let u=this.freeTensors.splice(c,1)[0];return u.sessionId=e,u}Ot("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${s}, shape: ${t}}`);let l=await a.createTensor({dataType:s,shape:t,dimensions:t,usage:r,writable:o,readable:n});return new oc({sessionId:e,context:a,tensor:l,dataType:s,shape:t,shouldConvertInt64toInt32:i})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},yb=(...e)=>new __(...e)}),na,g_,bb,cT=Ne(()=>{gt(),Nn(),wb(),lT(),Vr(),na=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),g_=(e,s)=>{if(e===s)return!0;if(e===void 0||s===void 0)return!1;let t=Object.keys(e).sort(),r=Object.keys(s).sort();return t.length===r.length&&t.every((o,n)=>o===r[n]&&e[o]===s[o])},bb=class{constructor(e){this.tensorManager=yb(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,xu(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Ot("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Ot("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let s=this.temporarySessionTensorIds.get(e);if(s){for(let t of s)Ot("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(r=>r.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:r}),r}}else if(e===void 0){let t=this.mlContextCache.findIndex(r=>r.options===void 0&&r.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:r}),r}}let s=this.mlContextCache.findIndex(t=>g_(t.options,e));if(s!==-1)return this.mlContextCache[s].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,s){this.mlContextBySessionId.set(e,s);let t=this.sessionIdsByMLContext.get(s);t||(t=new Set,this.sessionIdsByMLContext.set(s,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let s=this.mlContextBySessionId.get(e);if(!s)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(s);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(s);let r=this.mlContextCache.findIndex(o=>o.mlContext===s);r!==-1&&this.mlContextCache.splice(r,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Ot("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,s,t,r,o){let n=na.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,s,n,r,o)}async createTemporaryTensor(e,s,t){Ot("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${s}, shape: ${t}}`);let r=na.get(s);if(!r)throw new Error(`Unsupported ONNX data type: ${s}`);let o=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,o,r,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(o):this.temporarySessionTensorIds.set(e,[o]),o}uploadTensor(e,s){if(!Jt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ot("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${s.byteLength}}`),this.tensorManager.upload(e,s)}async downloadTensor(e,s){return this.tensorManager.download(e,s)}createMLTensorDownloader(e,s){return async()=>{let t=await this.tensorManager.download(e);return Tu(t,s)}}registerMLTensor(e,s,t,r){let o=na.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,s,o,r);return Ot("verbose",()=>`[WebNN] registerMLTensor {tensor: ${s}, dataType: ${o}, dimensions: ${r}} -> {tensorId: ${n}}`),n}registerMLConstant(e,s,t,r,o,n,i=!1){if(!n)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=n.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(s+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(s,s+t).buffer,p;switch(o.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":i?(p=Xc(new Uint8Array(c),!1),o.dataType="int32"):p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${o.dataType} in creating WebNN Constant from external data.`)}return Ot("verbose",()=>`[WebNN] registerMLConstant {dataType: ${o.dataType}, shape: ${o.shape}}} ${i?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),r.constant(o,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,s){let t=this.sessionGraphInputs.get(e);return t?t.includes(s):!1}isInt64Supported(e){var s;return!!((s=this.mlContextBySessionId.get(e))!=null&&s.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),Eu=Ne(()=>{}),ac,oa,ia,w_,y_,lc,Jc,b_,Mb,uT=Ne(()=>{Vr(),Eu(),ac=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),oa=[],ia=e=>Math.ceil(Number(e)/16)*16,w_=e=>{for(let s=0;s<oa.length;s++){let t=oa[s];if(e<=t)return t}return Math.ceil(e/16)*16},y_=1,lc=()=>y_++,Jc=async(e,s,t,r)=>{let o=ia(t),n=e.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(s,0,n,0,o),e.flush(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange();if(r){let l=r();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{n.destroy()}},b_=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[s]of ac)oa.push(s),this.freeBuffers.set(s,[]),this.freeUniformBuffers.set(s,[]);this.sessionCount=0}upload(e,s){let t=s.buffer,r=s.byteOffset,o=s.byteLength,n=ia(o),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==o)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${o}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,r,o)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,i.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),a.destroy(),Ot("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,s){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(s);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let o=ia(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,r.gpuData.buffer,0,o)}registerExternalBuffer(e,s,t){let r;if(t){if(r=t[0],e===t[1])return Ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${s}) => id=${r}, buffer is the same, skip.`),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else r=lc();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:s}),Ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${s}) => id=${r}, registered.`),r}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Ot("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=w_(e),r,o=(s&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(s&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(o||n){let a=(o?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?r=a.pop():r=this.backend.device.createBuffer({size:t,usage:s}):r=this.backend.device.createBuffer({size:t,usage:s})}else r=this.backend.device.createBuffer({size:t,usage:s});let i={id:lc(),type:0,buffer:r};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),Ot("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var s;return(s=this.storageCache.get(e))==null?void 0:s.gpuData}release(e){let s=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(s);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Ot("verbose",()=>`[WebGPU] GpuDataManager.release(id=${s}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(s),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,s){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Jc(this.backend,t.gpuData.buffer,t.originalSize,s)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let s=ac.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];s===void 0||t.length>=s?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];s===void 0||t.length>=s?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let s of this.buffersPending)e.push(s);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(s=>{s.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(s=>{s.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(s=>{s.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let s=this.capturedPendingBuffers.get(e);s&&(s.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(Ot("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Mb=(...e)=>new b_(...e)}),M_,Wt,ds=Ne(()=>{M_=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Wt=e=>new M_(e)}),co,aa,As,Us,dt,as,Yc,ao,on,lt,Go,$e,nt,vb,Pu,v_,xb,Ct=Ne(()=>{gt(),Et(),co=64,aa=(e,s)=>{if(s===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return s>1?`vec${s}<f16>`:"f16";case 1:return s>1?`vec${s}<f32>`:"f32";case 6:return s>1?`vec${s}<i32>`:"i32";case 12:return s>1?`vec${s}<u32>`:"u32";case 7:if(s>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(s>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(s!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},As=(e,s=1)=>{let t=aa(e,s);return typeof t=="string"?t:t[0]},Us=(e,s=1)=>{let t=aa(e,s);return typeof t=="string"?t:t[1]},dt=(...e)=>{let s=[];return e.forEach(t=>{t.length!==0&&s.push({type:12,data:t},{type:12,data:be.computeStrides(t)})}),s},as=e=>e%4===0?4:e%2===0?2:1,Yc=(e="f32",s,t="0")=>!s||s===1?`${e}(${t})`:`vec${s}<${e}>(${t})`,ao=(e,s,t)=>e==="f32"?t:s===1?`f32(${t})`:`vec${s}<f32>(${t})`,on=(e,s)=>s===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:s===2?`(${e}.x + ${e}.y)`:s===3?`(${e}.x + ${e}.y + ${e}.z)`:e,lt=(e,s,t,r)=>e.startsWith("uniforms.")&&t>4?typeof s=="string"?r==="f16"?`${e}[(${s}) / 8][(${s}) % 8 / 4][(${s}) % 8 % 4]`:`${e}[(${s}) / 4][(${s}) % 4]`:r==="f16"?`${e}[${Math.floor(s/8)}][${Math.floor(s%8/4)}][${s%8%4}]`:`${e}[${Math.floor(s/4)}][${s%4}]`:t>1?`${e}[${s}]`:e,Go=(e,s,t,r,o)=>{let n=typeof t=="number",i=n?t:t.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,c=aa(s,o),p=typeof c=="string"?c:c[1],u=typeof c=="string"?c:c[0],d={indices:l,value:p,storage:u,tensor:s},_=R=>typeof R=="string"?R:`${R}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=n?"uniforms.":"",$=`${y}${e}_shape`,w=`${y}${e}_strides`,g="";for(let R=0;R<i-1;R++)g+=`
    let dim${R} = current / ${lt(w,R,i)};
    let rest${R} = current % ${lt(w,R,i)};
    indices[${R}] = dim${R};
    current = rest${R};
    `;g+=`indices[${i-1}] = current;`;let C=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${d.indices} {
    var indices: ${d.indices};
    var current = offset;
    ${g}
    return indices;
  }`,T=R=>(f.offsetToIndices=!0,i<2?R:`o2i_${e}(${R})`),v=[];if(i>=2)for(let R=i-1;R>=0;R--)v.push(`${lt(w,R,i)} * (indices[${R}])`);let b=i<2?"":`
  fn i2o_${e}(indices: ${d.indices}) -> u32 {
    return ${v.join("+")};
  }`,x=R=>(f.indicesToOffset=!0,i<2?R:`i2o_${e}(${R})`),P=(...R)=>i===0?"0u":`${d.indices}(${R.map(_).join(",")})`,A=(R,O)=>i<2?`${R}`:`${lt(R,O,i)}`,D=(R,O,N)=>i<2?`${R}=${N};`:`${lt(R,O,i)}=${N};`,H={},K=(R,O)=>{f.broadcastedIndicesToOffset=!0;let N=`${O.name}broadcastedIndicesTo${e}Offset`;if(N in H)return`${N}(${R})`;let Z=[];for(let fe=i-1;fe>=0;fe--){let ie=O.indicesGet("outputIndices",fe+O.rank-i);Z.push(`${A(w,fe)} * (${ie} % ${A($,fe)})`)}return H[N]=`fn ${N}(outputIndices: ${O.type.indices}) -> u32 {
             return ${Z.length>0?Z.join("+"):"0u"};
           }`,`${N}(${R})`},B=(R,O)=>(()=>{if(d.storage===d.value)return`${e}[${R}]=${O};`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`${e}[${R}]=vec2<u32>(u32(${O}), select(0u, 0xFFFFFFFFu, ${O} < 0));`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`${e}[${R}]=vec2<u32>(u32(${O}), 0u);`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`${e}[${R}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${O}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),Y=R=>(()=>{if(d.storage===d.value)return`${e}[${R}]`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`i32(${e}[${R}].x)`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`u32(${e}[${R}].x)`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${R}] & 0xFFu), bool(${e}[${R}] & 0xFF00u), bool(${e}[${R}] & 0xFF0000u), bool(${e}[${R}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),q=i<2?"":`
  fn get_${e}ByIndices(indices: ${d.indices}) -> ${p} {
    return ${Y(`i2o_${e}(indices)`)};
  }`,Q=i<2?"":(()=>{let R=a.map(N=>`d${N}: u32`).join(", "),O=a.map(N=>`d${N}`).join(", ");return`
  fn get_${e}(${R}) -> ${p} {
    return get_${e}ByIndices(${P(O)});
  }`})(),X=(...R)=>{if(R.length!==i)throw new Error(`indices length must be ${i}`);let O=R.map(_).join(",");return i===0?Y("0u"):i===1?Y(O[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${O})`)},se=R=>i<2?Y(R):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${R})`),me=i<2?"":`
  fn set_${e}ByIndices(indices: ${d.indices}, value: ${p}) {
    ${B(`i2o_${e}(indices)`,"value")}
  }`,le=i<2?"":(()=>{let R=a.map(N=>`d${N}: u32`).join(", "),O=a.map(N=>`d${N}`).join(", ");return`
  fn set_${e}(${R}, value: ${p}) {
    set_${e}ByIndices(${P(O)}, value);
  }`})();return{impl:()=>{let R=[],O=!1;return f.offsetToIndices&&(R.push(C),O=!0),f.indicesToOffset&&(R.push(b),O=!0),f.broadcastedIndicesToOffset&&(Object.values(H).forEach(N=>R.push(N)),O=!0),f.set&&(R.push(le),O=!0),f.setByIndices&&(R.push(me),O=!0),f.get&&(R.push(Q),O=!0),f.getByIndices&&(R.push(q),O=!0),!n&&O&&R.unshift(`const ${$} = ${d.indices}(${t.join(",")});`,`const ${w} = ${d.indices}(${be.computeStrides(t).join(",")});`),R.join(`
`)},type:d,offsetToIndices:T,indicesToOffset:x,broadcastedIndicesToOffset:K,indices:P,indicesGet:A,indicesSet:D,set:(...R)=>{if(R.length!==i+1)throw new Error(`indices length must be ${i}`);let O=R[i];if(typeof O!="string")throw new Error("value must be string");let N=R.slice(0,i).map(_).join(",");return i===0?B("0u",O):i===1?B(N[0],O):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${N}, ${O})`)},setByOffset:B,setByIndices:(R,O)=>i<2?B(R,O):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${R}, ${O});`),get:X,getByOffset:Y,getByIndices:se,usage:r,name:e,strides:w,shape:$,rank:i}},$e=(e,s,t,r=1)=>Go(e,s,t,"input",r),nt=(e,s,t,r=1)=>Go(e,s,t,"output",r),vb=(e,s,t)=>Go(e,s,t,"atomicOutput",1),Pu=(e,s,t,r=1)=>Go(e,s,t,"internal",r),v_=class{constructor(e,s){this.normalizedDispatchGroup=e,this.limits=s,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=co){let s=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],r=typeof e=="number"?1:e[2];if(s>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${s}, ${t}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(s*t*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${s}, ${t}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let o=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=o?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=o?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${s*t*r}u + local_idx;`;return`@compute @workgroup_size(${s}, ${t}, ${r})
  fn main(${n}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,s){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",r=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${s}) var<storage, ${t}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map(s=>this.declareVariable(s,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(s=>this.registerInternalVariable(s)),this}registerUniform(e,s,t=1){return this.uniforms.push({name:e,type:s,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:s,type:t,length:r}of this.uniforms)if(r&&r>4)t==="f16"?e.push(`@align(16) ${s}:array<mat2x4<${t}>, ${Math.ceil(r/8)}>`):e.push(`${s}:array<vec4<${t}>, ${Math.ceil(r/4)}>`);else{let o=r==null||r===1?t:`vec${r}<${t}>`;e.push(`${s}:${o}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=s=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(s)];return this.uniforms.map(s=>[e(s.type),s.length??1])}},xb=(e,s)=>new v_(e,s)}),x_,cc,T_,E_,P_,C_,tr,Tb,Eb,an=Ne(()=>{gt(),Et(),ds(),Ct(),x_=(e,s)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(s.length!==0&&s.length!==e[0].dims.length)throw new Error(`perm size ${s.length} does not match input rank ${e[0].dims.length}`)},cc=(e,s)=>s.length!==0?s:[...new Array(e).keys()].reverse(),T_=(e,s)=>be.sortBasedOnPerm(e,cc(e.length,s)),E_=(e,s,t,r)=>{let o=`fn perm(i: ${r.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<s;++n)o+=`a[${e[n]}]=i[${n}];`;return o+="return a;}"},P_=(e,s)=>{let t=[],r=[];for(let o=0;o<e.length;++o)e[o]!==1&&t.push(e[o]),e[s[o]]!==1&&r.push(s[o]);return{newShape:t,newPerm:r}},C_=(e,s)=>{let t=0;for(let r=0;r<e.length;++r)if(s[e[r]]!==1){if(e[r]<t)return!1;t=e[r]}return!0},tr=(e,s)=>{let t=e.dataType,r=e.dims.length,o=cc(r,s),n=T_(e.dims,o),i=e.dims,a=n,l=r<2||C_(o,e.dims),c;if(l)return c=f=>{let y=$e("input",t,i,4),$=nt("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(y,$)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=be.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:p,newPerm:u}=P_(e.dims,o),d=be.areEqual(u,[2,3,1]),_=be.areEqual(u,[3,1,2]);if(p.length===2||d||_){i=d?[p[0],p[1]*p[2]]:_?[p[0]*p[1],p[2]]:p,a=[i[1],i[0]];let f=16;return c=y=>{let $=$e("a",t,i.length),w=nt("output",t,a.length);return`
  ${y.registerUniform("output_size","u32").declareVariables($,w)}
  var<workgroup> tile : array<array<${w.type.value}, ${f+1}>, ${f}>;
  ${y.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${$.getByIndices(`${$.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${w.setByIndices(`${w.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let y=be.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:y},...dt(i,a)]}},getShaderSource:c}}return c=f=>{let y=$e("a",t,i.length),$=nt("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(y,$)}

  ${E_(o,r,y,$)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${$.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${$.setByOffset("global_idx",y.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>{let f=be.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...dt(i,a)]}},getShaderSource:c}},Tb=(e,s)=>{x_(e.inputs,s.perm),e.compute(tr(e.inputs[0],s.perm))},Eb=e=>Wt({perm:e.perm})}),S_,$_,k_,I_,A_,O_,F_,D_,L_,z_,br,Pb,Cb,Sb,$b,kb,Ib,Ab,Ob,Fb,Db,dT=Ne(()=>{gt(),Et(),Ct(),Cu(),an(),S_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},$_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},k_={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},I_={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},A_=(e,s)=>{let t=[];for(let r=s-e;r<s;++r)t.push(r);return t},O_=(e,s)=>{let t=[],r=e.length;for(let n=0;n<r;n++)s.indexOf(n)===-1&&t.push(e[n]);let o=s.map(n=>e[n]);return[t,o]},F_=(e,s)=>{let t=e.length+s.length,r=[],o=0;for(let n=0;n<t;n++)s.indexOf(n)===-1?r.push(e[o++]):r.push(1);return r},D_=(e,s)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==s-1-t)return!1;return!0},L_=(e,s)=>{let t=[];if(!D_(e,s)){for(let r=0;r<s;++r)e.indexOf(r)===-1&&t.push(r);e.forEach(r=>t.push(r))}return t},z_=(e,s,t,r,o,n,i)=>{let a=t[0].dims,l=be.size(n),c=be.size(i),p=$e("_A",t[0].dataType,a),u=nt("output",o,n),d=64;l===1&&(d=256);let _=`
          var<workgroup> aBestValues : array<f32, ${d}>;
       `,f=y=>`
        ${y.registerUniform("reduceSize","u32").declareVariables(p,u)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${y.mainStart(d)}

          let outputIndex = global_idx / ${d};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${k_[r]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${d}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${S_[r]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${d}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${$_[r]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${u.setByOffset("outputIndex",`${r==="mean"?`${u.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${u.type.storage}(${I_[r]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${s};${d}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},br=(e,s,t,r)=>{let o=e.inputs.length===1?t:Zc(e.inputs,t),n=o.axes;n.length===0&&!o.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((_,f)=>f));let i=be.normalizeAxes(n,e.inputs[0].dims.length),a=i,l=e.inputs[0],c=L_(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(tr(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=A_(a.length,l.dims.length));let[p,u]=O_(l.dims,a),d=p;o.keepDims&&(d=F_(p,i)),e.compute(z_(s,o.cacheKey,[l],r,e.inputs[0].dataType,d,u),{inputs:[l]})},Pb=(e,s)=>{br(e,"ReduceMeanShared",s,"mean")},Cb=(e,s)=>{br(e,"ReduceL1Shared",s,"l1")},Sb=(e,s)=>{br(e,"ReduceL2Shared",s,"l2")},$b=(e,s)=>{br(e,"ReduceLogSumExpShared",s,"logSumExp")},kb=(e,s)=>{br(e,"ReduceMaxShared",s,"max")},Ib=(e,s)=>{br(e,"ReduceMinShared",s,"min")},Ab=(e,s)=>{br(e,"ReduceProdShared",s,"prod")},Ob=(e,s)=>{br(e,"ReduceSumShared",s,"sum")},Fb=(e,s)=>{br(e,"ReduceSumSquareShared",s,"sumSquare")},Db=(e,s)=>{br(e,"ReduceLogSumShared",s,"logSum")}}),Mr,B_,va,Zc,vr,R_,j_,N_,U_,V_,W_,G_,K_,H_,q_,xr,Lb,zb,Bb,Rb,jb,Nb,Ub,Vb,Wb,Gb,Cu=Ne(()=>{gt(),Et(),ds(),Ct(),dT(),Mr=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},B_=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],va=(e,s,t,r,o,n,i=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,u=be.normalizeAxes(o,p),d=!a&&u.length===0;c.forEach((y,$)=>{d||u.indexOf($)>=0?i&&l.push(1):l.push(y)});let _=l.length,f=be.size(l);return{name:e,shaderCache:s,getShaderSource:y=>{let $=[],w=$e("_A",t[0].dataType,p),g=nt("output",n,_),C=r(w,g,u),T=C[2];for(let v=0,b=0;v<p;v++)d||u.indexOf(v)>=0?(i&&b++,T=`for(var j${v}: u32 = 0; j${v} < ${c[v]}; j${v}++) {
                  ${C[2].includes("last_index")?`let last_index = j${v};`:""}
                  ${w.indicesSet("input_indices",v,`j${v}`)}
                  ${T}
                }`):($.push(`${w.indicesSet("input_indices",v,g.indicesGet("output_indices",b))};`),b++);return`

        ${y.registerUniform("output_size","u32").declareVariables(w,g)}

        ${y.mainStart()}
          ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${w.type.indices};
          let output_indices = ${g.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${C[0]}       // init ops for reduce max/min
          ${C[1]}
          ${T}
          ${C[3]}
          ${C.length===4?g.setByOffset("global_idx","value"):C.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...dt(c,l)]})}},Zc=(e,s)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(r=>t.push(Number(r))),Wt({axes:t,keepDims:s.keepDims,noopWithEmptyAxes:s.noopWithEmptyAxes})},vr=(e,s,t,r)=>{let o=e.inputs,n=o.length===1?t:Zc(o,t);e.compute(va(s,{hint:n.cacheKey,inputDependencies:["rank"]},[o[0]],n.noopWithEmptyAxes&&n.axes.length===0?B_:r,n.axes,o[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},R_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceLogSum",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},j_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceL1",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},N_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceL2",s,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},U_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceLogSumExp",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},V_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceMax",s,(t,r,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(t.indicesSet("input_indices",i,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},W_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceMean",s,(t,r,o)=>{let n=1;for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&(n*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${r.type.value}(sum / ${n});`]})},G_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceMin",s,(t,r,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(`input_indices[${i}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},K_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceProd",s,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},H_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceSum",s,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},q_=(e,s)=>{Mr(e.inputs),vr(e,"ReduceSumSquare",s,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},xr=(e,s,t)=>{if(s.length===0)return t;let r=1,o=1;for(let n=0;n<s.length;n++)s.indexOf(n)===-1?r*=e[n]:o*=e[n];return o<32&&r>1024},Lb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?W_(e,s):Pb(e,s)},zb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?j_(e,s):Cb(e,s)},Bb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?N_(e,s):Sb(e,s)},Rb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?U_(e,s):$b(e,s)},jb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?V_(e,s):kb(e,s)},Nb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?G_(e,s):Ib(e,s)},Ub=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?K_(e,s):Ab(e,s)},Vb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?H_(e,s):Ob(e,s)},Wb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?q_(e,s):Fb(e,s)},Gb=(e,s)=>{xr(e.inputs[0].dims,s.axes,s.noopWithEmptyAxes)?R_(e,s):Db(e,s)}}),uc,Kb,Hb,eu,pT=Ne(()=>{gt(),ds(),Cu(),uc=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Kb=(e,s)=>{uc(e.inputs);let t=(r,o,n)=>{let i=[];for(let a=0;a<r.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${s.selectLastIndex>0?"<=":"<"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(va("ArgMin",{hint:s.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[s.axis],7,s.keepDims),{inputs:[0]})},Hb=(e,s)=>{uc(e.inputs);let t=(r,o,n)=>{let i=[];for(let a=0;a<r.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${s.selectLastIndex>0?">=":">"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(va("argMax",{hint:s.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[s.axis],7,s.keepDims),{inputs:[0]})},eu=e=>Wt(e)}),Q_,la,X_,J_,Y_,li,Z_,qb,Su=Ne(()=>{gt(),Et(),Eu(),Ct(),Q_=(e,s)=>{let t=e[0],r=e[1],o=e[2],n=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(r.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let u=o.dims[0]/3,d=u,_=d;if(s.qkvHiddenSizes.length>0){if(s.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let C of s.qkvHiddenSizes)if(C%s.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");u=s.qkvHiddenSizes[0],d=s.qkvHiddenSizes[1],_=s.qkvHiddenSizes[2]}let f=c;if(u!==d)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==u+d+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let y=0;if(i){if(d!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==s.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==d/s.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');s.pastPresentShareBuffer||(y=i.dims[3])}let $=f+y,w=-1,g=0;if(n)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==s.numHeads||a.dims[2]!==c||a.dims[3]!==$)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:y,kvSequenceLength:f,totalSequenceLength:$,maxSequenceLength:w,inputHiddenSize:p,hiddenSize:u,vHiddenSize:_,headSize:Math.floor(u/s.numHeads),vHeadSize:Math.floor(_/s.numHeads),numHeads:s.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:s.maskFilterValue,maskType:g,scale:s.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},la=(e,s,t)=>s&&e?`
      let total_sequence_length_input = u32(${s.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,X_=(e,s,t,r,o,n,i,a)=>{let l=as(i?1:n),c=64,p=n/l;p<c&&(c=32);let u=Math.ceil(n/l/c),d=[{type:12,data:s},{type:12,data:t},{type:12,data:r},{type:12,data:o},{type:12,data:p},{type:12,data:u}],_=As(e.dataType,l),f=Us(1,l),y=["type"];i&&y.push("type"),a&&y.push("type");let $=w=>{let g=nt("x",e.dataType,e.dims,l),C=[g],T=i?$e("seq_lens",i.dataType,i.dims):void 0;T&&C.push(T);let v=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;v&&C.push(v);let b=Us(e.dataType),x=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${w.registerUniforms(x).declareVariables(...C)}
  ${w.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${la(T,v,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${g.type.value}(${b}(1.0) / ${b}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${g.type.value}(${b}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${_};${l}`,inputDependencies:y},getShaderSource:$,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:o,z:s*t},programUniforms:d})}},J_=(e,s,t,r,o,n,i,a,l)=>{let c=i+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],u=e>1&&r,d=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=u?[n.batchSize,d,c,n.headSize]:void 0,f=n.nReps?n.nReps:1,y=n.scale===0?1/Math.sqrt(n.headSize):n.scale,$=as(n.headSize),w=n.headSize/$,g=12,C={x:Math.ceil(c/g),y:Math.ceil(n.sequenceLength/g),z:n.batchSize*n.numHeads},T=[{type:12,data:n.sequenceLength},{type:12,data:w},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:y},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:f}],v=u&&r&&be.size(r.dims)>0,b=["type","type"];v&&b.push("type"),o&&b.push("type"),a&&b.push("type"),l&&b.push("type");let x=[{dims:p,dataType:s.dataType,gpuDataType:0}];u&&x.push({dims:_,dataType:s.dataType,gpuDataType:0});let P=A=>{let D=$e("q",s.dataType,s.dims,$),H=$e("key",t.dataType,t.dims,$),K=[D,H];if(v){let me=$e("past_key",r.dataType,r.dims,$);K.push(me)}o&&K.push($e("attention_bias",o.dataType,o.dims));let B=a?$e("seq_lens",a.dataType,a.dims):void 0;B&&K.push(B);let Y=l?$e("total_sequence_length_input",l.dataType,l.dims):void 0;Y&&K.push(Y);let q=nt("output",s.dataType,p),Q=[q];u&&Q.push(nt("present_key",s.dataType,_,$));let X=Us(1,$),se=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${D.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${D.type.storage}, ${g*g}>;
  ${A.registerUniforms(se).declareVariables(...K,...Q)}
  ${A.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${la(B,Y,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${v&&u?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${u?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${X}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${v&&u?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${u?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${X}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch($){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${$}`)}})()};
        output[outputIdx] = ${q.type.value} (sum * uniforms.alpha) + ${o?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${$};${o!==void 0};${r!==void 0};${e}`,inputDependencies:b},getRunData:()=>({outputs:x,dispatchGroup:C,programUniforms:T}),getShaderSource:P}},Y_=(e,s,t,r,o,n,i=void 0,a=void 0)=>{let l=n+o.kvSequenceLength,c=o.nReps?o.nReps:1,p=o.vHiddenSize*c,u=e>1&&r,d=o.kvNumHeads?o.kvNumHeads:o.numHeads,_=u?[o.batchSize,d,l,o.headSize]:void 0,f=[o.batchSize,o.sequenceLength,p],y=12,$={x:Math.ceil(o.vHeadSize/y),y:Math.ceil(o.sequenceLength/y),z:o.batchSize*o.numHeads},w=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:o.kvSequenceLength},{type:12,data:c}],g=u&&r&&be.size(r.dims)>0,C=["type","type"];g&&C.push("type"),i&&C.push("type"),a&&C.push("type");let T=[{dims:f,dataType:s.dataType,gpuDataType:0}];u&&T.push({dims:_,dataType:s.dataType,gpuDataType:0});let v=b=>{let x=$e("probs",s.dataType,s.dims),P=$e("v",t.dataType,t.dims),A=[x,P];g&&A.push($e("past_value",r.dataType,r.dims));let D=i?$e("seq_lens",i.dataType,i.dims):void 0;i&&A.push(D);let H=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;a&&A.push(H);let K=[nt("output",s.dataType,f)];u&&K.push(nt("present_value",s.dataType,_));let B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${y}u;
  var<workgroup> tileQ: array<${x.type.value}, ${y*y}>;
  var<workgroup> tileV: array<${x.type.value}, ${y*y}>;
  ${b.registerUniforms(B).declareVariables(...A,...K)}
  ${b.mainStart([y,y,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${la(D,H,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${g&&u?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${u?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${x.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${g&&u?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${u?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${r!==void 0};${e}`,inputDependencies:C},getRunData:()=>({outputs:T,dispatchGroup:$,programUniforms:w}),getShaderSource:v}},li=(e,s,t,r,o,n,i,a,l,c,p=void 0,u=void 0)=>{let d=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),_=d>1?c.pastSequenceLength:0,f=_+c.kvSequenceLength,y=l&&be.size(l.dims)>0?l:void 0,$=[s,t];d>1&&i&&be.size(i.dims)>0&&$.push(i),y&&$.push(y),p&&$.push(p),u&&$.push(u);let w=e.compute(J_(d,s,t,i,y,c,_,p,u),{inputs:$,outputs:d>1?[-1,1]:[-1]})[0];e.compute(X_(w,c.batchSize,c.numHeads,_,c.sequenceLength,f,p,u),{inputs:p&&u?[w,p,u]:[w],outputs:[]});let g=[w,r];d>1&&a&&be.size(a.dims)>0&&g.push(a),p&&g.push(p),u&&g.push(u),e.compute(Y_(d,w,r,a,c,_,p,u),{inputs:g,outputs:d>1?[0,2]:[0]})},Z_=(e,s)=>{let t=[s.batchSize,s.numHeads,s.sequenceLength,s.headSize],r=s.sequenceLength,o=s.inputHiddenSize,n=s.headSize,i=12,a={x:Math.ceil(s.headSize/i),y:Math.ceil(s.sequenceLength/i),z:s.batchSize*s.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:r},{type:12,data:o},{type:12,data:n},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:s.hiddenSize},{type:12,data:s.hiddenSize+s.hiddenSize+s.vHiddenSize}],p=u=>{let d=nt("output_q",l[0].dataType,t),_=nt("output_k",l[0].dataType,t),f=nt("output_v",l[0].dataType,t),y=$e("input",l[0].dataType,l[0].dims),$=$e("weight",l[1].dataType,l[1].dims),w=$e("bias",l[2].dataType,l[2].dims),g=y.type.storage,C=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${g}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${g}, ${i*i}>;
  var<workgroup> tileWeightK: array<${g}, ${i*i}>;
  var<workgroup> tileWeightV: array<${g}, ${i*i}>;
  ${u.registerUniforms(C).declareVariables(y,$,w,d,_,f)}
  ${u.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${g}(0);
    var valueK = ${g}(0);
    var valueV = ${g}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},qb=(e,s)=>{let t=Q_(e.inputs,s),[r,o,n]=Z_(e,t);return li(e,r,o,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),eg,tg,sg,Qb,hT=Ne(()=>{$r(),gt(),Et(),ds(),Ct(),eg=(e,s)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(r,o,n)=>{let i=o.length;if(i!==r.length)throw new Error(`${n}: num dimensions != ${i}`);o.forEach((a,l)=>{if(a!==r[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let r=s.format==="NHWC"?s.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,s.spatial?2:void 0);t(e[1].dims,r,"Invalid input scale"),t(e[2].dims,r,"Invalid input B"),t(e[3].dims,r,"Invalid input mean"),t(e[4].dims,r,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},tg=(e,s)=>{let{epsilon:t,spatial:r,format:o}=s,n=e[0].dims,i=r?as(n[n.length-1]):1,a=o==="NHWC"&&n.length>1?i:1,l=be.size(n)/i,c=r,p=c?n.length:n,u=$e("x",e[0].dataType,e[0].dims,i),d=$e("scale",e[1].dataType,e[1].dims,a),_=$e("bias",e[2].dataType,e[2].dims,a),f=$e("inputMean",e[3].dataType,e[3].dims,a),y=$e("inputVar",e[4].dataType,e[4].dims,a),$=nt("y",e[0].dataType,p,i),w=()=>{let C="";if(r)C=`let cOffset = ${n.length===1?"0u":o==="NHWC"?`outputIndices[${n.length-1}] / ${i}`:"outputIndices[1]"};`;else if(o==="NCHW")C=`
            ${$.indicesSet("outputIndices","0","0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;else{C=`var cIndices = ${d.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let T=1;T<d.rank;T++)C+=`cIndices[${T}] = outputIndices[${T}];`;C+=`let cOffset = ${d.indicesToOffset("cIndices")};`}return C},g=C=>`
  const epsilon = ${t};
  ${C.registerUniform("outputSize","u32").declareVariables(u,d,_,f,y,$)}
  ${C.mainStart()}
  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${i}`)};
    ${w()}
    let scale = ${d.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${y.getByOffset("cOffset")};
    let x = ${u.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${s.epsilon}_${s.format}_${r}_${i}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:g,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...dt(n)]:[{type:12,data:l}]})}},sg=e=>Wt(e),Qb=(e,s)=>{let{inputs:t,outputCount:r}=e,o=sg({...s,outputCount:r});if(es.webgpu.validateInputContent&&eg(t,o),s.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(tg(t,o))}}),rg,ng,Xb,mT=Ne(()=>{Et(),Ct(),rg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ng=e=>{let s=e[0].dims,t=e[0].dims[2],r=be.size(s)/4,o=e[0].dataType,n=$e("input",o,s,4),i=$e("bias",o,[t],4),a=$e("residual",o,s,4),l=nt("output",o,s,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,i,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(r)}
    let value = ${n.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Xb=e=>{rg(e.inputs),e.compute(ng(e.inputs))}}),og,Rt,Jb,Yb,Zb,e0,t0,s0,r0,n0,o0,ig,i0,a0,l0,c0,si,u0,wa,d0,p0,h0,m0,f0,_0,g0,w0,y0,b0,M0,v0,x0,T0,E0,P0,dc,C0,tu,su,S0,$0,k0,ag,lg,I0,$u=Ne(()=>{gt(),Et(),ds(),Ct(),og=(e,s,t,r,o,n,i)=>{let a=Math.ceil(s/4),l="";typeof o=="string"?l=`${o}(a)`:l=o("a");let c=$e("inputData",t,[a],4),p=nt("outputData",r,[a],4),u=[{name:"vec_size",type:"u32"}];return i&&u.push(...i),`
      ${e.registerUniforms(u).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},Rt=(e,s,t,r,o,n=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(be.size(e.dims)/4)}];return i&&l.push(...i),{name:s,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:c=>og(c,be.size(e.dims),e.dataType,n,t,r,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(be.size(c[0].dims)/64/4)},programUniforms:l})}},Jb=e=>{e.compute(Rt(e.inputs[0],"Abs","abs"))},Yb=e=>{e.compute(Rt(e.inputs[0],"Acos","acos"))},Zb=e=>{e.compute(Rt(e.inputs[0],"Acosh","acosh"))},e0=e=>{e.compute(Rt(e.inputs[0],"Asin","asin"))},t0=e=>{e.compute(Rt(e.inputs[0],"Asinh","asinh"))},s0=e=>{e.compute(Rt(e.inputs[0],"Atan","atan"))},r0=e=>{e.compute(Rt(e.inputs[0],"Atanh","atanh"))},n0=e=>Wt(e),o0=(e,s)=>{let t;switch(s.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${s.to}`)}e.compute(Rt(e.inputs[0],"Cast",t,void 0,s.cacheKey,s.to))},ig=e=>{let s,t,r=e.length>=2&&e[1].data!==0,o=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:s=r?e[1].getFloat32Array()[0]:-34028234663852886e22,t=o?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:s=r?e[1].getUint16Array()[0]:64511,t=o?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Wt({min:s,max:t})},i0=(e,s)=>{let t=s||ig(e.inputs),r=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"Clip",o=>`clamp(${o}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},a0=e=>{e.compute(Rt(e.inputs[0],"Ceil","ceil"))},l0=e=>{e.compute(Rt(e.inputs[0],"Cos","cos"))},c0=e=>{e.compute(Rt(e.inputs[0],"Cosh","cosh"))},si=e=>Wt(e),u0=(e,s)=>{let t=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`
  const elu_alpha_ = ${t}(${s.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,s.cacheKey))},wa=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,d0=e=>{let s=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,wa(s)))},p0=e=>{e.compute(Rt(e.inputs[0],"Exp","exp"))},h0=e=>{e.compute(Rt(e.inputs[0],"Floor","floor"))},m0=e=>{let s=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,wa(s)))},f0=(e,s)=>{let t=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${s.alpha});`,s.cacheKey))},_0=e=>{e.compute(Rt(e.inputs[0],"Not",s=>`!${s}`))},g0=e=>{e.compute(Rt(e.inputs[0],"Neg",s=>`-${s}`))},w0=e=>{e.compute(Rt(e.inputs[0],"Reciprocal",s=>`1.0/${s}`))},y0=e=>{let s=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"Relu",t=>`select(vec4<${s}>(0.0), ${t}, ${t} > vec4<${s}>(0.0))`))},b0=e=>{e.compute(Rt(e.inputs[0],"Sigmoid",s=>`(1.0 / (1.0 + exp(-${s})))`))},M0=e=>Wt(e),v0=(e,s)=>{let t=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"HardSigmoid",r=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${s.alpha} * ${r} + vec4<${t}>(${s.beta})))`,void 0,s.cacheKey))},x0=e=>{e.compute(Rt(e.inputs[0],"Sin","sin"))},T0=e=>{e.compute(Rt(e.inputs[0],"Sinh","sinh"))},E0=e=>{e.compute(Rt(e.inputs[0],"Sqrt","sqrt"))},P0=e=>{e.compute(Rt(e.inputs[0],"Tan","tan"))},dc=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,C0=e=>{e.compute(Rt(e.inputs[0],"Tanh",dc))},tu=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${dc("v")};
}
`,su=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,S0=e=>{let s=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"FastGelu",su,tu(s),void 0,e.inputs[0].dataType))},$0=(e,s)=>{let t=Us(e.inputs[0].dataType);return e.compute(Rt(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${s.alpha});`,s.cacheKey)),0},k0=e=>{e.compute(Rt(e.inputs[0],"Log","log"))},ag=(e,s)=>`
const alpha = vec4<${e}>(${s});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,lg=e=>`quick_gelu_impl(${e})`,I0=(e,s)=>{let t=Us(e.inputs[0].dataType);e.compute(Rt(e.inputs[0],"QuickGelu",lg,ag(t,s.alpha),s.cacheKey,e.inputs[0].dataType))}}),cg,ug,A0,fT=Ne(()=>{Et(),Ct(),$u(),cg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ug=e=>{let s=e[0].dims.slice();s[2]=s[2]/2;let t=$e("input",e[0].dataType,e[0].dims,4),r=$e("bias",e[0].dataType,[e[0].dims[2]],4),o=nt("output",e[0].dataType,s,4),n=be.size(s)/4,i=As(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,r,o)}

  ${wa(i)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},A0=e=>{cg(e.inputs),e.compute(ug(e.inputs))}}),dg,pg,Tr,O0,F0,D0,L0,z0,B0,R0,j0,N0,U0,_T=Ne(()=>{gt(),Et(),Ct(),dg=(e,s,t,r,o,n,i,a,l,c,p,u)=>{let d,_;typeof a=="string"?d=_=(g,C)=>`${a}((${g}),(${C}))`:typeof a=="function"?d=_=a:(d=a.scalar,_=a.vector);let f=nt("outputData",p,r.length,4),y=$e("aData",l,s.length,4),$=$e("bData",c,t.length,4),w;if(o)if(n){let g=be.size(s)===1,C=be.size(t)===1,T=s.length>0&&s[s.length-1]%4===0,v=t.length>0&&t[t.length-1]%4===0;g||C?w=f.setByOffset("global_idx",_(g?`${y.type.value}(${y.getByOffset("0")}.x)`:y.getByOffset("global_idx"),C?`${$.type.value}(${$.getByOffset("0")}.x)`:$.getByOffset("global_idx"))):w=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${y.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${$.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(i||T?y.getByOffset("offsetA / 4u"):`${y.type.value}(${y.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||v?$.getByOffset("offsetB / 4u"):`${$.type.value}(${$.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else w=f.setByOffset("global_idx",_(y.getByOffset("global_idx"),$.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let g=(C,T,v="")=>{let b=`aData[indexA${T}][componentA${T}]`,x=`bData[indexB${T}][componentB${T}]`;return`
            let outputIndices${T} = ${f.offsetToIndices(`global_idx * 4u + ${T}u`)};
            let offsetA${T} = ${y.broadcastedIndicesToOffset(`outputIndices${T}`,f)};
            let offsetB${T} = ${$.broadcastedIndicesToOffset(`outputIndices${T}`,f)};
            let indexA${T} = offsetA${T} / 4u;
            let indexB${T} = offsetB${T} / 4u;
            let componentA${T} = offsetA${T} % 4u;
            let componentB${T} = offsetB${T} % 4u;
            ${C}[${T}] = ${v}(${d(b,x)});
          `};p===9?w=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(y,$,f)}

        ${u??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},pg=(e,s,t,r,o,n,i=t.dataType)=>{let a=t.dims.map(y=>Number(y)??1),l=r.dims.map(y=>Number(y)??1),c=!be.areEqual(a,l),p=a,u=be.size(a),d=!1,_=!1,f=[c];if(c){let y=lo.calcShape(a,l,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");p=y.slice(),u=be.size(p);let $=be.size(a)===1,w=be.size(l)===1,g=a.length>0&&a[a.length-1]%4===0,C=l.length>0&&l[l.length-1]%4===0;f.push($),f.push(w),f.push(g),f.push(C);let T=1;for(let v=1;v<p.length;v++){let b=a[a.length-v],x=l[l.length-v];if(b===x)T*=b;else break}T%4===0?(_=!0,d=!0):($||w||g||C)&&(d=!0)}else d=!0;return f.push(d),{name:e,shaderCache:{hint:s+f.map(y=>y.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:y=>dg(y,a,l,p,d,c,_,o,t.dataType,r.dataType,i,n),getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(be.size(p)/4)},...dt(a,l,p)]})}},Tr=(e,s,t,r,o,n)=>{e.compute(pg(s,o??"",e.inputs[0],e.inputs[1],t,r,n))},O0=e=>{Tr(e,"Add",(s,t)=>`${s}+${t}`)},F0=e=>{Tr(e,"Div",(s,t)=>`${s}/${t}`)},D0=e=>{Tr(e,"Equal",{scalar:(s,t)=>`u32(${s}==${t})`,vector:(s,t)=>`vec4<u32>(${s}==${t})`},void 0,void 0,9)},L0=e=>{Tr(e,"Mul",(s,t)=>`${s}*${t}`)},z0=e=>{let s=$e("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Tr(e,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${s}, b : ${s}) -> ${s} {
      if (b == ${s}(0.0)) {
        return ${s}(1.0);
      } else if (a < ${s}(0.0) && f32(b) != floor(f32(b))) {
        return ${s}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${s}(1.0), round(f32(abs(b) % ${s}(2.0))) != 1.0) * ${s}(${s==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${s}>, b : vec4<${s}>) -> vec4<${s}> {
      // TODO: implement vectorized pow
      return vec4<${s}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},B0=e=>{Tr(e,"Sub",(s,t)=>`${s}-${t}`)},R0=e=>{Tr(e,"Greater",{scalar:(s,t)=>`u32(${s}>${t})`,vector:(s,t)=>`vec4<u32>(${s}>${t})`},void 0,void 0,9)},j0=e=>{Tr(e,"Less",{scalar:(s,t)=>`u32(${s}<${t})`,vector:(s,t)=>`vec4<u32>(${s}<${t})`},void 0,void 0,9)},N0=e=>{Tr(e,"GreaterOrEqual",{scalar:(s,t)=>`u32(${s}>=${t})`,vector:(s,t)=>`vec4<u32>(${s}>=${t})`},void 0,void 0,9)},U0=e=>{Tr(e,"LessOrEqual",{scalar:(s,t)=>`u32(${s}<=${t})`,vector:(s,t)=>`vec4<u32>(${s}<=${t})`},void 0,void 0,9)}}),hg,mg,fg,_g,V0,W0,gT=Ne(()=>{gt(),Et(),ds(),Ct(),hg=(e,s)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,r=e[t],o=r.dataType,n=r.dims.length;e.forEach((i,a)=>{if(a!==t){if(i.dataType!==o)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape");i.dims.forEach((l,c)=>{if(c!==s&&l!==r.dims[c])throw new Error("non concat dimensions must match")})}})},mg=(e,s)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${s});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,fg=(e,s)=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=s.setByOffset("global_idx",e[o].getByIndices("indices"));t===1?r.push(n):o===0?r.push(`if (inputIndex == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (inputIndex == ${o}) { ${n} }`)}return r.join(`
`)},_g=(e,s,t,r)=>{let o=be.size(t),n=new Array(e.length),i=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:o}];for(let y=0;y<e.length;++y)a+=e[y].dims[s],n[y]=a,c.push(e[y].dims.length),i[y]=$e(`input${y}`,r,c[y]),l.push("rank"),p.push({type:12,data:n[y]});for(let y=0;y<e.length;++y)p.push(...dt(e[y].dims));p.push(...dt(t));let u=nt("output",r,t.length),d=u.indicesGet("indices",s),_=Array.from(Array(n.length).keys()).map(y=>`uniforms.sizeInConcatAxis${y}`).join(","),f=y=>`

  ${(()=>{y.registerUniform("outputSize","u32");for(let $=0;$<e.length;$++)y.registerUniform(`sizeInConcatAxis${$}`,"u32");return y.declareVariables(...i,u)})()}

  ${mg(n.length,_)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${u.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${d});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${_});
      ${d} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${fg(i,u)}
  }`;return{name:"Concat",shaderCache:{hint:`${s}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}),getShaderSource:f}},V0=(e,s)=>{let t=e.inputs,r=t[0].dims,o=be.normalizeAxis(s.axis,r.length);hg(t,o);let n=r.slice();n[o]=t.reduce((a,l)=>a+(l.dims.length>o?l.dims[o]:0),0);let i=t.filter(a=>be.size(a.dims)>0);e.compute(_g(i,o,n,t[0].dataType),{inputs:i})},W0=e=>Wt({axis:e.axis})}),Bn,Rn,jn,ku,Un=Ne(()=>{gt(),Et(),Bn=(e,s,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${s}(0.0));`;case"Sigmoid":return`value = (${s}(1.0) / (${s}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${s}(${t}(uniforms.clip_min)), ${s}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${s}(0.0), min(${s}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${s}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Rn=(e,s)=>{e.activation==="Clip"?s.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?s.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&s.push({type:1,data:e.alpha})},jn=(e,s)=>{e.activation==="Clip"?s.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?s.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&s.push({name:"alpha",type:"f32"})},ku=e=>{let s=(e==null?void 0:e.activation)||"";if(s==="HardSigmoid"){let[t,r]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:s,alpha:t,beta:r}}else if(s==="Clip"){let[t,r]=(e==null?void 0:e.activation_params)||[_b,gb];return{activation:s,clipMax:r,clipMin:t}}else if(s==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:s,alpha:t}}return{activation:s}}}),Ls,G0,Iu=Ne(()=>{Ls=(e,s)=>{switch(e){case 1:return s;case 2:return`vec2<${s}>`;case 3:return`vec3<${s}>`;case 4:return`vec4<${s}>`;default:throw new Error(`${e}-component is not supported.`)}},G0=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),K0,wT=Ne(()=>{K0=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),ni,Au,Ou=Ne(()=>{gt(),Et(),Ct(),Un(),ni=(e,s,t,r,o)=>{let n=r-t;return`
      ${Array.from({length:t}).map((i,a)=>`
      if (${lt(s.shape,a,s.rank)} != 1) {
        ${s.indicesSet(e,a,lt(o,a+n,r))}
      } else {
        ${s.indicesSet(e,a,0)}
      }`).join("")}
`},Au=(e,s,t,r,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],c=a[a.length-1],p=i[i.length-1],u=as(c),d=as(p),_=as(l),f=be.size(t)/u/_,y=e.length>2,$=r?r.slice(0,-2):t.slice(0,-2),w=[be.size($),l,c],g=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:p}];Rn(s,g),g.push(...dt($,i,a)),y&&g.push(...dt(e[2].dims)),g.push(...dt(w));let C=T=>{let v=Pu("batch_dims",e[0].dataType,$.length),b=$e("a",e[0].dataType,i.length,d),x=$e("b",e[1].dataType,a.length,u),P=nt("output",e[0].dataType,w.length,u),A=As(P.type.tensor),D=Bn(s,P.type.value,A),H=[b,x],K="";if(y){let q=o?u:1;H.push($e("bias",e[2].dataType,e[2].dims.length,q)),K=`${o?`value += bias[col / ${q}];`:`value += ${P.type.value}(bias[row + i]);`}`}let B=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];jn(s,B);let Y=()=>{let q=`var a_data: ${b.type.value};`;for(let Q=0;Q<d;Q++)q+=`
              let b_data${Q} = b[(b_offset + (k + ${Q}) * uniforms.N + col) / ${u}];`;for(let Q=0;Q<_;Q++){q+=`a_data = a[(a_offset + (row + ${Q}) * uniforms.K + k) / ${d}];`;for(let X=0;X<d;X++)q+=`
            values[${Q}] = fma(${x.type.value}(a_data${d===1?"":`[${X}]`}), b_data${X}, values[${Q}]);
`}return q};return`
  ${T.registerUniforms(B).registerInternalVariables(v).declareVariables(...H,P)}
  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${u})) * ${u};
    var index1 = global_idx / (uniforms.N / ${u});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${v.offsetToIndices("batch")};`}

    var a_indices: ${b.type.indices};
    ${ni("a_indices",b,b.rank-2,v.rank,"batch_indices")}
    ${b.indicesSet("a_indices",b.rank-2,0)}
    ${b.indicesSet("a_indices",b.rank-1,0)}
    let a_offset = ${b.indicesToOffset("a_indices")};

    var b_indices: ${x.type.indices};
    ${ni("b_indices",x,x.rank-2,v.rank,"batch_indices")}
    ${x.indicesSet("b_indices",x.rank-2,0)}
    ${x.indicesSet("b_indices",x.rank-1,0)}
    let b_offset = ${x.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${d}) {
      ${Y()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${K}
      ${D}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${u}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${s.activation};${u};${d};${_};${o}`,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:C}}}),gg,wg,ru,pc,yg,nu,bg,xa,Fu=Ne(()=>{gt(),Et(),Ct(),Un(),Ou(),Iu(),gg=(e,s)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${s?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${s?", batchIndices":""});
        `,wg=(e,s)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${s===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${s===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${s===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ru=(e,s,t="f32",r,o=!1,n=32,i=!1,a=32)=>{let l=s[1]*e[1],c=s[0]*e[0],p=o?l:n,u=o?n:l,d=p/s[0],_=n/s[1];if(!((o&&d===4&&e[1]===4||!o&&(d===3||d===4))&&p%s[0]===0&&n%s[1]===0&&e[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${d} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${s[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${s[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${d}<${t}>, ${p/d}>, ${u}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${d};
const tileInner = ${n};

@compute @workgroup_size(${s[0]}, ${s[1]}, ${s[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${gg(o,r)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${d===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${wg(o,d)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},pc=(e,s)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${s?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${s?", batchIndices":""});
            `,yg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",nu=(e,s,t="f32",r,o=!1,n=32,i=!1,a=32,l=!1)=>{let c=e[1]*s[1],p=e[0]*s[0],u=o?c:n,d=o?n:c;if(!(d%s[1]===0&&u%s[0]===0&&n%s[1]===0))throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${s[1]}, tileAWidth ${u} must be divisible by workgroupSize[0]${s[0]}, tileInner ${n} must be divisible by workgroupSize[1]${s[1]}`);let _=d/s[1],f=u/s[0],y=n/s[1],$=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${s[1]}) {
        for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${s[0]}) {
          ${pc(o,r)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${s[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${s[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${r?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${s[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${s[1]}];`:`mm_Asub[localRow + innerRow * ${s[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${s[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${s[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${y};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${pc(o,r)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${r?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${yg(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${u}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${s[0]}, ${s[1]}, ${s[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${$}
  }
`},bg=(e,s,t,r,o=!1)=>{let[n,i,a,l]=r,c=As(r[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Ls(e,c)} {
      var value = ${Ls(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${ni("aIndices",i,i.rank-2,n.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Ls(e,c)} {
      var value = ${Ls(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${ni("bIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ls(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${s?`value = value + ${o?"bias[colIn]":`${Ls(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},xa=(e,s,t,r,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),c=a.slice(0,-2),p=r?r.slice(0,-2):t.slice(0,-2),u=be.size(p),d=i[i.length-2],_=i[i.length-1],f=a[a.length-1],y=_%4===0&&f%4===0,$=d<=8?[4,1,1]:[4,4,1],w=[8,8,1],g=[Math.ceil(f/w[0]/$[0]),Math.ceil(d/w[1]/$[1]),Math.ceil(u/w[2]/$[2])],C=y?4:1,T=[...l,d,_/C],v=T.length,b=[...c,_,f/C],x=b.length,P=[u,d,f/C],A=[{type:6,data:d},{type:6,data:f},{type:6,data:_}];Rn(s,A),A.push(...dt(p,T,b));let D=["rank","rank"],H=e.length>2;H&&(A.push(...dt(e[2].dims)),D.push("rank")),A.push(...dt(P));let K=B=>{let Y=p.length,q=Pu("batchDims",e[0].dataType,Y,1),Q=As(e[0].dataType),X=$e("a",e[0].dataType,v,C),se=$e("b",e[1].dataType,x,C),me=nt("result",e[0].dataType,P.length,C),le=[X,se];if(H){let fe=o?C:1;le.push($e("bias",e[2].dataType,e[2].dims.length,fe))}let R=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];jn(s,R);let O=As(me.type.tensor),N=Bn(s,me.type.value,O),Z=bg(C,H,N,[q,X,se,me],o);return`
  ${B.registerUniforms(R).registerInternalVariables(q).declareVariables(...le,me)}
  ${Z}
  ${y?ru($,w,Q,q):nu($,w,Q,q)}
                   `};return{name:"MatMul",shaderCache:{hint:`${$};${s.activation};${y};${o}`,inputDependencies:D},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:g[0],y:g[1],z:g[2]},programUniforms:A}),getShaderSource:K}}}),Mg,H0,yT=Ne(()=>{gt(),Vr(),Ct(),Un(),Iu(),wT(),Fu(),Mg=(e,s,t,r,o=!1,n,i=4,a=4,l=4,c="f32")=>{let p=A=>{switch(A){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${A} is not supported.`)}},u=A=>{switch(A){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",y=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",$=e?"row":"col",w=e?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${$} / outWidth;
    let outCol = ${$} % outWidth;

    let WRow = ${w} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${w} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${w} % inChannels;
    var resData = ${Ls(i,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${y}) {
      ${d}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(i)}
    }
    return resData;`,C=e?s&&r?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${Ls(i,c)}(0.0);`:r&&t?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${Ls(i,c)}(0.0);`,T=e?r&&t?u(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${u(a)}
    }
    return ${Ls(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${u(a)}
    }
    return ${Ls(a,c)}(0.0);`,v=Ls(l,c),b=Ls(e?i:a,c),x=Ls(e?a:i,c),P=Bn(n,v,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {
      ${e?C:T}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${e?T:C}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${G0(o)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},H0=(e,s,t,r,o,n,i,a,l)=>{let c=s.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],u=t[0],d=c?t[2]:t[3],_=c?t[1]:t[2],f=c?t[3]:t[1],y=c&&(p%4===0||p%3===0)&&f%4===0,$=c?f:d*_,w=c?d*_:f,g=[8,8,1],C=r<=8?[4,1,1]:[4,4,1],T=[Math.ceil($/g[0]/C[0]),Math.ceil(w/g[1]/C[1]),Math.ceil(u/g[2]/C[2])];Ot("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${T}`);let v=y?c&&p%4!==0?3:4:1,b=g[1]*C[1],x=g[0]*C[0],P=Math.max(g[0]*v,g[1]),A=r%b===0,D=o%x===0,H=n%P===0,K=y?[v,4,4]:[1,1,1],B=[{type:6,data:r},{type:6,data:o},{type:6,data:n},{type:6,data:[s.pads[0],s.pads[1]]},{type:6,data:s.strides},{type:6,data:s.dilations}];Rn(s,B),B.push(...dt(e[0].dims,e[1].dims));let Y=["rank","rank"];i&&(B.push(...dt(e[2].dims)),Y.push("rank")),B.push(...dt(t));let q=Q=>{let X=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];jn(s,X);let se=y?4:1,me=As(e[0].dataType),le=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${me}>`:me}) {
        result[flatIndex] = ${y?`vec4<${me}>`:me}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${me}>`:me}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`,R=$e("x",e[0].dataType,e[0].dims.length,v===3?1:v),O=$e("w",e[1].dataType,e[1].dims.length,se),N=[R,O],Z=nt("result",e[0].dataType,t.length,se);if(i){let fe=$e("bias",e[2].dataType,e[2].dims.length,se);N.push(fe),le+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${me}>`:me} {
          return bias[coords.${c?"w":"y"}${y?"/ 4":""}];
        }`}return`
        ${K0("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Q.registerUniforms(X).declareVariables(...N,Z)}
        ${le}
        ${Mg(c,A,D,H,i,s,K[0],K[1],K[2],me)}
        ${y?ru(C,g,me,void 0,!c,P):nu(C,g,me,void 0,!c,P,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${s.cacheKey};${v};${y};${A};${D};${H};${b};${x};${P}`,inputDependencies:Y},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:B}),getShaderSource:q}}}),vg,hc,Ko,xg,mc,Tg,q0,Q0,bT=Ne(()=>{gt(),Vr(),Et(),Ct(),Un(),Iu(),vg=e=>{let s=1;for(let t=0;t<e.length;t++)s*=e[t];return s},hc=e=>typeof e=="number"?[e,e,e]:e,Ko=(e,s)=>s<=1?e:e+(e-1)*(s-1),xg=(e,s,t,r=1)=>{let o=Ko(s,r);return Math.floor((e[0]*(t-1)-t+o)/2)},mc=(e,s,t,r,o)=>{o==null&&(o=xg(e,s[0],r[0]));let n=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*o>=s[i]&&(n[i]=Math.trunc((e[i]-s[i]+2*o)/r[i]+1));return n},Tg=(e,s,t,r,o,n,i,a,l,c)=>{let p,u,d,_;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=mc([s,t,r,1],[a,l,c],1,[o,n,i],e);u=f[0],d=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((y,$,w)=>y===w[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=mc([s,t,r,1],[a,l,c],1,[o,n,i],e[0]);u=f[0],d=f[1],_=f[2]}else if(e==="SAME_UPPER"){u=Math.ceil(s/o),d=Math.ceil(t/n),_=Math.ceil(r/i);let f=(u-1)*o+a-s,y=(d-1)*n+l-t,$=(_-1)*i+c-r,w=Math.floor(f/2),g=f-w,C=Math.floor(y/2),T=y-C,v=Math.floor($/2),b=$-v;p={top:C,bottom:T,left:v,right:b,front:w,back:g}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:u,outHeight:d,outWidth:_}},q0=(e,s,t,r,o,n=!1,i="channelsLast")=>{let a,l,c,p,u;if(i==="channelsLast")[a,l,c,p,u]=e;else if(i==="channelsFirst")[a,u,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,,_,f,y]=s,[$,w,g]=hc(t),[C,T,v]=hc(r),b=Ko(_,C),x=Ko(f,T),P=Ko(y,v),{padInfo:A,outDepth:D,outHeight:H,outWidth:K}=Tg(o,l,c,p,$,w,g,b,x,P),B=n?d*u:d,Y=[0,0,0,0,0];return i==="channelsFirst"?Y=[a,B,D,H,K]:i==="channelsLast"&&(Y=[a,D,H,K,B]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:u,outDepth:D,outHeight:H,outWidth:K,outChannels:B,padInfo:A,strideDepth:$,strideHeight:w,strideWidth:g,filterDepth:_,filterHeight:f,filterWidth:y,effectiveFilterDepth:b,effectiveFilterHeight:x,effectiveFilterWidth:P,dilationDepth:C,dilationHeight:T,dilationWidth:v,inShape:e,outShape:Y,filterShape:s}},Q0=(e,s,t,r,o,n)=>{let i=n==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map(($,w)=>w)},c=[Math.ceil(vg(l.x.map($=>t[$]))/a[0]),1,1];Ot("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,u=be.size(t),d=[{type:12,data:u},{type:12,data:r},{type:12,data:o},{type:12,data:s.strides},{type:12,data:s.dilations}];Rn(s,d),d.push(...dt(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(d.push(...dt(e[2].dims)),_.push("rank")),d.push(...dt(t));let y=$=>{let w=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:o.length},{name:"strides",type:"u32",length:s.strides.length},{name:"dilations",type:"u32",length:s.dilations.length}];jn(s,w);let g=1,C=As(e[0].dataType),T=$e("x",e[0].dataType,e[0].dims.length,p),v=$e("W",e[1].dataType,e[1].dims.length,g),b=[T,v],x=nt("result",e[0].dataType,t.length,g),P="";if(f){let H=$e("bias",e[2].dataType,e[2].dims.length,g);b.push(H),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${C} {
          return bias[${i?lt("coords",4,5):lt("coords",1,5)}];
        }`}let A=Ls(p,C),D=Bn(s,A,C);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${T.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
          ${$.registerUniforms(w).declareVariables(...b,x)}
          ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${x.offsetToIndices("global_idx")};
              let batch = ${lt("coords",0,T.rank)};
              let d2 = ${i?lt("coords",T.rank-1,T.rank):lt("coords",1,T.rank)};
              let xFRCCorner = vec3<u32>(${i?lt("coords",1,T.rank):lt("coords",2,T.rank)},
              ${i?lt("coords",2,T.rank):lt("coords",3,T.rank)},
              ${i?lt("coords",3,T.rank):lt("coords",4,T.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?lt("uniforms.x_shape",1,T.rank):lt("uniforms.x_shape",2,T.rank)};
              let xShapeZ = ${i?lt("uniforms.x_shape",2,T.rank):lt("uniforms.x_shape",3,T.rank)};
              let xShapeW = ${i?lt("uniforms.x_shape",3,T.rank):lt("uniforms.x_shape",4,T.rank)};
              let xShapeU = ${i?lt("uniforms.x_shape",4,T.rank):lt("uniforms.x_shape",1,T.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${D}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${s.cacheKey};${i};${p};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:d}),getShaderSource:y}}}),X0,J0,MT=Ne(()=>{gt(),Et(),Ct(),Un(),X0=(e,s,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l=s.format==="NHWC",c=l?t[3]:t[1],p=c/s.group,u=l&&p>=4?as(c):1,d=be.size(t)/u,_=[{type:12,data:d},{type:12,data:s.dilations},{type:12,data:[s.strides[0],s.strides[1]]},{type:12,data:[s.pads[0],s.pads[1]]},{type:12,data:p}];Rn(s,_),_.push(...dt(i,[a[0],a[1],a[2],a[3]/u]));let f=o?["rank","rank","rank"]:["rank","rank"];_.push(...dt([t[0],t[1],t[2],t[3]/u]));let y=$=>{let w=nt("output",e[0].dataType,t.length,u),g=As(w.type.tensor),C=Bn(s,w.type.value,g),T=$e("x",e[0].dataType,i.length),v=$e("w",e[1].dataType,a.length,u),b=[T,v];o&&b.push($e("b",e[2].dataType,e[2].dims,u));let x=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:s.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];jn(s,x);let P=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${T.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${v.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${T.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${v.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${$.registerUniforms(x).declareVariables(...b,w)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${u} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${w.type.value} = ${w.type.value}(0);
    ${P}
    ${n}
    ${C}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${s.cacheKey}_${u}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:r?r(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}),getShaderSource:y}},J0=(e,s,t,r)=>{let o=e.length>2,n=as(t[3]),i=as(t[2]),a=be.size(t)/n/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],u=[{type:12,data:a},{type:6,data:[s.strides[0],s.strides[1]]},{type:6,data:[s.pads[0],s.pads[1]]}];Rn(s,u),u.push(...dt(l,c,p));let d=(i-1)*s.strides[1]+c[1],_=f=>{let y=nt("output",e[0].dataType,p.length,n),$=As(y.type.tensor),w=Bn(s,y.type.value,$),g=$e("x",e[0].dataType,l.length,n),C=$e("w",e[1].dataType,c.length,n),T=[g,C];o&&T.push($e("b",e[2].dataType,e[2].dims,n));let v=o?"value += b[output_channel];":"",b=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return jn(s,b),`
  ${f.registerUniforms(b).declareVariables(...T,y)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${g.type.value}, ${d}>;
    var values: array<${y.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${d}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${g.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${g.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${C.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${v}
      ${w}
      ${y.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${s.cacheKey};${n};${i};${d};${c[0]};${c[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:u}),getShaderSource:_}}}),Eg,ca,Pg,ua,ou,fc,Cg,Sg,iu,vT=Ne(()=>{Et(),yT(),bT(),Fu(),MT(),Un(),Ou(),an(),Eg=(e,s,t,r,o,n)=>{let i=e[0],a=e.slice(n?1:2,n?3:4),l=a.length,c=s[0],p=s.slice(2).map((d,_)=>d+(d-1)*(t[_]-1)),u=a.map((d,_)=>d+r[_]+r[_+l]).map((d,_)=>Math.floor((d-p[_]+o[_])/o[_]));return u.splice(0,0,i),u.splice(n?3:1,0,c),u},ca=[2,3,1,0],Pg=(e,s)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[s.format==="NHWC"?e[0].dims.length-1:1],r=e[1].dims[1]*s.group;if(t!==r)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let o=e[0].dims.length-2;if(s.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(s.strides.length!==o)throw new Error(`strides should be ${o}D`);if(s.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(s.kernelShape.length!==0&&s.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ua=(e,s)=>{let t=e.kernelShape.slice();t.length<s[1].dims.length-2&&t.push(...Array(s[1].dims.length-2-t.length).fill(0));for(let n=2;n<s[1].dims.length;++n)t[n-2]===0&&(t[n-2]=s[1].dims[n]);let r=e.pads.slice();Ma.adjustPadsBasedOnAutoPad(s[0].dims,e.strides,e.dilations,t,r,e.format==="NHWC",e.autoPad);let o=Object.assign({},e);return Object.assign(o,{kernelShape:t,pads:r}),o},ou=e=>{let s=ku(e),t=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],o=e.dilations,n=e.group,i=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:r,format:t,dilations:o,group:n,kernelShape:i,pads:a,strides:l,wIsConst:c,...s,cacheKey:`${e.format};${s.activation};`}},fc=(e,s,t,r)=>{let o=t.format==="NHWC",n=Eg(s[0].dims,s[1].dims,t.dilations,t.pads,t.strides,o);if(t.group!==1){let b=[s[0]];if(o){let x=e.kernelCustomData.wT??e.compute(tr(s[1],ca),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x),b.push(x)}else b.push(s[1]);s.length===3&&b.push(s[2]),!e.adapterInfo.isArchitecture("ampere")&&o&&s[1].dims[0]===t.group&&s[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(J0(b,t,n,r),{inputs:b}):e.compute(X0(b,t,n,r),{inputs:b});return}let i=s.length===3,a=s[0].dims[o?1:2],l=s[0].dims[o?2:3],c=s[0].dims[o?3:1],p=s[1].dims[2],u=s[1].dims[3],d=n[o?1:2],_=n[o?2:3],f=n[o?3:1],y=o&&p===a&&u===l&&t.pads[0]===0&&t.pads[1]===0;if(y||p===1&&u===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let b=n[0],x,P,A,D=[];if(o){let B=e.kernelCustomData.wT??e.compute(tr(s[1],ca),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B),y){let Y=a*l*c;x=s[0].reshape([1,b,Y]),P=B.reshape([1,Y,f]),A=[1,b,f]}else x=s[0].reshape([b,a*l,c]),P=B.reshape([1,c,f]),A=[b,d*_,f];D.push(x),D.push(P)}else x=s[0].reshape([b,c,a*l]),P=s[1].reshape([1,f,c]),A=[b,f,d*_],D.push(P),D.push(x);i&&D.push(s[2]);let H=A[2],K=D[0].dims[D[0].dims.length-1];H<8&&K<8?e.compute(Au(D,t,n,A,o,r),{inputs:D}):e.compute(xa(D,t,n,A,o,r),{inputs:D});return}let $=!0,w=e.kernelCustomData.wT??e.compute(tr(s[1],ca),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=w);let g=[s[0],w];i&&g.push(s[2]);let C=o?d*_:f,T=o?f:d*_,v=p*u*c;e.compute(H0(g,t,n,C,T,v,i,$,r),{inputs:g})},Cg=(e,s)=>{let t=s.format==="NHWC",r=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&r.push(e.inputs[2]);let o=[0,s.pads[0],0,s.pads[1]],n=[1].concat(s.strides),i=[1].concat(s.dilations),a=[1].concat(s.kernelShape),l=ua({...s,pads:o,strides:n,dilations:i,kernelShape:a},r);fc(e,r,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},Sg=(e,s,t)=>{let r=t.format==="NHWC"?"channelsLast":"channelsFirst",o=ua(t,s),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=q0(s[0].dims,s[1].dims,t.strides,t.dilations,n,!1,r);e.compute(Q0(s,o,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],r))},iu=(e,s)=>{if(Pg(e.inputs,s),e.inputs[0].dims.length===3)Cg(e,s);else if(e.inputs[0].dims.length===5)Sg(e,e.inputs,s);else{let t=ua(s,e.inputs);fc(e,e.inputs,t)}}}),Y0,xT=Ne(()=>{gt(),Vr(),Et(),Ct(),Y0=(e,s,t)=>{let r=e.length>2,o=s.outputShape,n=s.format==="NHWC",i=s.group,a=e[1].dims,l=a[2]/i,c=a[3],p=n?as(l):1,u=n&&c===1&&l>=4,d=u?Math.floor(l/4)*4:Math.floor(l/p)*p,_=l-d,f=n?as(c):1,y=n?c===1?p:f:1,$=be.size(o)/f,w=[Math.ceil($/64),1,1];Ot("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${w}`);let g=["rank","rank"],C=[s.strides[0],s.strides[1]],T=[s.kernelShape[n?1:2],s.kernelShape[n?2:3]],v=[s.dilations[0],s.dilations[1]],b=[T[0]+(s.dilations[0]<=1?0:(s.kernelShape[n?1:2]-1)*(s.dilations[0]-1)),T[1]+(s.dilations[1]<=1?0:(s.kernelShape[n?2:3]-1)*(s.dilations[1]-1))],x=[b[0]-1-Math.floor((s.pads[0]+s.pads[2])/2),b[1]-1-Math.floor((s.pads[1]+s.pads[3])/2)],P=[{type:12,data:$},{type:12,data:C},{type:12,data:T},{type:12,data:v},{type:12,data:b},{type:6,data:x},{type:12,data:d},{type:12,data:l},{type:12,data:c},...dt(e[0].dims,e[1].dims)];r&&(P.push(...dt(e[2].dims)),g.push("rank")),P.push(...dt(o));let A=D=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:T.length},{name:"dilations",type:"u32",length:T.length},{name:"effective_filter_dims",type:"u32",length:b.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=As(e[0].dataType),B=n?1:2,Y=n?2:3,q=n?3:1,Q=$e("W",e[1].dataType,e[1].dims.length,y),X=$e("Dy",e[0].dataType,e[0].dims.length,p),se=[X,Q];r&&se.push($e("bias",e[2].dataType,[o[q]].length,f));let me=nt("result",e[0].dataType,o.length,f),le=()=>{let N="";if(u)p===4?N+=`
        let xValue = ${X.getByOffset("x_offset")};
        let wValue = ${Q.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?N+=`
          dotProd = dotProd + dot(vec4<${K}>(${X.getByOffset("x_offset")}, ${X.getByOffset("x_offset + 1u")}), vec4<${K}>(${Q.getByOffset("w_offset")}, ${Q.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(N+=`
          dotProd = dotProd + dot(vec4<${K}>(${X.getByOffset("x_offset")}, ${X.getByOffset("x_offset + 1u")}, ${X.getByOffset("x_offset + 2u")}, ${X.getByOffset("x_offset + 3u")}), vec4<${K}>(${Q.getByOffset("w_offset")}, ${Q.getByOffset("w_offset + 1u")}, ${Q.getByOffset("w_offset + 2u")}, ${Q.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(N+=`
                  let xValue = ${n?X.getByOffset(`${X.indicesToOffset(`${X.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):X.get("batch","inputChannel","idyR","idyC")};
        `,p===1)N+=`
          let w_offset = ${Q.indicesToOffset(`${Q.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${Q.getByOffset(`w_offset / ${y}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let Z=0;Z<p;Z++)N+=`
            let wValue${Z} = ${Q.getByOffset(`${Q.indicesToOffset(`${Q.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${Z}, wOutChannel)`)} / ${y}`)};
            dotProd = dotProd + xValue[${Z}] * wValue${Z};`;return N},R=()=>{if(_===0)return"";if(!u)throw new Error(`packInputAs4 ${u} is not true.`);let N="";if(p===1){N+="dotProd = dotProd";for(let Z=0;Z<_;Z++)N+=`
            + ${X.getByOffset(`x_offset + ${Z}`)} * ${Q.getByOffset(`w_offset + ${Z}`)}`;N+=";"}else if(p===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);N+=`
          let xValue = ${X.getByOffset("x_offset")};
          let wValue = ${Q.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return N},O=`
            let outputIndices = ${me.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${me.indicesGet("outputIndices",0)};
            let d1 = ${me.indicesGet("outputIndices",q)};
            let r = ${me.indicesGet("outputIndices",B)};
            let c = ${me.indicesGet("outputIndices",Y)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${me.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${K}(dyRCorner) + ${K}(wR)) / ${K}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${K}(uniforms.Dy_shape[${B}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${K}(dyCCorner) + ${K}(wC)) / ${K}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${K}(uniforms.Dy_shape[${Y}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${u?`
                var x_offset = ${X.indicesToOffset(`${X.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${Q.indicesToOffset(`${Q.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${y};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${u?4:p}) {
                  ${le()}
                  inputChannel = inputChannel + ${u?4:p};
                }
                ${R()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${r?` + bias[d1 / ${f}]`:""};
            ${me.setByOffset("global_idx","value")};
          `;return`
    ${D.registerUniforms(H).declareVariables(...se,me)}
      ${D.mainStart()}
      ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${O}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${s.cacheKey};${p}${y}${f}${u}${_}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:w[0],y:w[1],z:w[2]},outputs:[{dims:t?t(o):o,dataType:e[0].dataType}],programUniforms:P}),getShaderSource:A}}}),$g,kg,Ig,_c,Z0,Ag,gc,Og,eM,TT=Ne(()=>{xT(),Un(),an(),$g=(e,s,t,r,o,n)=>(e-1)*s+t+(r-1)*o+1-n,kg=(e,s,t,r,o)=>{let n=Math.floor(e/2);s==="SAME_UPPER"?(t[r]=n,t[o]=e-n):s==="SAME_LOWER"&&(t[r]=e-n,t[o]=n)},Ig=(e,s,t,r,o,n,i,a,l,c)=>{let p=e.length-2,u=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let d=e[0],_=s[a?3:1]*o;for(let f=0,y=e.length-p-(a?1:0);f<p;++f,++y){let $=e[y],w=u?$*i[f]:c[f],g=$g($,i[f],n[f],s[y],t[f],w);kg(g,r,n,f,f+p),u&&c.push(i[f]*($-1)+l[f]+(s[y]-1)*t[f]+1-n[f]-n[f+p])}c.splice(0,0,d),c.splice(a?3:1,0,_)},_c=(e,s)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((u,d)=>u*d,1)===0){t.length=0;for(let u=2;u<s[1].dims.length;++u)t.push(s[1].dims[u])}let r=e.format==="NHWC";t.splice(0,0,s[1].dims[0]),t.splice(r?3:1,0,s[1].dims[1]);let o=e.pads.slice(),n=e.outputShape.slice(),i=e.outputPadding.slice(),a=s[0].dims,l=e.dilations.slice();if(l.reduce((u,d)=>u+d,0)===0){let u=s[0].dims.length-2;l=new Array(u).fill(1)}let c=e.strides.slice();if(c.reduce((u,d)=>u+d,0)===0){let u=s[0].dims.length-2;c=new Array(u).fill(1)}Ig(a,t,l,e.autoPad,e.group,o,c,r,i,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:o,outputPadding:i,outputShape:n,dilations:l,strides:c}),p},Z0=e=>{let s=ku(e),t=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],o=e.dilations,n=e.group,i=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,u=e.outputShape;return{autoPad:r,format:t,dilations:o,group:n,kernelShape:i,outputPadding:p,outputShape:u,pads:a,strides:l,wIsConst:c,...s,cacheKey:`${e.format};${s.activation};`}},Ag=(e,s)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[s.format==="NHWC"?e[0].dims.length-1:1],r=e[1].dims[0];if(t!==r)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=e[1].dims[1]*s.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==o))throw new Error("invalid bias");let n=e[0].dims.length-2;if(s.dilations.reduce((i,a)=>i+a,0)>0&&s.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(s.strides.reduce((i,a)=>i+a,0)>0&&s.strides.length!==n)throw new Error(`strides should be ${n}D`);if(s.pads.reduce((i,a)=>i+a,0)>0&&s.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(s.outputPadding.length!==n&&s.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(s.kernelShape.reduce((i,a)=>i+a,0)>0&&s.kernelShape.length!==0&&s.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(s.outputShape.length!==0&&s.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},gc=(e,s,t,r)=>{let o=e.kernelCustomData.wT??e.compute(tr(s[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=o);let n=[s[0],o];s.length===3&&n.push(s[2]),e.compute(Y0(n,t,r),{inputs:n})},Og=(e,s)=>{let t=s.format==="NHWC",r=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&r.push(e.inputs[2]);let o=s.kernelShape;(o.length===0||o[0]===0)&&(o=[e.inputs[1].dims[2]]);let n=s.dilations;(n.length===0||n[0]===0)&&(n=[1]);let i=s.strides;(i.length===0||i[0]===0)&&(i=[1]);let a=s.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),n=[1].concat(n),o=[1].concat(o);let l=s.outputPadding;l=[0].concat(l);let c=_c({...s,pads:a,strides:i,dilations:n,kernelShape:o,outputPadding:l},r);gc(e,r,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},eM=(e,s)=>{if(Ag(e.inputs,s),e.inputs[0].dims.length===3)Og(e,s);else{let t=_c(s,e.inputs);gc(e,e.inputs,t)}}}),Fg,tM,sM,ET=Ne(()=>{gt(),Et(),ds(),Ct(),Fg=(e,s,t,r)=>{let o=be.size(s),n=s.length,i=$e("input",e,n),a=nt("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=be.normalizeAxis(l,n),p=u=>{let d=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,_=lt("uniforms.input_shape","uniforms.axis",n),f=r.reverse?d+(r.exclusive?" + 1":""):"0",y=r.reverse?_:d+(r.exclusive?"":" + 1");return`
                ${u.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}
                ${u.mainStart()}
                  ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${y};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:12,data:c},...dt(s,s)]}),getShaderSource:p}},tM=(e,s)=>{let t=e.inputs[0].dims,r=e.inputs[0].dataType,o=e.inputs[1];e.compute(Fg(r,t,o,s),{inputs:[0]})},sM=e=>{let s=e.exclusive===1,t=e.reverse===1;return Wt({exclusive:s,reverse:t})}}),Dg,Lg,zg,rM,nM,PT=Ne(()=>{gt(),Et(),ds(),Ct(),Dg=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Lg=(e,s,t,r)=>{let o=[];o.push(`fn perm(i: ${r.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<s;++n)o.push(t.indicesSet("a",e[n],`i[${n}]`));return o.push("return a;}"),o.join(`
`)},zg=(e,s)=>{let t,r,o,n,i,a,l=s.format==="NHWC",c=s.blocksize,p=s.mode==="DCR";l?([t,r,o,n]=e.dims,i=p?[t,r,o,c,c,n/c**2]:[t,r,o,n/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,r,o,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=p?[t,c,c,n/c**2,r,o]:[t,n/c**2,c,c,r,o],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let u=e.reshape(i),d=u.dims.length,_=e.dataType,f=$e("a",_,d),y=nt("output",_,d),$=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(f,y)}

  ${Lg(a,d,f,y)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${y.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${y.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${s.blocksize};${s.mode}`,inputDependencies:["rank"]},getRunData:w=>{let g=l?[t,r*c,o*c,n/c**2]:[t,n/c**2,r*c,o*c],C=be.size(g),T=u.dims,v=be.sortBasedOnPerm(T,a);return{outputs:[{dims:g,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...dt(T,v)]}},getShaderSource:$}},rM=(e,s)=>{Dg(e.inputs),e.compute(zg(e.inputs[0],s))},nM=e=>Wt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),da,Ho,wc,Bg,Rg,jg,Ng,yc,Ug,oM,iM,CT=Ne(()=>{gt(),Et(),ds(),Ct(),da="[a-zA-Z]|\\.\\.\\.",Ho="("+da+")+",wc="^"+Ho+"$",Bg="("+Ho+",)*"+Ho,Rg="^"+Bg+"$",jg=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,s){let t=this.symbolToIndices.get(e);t===void 0?t=[s]:t.push(s),this.symbolToIndices.set(e,t)}},Ng=class{constructor(e,s){var o;this.equation=s,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,r]=s.includes("->")?s.split("->",2):[s,""];if(!t.match(RegExp(Rg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let a=e[i].dims.slice();if(!n.match(RegExp(wc)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,a,i);this.lhs.push(l)}),r==="")r+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!r.match(RegExp(Ho)))throw new Error("Invalid RHS");(o=r.match(RegExp(da,"g")))==null||o.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,s,t){let r=this.symbolToInfo.get(e);if(r!==void 0){if(r.dimValue!==s&&r.count!==1)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(t)}else r={count:1,dimValue:s,inputIndices:[t]};this.symbolToInfo.set(e,r)}processTerm(e,s,t,r=-1){let o=t.length,n=!1,i=[],a=0;if(!e.match(RegExp(wc))&&!s&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(da,"g")),c=new jg(r);return l==null||l.forEach((p,u)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let d=o-l.length+1;if(d<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(a,a+d),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(s)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<i.length;_++){let f=String.fromCharCode(48+_);c.addSymbol(f,u+_),this.addSymbol(f,t[a++],r)}}else c.addSymbol(p,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],r)}),c}},yc=e=>e+"_max",Ug=(e,s,t,r)=>{let o=e.map(c=>c.length).map((c,p)=>$e(`input${p}`,s,c)),n=be.size(r),i=nt("output",s,r.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],u="var prod = 1.0;",d="var sum = 0.0;",_="sum += prod;",f=[],y=[],$=[],w=[],g=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((T,v)=>{var b;if(t.rhs.symbolToIndices.has(v)){let x=(b=t.rhs.symbolToIndices.get(v))==null?void 0:b[0];x!==void 0&&t.lhs.forEach((P,A)=>{if(T.inputIndices.includes(A)){let D=P.symbolToIndices.get(v);if(D===void 0)throw new Error("Invalid symbol error");D.forEach(H=>{p.push(`${o[A].indicesSet(`input${A}Indices`,H,i.indicesGet("outputIndices",x))}`)})}})}else t.lhs.forEach((x,P)=>{if(T.inputIndices.includes(P)){let A=x.symbolToIndices.get(v);if(A===void 0)throw new Error("Invalid symbol error");A.forEach(D=>{f.push(`${o[P].indicesSet(`input${P}Indices`,D,`${v}`)}`)}),w.push(`prod *= ${o[P].getByIndices(`input${P}Indices`)};`)}}),y.push(`for(var ${v}: u32 = 0; ${v} < uniforms.${yc(v)}; ${v}++) {`),$.push("}")});let C=g?[...p,`let sum = ${o.map((T,v)=>T.getByIndices(`input${v}Indices`)).join(" * ")};`]:[...p,d,...y,...f,u,...w,_,...$];return`
            ${c.registerUniforms(a.map(T=>({name:`${yc(T)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...o,i)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${o.map((T,v)=>`var input${v}Indices: ${o[v].type.indices};`).join(`
`)}
            ${C.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(u=>t.symbolToInfo.has(u)).map(u=>{var d;return{type:12,data:((d=t.symbolToInfo.get(u))==null?void 0:d.dimValue)||0}});c.push({type:12,data:n});let p=e.map((u,d)=>[...dt(u)]).reduce((u,d)=>u.concat(d),c);return p.push(...dt(r)),{outputs:[{dims:r,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},oM=(e,s)=>{let t=new Ng(e.inputs,s.equation),r=t.outputDims,o=e.inputs.map((n,i)=>n.dims);e.compute(Ug(o,e.inputs[0].dataType,t,r))},iM=e=>{let s=e.equation.replace(/\s+/g,"");return Wt({equation:s})}}),Vg,bc,Wg,Gg,aM,ST=Ne(()=>{gt(),Et(),Ct(),Vg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let s=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),r=t.length<s.length?0:t.length-s.length,o=s.length<t.length?0:s.length-t.length;for(;r<t.length&&o<s.length;++r,++o)if(t[r]!==s[o]&&t[r]!==1&&s[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},bc=(e,s)=>{let t=e.length-s.length,r=[];for(let o=0;o<t;++o)r.push(e[o]);for(let o=0;o<s.length;++o)r.push(s[o]===1?e[o+t]:s[o]);return r},Wg=(e,s)=>e.length>s.length?bc(e,s):bc(s,e),Gg=e=>{let s=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),r=Wg(s,t),o=e[0].dataType,n=o===9||be.size(s)===1,i=o===9||s.length>0&&s[s.length-1]%4===0?4:1,a=n||r.length>0&&r[r.length-1]%4===0?4:1,l=Math.ceil(be.size(r)/a),c=u=>{let d=$e("input",o,s.length,i),_=nt("output",o,r.length,a),f;if(o===9){let y=($,w,g="")=>`
          let outputIndices${w} = ${_.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,_)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${$}[${w}] = ${g}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${y("data",0,"u32")}
        ${y("data",1,"u32")}
        ${y("data",2,"u32")}
        ${y("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${d.getByOffset(`inputOffset / ${i}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${u.registerUniform("vec_size","u32").declareVariables(d,_)}
    ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...dt(s,r)];return{name:"Expand",shaderCache:{hint:`${r.length};${i}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},aM=e=>{Vg(e.inputs),e.compute(Gg(e.inputs),{inputs:[0]})}}),Kg,lM,$T=Ne(()=>{gt(),Et(),Ct(),$u(),Kg=e=>{let s=e[0].dataType,t=be.size(e[0].dims),r=be.size(e[1].dims),o=r%4===0,n=i=>{let a=$e("x",s,[1],4),l=$e("bias",s,[1],4),c=nt("y",s,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],u=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,d=o?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${u(0)}${u(1)}${u(2)}${u(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(p).declareVariables(a,l,c)}

    ${tu(Us(s))}

    ${i.mainStart(co)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${d}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",su("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(t/co/4)}})}},lM=e=>{e.inputs.length<2||be.size(e.inputs[1].dims)===0?S0(e):e.compute(Kg(e.inputs))}}),Hg,qg,cM,uM,kT=Ne(()=>{gt(),Et(),ds(),Ct(),Hg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},qg=(e,s)=>{let t=e[0].dims,r=e[1].dims,o=t.length,n=be.normalizeAxis(s.axis,o),i=t.slice(0);i.splice(n,1,...r);let a=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(be.size(i)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:n},...dt(e[0].dims,e[1].dims,i)],u=d=>{let _=$e("data",e[0].dataType,e[0].dims.length,l),f=$e("inputIndices",e[1].dataType,e[1].dims.length),y=nt("output",e[0].dataType,i.length,l),$=g=>{let C=r.length,T=`var indicesIndices${g}  = ${f.type.indices}(0);`;for(let v=0;v<C;v++)T+=`${C>1?`indicesIndices${g}[${v}]`:`indicesIndices${g}`} = ${i.length>1?`outputIndices${g}[uniforms.axis + ${v}]`:`outputIndices${g}`};`;T+=`
          var idx${g} = ${f.getByIndices(`indicesIndices${g}`)};
          if (idx${g} < 0) {
            idx${g} = idx${g} + uniforms.axisDimLimit;
          }
          var dataIndices${g} : ${_.type.indices};
        `;for(let v=0,b=0;v<o;v++)v===n?(T+=`${o>1?`dataIndices${g}[${v}]`:`dataIndices${g}`} = u32(idx${g});`,b+=C):(T+=`${o>1?`dataIndices${g}[${v}]`:`dataIndices${g}`} = ${i.length>1?`outputIndices${g}[${b}]`:`outputIndices${g}`};`,b++);return T},w;if(e[0].dataType===9){let g=(C,T,v="")=>`
          let outputIndices${T} = ${y.offsetToIndices(`outputOffset + ${T}u`)};
          ${$(T)};
          let offset${T} = ${_.indicesToOffset(`dataIndices${T}`)};
          let index${T} = offset${T} / 4u;
          let component${T} = offset${T} % 4u;
          ${C}[${T}] = ${v}(${_.getByOffset(`index${T}`)}[component${T}]);
        `;w=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${g("value",0,"u32")}
        ${g("value",1,"u32")}
        ${g("value",2,"u32")}
        ${g("value",3,"u32")}
        ${y.setByOffset("global_idx","value")}
      `}else w=`
      let outputIndices = ${y.offsetToIndices("global_idx")};
      ${$("")};
      let value = ${_.getByIndices("dataIndices")};
      ${y.setByOffset("global_idx","value")};
      `;return`
      ${d.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,y)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${w}
      }`};return{name:"Gather",shaderCache:{hint:s.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:u}},cM=e=>Wt({axis:e.axis}),uM=(e,s)=>{let t=e.inputs;Hg(t),e.compute(qg(e.inputs,s))}}),Qg,dM,pM,IT=Ne(()=>{gt(),Et(),Ct(),Qg=(e,s,t,r,o,n,i,a,l)=>{let c=[{type:12,data:n},{type:12,data:r},{type:12,data:o},{type:12,data:t},{type:12,data:i},{type:12,data:a},{type:12,data:l}],p=[n];c.push(...dt(s.dims,p));let u=d=>{let _=$e("indices_data",s.dataType,s.dims.length),f=nt("input_slice_offsets_data",12,1,1),y=[_,f],$=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:o.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${d.registerUniforms($).declareVariables(...y)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${o.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${o.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:u},{inputs:[s],outputs:[-1]})[0]},dM=(e,s)=>{let t=e.inputs,r=t[0].dims,o=t[0].dataType,n=t[1].dims,i=n[n.length-1],a=be.sizeToDimension(n,n.length-1),l=be.sizeFromDimension(r,s.batchDims+i),c=be.sizeToDimension(r,s.batchDims),p=be.sizeFromDimension(r,s.batchDims),u=a/c,d=new Array(i),_=l;for(let T=0;T<i;++T)d[i-1-T]=_,_*=r[s.batchDims+i-1-T];let f=Qg(e,t[1],d,s.batchDims,r,a,u,p,i),y=s.batchDims+i;if(y>r.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let $=n.slice(0,-1).concat(r.slice(y)),w=be.size($),g=[{type:12,data:w},{type:12,data:l},...dt(t[0].dims,f.dims,$)],C=T=>{let v=$e("data",t[0].dataType,t[0].dims.length),b=$e("slice_offsets",12,f.dims.length),x=nt("output",t[0].dataType,$.length);return`
          ${T.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(v,b,x)}
            ${T.mainStart()}
            ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:s.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:$,dataType:o}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:g}),getShaderSource:C},{inputs:[t[0],f]})},pM=e=>({batchDims:e.batch_dims,cacheKey:""})}),Xg,Jg,hM,mM,AT=Ne(()=>{gt(),Et(),ds(),Ct(),Xg=(e,s)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=be.normalizeAxis(s.quantizeAxis,e[0].dims.length),r=s.blockSize,o=e[0],n=e[2],i=e.length===4?e[3]:void 0;if(n.dims.length!==o.dims.length||!o.dims.map((a,l)=>l===t?Math.ceil(a/r)===n.dims[l]:a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==o.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==n.dims.length||!i.dims.map((a,l)=>a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Jg=(e,s)=>{let t=e[0].dims,r=e[1].dims,o=t.length,n=be.normalizeAxis(s.gatherAxis,o),i=be.normalizeAxis(s.quantizeAxis,o),a=t.slice(0);a.splice(n,1,...r);let l=be.size(a),c=e[2].dataType,p=e[0].dataType===22,u=[{type:12,data:l},{type:12,data:i},{type:12,data:n},{type:12,data:s.blockSize},...dt(...e.map((_,f)=>_.dims),a)],d=_=>{let f=$e("data",e[0].dataType,e[0].dims.length),y=$e("inputIndices",e[1].dataType,e[1].dims.length),$=$e("scales",e[2].dataType,e[2].dims.length),w=e.length>3?$e("zeroPoint",e[3].dataType,e[3].dims.length):void 0,g=nt("output",c,a.length),C=[f,y,$];w&&C.push(w);let T=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(T).declareVariables(...C,g)}
        ${_.mainStart()}
        let output_indices = ${g.offsetToIndices("global_idx")};
        var indices_indices = ${y.type.indices}(0);
        ${r.length>1?`
          for (var i: u32 = 0; i < ${r.length}; i++) {
            let index = ${g.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${y.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${g.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${g.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${y.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${g.indicesGet("output_indices",`i + ${r.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${$.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${$.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${$.getByIndices("scale_indices")};
        ${w?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${w.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${w.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Us(c)}(quantized_data - zero_point) * scale;
        ${g.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${s.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:d}},hM=(e,s)=>{let t=e.inputs;Xg(t,s),e.compute(Jg(e.inputs,s))},mM=e=>Wt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Yg,Zg,fM,_M,OT=Ne(()=>{gt(),Et(),ds(),Ct(),Yg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Zg=(e,s)=>{let t=e[0].dims,r=e[0].dataType,o=t.length,n=e[1].dims,i=e[1].dataType,a=be.normalizeAxis(s.axis,o),l=t[a],c=n.slice(0),p=be.size(c),u=$e("input",r,o),d=$e("indicesInput",i,n.length),_=nt("output",r,c.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return f.push(...dt(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:y=>`
      ${y.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(u,d,_)}
      ${y.mainStart()}
      ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${d.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${u.type.indices}(outputIndices);
      ${u.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${u.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},fM=e=>Wt({axis:e.axis}),_M=(e,s)=>{let t=e.inputs;Yg(t),e.compute(Zg(e.inputs,s))}}),ew,tw,gM,wM,FT=Ne(()=>{gt(),Et(),Ct(),ew=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},tw=(e,s)=>{let t=e[0].dims.slice(),r=e[1].dims.slice(),[o,n,i]=fb.getShapeOfGemmResult(t,s.transA,r,s.transB,e.length===3?e[2].dims:void 0),a=[o,n];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(o/l),u=!0,d=be.size(a),_=[{type:12,data:u?c:d},{type:12,data:o},{type:12,data:n},{type:12,data:i},{type:1,data:s.alpha},{type:1,data:s.beta}],f=["type","type"];e.length===3&&(_.push(...dt(e[2].dims)),f.push("rank")),_.push(...dt(a));let y=w=>{let g="";s.transA&&s.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":s.transA&&!s.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!s.transA&&s.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!s.transA&&!s.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let C=s.alpha===1?"":"value *= uniforms.alpha;",T=$e("a",e[0].dataType,e[0].dims),v=$e("b",e[1].dataType,e[1].dims),b=T.type.value,x=null,P=[T,v];e.length===3&&(x=$e("c",e[2].dataType,e[2].dims.length),P.push(x));let A=nt("output",e[0].dataType,a.length);P.push(A);let D=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${w.registerUniforms(D).declareVariables(...P)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${b}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${C}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",A)}; value += ${b}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},$=w=>{let g=$e("a",e[0].dataType,e[0].dims),C=$e("b",e[1].dataType,e[1].dims),T=null,v=[g,C];e.length===3&&(T=$e("c",e[2].dataType,e[2].dims.length),v.push(T));let b=nt("output",e[0].dataType,a.length);v.push(b);let x=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",A="";s.transA&&s.transB?(A=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):s.transA&&!s.transB?(A=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!s.transA&&s.transB?(A=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!s.transA&&!s.transB&&(A=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let D=s.alpha===1?"":"value *= uniforms.alpha;";return`
  ${w.registerUniforms(x).declareVariables(...v)}
  var<workgroup> tile_a: array<array<${g.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${C.type.storage}, ${l}>, ${l}>;
  ${w.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${b.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${A}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${D}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${T!=null?`let cOffset = ${T.broadcastedIndicesToOffset("vec2(m, n)",b)}; value += ${b.type.value}(uniforms.beta) * ${T.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return u?{name:"GemmShared",shaderCache:{hint:`${s.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:_}),getShaderSource:$}:{name:"Gemm",shaderCache:{hint:`${s.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}),getShaderSource:y}},gM=e=>{let s=e.transA,t=e.transB,r=e.alpha,o=e.beta;return{transA:s,transB:t,alpha:r,beta:o,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},wM=(e,s)=>{ew(e.inputs),e.compute(tw(e.inputs,s))}}),Br,jr,$n,kn,sw,rw,nw,ow,iw,aw,lw,cw,yM,bM,DT=Ne(()=>{gt(),Et(),ds(),Ct(),[Br,jr,$n,kn]=[0,1,2,3],sw=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},rw=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,nw=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,ow=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,iw=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,aw=(e,s,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${s} {
     var pixel = ${s}(0);
     var indices = vec4<u32>(0);
     indices[${Br}] = batch;
     indices[${jr}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${$n}] = u32(r);
            indices[${kn}] = u32(c);
          } else {
            return ${s}(0);
          }
        `;case"border":return`
          indices[${$n}] = u32(clamp(r, 0, H - 1));
          indices[${kn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${$n}] = gs_reflect(r, border[1], border[3]);
          indices[${kn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,lw=(e,s,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Br}], indices[${jr}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Br}], indices[${jr}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Br}], indices[${jr}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Br}], indices[${jr}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Br}], indices[${jr}], border);

          let dx2 = ${s}(f32(x2) - x);
          let dx1 = ${s}(x - f32(x1));
          let dy2 = ${s}(f32(y2) - y);
          let dy1 = ${s}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${s}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Br}], indices[${jr}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,cw=(e,s)=>{let t=$e("x",e[0].dataType,e[0].dims.length),r=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],o=$e("grid",e[1].dataType,r.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];s.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Br,jr,$n,kn]=[0,3,1,2]);let i=nt("output",e[0].dataType,n.length),a=t.type.value,l=be.size(n),c=[{type:12,data:l},...dt(e[0].dims,r,n)],p=u=>`
  ${u.registerUniform("output_size","u32").declareVariables(t,o,i)}
  ${rw}
  ${nw(a)}
  ${ow(s)}
  ${iw(s)}
  ${aw(t,a,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${$n}]);
      let W_in = i32(uniforms.x_shape[${kn}]);

      ${s.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Br}], indices[${$n}], indices[${kn}]);
      let nxy = ${o.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${lw(i,a,s)}
  }`;return{name:"GridSample",shaderCache:{hint:`${s.cacheKey}`,inputDependencies:["type","type"]},getRunData:u=>{let d=be.size(n);return{outputs:[{dims:n,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}},getShaderSource:p}},yM=(e,s)=>{sw(e.inputs),e.compute(cw(e.inputs,s))},bM=e=>Wt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Gs,uw,MM,Mc,dw,ri,vM,xM=Ne(()=>{gt(),Et(),ds(),Eu(),Su(),Ct(),an(),Gs=(e,s)=>e.length>s&&e[s].dims.length>0?e[s]:void 0,uw=(e,s)=>{let t=e[0],r=Gs(e,1),o=Gs(e,2),n=Gs(e,3),i=Gs(e,4),a=Gs(e,5),l=Gs(e,6),c=Gs(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],u=t.dims[1],d=t.dims.length===3?t.dims[2]:s.numHeads*t.dims[4],_=u,f=0,y=0,$=Math.floor(d/s.numHeads);if(l&&c&&be.size(l.dims)&&be.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==s.numHeads||l.dims[3]!==$)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==s.numHeads||c.dims[3]!==$)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],y=l.dims[2]}else if(l&&be.size(l.dims)||c&&be.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w;if(r&&be.size(r.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(r.dims.length===3){if(r.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');w=2,_=r.dims[1]}else if(r.dims.length===5){if(r.dims[2]!==s.numHeads||r.dims[3]!==2||r.dims[4]!==$)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');w=5,_=r.dims[1]}else{if(r.dims[1]!==s.numHeads||r.dims[3]!==$)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');w=0,_=r.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==s.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}if(n&&be.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let g=f+_,C=0;if(i&&be.size(i.dims)>0){C=8;let x=i.dims;throw x.length===1?x[0]===p?C=1:x[0]===3*p+2&&(C=3):x.length===2&&x[0]===p&&x[1]===g&&(C=5),C===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let T=!1,v=d;if(o&&be.size(o.dims)>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(_!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=o.dims[2]}else{if(_!==o.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=o.dims[1]*o.dims[3],T=!0}}let b=!1;if(i&&be.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&be.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==s.numHeads||a.dims[2]!==u||a.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:g,maxSequenceLength:y,inputHiddenSize:0,hiddenSize:d,vHiddenSize:v,headSize:$,vHeadSize:Math.floor(v/s.numHeads),numHeads:s.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:s.maskFilterValue,maskType:C,scale:s.scale,broadcastResPosBias:b,passPastInKv:T,qkvFormat:w}},MM=e=>Wt({...e}),Mc=Wt({perm:[0,2,1,3]}),dw=(e,s,t,r,o,n,i)=>{let a=[r,o,n],l=be.size(a),c=[{type:12,data:l},{type:12,data:i},{type:12,data:n}],p=u=>{let d=nt("qkv_with_bias",s.dataType,a),_=$e("qkv",s.dataType,a),f=$e("bias",t.dataType,a),y=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${u.registerUniforms(y).declareVariables(_,f,d)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:s.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[s,t],outputs:[-1]})[0]},ri=(e,s,t,r,o,n,i,a)=>{let l=n;if(i&&be.size(i.dims)>0){if(r===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=dw(e,n,i,s,r,t*o,a),l=l.reshape([s,r,t,o]),t===1||r===1?l:e.compute(tr(l,Mc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([s,r,t,o])),t===1||r===1?l:e.compute(tr(l,Mc.perm),{inputs:[l],outputs:[-1]})[0]},vM=(e,s)=>{let t=uw(e.inputs,s),r=e.inputs[0],o=Gs(e.inputs,1),n=Gs(e.inputs,2),i=Gs(e.inputs,3),a=Gs(e.inputs,4),l=Gs(e.inputs,5),c=Gs(e.inputs,6),p=Gs(e.inputs,7);if(r.dims.length===5)throw new Error("Packed QKV is not implemented");if((o==null?void 0:o.dims.length)===5)throw new Error("Packed KV is not implemented");let u=o&&n&&o.dims.length===4&&n.dims.length===4,d=ri(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r,i,0);if(u)return li(e,d,o,n,a,void 0,c,p,l,t);if(!o||!n)throw new Error("key and value must be provided");let _=ri(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,o,i,t.hiddenSize),f=ri(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,i,2*t.hiddenSize);li(e,d,_,f,a,void 0,c,p,l,t)}}),pw,hw,mw,fw,au,TM,EM,PM=Ne(()=>{gt(),Et(),ds(),Ct(),pw=e=>{if(!e||e.length<1)throw new Error("too few inputs")},hw=(e,s)=>{let t=[],r=s.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(o=>t.push(Number(o))),r=t.length),Wt({numOutputs:r,axis:s.axis,splitSizes:t})},mw=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${lt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,fw=e=>{let s=e.length,t=[];for(let r=0;r<s;++r){let o=e[r].setByIndices("indices","input[global_idx]");s===1?t.push(o):r===0?t.push(`if (output_number == ${r}u) { ${o} }`):r===s-1?t.push(`else { ${o} }`):t.push(`else if (output_number == ${r}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},au=(e,s)=>{let t=e[0].dims,r=be.size(t),o=e[0].dataType,n=be.normalizeAxis(s.axis,t.length),i=new Array(s.numOutputs),a=$e("input",o,t.length),l=new Array(s.numOutputs),c=[],p=[],u=0,d=[{type:12,data:r}];for(let f=0;f<s.numOutputs;f++){u+=s.splitSizes[f],l[f]=u;let y=t.slice();y[n]=s.splitSizes[f],p.push(y),i[f]=nt(`output${f}`,o,y.length),c.push({dims:p[f],dataType:e[0].dataType})}d.push({type:12,data:l},...dt(t,...p));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}
  ${mw(l.length)}
  ${fw(i)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${lt("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:d})}},TM=(e,s)=>{pw(e.inputs);let t=e.inputs.length===1?s:hw(e.inputs,s);e.compute(au(e.inputs,t),{inputs:[0]})},EM=e=>{let s=e.axis,t=e.splitSizes,r=e.numOutputs<0?t.length:e.numOutputs;if(r!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Wt({axis:s,numOutputs:r,splitSizes:t})}}),_w,Ta,CM,SM=Ne(()=>{gt(),Et(),ds(),Ct(),_w=(e,s)=>{let[t,r,o,n]=e,{numHeads:i,rotaryEmbeddingDim:a}=s;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!be.areEqual(r.dims,[])&&!be.areEqual(r.dims,[1])&&r.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!be.areEqual(o.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=o.dims[0],u=be.sizeFromDimension(t.dims,1)/c,d=a===0?o.dims[1]*2:u/i;if(a>d)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(r.dims.length===2){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(c!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(d/2!==o.dims[1]&&a/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Ta=(e,s)=>{let{interleaved:t,numHeads:r,rotaryEmbeddingDim:o,scale:n}=s,i=e[0].dims[0],a=be.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],u=o===0?p*2:c/r,d=new Array(i,l,c/u,u-p),_=be.computeStrides(d),f=[{type:1,data:n},{type:12,data:d},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[a,c,u,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,u,l*u,1]}):[],...dt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],y=$=>{let w=$e("input",e[0].dataType,e[0].dims.length),g=$e("position_ids",e[1].dataType,e[1].dims.length),C=$e("cos_cache",e[2].dataType,e[2].dims.length),T=$e("sin_cache",e[3].dataType,e[3].dims.length),v=nt("output",e[0].dataType,e[0].dims.length);return $.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:d.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${$.declareVariables(w,g,C,T,v)}

        ${$.mainStart(co)}
          let half_rotary_emb_dim = uniforms.${C.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${g.broadcastedIndicesToOffset("bsnh.xy",nt("",g.type.tensor,2))};
            let position_id =
                u32(${g.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${w.getByOffset("i")} * ${C.get("position_id","bsnh[3]")} -
                ${w.getByOffset("j")} * ${T.get("position_id","bsnh[3]")};
            ${v.setByOffset("i","re")}
            let im = ${w.getByOffset("i")} * ${T.get("position_id","bsnh[3]")} +
                ${w.getByOffset("j")} * ${C.get("position_id","bsnh[3]")};
            ${v.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${v.setByOffset("k",w.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Wt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(be.size(d)/co)},programUniforms:f})}},CM=(e,s)=>{_w(e.inputs,s),e.compute(Ta(e.inputs,s))}}),gw,ww,vc,yw,$M,LT=Ne(()=>{ds(),gt(),Su(),xM(),PM(),an(),SM(),Ct(),gw=(e,s)=>{if(s.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],r=e[1],o=e[2],n=e[3],i=e[4];if(s.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(s.localWindowSize!==-1)throw new Error("Local attention is not supported");if(s.softcap!==0)throw new Error("Softcap is not supported");if(s.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(s.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:s.numHeads*t.dims[4],u=c,d=0,_=!r||r.dims.length===0,f=Math.floor(_?p/(s.numHeads+2*s.kvNumHeads):p/s.numHeads);_&&(p=f*s.numHeads);let y=n&&n.dims.length!==0,$=i&&i.dims.length!==0;if(y&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==s.kvNumHeads&&n.dims[2]===s.kvNumHeads&&n.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(y&&$){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');d=n.dims[2]}else if(y||$)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w=1;if(r&&r.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(r.dims.length===3){if(t.dims[2]%r.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');u=r.dims[1]}else if(r.dims.length===5){if(r.dims[2]!==s.numHeads||r.dims[3]!==2||r.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');u=r.dims[1]}else{if(r.dims[1]!==s.numHeads||r.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=r.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==s.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}let g=0,C=!1,T=s.kvNumHeads?f*s.kvNumHeads:p;if(o&&o.dims.length>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(u!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');T=o.dims[2]}else{if(u!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');T=o.dims[1]*o.dims[3],C=!0}}let v=e.length>4?e[5]:void 0;if(v&&v.dims.length!==1&&v.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:d,kvSequenceLength:u,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:T,headSize:f,vHeadSize:Math.floor(T/s.kvNumHeads),numHeads:s.numHeads,kvNumHeads:s.kvNumHeads,nReps:s.numHeads/s.kvNumHeads,pastPresentShareBuffer:!1,maskType:g,scale:s.scale,broadcastResPosBias:!1,passPastInKv:C,qkvFormat:w}},ww=Wt({perm:[0,2,1,3]}),vc=(e,s,t)=>{let r=s,o=t.kvNumHeads;return s.dims.length===3&&t.kvSequenceLength!==0&&(r=s.reshape([t.batchSize,t.kvSequenceLength,o,t.headSize]),r=e.compute(tr(r,ww.perm),{inputs:[r],outputs:[-1]})[0]),r},yw=(e,s,t,r)=>{let o=7,n=["type","type"],i=[e*s],a=e*s,l=[{type:12,data:a},{type:12,data:s},{type:12,data:e}],c=p=>{let u=$e("seq_lens",t.dataType,t.dims),d=$e("total_seq_lens",r.dataType,r.dims),_=nt("pos_ids",o,i),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(f).declareVariables(u,d,_)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${d.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${u.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${s}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:c}},$M=(e,s)=>{var T;let t=gw(e.inputs,s);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((T=e.inputs[1])==null?void 0:T.dims.length)===5)throw new Error("Packed KV is not implemented");let r=e.inputs[0],o=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,u=Wt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[d,_,f]=!o&&!n?e.compute(au([r],u),{inputs:[r],outputs:[-1,-1,-1]}):[r,o,n],y,$;if(s.doRotary){let v=e.compute(yw(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],b=e.inputs[7],x=e.inputs[8],P=Wt({interleaved:s.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:s.scale}),A=[d,v,b,x],D=[-1];y=e.compute(Ta(A,P),{inputs:A,outputs:D})[0],A.splice(0,1,_);let H=Wt({interleaved:s.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:s.scale});$=e.compute(Ta(A,H),{inputs:A,outputs:D})[0]}let w=ri(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s.doRotary?y:d,void 0,0),g=vc(e,s.doRotary?$:_,t),C=vc(e,f,t);li(e,w,g,C,void 0,void 0,i,a,void 0,t,l,c)}}),xc,bw,Mw,kM,zT=Ne(()=>{gt(),Et(),an(),Ct(),xc=(e,s,t,r,o,n,i,a)=>{let l=as(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,u=o*i,d=64;u===1&&(d=256);let _=[o,i,n/l],f=[o,i,2],y=["rank","type","type"],$=[];$.push(...dt(_,f));let w=g=>{let C=$e("x",s.dataType,3,l),T=$e("scale",t.dataType,t.dims),v=$e("bias",r.dataType,r.dims),b=nt("output",1,3,2),x=[C,T,v,b];return`
  var<workgroup> workgroup_shared : array<${p}, ${d}>;
  const workgroup_size = ${d}u;
  ${g.declareVariables(...x)}
  ${g.mainStart(d)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${C.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${on("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${on("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${d}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:u},programUniforms:$}),getShaderSource:w},{inputs:[s,t,r],outputs:[-1]})[0]},bw=(e,s,t)=>{let r=s[0].dims,o=r,n=2,i=r[0],a=r[1],l=be.sizeFromDimension(r,n),c=as(l),p=be.size(o)/c,u=xc(e,s[0],s[1],s[2],i,l,a,t.epsilon),d=[i,a,l/c],_=[i,a],f=["type","none"],y=$=>{let w=$e("x",s[0].dataType,d.length,c),g=$e("scale_shift",1,_.length,2),C=nt("output",s[0].dataType,d.length,c),T=[w,g,C];return`
  ${$.registerUniform("output_size","u32").declareVariables(...T)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${C.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${g.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${w.getByOffset("global_idx")} * ${C.type.value}(scale_shift.x) + ${C.type.value}(scale_shift.y);
      ${C.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...dt(d,_,d)]}),getShaderSource:y},{inputs:[s[0],u]})},Mw=(e,s,t)=>{let r=s[0].dims,o=r,n=r[0],i=r[r.length-1],a=be.sizeFromDimension(r,1)/i,l=as(i),c=be.size(o)/l,p=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],u=["type","type"],d=!1,_=[0,r.length-1];for(let w=0;w<r.length-2;w++)d=d||r[w+1]!==1,_.push(w+1);d=d&&r[r.length-1]!==1;let f=d?e.compute(tr(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:r.length},(w,g)=>r[_[g]])),y=xc(e,f,s[1],s[2],n,a,i,t.epsilon),$=w=>{let g=As(s[0].dataType),C=l===1?"vec2f":`mat${l}x2f`,T=x=>{let P=x===0?"x":"y",A=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${g}(${A}(scale.${P}))`;case 2:return`vec2<${g}>(${A}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${g}>(${A}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${l}`)}},v=$e("input",s[0].dataType,s[0].dims,l),b=nt("output",s[0].dataType,o,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${v.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${C}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${b.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${w.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${T(0)}, ${T(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:o,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:$},{inputs:[s[0],y]})},kM=(e,s)=>{s.format==="NHWC"?Mw(e,e.inputs,s):bw(e,e.inputs,s)}}),vw,xw,IM,BT=Ne(()=>{gt(),Et(),Ct(),vw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},xw=(e,s,t)=>{let r=s.simplified,o=e[0].dims,n=e[1],i=!r&&e[2],a=o,l=be.normalizeAxis(s.axis,o.length),c=be.sizeToDimension(o,l),p=be.sizeFromDimension(o,l),u=be.size(n.dims),d=i?be.size(i.dims):0;if(u!==p||i&&d!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${u} and bias size of ${d}`);let _=[];for(let v=0;v<o.length;++v)v<l?_.push(o[v]):_.push(1);let f=as(p),y=["type","type"],$=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:s.epsilon}];i&&y.push("type");let w=t>1,g=t>2,C=v=>{let b=As(e[0].dataType),x=[$e("x",e[0].dataType,e[0].dims,f),$e("scale",n.dataType,n.dims,f)];i&&x.push($e("bias",i.dataType,i.dims,f)),x.push(nt("output",e[0].dataType,a,f)),w&&x.push(nt("mean_data_output",1,_)),g&&x.push(nt("inv_std_output",1,_));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${v.registerUniforms(P).declareVariables(...x)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Yc("f32",f)};
    var mean_square_vector = ${Yc("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ao(b,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${on("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${on("mean_square_vector",f)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ao(b,f,"x[j + offset]")};
      let f32scale = ${ao(b,f,"scale[j]")};
      output[j + offset] = ${x[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${ao(b,f,"bias[j]")}`:""}
      );
    }

    ${w?"mean_data_output[global_idx] = mean":""};
    ${g?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},T=[{dims:a,dataType:e[0].dataType}];return w&&T.push({dims:_,dataType:1}),g&&T.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${r}`,inputDependencies:y},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:$}),getShaderSource:C}},IM=(e,s)=>{vw(e.inputs),e.compute(xw(e.inputs,s,e.outputCount))}}),Tw,AM,RT=Ne(()=>{Et(),Ou(),Fu(),Tw=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},AM=e=>{Tw(e.inputs);let s=lo.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!s)throw new Error("Can't use matmul on the given tensors");let t=s[s.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&r<8)e.compute(Au(e.inputs,{activation:""},s));else{let o=s[s.length-2],n=be.size(e.inputs[0].dims.slice(0,-2)),i=be.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&o===1&&i===1){let a=e.inputs[0].reshape([1,n,r]),l=e.inputs[1].reshape([1,r,t]),c=[1,n,t],p=[a,l];e.compute(xa(p,{activation:""},s,c),{inputs:p})}else e.compute(xa(e.inputs,{activation:""},s))}}}),Ew,Pw,Cw,OM,FM,jT=Ne(()=>{gt(),Et(),ds(),Ct(),Ew=(e,s)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],r=t.dims.length;if(t.dims[r-1]!==s.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((s.k+s.blockSize-1)/s.blockSize),n=s.blockSize/8*s.bits,i=e[1];if(!be.areEqual(i.dims,[s.n,o,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(be.size(a)!==s.n*o)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=s.bits>4?s.n*o:s.n*Math.floor((o+1)/2);if(be.size(l)!==c)throw new Error("zeroPoints input size error.")}},Pw=(e,s)=>{let t=e[0].dims,r=t.length,o=t[r-2],n=s.k,i=s.n,a=t.slice(0,r-2),l=be.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=as(s.k),d=as(c),_=as(i),f=a.concat([o,i]),y=o>1&&i/_%2===0?2:1,$=be.size(f)/_/y,w=64,g=[],C=[l,o,n/u],T=be.convertShape(e[1].dims).slice();T.splice(-1,1,c/d),g.push(...dt(C)),g.push(...dt(T)),g.push(...dt(e[2].dims)),e.length===4&&g.push(...dt(be.convertShape(e[3].dims)));let v=[l,o,i/_];g.push(...dt(v));let b=x=>{let P=C.length,A=$e("a",e[0].dataType,P,u),D=$e("b",12,T.length,d),H=$e("scales",e[2].dataType,e[2].dims.length),K=[A,D,H],B=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;B&&K.push(B);let Y=v.length,q=nt("output",e[0].dataType,Y,_),Q=As(e[0].dataType),X=(()=>{switch(u){case 1:return`array<${Q}, 8>`;case 2:return`mat4x2<${Q}>`;case 4:return`mat2x4<${Q}>`;default:throw new Error(`${u}-component is not supported.`)}})(),se=()=>{let R=`
          // reuse a data
            var input_offset = ${A.indicesToOffset(`${A.type.indices}(batch, row, word_offset)`)};
            var a_data: ${X};
            for (var j: u32 = 0; j < ${8/u}; j++) {
              a_data[j] = ${A.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let O=0;O<_*y;O++)R+=`
            b_value = ${d===1?`b${O}_data`:`b${O}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${X}(${Array.from({length:4},(N,Z)=>`${Q}(b_value_lower[${Z}]), ${Q}(b_value_upper[${Z}])`).join(", ")});
            b_dequantized_values = ${u===1?`${X}(${Array.from({length:8},(N,Z)=>`(b_quantized_values[${Z}] - ${B?`zero_point${O}`:"zero_point"}) * scale${O}`).join(", ")});`:`(b_quantized_values - ${X}(${Array(8).fill(`${B?`zero_point${O}`:"zero_point"}`).join(",")})) * scale${O};`};
            workgroup_shared[local_id.x * ${y} + ${Math.floor(O/_)}]${_>1?`[${O%_}]`:""} += ${Array.from({length:8/u},(N,Z)=>`${u===1?`a_data[${Z}] * b_dequantized_values[${Z}]`:`dot(a_data[${Z}], b_dequantized_values[${Z}])`}`).join(" + ")};
          `;return R},me=()=>{let R=`
            var col_index = col * ${_};
            ${B?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Q}(8);`}
            `;for(let O=0;O<_*y;O++)R+=`
            let scale${O} = ${H.getByOffset("col_index * nBlocksPerCol + block")};
            ${B?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${B.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${O} = ${Q}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return R},le=()=>{let R=`col_index = col * ${_};`;for(let O=0;O<_*y;O++)R+=`
            let b${O}_data = ${D.getByIndices(`${D.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return R+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${X};
            var b_dequantized_values: ${X};`,R};return`
        var<workgroup> workgroup_shared: array<${q.type.value}, ${y*w}>;
        ${x.declareVariables(...K,q)}
        ${x.mainStart([w,1,1])}
          let output_indices = ${q.offsetToIndices(`(global_idx / ${w}) * ${y}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${w}) {
            //process one block
            var word_offset: u32 = block * ${s.blockSize/u};
            ${me()}
            for (var word: u32 = 0; word < ${c}; word += ${d}) {
              ${le()}
              for (var i: u32 = 0; i < ${d}; i++) {
                ${se()}
                word_offset += ${8/u};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${y}) {
            var output_value: ${q.type.value} = ${q.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${w}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${y};
            }
            ${q.setByIndices(`${q.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${s.blockSize};${s.bits};${u};${d};${_};${y};${w}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:$},programUniforms:g}),getShaderSource:b}},Cw=(e,s)=>{let t=e[0].dims,r=t.length,o=t[r-2],n=s.k,i=s.n,a=t.slice(0,r-2),l=be.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=as(s.k),d=as(c),_=a.concat([o,i]),f=128,y=i%8===0?8:i%4===0?4:1,$=f/y,w=$*d*8,g=w/u,C=w/s.blockSize,T=be.size(_)/y,v=[],b=[l,o,n/u],x=be.convertShape(e[1].dims).slice();x.splice(-1,1,c/d),v.push(...dt(b)),v.push(...dt(x)),v.push(...dt(e[2].dims)),e.length===4&&v.push(...dt(be.convertShape(e[3].dims)));let P=[l,o,i];v.push(...dt(P));let A=D=>{let H=b.length,K=$e("a",e[0].dataType,H,u),B=$e("b",12,x.length,d),Y=$e("scales",e[2].dataType,e[2].dims.length),q=[K,B,Y],Q=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;Q&&q.push(Q);let X=P.length,se=nt("output",e[0].dataType,X),me=As(e[0].dataType),le=()=>{switch(u){case 1:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${u}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${K.type.value}, ${g}>;
        var<workgroup> inter_results: array<array<${se.type.value}, ${$}>, ${y}>;
        ${D.declareVariables(...q,se)}
        ${D.mainStart([$,y,1])}
          let output_indices = ${se.offsetToIndices(`workgroup_index * ${y}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${C} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${g};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${g}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${K.getByIndices(`${K.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${K.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${C} + local_id.x;
            ${Q?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Q.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${me}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${me}(8);`}
            let scale = ${Y.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${B.getByIndices(`${B.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${s.blockSize/u};
            for (var i: u32 = 0; i < ${d}; i++) {
              ${le()}
              let b_value = ${d===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${me}>(${Array.from({length:4},(R,O)=>`${me}(b_value_lower[${O}]), ${me}(b_value_upper[${O}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${me}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(R,O)=>`${`dot(a_data${O}, b_dequantized_values[${O}])`}`).join(" + ")};
              word_offset += ${8/u};
            }
            workgroupBarrier();
          }

          if (local_idx < ${y}) {
            var output_value: ${se.type.value} = ${se.type.value}(0);
            for (var b = 0u; b < ${$}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${se.setByIndices(`${se.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${s.blockSize};${u};${d};${$};${y}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:T},programUniforms:v}),getShaderSource:A}},OM=(e,s)=>{Ew(e.inputs,s),s.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Cw(e.inputs,s)):e.compute(Pw(e.inputs,s))},FM=e=>Wt(e)}),Sw,$w,kw,Iw,Aw,Ow,Fw,Dw,DM,NT=Ne(()=>{gt(),Et(),Ct(),Sw=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let s=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(s=e[3].dims[0]*2===e[1].dims[0]),!s)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},$w=(e,s,t)=>{let r="";for(let o=s-1;o>=0;--o)r+=`
            k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${lt("uniforms.x_shape",o,s)})) {
              break;
            }
            offset += k * i32(${lt("uniforms.x_strides",o,s)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${r}
            value = x[offset];
          }
      `},kw=(e,s,t)=>{let r="";for(let o=s-1;o>=0;--o)r+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${lt("uniforms.x_shape",o,s)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${lt("uniforms.x_shape",o,s)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${lt("uniforms.x_strides",o,s)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Iw=(e,s,t)=>{let r="";for(let o=s-1;o>=0;--o)r+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${lt("uniforms.x_shape",o,s)})) {
                  k = i32(${lt("uniforms.x_shape",o,s)}) - 1;
                }
                offset += k * i32(${lt("uniforms.x_strides",o,s)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Aw=(e,s,t)=>{let r="";for(let o=s-1;o>=0;--o)r+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0)  {
                  k += i32(${lt("uniforms.x_shape",o,s)}]);
                }
                if (k >= i32(${lt("uniforms.x_shape",o,s)})) {
                  k -= i32(${lt("uniforms.x_shape",o,s)});
                }
                offset += k * i32(${lt("uniforms.x_strides",o,s)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Ow=(e,s,t)=>{switch(t.mode){case 0:return $w(e,s,t.pads.length);case 1:return kw(e,s,t.pads.length);case 2:return Iw(e,s,t.pads.length);case 3:return Aw(e,s,t.pads.length);default:throw new Error("Invalid mode")}},Fw=(e,s)=>{let t=be.padShape(e[0].dims.slice(),s.pads),r=e[0].dims,o=be.size(t),n=[{type:12,data:o},{type:6,data:s.pads}],i=e.length>=3&&e[2].data;s.mode===0&&n.push({type:i?e[2].dataType:1,data:s.value}),n.push(...dt(e[0].dims,t));let a=["rank"],l=c=>{let p=nt("output",e[0].dataType,t.length),u=$e("x",e[0].dataType,r.length),d=u.type.value,_=Ow(p,r.length,s),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:s.pads.length}];return s.mode===0&&f.push({name:"constant_value",type:i?d:"f32"}),`
            ${c.registerUniforms(f).declareVariables(u,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${d}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${s.mode}${i}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(be.size(t)/64)},programUniforms:n}),getShaderSource:l}},Dw=(e,s)=>{if(e.length>1){let t=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,o=e[0].dims.length,n=new Int32Array(2*o).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)n[Number(a[l])]=Number(t[l]),n[Number(a[l])+o]=Number(t[l+a.length])}else t.forEach((a,l)=>n[Number(l)]=Number(a));let i=[];return n.forEach(a=>i.push(a)),{mode:s.mode,value:r,pads:i}}else return s},DM=(e,s)=>{Sw(e.inputs);let t=Dw(e.inputs,s);e.compute(Fw(e.inputs,t),{inputs:[0]})}}),qo,Tc,Ec,Pc,Cc,Lw,zw,Sc,$c,LM,zM,kc,BM,RM,Ic,jM,NM,UM,VM,UT=Ne(()=>{$r(),gt(),Et(),Ct(),qo=e=>{if(es.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Tc=(e,s,t)=>{let r=s.format==="NHWC",o=e.dims.slice();r&&o.splice(1,0,o.pop());let n=Object.hasOwnProperty.call(s,"dilations"),i=s.kernelShape.slice(),a=s.strides.slice(),l=n?s.dilations.slice():[],c=s.pads.slice();Ma.adjustPoolAttributes(t,o,i,a,l,c);let p=Ma.computePoolOutputShape(t,o,a,l,i,c,s.autoPad),u=Object.assign({},s);n?Object.assign(u,{kernelShape:i,strides:a,pads:c,dilations:l,cacheKey:s.cacheKey}):Object.assign(u,{kernelShape:i,strides:a,pads:c,cacheKey:s.cacheKey});let d=p.slice();return d.push(d.splice(1,1)[0]),[u,r?d:p]},Ec=(e,s)=>{let t=s.format==="NHWC",r=be.size(e),o=be.size(s.kernelShape),n=[{type:12,data:r},{type:12,data:o}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(s.kernelShape.length<=2){let a=s.kernelShape[s.kernelShape.length-1],l=s.strides[s.strides.length-1],c=s.pads[s.pads.length/2-1],p=s.pads[s.pads.length-1],u=!!(c+p);n.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let d=!1;if(s.kernelShape.length===2){let _=s.kernelShape[s.kernelShape.length-2],f=s.strides[s.strides.length-2],y=s.pads[s.pads.length/2-2],$=s.pads[s.pads.length-2];d=!!(y+$),n.push({type:12,data:_},{type:12,data:f},{type:12,data:y},{type:12,data:$}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,i,!0,u,d]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=be.computeStrides(s.kernelShape);n.push({type:12,data:a},{type:12,data:s.pads},{type:12,data:s.strides}),i.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:s.pads.length},{name:"strides",type:"u32",length:s.strides.length});let l=s.pads.reduce((c,p)=>c+p);return[n,i,!!l,!1,!1]}},Pc=(e,s,t,r,o,n,i,a,l,c,p,u)=>{let d=o.format==="NHWC",_=s.type.value,f=nt("output",s.type.tensor,r);if(o.kernelShape.length<=2){let y="",$="",w="",g=t-(d?2:1);if(p?y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${s.indicesToOffset("xIndices")}];
                  ${n}
                }`:y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${s.indicesToOffset("xIndices")}];
                  ${n}
                }`,o.kernelShape.length===2){let C=t-(d?3:2);u?$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,w=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(s,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${a});
              var pad = 0;
              ${$}
              ${y}
              ${w}
              ${i}

              output[global_idx] = value;
            }`}else{if(d)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=o.kernelShape.length,$=o.pads.length,w="";return c?w=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${s.indicesToOffset("xIndices")}];
                ${n}
              }`:w=`
              }
              let x_val = x[${s.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(s,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${y}>;

              var value = ${_}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${y-1}u; j++) {
                  offsets[j] = offset / ${lt("uniforms.kernelStrides","j",y)};
                  offset -= offsets[j] * ${lt("uniforms.kernelStrides","j",y)};
                }
                offsets[${y-1}] = offset;

                isPad = false;
                for (var j = ${t-y}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${lt("uniforms.strides",`j - ${t-y}u`,y)}
                    + offsets[j - ${t-y}u] - ${lt("uniforms.pads","j - 2u",$)};
                  ${w}
              }
              ${i}

              output[global_idx] = value;
            }`}},Cc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Lw=e=>`${Cc(e)};${e.countIncludePad}`,zw=e=>`${Cc(e)};${e.storageOrder};${e.dilations}`,Sc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),$c=(e,s,t,r)=>{let[o,n]=Tc(s,r,t),i=$e("x",s.dataType,s.dims.length),a=i.type.value,l="value += x_val;",c="";o.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,u,d,_,f]=Ec(n,o);p.push(...dt(s.dims,n));let y=["rank"];return{name:e,shaderCache:{hint:`${r.cacheKey};${d};${_};${f}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:n,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(be.size(n)/64)},programUniforms:p}),getShaderSource:$=>Pc($,i,s.dims.length,n.length,o,l,c,0,u,d,_,f)}},LM=e=>{let s=e.count_include_pad!==0,t=Sc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:s,...t,cacheKey:""};return{...r,cacheKey:Lw(r)}},zM=(e,s)=>{qo(e.inputs),e.compute($c("AveragePool",e.inputs[0],!1,s))},kc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},BM=e=>{let s=e.format;return{format:s,...kc,cacheKey:s}},RM=(e,s)=>{qo(e.inputs),e.compute($c("GlobalAveragePool",e.inputs[0],!0,s))},Ic=(e,s,t,r)=>{let[o,n]=Tc(s,r,t),i=`
      value = max(x_val, value);
    `,a="",l=$e("x",s.dataType,s.dims.length),c=["rank"],[p,u,d,_,f]=Ec(n,o);return p.push(...dt(s.dims,n)),{name:e,shaderCache:{hint:`${r.cacheKey};${d};${_};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(be.size(n)/64)},programUniforms:p}),getShaderSource:y=>Pc(y,l,s.dims.length,n.length,o,i,a,s.dataType===10?-65504:-1e5,u,d,_,f)}},jM=(e,s)=>{qo(e.inputs),e.compute(Ic("MaxPool",e.inputs[0],!1,s))},NM=e=>{let s=e.storage_order,t=e.dilations,r=Sc(e);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:s,dilations:t,...r,cacheKey:""};return{...o,cacheKey:zw(o)}},UM=e=>{let s=e.format;return{format:s,...kc,cacheKey:s}},VM=(e,s)=>{qo(e.inputs),e.compute(Ic("GlobalMaxPool",e.inputs[0],!0,s))}}),Bw,Rw,WM,GM,VT=Ne(()=>{gt(),Et(),ds(),Ct(),Bw=(e,s)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,r)=>t===e[2].dims[r]).reduce((t,r)=>t&&r,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(s.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((o,n)=>n===s.axis||o===e[0].dims[n]).reduce((o,n)=>o&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[s.axis],r=e[1].dims[s.axis];if(s.blockSize<Math.ceil(t/r)||s.blockSize>Math.ceil(t/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Rw=(e,s)=>{let t=be.normalizeAxis(s.axis,e[0].dims.length),r=e[0].dataType,o=r===3,n=e[0].dims,i=e[1].dataType,a=be.size(n),l=r===3||r===2,c=l?[Math.ceil(be.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,u=e.length>2?e[2]:void 0,d=u?l?[Math.ceil(be.size(u.dims)/4)]:u.dims:void 0,_=p.length===0||p.length===1&&p[0]===1,f=_===!1&&p.length===1,y=as(a),$=_&&(!l||y===4),w=$?y:1,g=$&&!l?y:1,C=$e("input",l?12:r,c.length,g),T=$e("scale",i,p.length),v=u?$e("zero_point",l?12:r,d.length):void 0,b=nt("output",i,n.length,w),x=[C,T];v&&x.push(v);let P=[c,p];u&&P.push(d);let A=[{type:12,data:a/w},{type:12,data:t},{type:12,data:s.blockSize},...dt(...P,n)],D=H=>{let K=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${H.registerUniforms(K).declareVariables(...x,b)}
      ${H.mainStart()}
          ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${b.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${C.getByOffset("global_idx / 4")};
            let x_vec = ${o?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${w===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${C.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${T.getByOffset("0")}`:f?`
            let scale_index = ${b.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${T.getByOffset("scale_index")};`:`
            var scale_indices: ${T.type.indices} = output_indices;
            let index = ${T.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${T.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${T.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${v?_?l?`
                let zero_point_input = ${v.getByOffset("0")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:f?l?`
                let zero_point_index = ${b.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${b.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${T.indicesToOffset("scale_indices")};
                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?o?"i32":"u32":C.type.value}(0);`};
      // Compute and write output
      ${b.setByOffset("global_idx",`${b.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:s.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:D,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(a/w/64),y:1,z:1},programUniforms:A})}},WM=(e,s)=>{Bw(e.inputs,s),e.compute(Rw(e.inputs,s))},GM=e=>Wt({axis:e.axis,blockSize:e.blockSize})}),jw,Nw,KM,WT=Ne(()=>{$r(),gt(),Ct(),jw=(e,s,t)=>{let r=e===s,o=e<s&&t<0,n=e>s&&t>0;if(r||o||n)throw new Error("Range these inputs' contents are invalid.")},Nw=(e,s,t,r)=>{let o=Math.abs(Math.ceil((s-e)/t)),n=[o],i=o,a=[{type:12,data:i},{type:r,data:e},{type:r,data:t},...dt(n)],l=c=>{let p=nt("output",r,n.length),u=p.type.value,d=[{name:"outputSize",type:"u32"},{name:"start",type:u},{name:"delta",type:u}];return`
        ${c.registerUniforms(d).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${u}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},KM=e=>{let s=0,t=0,r=0;e.inputs[0].dataType===6?(s=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(s=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),es.webgpu.validateInputContent&&jw(s,t,r),e.compute(Nw(s,t,r,e.inputs[0].dataType),{inputs:[]})}}),Uw,Ac,Oc,Vw,HM,qM,GT=Ne(()=>{gt(),Et(),ds(),Ct(),Uw=(e,s,t,r)=>{if(e!=="none"&&r!=="i32"&&r!=="u32"&&r!=="f32")throw new Error(`Input ${r} is not supported with reduction ${e}.`);let o=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${s}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${s}=${t};`;case"add":return r==="i32"||r==="u32"?`atomicAdd(&${s}, bitcast<${r}>(${t}));`:`
              ${o}bitcast<${r}>(oldValue) + (${t})${n}`;case"max":return r==="i32"||r==="u32"?`atomicMax(&${s}, bitcast<${r}>(${t}));`:`
                ${o}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return r==="i32"||r==="u32"?`atomicMin(&${s}, bitcast<${r}>(${t}));`:`${o}min(bitcast<${r}>(oldValue), (${t}))${n}`;case"mul":return`${o}(bitcast<${r}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Ac=(e,s)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${s?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${s?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,Oc=(e,s,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Uw(e.reduction,"output[data_offset + i]","value",s)}
      }`,Vw=(e,s)=>{let t=e[0].dims,r=e[1].dims,o=t,n=1,i=Math.ceil(be.size(r)/n),a=r[r.length-1],l=be.sizeFromDimension(t,a),c=be.sizeFromDimension(r,0)/a,p=[{type:12,data:i},{type:12,data:a},{type:12,data:l},...dt(e[1].dims,e[2].dims,o)],u=d=>{let _=$e("indices",e[1].dataType,e[1].dims.length),f=$e("updates",e[2].dataType,e[2].dims.length,n),y=s.reduction!=="none"&&s.reduction!==""?vb("output",e[0].dataType,o.length):nt("output",e[0].dataType,o.length,n);return`
      ${d.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,y)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${s.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${s.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Ac(t.length,!1)}
      }
      ${Oc(s,y.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Ac(t.length,!0)}
  }
  ${Oc(s,y.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${s.cacheKey}_${s.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:u}},HM=e=>Wt({reduction:e.reduction}),qM=(e,s)=>{e.compute(Vw(e.inputs,s),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Ww,Gw,Kw,Fc,Hw,qw,Qw,Xw,Jw,Yw,Zw,ey,Dc,ty,sy,ry,ny,oy,QM,XM,KT=Ne(()=>{gt(),Et(),ds(),Ct(),Ww=(e,s)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(s.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(s.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Gw=(e,s,t)=>{s.every(o=>o>=0&&o<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let r=new Array(t).fill(1);return s.forEach((o,n)=>r[o]=e[n]),r},Kw=(e,s,t,r,o,n)=>{let[i,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(p=>n.push(p));else if(s.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>r.push(p)),r.length!==0&&r.length!==c&&t>=18&&r.length!==s.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ww(r,s),s.axes.length>0&&Gw(r,s.axes,c).forEach((p,u)=>r[u]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>o.push(Number(p))),o.length!==0&&o.length!==c&&t>=18&&o.length!==s.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(s.axes.length>0){if(r.length!==0&&r.length!==s.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==0&&o.length!==s.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof o<"u"&&r.length>0&&o.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},Fc=(e,s,t,r)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${s});
  let whole = ${r}(big / (${t}));
  let fract = ${r}(big % (${t})) / ${r}(${t});
  return whole + fract;
`,Hw=(e,s)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${s} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${s}(xResized) / ${s}(xScale);
          } else {
            ${Fc("xResized","lengthOriginal","lengthResized",s)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${s}(xResized) + 0.5) / ${s}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${s}(xResized) + 0.5) / ${s}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Fc("xResized","lengthOriginal - 1","lengthResized - 1",s)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${s}(roiStart) * ${s}(lengthOriginal - 1) +
                        (${s}(xResized) * ${s}(roiEnd - roiStart) * ${s}(lengthOriginal - 1)) /
                        ${s}(lengthResized - 1);
                  } else {
                    return 0.5 * ${s}(roiStart + roiEnd) * ${s}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${s}xScale * ${s}(lengthResized);
                  const adjustment = ${s}(lengthResized) / outputWidth;
                  const center = ${s}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${s}(xResized) + 0.5) / ${s}(xScale)) - 0.5;`;case"half_pixel":return`return ((${s}(xResized) + 0.5) / ${s}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",qw=(e,s,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(s<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Qw=(e,s,t)=>{let r=new Array(t).fill(0).concat(new Array(t).fill(1)),o=e.length===0?r:e.slice();return s.length>0?(s.forEach((n,i)=>{r[n]=o[i],r[i+t]=o[s.length+i]}),r):o},Xw=(e,s,t,r)=>{let o=[];if(t.length>0)if(r.length>0){if(e.forEach(n=>o.push(n)),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach((n,i)=>o[n]=t[i])}else t.forEach(n=>o.push(n));else{if(s.length===0)throw new Error("Resize requires either scales or sizes.");o=e.map((n,i)=>Math.round(n*s[i]))}return o},Jw=(e,s,t)=>{let r=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>s[n]),Number.MAX_VALUE):Math.min(...s,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>s[n]),Number.MIN_VALUE):Math.max(...s,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();s.fill(1,0,s.length);let o=e.slice();return t.axes.length>0?(t.axes.forEach(n=>s[n]=r),t.axes.forEach(n=>o[n]=Math.round(e[n]*s[n]))):(s.fill(r,0,s.length),o.forEach((n,i)=>o[i]=Math.round(n*s[i]))),o},Yw=(e,s,t,r,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${lt("uniforms.scales","i",r)};
        var roi_low = ${lt("uniforms.roi","i",o)};
        var roi_hi = ${lt("uniforms.roi",`i + ${s.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${lt("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Zw=(e,s,t,r,o,n,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${s.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${s.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${lt("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${lt("uniforms.roi","i",n)};
          var roi_hi = ${lt("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",r.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${s.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${s.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,ey=(e,s)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${lt("uniforms.input_shape","i",s.length)}) {
          return false;
        }
      }
      return true;
    }`,Dc=(e,s,t,r)=>e.rank>r?`
    ${e.indicesSet("input_indices",s,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",ty=(e,s,t,r,o)=>{let[n,i,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Dc(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${s.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${i}];
      var col:${c} = originalIndices[${a}];
      ${r?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},sy=(e,s,t,r,o,n,i,a,l,c)=>{let p=t.length===2,[u,d]=p?[0,1]:[2,3],_=e.type.value,f=y=>{let $=y===u?"row":"col";return`
      fn ${$}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${s.type.indices}) -> ${_} {
        var output_index = ${s.indicesGet("output_indices",y)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[y]},
        ${r[y]}, ${t[y]}, ${n[y]}, ${n[y]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[y]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${_} = originalIdx + ${_}(i);
          if (${$} < 0 || ${$} >= ${t[y]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${$} = max(0, min(${$}, ${t[y]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",y,`u32(${$})`)};
          data[i + 1] = ${y===u?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(u)};
    ${f(d)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${s.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},ry=(e,s,t,r,o)=>{let[n,i,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Dc(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${s.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${i}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${r?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},ny=(e,s,t,r,o,n)=>{let i=e.dims,a=Qw(n,s.axes,i.length),l=Xw(i,r,o,s.axes),c=r.slice();r.length===0&&(c=i.map((g,C)=>g===0?1:l[C]/g),s.keepAspectRatioPolicy!=="stretch"&&(l=Jw(i,c,s)));let p=nt("output",e.dataType,l.length),u=$e("input",e.dataType,i.length),d=be.size(l),_=i.length===l.length&&i.every((g,C)=>g===l[C]),f=s.coordinateTransformMode==="tf_crop_and_resize",y=s.extrapolationValue,$=u.type.value,w=g=>`
      ${_?"":`
      ${Hw(s.coordinateTransformMode,$)};
      ${(()=>{switch(s.mode){case"nearest":return`
              ${ey(u,i)};
              ${qw(s.nearestMode,t,$)};
              ${Zw(u,p,i,l,c.length,a.length,f)};
              `;case"linear":return`
              ${Yw(p,i,l,c.length,a.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${ty(u,p,i,f,y)}`;if(i.length===3||i.length===5)return`${ry(u,p,i,f,y)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${sy(u,p,i,l,c,a,s.cubicCoeffA,f,s.extrapolationValue,s.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${g.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(u,p)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${u.type.indices};
        ${(()=>{switch(s.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${u.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${s.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${s.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${s.cacheKey}|${t}|${c.length>0?s.mode==="cubic"?c:c.length:""}|${o.length>0?o:""}|${a.length>0?a:""}|${_}|${s.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},{type:1,data:c},{type:1,data:a},...dt(i,l)]})}},oy=e=>{let s=e.customDataBuffer;return new Uint32Array(s,s.byteOffset,1)[0]},QM=(e,s)=>{let t=[],r=[],o=[],n=oy(e);if(s.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Kw(e.inputs,s,n,t,r,o),e.compute(ny(e.inputs[0],s,n,t,r,o),{inputs:[0]})},XM=e=>{let s=e.antialias,t=e.axes,r=e.coordinateTransformMode,o=e.cubicCoeffA,n=e.excludeOutside!==0,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Wt({antialias:s,axes:t,coordinateTransformMode:r,cubicCoeffA:o,excludeOutside:n,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),iy,ay,JM,HT=Ne(()=>{gt(),Et(),Ct(),iy=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let s=e[0],t=e[1],r=e[2];if(s.dataType!==t.dataType||s.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(s.dims.length!==3&&s.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=s.dims[s.dims.length-1],n=s.dims[s.dims.length-2];if(t.dims[t.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(r.dims.length!==1)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},ay=(e,s,t,r)=>{let o=s.simplified,n=e[0].dims,i=be.size(n),a=n,l=i,c=n.slice(-1)[0],p=r?n.slice(0,-1).concat(1):[],u=!o&&e.length>3,d=e.length>4,_=r&&t>1,f=r&&t>2,y=t>3,$=64,w=as(c),g=[{type:12,data:l},{type:12,data:w},{type:12,data:c},{type:1,data:s.epsilon}],C=v=>{let b=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],x=[$e("x",e[0].dataType,e[0].dims,w),$e("skip",e[1].dataType,e[1].dims,w),$e("gamma",e[2].dataType,e[2].dims,w)];u&&x.push($e("beta",e[3].dataType,e[3].dims,w)),d&&x.push($e("bias",e[4].dataType,e[4].dims,w)),x.push(nt("output",e[0].dataType,a,w)),_&&x.push(nt("mean_output",1,p)),f&&x.push(nt("inv_std_output",1,p)),y&&x.push(nt("input_skip_bias_sum",e[0].dataType,a,w));let P=As(e[0].dataType),A=As(1,w);return`

      ${v.registerUniforms(b).declareVariables(...x)}
      var<workgroup> sum_shared : array<${A}, ${$}>;
      var<workgroup> sum_squared_shared : array<${A}, ${$}>;

      ${v.mainStart([$,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${$};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${$};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${$-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${d?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${y?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ao(P,w,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${$};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${on("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${on("square_sum",w)} / f32(uniforms.hidden_size) ${o?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${o?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${u?"+ beta[offset1d + i]":""};
        }
      }`},T=[{dims:a,dataType:e[0].dataType}];return t>1&&T.push({dims:p,dataType:1}),t>2&&T.push({dims:p,dataType:1}),t>3&&T.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${_};${f};${y}`,inputDependencies:e.map((v,b)=>"type")},getShaderSource:C,getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:g})}},JM=(e,s)=>{iy(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(ay(e.inputs,s,e.outputCount,!1),{outputs:t})}}),ly,Qo,cy,Lc,uy,dy,YM,ZM,qT=Ne(()=>{gt(),Et(),ds(),Ct(),ly=(e,s)=>{if(!e||e.length<1)throw new Error("too few inputs");if(s.axes.length!==0){if(s.axes.length!==s.starts.length||s.axes.length!==s.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(s.starts.length!==s.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,r)=>{if(e[r+1].dataType!==6&&e[r+1].dataType!==7)throw new Error(`Input ${r} must be an array of int32 or int64`)})},Qo=(e,s)=>{let t=[];if(e.length>s)if(e[s].dataType===7)e[s].getBigInt64Array().forEach(r=>t.push(Number(r)));else if(e[s].dataType===6)e[s].getInt32Array().forEach(r=>t.push(Number(r)));else throw new Error(`Input ${s} must be an array of int32 or int64`);return t},cy=(e,s)=>{if(e.length>1){let t=Qo(e,1),r=Qo(e,2),o=Qo(e,3);return o.length===0&&(o=[...Array(e[0].dims.length).keys()]),Wt({starts:t,ends:r,axes:o})}else return s},Lc=(e,s,t,r,o)=>{let n=e;return e<0&&(n+=t[r[s]]),o[s]<0?Math.max(0,Math.min(n,t[r[s]]-1)):Math.max(0,Math.min(n,t[r[s]]))},uy=(e,s,t)=>`fn calculateInputIndices(output_indices: ${s.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
            let steps_i = ${lt("uniforms.steps","i",t.length)};
            let signs_i = ${lt("uniforms.signs","i",t.length)};
            let starts_i = ${lt("uniforms.starts","i",t.length)};
            var output_index = ${s.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,dy=(e,s)=>{let t=e[0].dims,r=be.size(t),o=s.axes.length>0?be.normalizeAxes(s.axes,t.length):[...Array(t.length).keys()],n=Qo(e,4);n.forEach(w=>w!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(o.length).fill(1));let i=s.starts.map((w,g)=>Lc(w,g,t,o,n)),a=s.ends.map((w,g)=>Lc(w,g,t,o,n));if(o.length!==i.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==t.length)for(let w=0;w<t.length;++w)o.includes(w)||(i.splice(w,0,0),a.splice(w,0,t[w]),n.splice(w,0,1));let l=n.map(w=>Math.sign(w));n.forEach((w,g,C)=>{if(w<0){let T=(a[g]-i[g])/w,v=i[g],b=v+T*n[g];i[g]=b,a[g]=v,C[g]=-w}});let c=t.slice(0);o.forEach((w,g)=>{c[w]=Math.ceil((a[w]-i[w])/n[w])});let p={dims:c,dataType:e[0].dataType},u=nt("output",e[0].dataType,c.length),d=$e("input",e[0].dataType,e[0].dims.length),_=be.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],y=[{type:12,data:_},{type:12,data:i},{type:6,data:l},{type:12,data:n},...dt(e[0].dims,c)],$=w=>`
      ${w.registerUniforms(f).declareVariables(d,u)}
        ${uy(d,u,t)}
        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${u.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${u.setByOffset("global_idx",d.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:y})}},YM=(e,s)=>{ly(e.inputs,s);let t=cy(e.inputs,s);e.compute(dy(e.inputs,t),{inputs:[0]})},ZM=e=>{let s=e.starts,t=e.ends,r=e.axes;return Wt({starts:s,ends:t,axes:r})}}),py,hy,ev,tv,QT=Ne(()=>{gt(),Et(),ds(),an(),Ct(),py=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},hy=(e,s)=>{let t=e.inputs[0],r=t.dims,o=be.size(r),n=r.length,i=be.normalizeAxis(s.axis,n),a=i<r.length-1,l,c=[];a?(c=Array.from({length:n},(x,P)=>P),c[i]=n-1,c[n-1]=i,l=e.compute(tr(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,u=p[n-1],d=o/u,_=as(u),f=u/_,y=64;d===1&&(y=256);let $=(x,P)=>P===4?`max(max(${x}.x, ${x}.y), max(${x}.z, ${x}.w))`:P===2?`max(${x}.x, ${x}.y)`:P===3?`max(max(${x}.x, ${x}.y), ${x}.z)`:x,w=$e("x",l.dataType,l.dims,_),g=nt("result",l.dataType,l.dims,_),C=w.type.value,T=As(l.dataType)==="f32"?`var threadMax = ${C}(-3.402823e+38f);`:`var threadMax = ${C}(-65504.0h);`,v=x=>`
      var<workgroup> rowMaxShared : ${C};
      var<workgroup> rowSumShared : ${C};
      var<workgroup> threadShared : array<${C}, ${y}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${C} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${C}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${x.registerUniform("packedCols","i32").declareVariables(w,g)}
      ${x.mainStart(y)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${y};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${T}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${C}(${$("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${C}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${C}(${on("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,b=e.compute({name:"Softmax",shaderCache:{hint:`${_};${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:d},programUniforms:[{type:6,data:f}]}),getShaderSource:v},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(tr(b,c),{inputs:[b]})},ev=(e,s)=>{py(e.inputs),hy(e,s)},tv=e=>Wt({axis:e.axis})}),zc,my,fy,_y,sv,XT=Ne(()=>{gt(),Et(),Ct(),zc=e=>Array.from(e.getBigInt64Array(),Number),my=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(zc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},fy=(e,s)=>{let t=[];for(let r=0;r<e.length;++r)t.push(e[r]*s[r]);return t},_y=(e,s)=>{let t=e[0].dims,r=s??zc(e[1]),o=fy(t,r),n=be.size(o),i=e[0].dataType,a=$e("input",i,t.length),l=nt("output",i,o.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...dt(e[0].dims,o)]}),getShaderSource:c}},sv=e=>{my(e.inputs),e.compute(_y(e.inputs),{inputs:[0]})}}),gy,wy,rv,JT=Ne(()=>{gt(),Et(),Ct(),gy=(e,s,t,r,o)=>{let n=nt("output_data",o,t.length,4),i=$e("a_data",s[1].dataType,s[1].dims.length,4),a=$e("b_data",s[2].dataType,s[2].dims.length,4),l=$e("c_data",s[0].dataType,s[0].dims.length,4),c,p=(u,d,_)=>`select(${d}, ${u}, ${_})`;if(!r)c=n.setByOffset("global_idx",p(i.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let u=(d,_,f="")=>{let y=`a_data[index_a${_}][component_a${_}]`,$=`b_data[index_b${_}][component_b${_}]`,w=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${n.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${i.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_b${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${d}[${_}] = ${f}(${p(y,$,w)});
          `};o===9?c=`
            var data = vec4<u32>(0);
            ${u("data",0,"u32")}
            ${u("data",1,"u32")}
            ${u("data",2,"u32")}
            ${u("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${u("output_data[global_idx]",0)}
            ${u("output_data[global_idx]",1)}
            ${u("output_data[global_idx]",2)}
            ${u("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,a,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},wy=e=>{let s=e[1].dims,t=e[2].dims,r=e[0].dims,o=e[1].dataType,n=!(be.areEqual(s,t)&&be.areEqual(t,r)),i=s,a=be.size(s);if(n){let c=lo.calcShape(lo.calcShape(s,t,!1),r,!1);if(!c)throw new Error("Can't perform where op on the given tensors");i=c,a=be.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>gy(c,e,i,n,o),getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...dt(r,s,t,i)]})}},rv=e=>{e.compute(wy(e.inputs))}}),nv,YT=Ne(()=>{pT(),Su(),hT(),mT(),fT(),_T(),gT(),vT(),TT(),ET(),PT(),CT(),ST(),$T(),kT(),IT(),AT(),OT(),FT(),DT(),LT(),zT(),BT(),RT(),jT(),xM(),NT(),UT(),VT(),WT(),GT(),Cu(),KT(),SM(),HT(),qT(),QT(),PM(),XT(),an(),$u(),JT(),nv=new Map([["Abs",[Jb]],["Acos",[Yb]],["Acosh",[Zb]],["Add",[O0]],["ArgMax",[Hb,eu]],["ArgMin",[Kb,eu]],["Asin",[e0]],["Asinh",[t0]],["Atan",[s0]],["Atanh",[r0]],["Attention",[qb]],["AveragePool",[zM,LM]],["BatchNormalization",[Qb]],["BiasAdd",[Xb]],["BiasSplitGelu",[A0]],["Cast",[o0,n0]],["Ceil",[a0]],["Clip",[i0]],["Concat",[V0,W0]],["Conv",[iu,ou]],["ConvTranspose",[eM,Z0]],["Cos",[l0]],["Cosh",[c0]],["CumSum",[tM,sM]],["DepthToSpace",[rM,nM]],["DequantizeLinear",[WM,GM]],["Div",[F0]],["Einsum",[oM,iM]],["Elu",[u0,si]],["Equal",[D0]],["Erf",[d0]],["Exp",[p0]],["Expand",[aM]],["FastGelu",[lM]],["Floor",[h0]],["FusedConv",[iu,ou]],["Gather",[uM,cM]],["GatherElements",[_M,fM]],["GatherBlockQuantized",[hM,mM]],["GatherND",[dM,pM]],["Gelu",[m0]],["Gemm",[wM,gM]],["GlobalAveragePool",[RM,BM]],["GlobalMaxPool",[VM,UM]],["Greater",[R0]],["GreaterOrEqual",[N0]],["GridSample",[yM,bM]],["GroupQueryAttention",[$M]],["HardSigmoid",[v0,M0]],["InstanceNormalization",[kM]],["LayerNormalization",[IM]],["LeakyRelu",[f0,si]],["Less",[j0]],["LessOrEqual",[U0]],["Log",[k0]],["MatMul",[AM]],["MatMulNBits",[OM,FM]],["MaxPool",[jM,NM]],["Mul",[L0]],["MultiHeadAttention",[vM,MM]],["Neg",[g0]],["Not",[_0]],["Pad",[DM]],["Pow",[z0]],["QuickGelu",[I0,si]],["Range",[KM]],["Reciprocal",[w0]],["ReduceMin",[Nb]],["ReduceMean",[Lb]],["ReduceMax",[jb]],["ReduceSum",[Vb]],["ReduceProd",[Ub]],["ReduceL1",[zb]],["ReduceL2",[Bb]],["ReduceLogSum",[Gb]],["ReduceLogSumExp",[Rb]],["ReduceSumSquare",[Wb]],["Relu",[y0]],["Resize",[QM,XM]],["RotaryEmbedding",[CM]],["ScatterND",[qM,HM]],["Sigmoid",[b0]],["Sin",[x0]],["Sinh",[T0]],["Slice",[YM,ZM]],["SkipLayerNormalization",[JM]],["Split",[TM,EM]],["Sqrt",[E0]],["Softmax",[ev,tv]],["Sub",[B0]],["Tan",[P0]],["Tanh",[C0]],["ThresholdedRelu",[$0,si]],["Tile",[sv]],["Transpose",[Tb,Eb]],["Where",[rv]]])}),ov,ZT=Ne(()=>{$r(),Vr(),Ct(),ov=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,s){this.repo.set(e,s)}run(e,s,t,r,o){Sr(e.programInfo.name);let n=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of s)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});o&&a.push({binding:a.length,resource:o});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...r),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),hr(e.programInfo.name)}dispose(){}build(e,s){Sr(e.name);let t=this.backend.device,r=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&r.push(`enable ${c.extension};`)});let o=xb(s,this.backend.device.limits),n=e.getShaderSource(o),i=`${r.join(`
`)}
${o.additionalImplementations}
${n}`,a=t.createShaderModule({code:i,label:e.name});Ot("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return hr(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:o.variablesInfo}}normalizeDispatchGroupSize(e){let s=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,r=typeof e=="number"?1:e.z||1,o=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(s<=o&&t<=o&&r<=o)return[s,t,r];let n=s*t*r,i=Math.ceil(Math.sqrt(n));if(i>o){if(i=Math.ceil(Math.cbrt(n)),i>o)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),iv={};uo(iv,{WebGpuBackend:()=>av});var yy,by,My,av,e1=Ne(()=>{$r(),gt(),Vr(),wb(),uT(),YT(),ZT(),yy=(e,s)=>{if(s.length!==e.length)throw new Error(`inputDependencies length ${s.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let r=0;r<e.length;++r){let o=e[r].dataType;switch(s[r]){case"none":{t.push("");break}case"type":{t.push(`${o}`);break}case"rank":{let n=e[r].dims.length;t.push(`${o};${n}`);break}case"dims":{let n=e[r].dims.join(",");t.push(`${o};${n}`);break}default:throw new Error(`unsupported input dependency: ${s[r]}`)}}return t.join("|")},by=(e,s,t)=>{var o,n;let r=e.name;return(o=e.shaderCache)!=null&&o.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+t+`:${yy(s,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(s.length).fill("dims"))}`,r},My=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},av=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,s){this.env=e;let t=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:s.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:s.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:s.limits.maxStorageBufferBindingSize,maxBufferSize:s.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:s.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:s.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:s.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:s.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},o=n=>s.features.has(n)&&t.push(n)&&!0;o("chromium-experimental-timestamp-query-inside-passes")||o("timestamp-query"),o("shader-f16"),o("subgroups"),this.device=await s.requestDevice(r),this.adapterInfo=new My(s.info||await s.requestAdapterInfo()),this.gpuDataManager=Mb(this),this.programManager=new ov(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,xu(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:s,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),s={};this.queryType==="at-passes"&&(s.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(s)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Sr(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var r;let s=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<s.length/2;o++){let n=t[o],i=n.kernelId,a=this.kernels.get(i),l=a.kernelType,c=a.kernelName,p=n.programName,u=n.inputTensorViews,d=n.outputTensorViews,_=s[o*2],f=s[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let y=Number(_-this.queryTimeBase),$=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(y)||!Number.isSafeInteger($))throw new RangeError("incorrect timestamp range");if((r=this.env.webgpu.profiling)!=null&&r.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map(w=>({dims:w.dims,dataType:Ur(w.dataType)})),outputsMetadata:d.map(w=>({dims:w.dims,dataType:Ur(w.dataType)})),kernelId:i,kernelType:l,kernelName:c,programName:p,startTime:y,endTime:$});else{let w="";u.forEach((C,T)=>{w+=`input[${T}]: [${C.dims}] | ${Ur(C.dataType)}, `});let g="";d.forEach((C,T)=>{g+=`output[${T}]: [${C.dims}] | ${Ur(C.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${c}|${p}" ${w}${g}execution time: ${$-y} ns`)}ai("GPU",`${p}::${_}::${f}`)}e.unmap(),this.pendingQueries.delete(e)}),hr()}run(e,s,t,r,o,n){Sr(e.name);let i=[];for(let g=0;g<s.length;++g){let C=s[g].data;if(C===0)continue;let T=this.gpuDataManager.get(C);if(!T)throw new Error(`no GPU data for input: ${C}`);i.push(T)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(s),p=t.length===0?a.map((g,C)=>C):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let u=[],d=[];for(let g=0;g<a.length;++g){if(!Number.isInteger(p[g])||p[g]<-3||p[g]>=n)throw new Error(`Invalid output index: ${p[g]}`);if(p[g]===-3)continue;let C=p[g]===-1,T=p[g]===-2,v=C||T?o(a[g].dataType,a[g].dims):r(p[g],a[g].dataType,a[g].dims);if(u.push(v),v.data===0)continue;let b=this.gpuDataManager.get(v.data);if(!b)throw new Error(`no GPU data for output: ${v.data}`);if(C&&this.temporaryData.push(b),T){let x=this.kernelPersistentData.get(this.currentKernelId);x||(x=[],this.kernelPersistentData.set(this.currentKernelId,x)),x.push(b)}d.push(b)}if(i.length!==s.length||d.length!==u.length){if(d.length===0)return hr(e.name),u;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(c){let g=0,C=[];c.forEach(x=>{let P=typeof x.data=="number"?[x.data]:x.data;if(P.length===0)return;let A=x.type===10?2:4,D,H;x.type===10?(H=P.length>4?16:P.length>2?8:P.length*A,D=P.length>4?16:A*P.length):(H=P.length<=2?P.length*A:16,D=16),g=Math.ceil(g/H)*H,C.push(g);let K=x.type===10?8:4;g+=P.length>4?Math.ceil(P.length/K)*D:P.length*A});let T=16;g=Math.ceil(g/T)*T;let v=new ArrayBuffer(g);c.forEach((x,P)=>{let A=C[P],D=typeof x.data=="number"?[x.data]:x.data;if(x.type===6)new Int32Array(v,A,D.length).set(D);else if(x.type===12)new Uint32Array(v,A,D.length).set(D);else if(x.type===10)new Uint16Array(v,A,D.length).set(D);else if(x.type===1)new Float32Array(v,A,D.length).set(D);else throw new Error(`Unsupported uniform type: ${Ur(x.type)}`)});let b=this.gpuDataManager.create(g,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(b.buffer,0,v,0,g),this.gpuDataManager.release(b.id),_={offset:0,size:g,buffer:b.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),y=f[1]===1&&f[2]===1,$=by(e,s,y),w=this.programManager.getArtifact($);if(w||(w=this.programManager.build(e,f),this.programManager.setArtifact($,w),Ot("info",()=>`[artifact] key: ${$}, programName: ${e.name}`)),c&&w.uniformVariablesInfo){if(c.length!==w.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${w.uniformVariablesInfo.length}, got ${c.length} in program "${w.programInfo.name}".`);for(let g=0;g<c.length;g++){let C=c[g],T=C.type,v=typeof C.data=="number"?1:C.data.length,[b,x]=w.uniformVariablesInfo[g];if(T!==b||v!==x)throw new Error(`Uniform variable ${g} mismatch: expect type ${b} with size ${x}, got type ${T} with size ${v} in program "${w.programInfo.name}".`)}}if(Ot("info",()=>`[ProgramManager] run "${e.name}" (key=${$}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let g={kernelId:this.currentKernelId,programName:w.programInfo.name,inputTensorViews:s,outputTensorViews:u};this.pendingKernels.push(g),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(g)}return this.programManager.run(w,i,d,f,_),hr(e.name),u}upload(e,s){this.gpuDataManager.upload(e,s)}memcpy(e,s){this.gpuDataManager.memcpy(e,s)}async download(e,s){await this.gpuDataManager.download(e,s)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,s,t,r){let o=nv.get(e);if(!o)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:r,kernelEntry:o[0],attributes:[o[1],t]};this.kernels.set(s,n)}releaseKernel(e){let s=this.kernelPersistentData.get(e);if(s){for(let t of s)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,s,t){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let o=r.kernelType,n=r.kernelName,i=r.kernelEntry,a=r.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${o}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ot("info",()=>`[WebGPU] Start to run kernel "[${o}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(s,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${o}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${o}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,s,t,r){let o=this.sessionExternalDataMapping.get(e);o||(o=new Map,this.sessionExternalDataMapping.set(e,o));let n=o.get(s),i=this.gpuDataManager.registerExternalBuffer(t,r,n);return o.set(s,[i,t]),i}unregisterBuffers(e){let s=this.sessionExternalDataMapping.get(e);s&&(s.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let s=this.gpuDataManager.get(e);if(!s)throw new Error(`no GPU data for buffer: ${e}`);return s.buffer}createDownloader(e,s,t){return async()=>{let r=await Jc(this,e,s);return Tu(r.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ot("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ot("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ot("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),s=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let r=0;r<t;r++){let o=this.getComputePassEncoder(),n=e[r];this.writeTimestamp(this.pendingDispatchNumber*2),o.setPipeline(n.computePipeline),o.setBindGroup(0,n.bindGroup),o.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(s[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),lv={};uo(lv,{init:()=>cv});var pa,vy,cv,t1=Ne(()=>{gt(),Vr(),Et(),cT(),pa=class uv{constructor(s,t,r,o){this.module=s,this.dataType=t,this.data=r,this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let s=be.size(this.dims);return s===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,s)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let s=be.size(this.dims);return s===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,s)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let s=be.size(this.dims);return s===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,s)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let s=be.size(this.dims);return s===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,s)}reshape(s){if(be.size(s)!==be.size(this.dims))throw new Error("Invalid new shape");return new uv(this.module,this.dataType,this.data,s)}},vy=class{constructor(e,s,t){this.module=e,this.backend=s,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=s.adapterInfo;let r=e.PTR_SIZE,o=t/e.PTR_SIZE,n=r===4?"i32":"i64";this.opKernelContext=Number(e.getValue(r*o++,n));let i=Number(e.getValue(r*o++,n));this.outputCount=Number(e.getValue(r*o++,n)),this.customDataOffset=Number(e.getValue(r*o++,"*")),this.customDataSize=Number(e.getValue(r*o++,n));let a=[];for(let l=0;l<i;l++){let c=Number(e.getValue(r*o++,n)),p=Number(e.getValue(r*o++,"*")),u=Number(e.getValue(r*o++,n)),d=[];for(let _=0;_<u;_++)d.push(Number(e.getValue(r*o++,n)));a.push(new pa(e,c,p,d))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,s){var i;let t=((i=s==null?void 0:s.inputs)==null?void 0:i.map(a=>typeof a=="number"?this.inputs[a]:a))??this.inputs,r=(s==null?void 0:s.outputs)??[],o=(a,l,c)=>new pa(this.module,l,this.output(a,c),c),n=(a,l)=>{let c=Dn(a,l);if(!c)throw new Error(`Unsupported data type: ${a}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new pa(this.module,a,p,l)};return this.backend.run(e,t,r,o,n,this.outputCount)}output(e,s){let t=this.module.stackSave();try{let r=this.module.PTR_SIZE,o=r===4?"i32":"i64",n=this.module.stackAlloc((1+s.length)*r);this.module.setValue(n,s.length,o);for(let i=0;i<s.length;i++)this.module.setValue(n+r*(i+1),s[i],o);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(r){throw new Error(`Failed to generate kernel's output[${e}] with dims [${s}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${r}`)}finally{this.module.stackRestore(t)}}},cv=async(e,s,t,r)=>{let o=s.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=(e1(),ii(iv)).WebGpuBackend,i=new n;await i.initialize(t,r),o("webgpu",[i,a=>i.alloc(Number(a)),a=>i.free(a),(a,l,c,p=!1)=>{if(p)Ot("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(c)}`),i.memcpy(Number(a),Number(l));else{Ot("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let u=s.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(c));i.upload(Number(l),u)}},async(a,l,c)=>{Ot("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${c}`),await i.download(Number(a),()=>s.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(a,l,c)=>i.createKernel(a,Number(l),c,s.UTF8ToString(s._JsepGetNodeName(Number(l)))),a=>i.releaseKernel(a),(a,l,c,p)=>{Ot("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${a}, contextDataOffset=${l}`);let u=new vy(s,i,Number(l));return i.computeKernel(Number(a),u,p)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else{let n=new bb(t);o("webnn",[n,()=>n.reserveTensorId(),i=>n.releaseTensorId(i),async(i,a,l,c,p)=>n.ensureTensor(i,a,l,c,p),(i,a)=>{n.uploadTensor(i,a)},async(i,a)=>n.downloadTensor(i,a)])}}}),xy,Du,Lu,tn,Ty,Bc,Ea,zu,Bu,Rc,Ru,ju,Nu,dv=Ne(()=>{iT(),aT(),gt(),Nn(),wu(),mb(),xy=(e,s)=>{Jt()._OrtInit(e,s)!==0&&Ht("Can't initialize onnxruntime.")},Du=async e=>{xy(e.wasm.numThreads,ba(e.logLevel))},Lu=async(e,s)=>{var t,r;(r=(t=Jt()).asyncInit)==null||r.call(t);{let o=(t1(),ii(lv)).init;if(s==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await o("webgpu",Jt(),e,n)}if(s==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await o("webnn",Jt(),e)}}},tn=new Map,Ty=e=>{let s=Jt(),t=s.stackSave();try{let r=s.PTR_SIZE,o=s.stackAlloc(2*r);s._OrtGetInputOutputCount(e,o,o+r)!==0&&Ht("Can't get session input/output count.");let n=r===4?"i32":"i64";return[Number(s.getValue(o,n)),Number(s.getValue(o+r,n))]}finally{s.stackRestore(t)}},Bc=(e,s)=>{let t=Jt(),r=t.stackSave(),o=0;try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetInputOutputMetadata(e,s,i,i+n)!==0&&Ht("Can't get session input/output metadata.");let a=Number(t.getValue(i,"*"));o=Number(t.getValue(i+n,"*"));let l=t.HEAP32[o/4];if(l===0)return[a,0];let c=t.HEAPU32[o/4+1],p=[];for(let u=0;u<c;u++){let d=Number(t.getValue(o+8+u*n,"*"));p.push(d!==0?t.UTF8ToString(d):Number(t.getValue(o+8+(u+c)*n,"*")))}return[a,l,p]}finally{t.stackRestore(r),o!==0&&t._OrtFree(o)}},Ea=e=>{let s=Jt(),t=s._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return s.HEAPU8.set(e,t),[t,e.byteLength]},zu=async(e,s)=>{var u,d,_,f;let t,r,o=Jt();Array.isArray(e)?[t,r]=e:e.buffer===o.HEAPU8.buffer?[t,r]=[e.byteOffset,e.byteLength]:[t,r]=Ea(e);let n=0,i=0,a=0,l=[],c=[],p=[];try{if([i,l]=await hb(s),(s==null?void 0:s.externalData)&&o.mountExternalData){let P=[];for(let A of s.externalData){let D=typeof A=="string"?A:A.path;P.push(vu(typeof A=="string"?A:A.data).then(H=>{o.mountExternalData(D,H)}))}await Promise.all(P)}for(let P of(s==null?void 0:s.executionProviders)??[])if((typeof P=="string"?P:P.name)==="webnn"){if(o.shouldTransferToMLTensor=!1,typeof P!="string"){let A=P,D=A==null?void 0:A.context,H=A==null?void 0:A.gpuDevice,K=A==null?void 0:A.deviceType,B=A==null?void 0:A.powerPreference;D?o.currentContext=D:H?o.currentContext=await o.webnnCreateMLContext(H):o.currentContext=await o.webnnCreateMLContext({deviceType:K,powerPreference:B})}else o.currentContext=await o.webnnCreateMLContext();break}n=await o._OrtCreateSession(t,r,i),(u=o.webgpuOnCreateSession)==null||u.call(o,n),n===0&&Ht("Can't create a session."),(d=o.jsepOnCreateSession)==null||d.call(o),o.currentContext&&(o.webnnRegisterMLContext(n,o.currentContext),o.currentContext=void 0,o.shouldTransferToMLTensor=!0);let[y,$]=Ty(n),w=!!(s!=null&&s.enableGraphCapture),g=[],C=[],T=[],v=[],b=[];for(let P=0;P<y;P++){let[A,D,H]=Bc(n,P);A===0&&Ht("Can't get an input name."),c.push(A);let K=o.UTF8ToString(A);g.push(K),T.push(D===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Ur(D),shape:H})}for(let P=0;P<$;P++){let[A,D,H]=Bc(n,P+y);A===0&&Ht("Can't get an output name."),p.push(A);let K=o.UTF8ToString(A);C.push(K),v.push(D===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Ur(D),shape:H});{if(w&&(s==null?void 0:s.preferredOutputLocation)===void 0){b.push("gpu-buffer");continue}let B=typeof(s==null?void 0:s.preferredOutputLocation)=="string"?s.preferredOutputLocation:((_=s==null?void 0:s.preferredOutputLocation)==null?void 0:_[K])??"cpu";if(B!=="cpu"&&B!=="cpu-pinned"&&B!=="gpu-buffer"&&B!=="ml-tensor")throw new Error(`Not supported preferred output location: ${B}.`);if(w&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);b.push(B)}}let x=null;return b.some(P=>P==="gpu-buffer"||P==="ml-tensor")&&(a=o._OrtCreateBinding(n),a===0&&Ht("Can't create IO binding."),x={handle:a,outputPreferredLocations:b,outputPreferredLocationsEncoded:b.map(P=>Qc(P))}),tn.set(n,[n,c,p,x,w,!1]),[n,g,C,T,v]}catch(y){throw c.forEach($=>o._OrtFree($)),p.forEach($=>o._OrtFree($)),a!==0&&o._OrtReleaseBinding(a)!==0&&Ht("Can't release IO binding."),n!==0&&o._OrtReleaseSession(n)!==0&&Ht("Can't release session."),y}finally{o._free(t),i!==0&&o._OrtReleaseSessionOptions(i)!==0&&Ht("Can't release session options."),l.forEach(y=>o._free(y)),(f=o.unmountExternalData)==null||f.call(o)}},Bu=e=>{var l,c,p;let s=Jt(),t=tn.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,o,n,i,a]=t;i&&(a&&s._OrtClearBoundOutputs(i.handle)!==0&&Ht("Can't clear bound outputs."),s._OrtReleaseBinding(i.handle)!==0&&Ht("Can't release IO binding.")),(l=s.jsepOnReleaseSession)==null||l.call(s,e),(c=s.webnnOnReleaseSession)==null||c.call(s,e),(p=s.webgpuOnReleaseSession)==null||p.call(s,e),o.forEach(u=>s._OrtFree(u)),n.forEach(u=>s._OrtFree(u)),s._OrtReleaseSession(r)!==0&&Ht("Can't release session."),tn.delete(e)},Rc=async(e,s,t,r,o,n,i=!1)=>{if(!e){s.push(0);return}let a=Jt(),l=a.PTR_SIZE,c=e[0],p=e[1],u=e[3],d=u,_,f;if(c==="string"&&(u==="gpu-buffer"||u==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(i&&u!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(u==="gpu-buffer"){let w=e[2].gpuBuffer;f=Dn(oo(c),p);{let g=a.jsepRegisterBuffer;if(!g)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=g(r,n,w,f)}}else if(u==="ml-tensor"){let w=e[2].mlTensor;f=Dn(oo(c),p);let g=a.webnnRegisterMLTensor;if(!g)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=g(r,w,oo(c),p)}else{let w=e[2];if(Array.isArray(w)){f=l*w.length,_=a._malloc(f),t.push(_);for(let g=0;g<w.length;g++){if(typeof w[g]!="string")throw new TypeError(`tensor data at index ${g} is not a string`);a.setValue(_+g*l,Er(w[g],t),"*")}}else{let g=a.webnnIsGraphInput;if(c!=="string"&&g){let C=a.UTF8ToString(o);if(g(r,C)){let T=oo(c);f=Dn(T,p),d="ml-tensor";let v=a.webnnCreateTemporaryTensor,b=a.webnnUploadTensor;if(!v||!b)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let x=await v(r,T,p);b(x,new Uint8Array(w.buffer,w.byteOffset,w.byteLength)),_=x}else f=w.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),_)}else f=w.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),_)}}let y=a.stackSave(),$=a.stackAlloc(4*p.length);try{p.forEach((g,C)=>a.setValue($+C*l,g,l===4?"i32":"i64"));let w=a._OrtCreateTensor(oo(c),_,f,$,p.length,Qc(d));w===0&&Ht(`Can't create tensor for input/output. session=${r}, index=${n}.`),s.push(w)}finally{a.stackRestore(y)}},Ru=async(e,s,t,r,o,n)=>{var H,K,B,Y;let i=Jt(),a=i.PTR_SIZE,l=tn.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],u=l[2],d=l[3],_=l[4],f=l[5],y=s.length,$=r.length,w=0,g=[],C=[],T=[],v=[],b=i.stackSave(),x=i.stackAlloc(y*a),P=i.stackAlloc(y*a),A=i.stackAlloc($*a),D=i.stackAlloc($*a);try{[w,g]=pb(n);for(let X=0;X<y;X++)await Rc(t[X],C,v,e,p[s[X]],s[X],_);for(let X=0;X<$;X++)await Rc(o[X],T,v,e,u[r[X]],y+r[X],_);for(let X=0;X<y;X++)i.setValue(x+X*a,C[X],"*"),i.setValue(P+X*a,p[s[X]],"*");for(let X=0;X<$;X++)i.setValue(A+X*a,T[X],"*"),i.setValue(D+X*a,u[r[X]],"*");if(d&&!f){let{handle:X,outputPreferredLocations:se,outputPreferredLocationsEncoded:me}=d;if(p.length!==y)throw new Error(`input count from feeds (${y}) is expected to be always equal to model's input count (${p.length}).`);for(let le=0;le<y;le++){let R=s[le];await i._OrtBindInput(X,p[R],C[le])!==0&&Ht(`Can't bind input[${le}] for session=${e}.`)}for(let le=0;le<$;le++){let R=r[le];(H=o[le])!=null&&H[3]?i._OrtBindOutput(X,u[R],T[le],0)!==0&&Ht(`Can't bind pre-allocated output[${le}] for session=${e}.`):i._OrtBindOutput(X,u[R],0,me[R])!==0&&Ht(`Can't bind output[${le}] to ${se[le]} for session=${e}.`)}tn.set(e,[c,p,u,d,_,!0])}(K=i.jsepOnRunStart)==null||K.call(i,c),(B=i.webnnOnRunStart)==null||B.call(i,c);let q;d?q=await i._OrtRunWithBinding(c,d.handle,$,A,w):q=await i._OrtRun(c,P,x,y,D,$,A,w),q!==0&&Ht("failed to call OrtRun().");let Q=[];for(let X=0;X<$;X++){let se=Number(i.getValue(A+X*a,"*"));if(se===T[X]){Q.push(o[X]);continue}let me=i.stackSave(),le=i.stackAlloc(4*a),R=!1,O,N=0;try{i._OrtGetTensorData(se,le,le+a,le+2*a,le+3*a)!==0&&Ht(`Can't access output tensor data on index ${X}.`);let Z=a===4?"i32":"i64",fe=Number(i.getValue(le,Z));N=i.getValue(le+a,"*");let ie=i.getValue(le+a*2,"*"),Me=Number(i.getValue(le+a*3,Z)),Re=[];for(let W=0;W<Me;W++)Re.push(Number(i.getValue(ie+W*a,Z)));i._OrtFree(ie)!==0&&Ht("Can't free memory for tensor dims.");let We=Re.reduce((W,re)=>W*re,1);O=Ur(fe);let pe=d==null?void 0:d.outputPreferredLocations[r[X]];if(O==="string"){if(pe==="gpu-buffer"||pe==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let W=[];for(let re=0;re<We;re++){let G=i.getValue(N+re*a,"*"),ye=i.getValue(N+(re+1)*a,"*"),he=re===We-1?void 0:ye-G;W.push(i.UTF8ToString(G,he))}Q.push([O,Re,W,"cpu"])}else if(pe==="gpu-buffer"&&We>0){let W=i.jsepGetBuffer;if(!W)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let re=W(N),G=Dn(fe,We);if(G===void 0||!bu(O))throw new Error(`Unsupported data type: ${O}`);R=!0,Q.push([O,Re,{gpuBuffer:re,download:i.jsepCreateDownloader(re,G,O),dispose:()=>{i._OrtReleaseTensor(se)!==0&&Ht("Can't release tensor.")}},"gpu-buffer"])}else if(pe==="ml-tensor"&&We>0){let W=i.webnnEnsureTensor,re=i.webnnIsInt64Supported;if(!W||!re)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Dn(fe,We)===void 0||!Mu(O))throw new Error(`Unsupported data type: ${O}`);if(O==="int64"&&!re(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let G=await W(e,N,fe,Re,!1);R=!0,Q.push([O,Re,{mlTensor:G,download:i.webnnCreateMLTensorDownloader(N,O),dispose:()=>{i.webnnReleaseTensorId(N),i._OrtReleaseTensor(se)}},"ml-tensor"])}else{let W=yu(O),re=new W(We);new Uint8Array(re.buffer,re.byteOffset,re.byteLength).set(i.HEAPU8.subarray(N,N+re.byteLength)),Q.push([O,Re,re,"cpu"])}}finally{i.stackRestore(me),O==="string"&&N&&i._free(N),R||i._OrtReleaseTensor(se),(Y=i.webnnOnRunEnd)==null||Y.call(i,c)}}return d&&!_&&(i._OrtClearBoundOutputs(d.handle)!==0&&Ht("Can't clear bound outputs."),tn.set(e,[c,p,u,d,_,!1])),Q}finally{i.stackRestore(b),C.forEach(q=>i._OrtReleaseTensor(q)),T.forEach(q=>i._OrtReleaseTensor(q)),v.forEach(q=>i._free(q)),w!==0&&i._OrtReleaseRunOptions(w),g.forEach(q=>i._free(q))}},ju=e=>{let s=Jt(),t=tn.get(e);if(!t)throw new Error("invalid session id");let r=t[0],o=s._OrtEndProfiling(r);o===0&&Ht("Can't get an profile file name."),s._OrtFree(o)},Nu=e=>{let s=[];for(let t of e){let r=t[2];!Array.isArray(r)&&"buffer"in r&&s.push(r.buffer)}return s}}),sn,qs,ro,Xo,Jo,ha,jc,ma,In,An,Ey,pv,hv,mv,fv,_v,gv,wv,yv=Ne(()=>{$r(),dv(),Nn(),_u(),sn=()=>!!es.wasm.proxy&&typeof document<"u",ro=!1,Xo=!1,Jo=!1,ma=new Map,In=(e,s)=>{let t=ma.get(e);t?t.push(s):ma.set(e,[s])},An=()=>{if(ro||!Xo||Jo||!qs)throw new Error("worker not ready")},Ey=e=>{switch(e.data.type){case"init-wasm":ro=!1,e.data.err?(Jo=!0,jc[1](e.data.err)):(Xo=!0,jc[0]()),ha&&(URL.revokeObjectURL(ha),ha=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let s=ma.get(e.data.type);e.data.err?s.shift()[1](e.data.err):s.shift()[0](e.data.out);break}}},pv=async()=>{if(!Xo){if(ro)throw new Error("multiple calls to 'initWasm()' detected.");if(Jo)throw new Error("previous call to 'initWasm()' failed.");if(ro=!0,sn())return new Promise((e,s)=>{qs==null||qs.terminate(),ub().then(([t,r])=>{try{qs=r,qs.onerror=n=>s(n),qs.onmessage=Ey,jc=[e,s];let o={type:"init-wasm",in:es};!o.in.wasm.wasmPaths&&(t||qc)&&(o.in.wasm.wasmPaths={wasm:new URL("/ecommerce-customer/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),qs.postMessage(o),ha=t}catch(o){s(o)}},s)});try{await gu(es.wasm),await Du(es),Xo=!0}catch(e){throw Jo=!0,e}finally{ro=!1}}},hv=async e=>{if(sn())return An(),new Promise((s,t)=>{In("init-ep",[s,t]);let r={type:"init-ep",in:{epName:e,env:es}};qs.postMessage(r)});await Lu(es,e)},mv=async e=>sn()?(An(),new Promise((s,t)=>{In("copy-from",[s,t]);let r={type:"copy-from",in:{buffer:e}};qs.postMessage(r,[e.buffer])})):Ea(e),fv=async(e,s)=>{if(sn()){if(s!=null&&s.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return An(),new Promise((t,r)=>{In("create",[t,r]);let o={type:"create",in:{model:e,options:{...s}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),qs.postMessage(o,n)})}else return zu(e,s)},_v=async e=>{if(sn())return An(),new Promise((s,t)=>{In("release",[s,t]);let r={type:"release",in:e};qs.postMessage(r)});Bu(e)},gv=async(e,s,t,r,o,n)=>{if(sn()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return An(),new Promise((i,a)=>{In("run",[i,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:s,inputs:l,outputIndices:r,options:n}};qs.postMessage(c,Nu(l))})}else return Ru(e,s,t,r,o,n)},wv=async e=>{if(sn())return An(),new Promise((s,t)=>{In("end-profiling",[s,t]);let r={type:"end-profiling",in:e};qs.postMessage(r)});ju(e)}}),Nc,Py,bv,s1=Ne(()=>{$r(),yv(),gt(),fu(),mb(),Nc=(e,s)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${s()}`)}},Py=e=>{switch(e[3]){case"cpu":return new Pr(e[0],e[2],e[1]);case"gpu-buffer":{let s=e[0];if(!bu(s))throw new Error(`not supported data type: ${s} for deserializing GPU tensor`);let{gpuBuffer:t,download:r,dispose:o}=e[2];return Pr.fromGpuBuffer(t,{dataType:s,dims:e[1],download:r,dispose:o})}case"ml-tensor":{let s=e[0];if(!Mu(s))throw new Error(`not supported data type: ${s} for deserializing MLTensor tensor`);let{mlTensor:t,download:r,dispose:o}=e[2];return Pr.fromMLTensor(t,{dataType:s,dims:e[1],download:r,dispose:o})}default:throw new Error(`invalid data location: ${e[3]}`)}},bv=class{async fetchModelAndCopyToWasmMemory(e){return mv(await vu(e))}async loadModel(e,s){Sr();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await fv(t,s),hr()}async dispose(){return _v(this.sessionId)}async run(e,s,t){Sr();let r=[],o=[];Object.entries(e).forEach(u=>{let d=u[0],_=u[1],f=this.inputNames.indexOf(d);if(f===-1)throw new Error(`invalid input '${d}'`);r.push(_),o.push(f)});let n=[],i=[];Object.entries(s).forEach(u=>{let d=u[0],_=u[1],f=this.outputNames.indexOf(d);if(f===-1)throw new Error(`invalid output '${d}'`);n.push(_),i.push(f)});let a=r.map((u,d)=>Nc(u,()=>`input "${this.inputNames[o[d]]}"`)),l=n.map((u,d)=>u?Nc(u,()=>`output "${this.outputNames[i[d]]}"`):null),c=await gv(this.sessionId,o,a,i,l,t),p={};for(let u=0;u<c.length;u++)p[this.outputNames[i[u]]]=n[u]??Py(c[u]);return hr(),p}startProfiling(){}endProfiling(){wv(this.sessionId)}}}),Mv={};uo(Mv,{OnnxruntimeWebAssemblyBackend:()=>cu,initializeFlags:()=>lu,wasmBackend:()=>vv});var lu,cu,vv,r1=Ne(()=>{$r(),yv(),s1(),lu=()=>{(typeof es.wasm.initTimeout!="number"||es.wasm.initTimeout<0)&&(es.wasm.initTimeout=0);let e=es.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),es.wasm.simd=!1),typeof es.wasm.proxy!="boolean"&&(es.wasm.proxy=!1),typeof es.wasm.trace!="boolean"&&(es.wasm.trace=!1),typeof es.wasm.numThreads!="number"||!Number.isInteger(es.wasm.numThreads)||es.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)es.wasm.numThreads=1;else{let s=typeof navigator>"u"?Vx("node:os").cpus().length:navigator.hardwareConcurrency;es.wasm.numThreads=Math.min(4,Math.ceil((s||1)/2))}},cu=class{async init(e){lu(),await pv(),await hv(e)}async createInferenceSessionHandler(e,s){let t=new bv;return await t.loadModel(e,s),t}},vv=new cu});$r();$r();$r();var n1="1.22.0-dev.20250409-89f8206ba4",o1=nb;{let e=(r1(),ii(Mv)).wasmBackend;Ln("webgpu",e,5),Ln("webnn",e,5),Ln("cpu",e,10),Ln("wasm",e,10)}Object.defineProperty(es.versions,"web",{value:n1,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i1=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return mu},get TRACE(){return ai},get TRACE_FUNC_BEGIN(){return Sr},get TRACE_FUNC_END(){return hr},get Tensor(){return Pr},default:o1,get env(){return es},get registerBackend(){return Ln}},Symbol.toStringTag,{value:"Module"}));var Nr={},a1={"onnxruntime-common":e=>{e.exports=Rx},"onnxruntime-web":e=>{e.exports=i1},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,s,t)=>{t.r(s),t.d(s,{Environment:()=>Fe,Interpreter:()=>Ge,Template:()=>sr,parse:()=>N,tokenize:()=>u});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),o=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endset:r.EndSet,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,break:r.Break,continue:r.Continue,true:r.BooleanLiteral,false:r.BooleanLiteral,none:r.NullLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral,None:r.NullLiteral}),n=class{constructor(L,oe){this.value=L,this.type=oe}};function i(L){return/\w/.test(L)}function a(L){return/[0-9]/.test(L)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],c=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(L,oe={}){return L.endsWith(`
`)&&(L=L.slice(0,-1)),L=L.replace(/{#.*?#}/gs,"{##}"),oe.lstrip_blocks&&(L=L.replace(/^[ \t]*({[#%])/gm,"$1")),oe.trim_blocks&&(L=L.replace(/([#%]})\n/g,"$1")),L.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function u(L,oe={}){var ve,xt,Dt;const j=[],te=p(L,oe);let ge=0;const Le=mt=>{let ut="";for(;mt(te[ge]);){if(te[ge]==="\\"){if(++ge,ge>=te.length)throw new SyntaxError("Unexpected end of input");const it=te[ge++],Nt=c.get(it);if(Nt===void 0)throw new SyntaxError(`Unexpected escaped character: ${it}`);ut+=Nt;continue}if(ut+=te[ge++],ge>=te.length)throw new SyntaxError("Unexpected end of input")}return ut};e:for(;ge<te.length;){const mt=(ve=j.at(-1))==null?void 0:ve.type;if(mt===void 0||mt===r.CloseStatement||mt===r.CloseExpression){let it="";for(;ge<te.length&&!(te[ge]==="{"&&(te[ge+1]==="%"||te[ge+1]==="{"));)it+=te[ge++];if(it.length>0){j.push(new n(it,r.Text));continue}}Le(it=>/\s/.test(it));const ut=te[ge];if(ut==="-"||ut==="+"){const it=(xt=j.at(-1))==null?void 0:xt.type;if(it===r.Text||it===void 0)throw new SyntaxError(`Unexpected character: ${ut}`);switch(it){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.NullLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++ge;const Nt=Le(a);j.push(new n(`${ut}${Nt}`,Nt.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[it,Nt]of l)if(te.slice(ge,ge+it.length)===it){j.push(new n(it,Nt)),ge+=it.length;continue e}if(ut==="'"||ut==='"'){++ge;const it=Le(Nt=>Nt!==ut);j.push(new n(it,r.StringLiteral)),++ge;continue}if(a(ut)){const it=Le(a);j.push(new n(it,r.NumericLiteral));continue}if(i(ut)){const it=Le(i),Nt=Object.hasOwn(o,it)?o[it]:r.Identifier;Nt===r.In&&((Dt=j.at(-1))==null?void 0:Dt.type)===r.Not?(j.pop(),j.push(new n("not in",r.NotIn))):j.push(new n(it,Nt));continue}throw new SyntaxError(`Unexpected character: ${ut}`)}return j}var d=class{constructor(){ee(this,"type","Statement")}},_=class extends d{constructor(oe){super();ee(this,"type","Program");this.body=oe}},f=class extends d{constructor(oe,j,te){super();ee(this,"type","If");this.test=oe,this.body=j,this.alternate=te}},y=class extends d{constructor(oe,j,te,ge){super();ee(this,"type","For");this.loopvar=oe,this.iterable=j,this.body=te,this.defaultBlock=ge}},$=class extends d{constructor(){super(...arguments);ee(this,"type","Break")}},w=class extends d{constructor(){super(...arguments);ee(this,"type","Continue")}},g=class extends d{constructor(oe,j,te){super();ee(this,"type","Set");this.assignee=oe,this.value=j,this.body=te}},C=class extends d{constructor(oe,j,te){super();ee(this,"type","Macro");this.name=oe,this.args=j,this.body=te}},T=class extends d{constructor(){super(...arguments);ee(this,"type","Expression")}},v=class extends T{constructor(oe,j,te){super();ee(this,"type","MemberExpression");this.object=oe,this.property=j,this.computed=te}},b=class extends T{constructor(oe,j){super();ee(this,"type","CallExpression");this.callee=oe,this.args=j}},x=class extends T{constructor(oe){super();ee(this,"type","Identifier");this.value=oe}},P=class extends T{constructor(oe){super();ee(this,"type","Literal");this.value=oe}},A=class extends P{constructor(){super(...arguments);ee(this,"type","NumericLiteral")}},D=class extends P{constructor(){super(...arguments);ee(this,"type","StringLiteral")}},H=class extends P{constructor(){super(...arguments);ee(this,"type","BooleanLiteral")}},K=class extends P{constructor(){super(...arguments);ee(this,"type","NullLiteral")}},B=class extends P{constructor(){super(...arguments);ee(this,"type","ArrayLiteral")}},Y=class extends P{constructor(){super(...arguments);ee(this,"type","TupleLiteral")}},q=class extends P{constructor(){super(...arguments);ee(this,"type","ObjectLiteral")}},Q=class extends T{constructor(oe,j,te){super();ee(this,"type","BinaryExpression");this.operator=oe,this.left=j,this.right=te}},X=class extends T{constructor(oe,j){super();ee(this,"type","FilterExpression");this.operand=oe,this.filter=j}},se=class extends T{constructor(oe,j){super();ee(this,"type","SelectExpression");this.iterable=oe,this.test=j}},me=class extends T{constructor(oe,j,te){super();ee(this,"type","TestExpression");this.operand=oe,this.negate=j,this.test=te}},le=class extends T{constructor(oe,j){super();ee(this,"type","UnaryExpression");this.operator=oe,this.argument=j}},R=class extends T{constructor(oe=void 0,j=void 0,te=void 0){super();ee(this,"type","SliceExpression");this.start=oe,this.stop=j,this.step=te}},O=class extends T{constructor(oe,j){super();ee(this,"type","KeywordArgumentExpression");this.key=oe,this.value=j}};function N(L){const oe=new _([]);let j=0;function te(Oe,Ze){const ct=L[j++];if(!ct||ct.type!==Oe)throw new Error(`Parser Error: ${Ze}. ${ct.type} !== ${Oe}.`);return ct}function ge(){switch(L[j].type){case r.Text:return xt();case r.OpenStatement:return Dt();case r.OpenExpression:return mt();default:throw new SyntaxError(`Unexpected token type: ${L[j].type}`)}}function Le(...Oe){return j+Oe.length<=L.length&&Oe.some((Ze,ct)=>Ze!==L[j+ct].type)}function ve(...Oe){return j+Oe.length<=L.length&&Oe.every((Ze,ct)=>Ze===L[j+ct].type)}function xt(){return new D(te(r.Text,"Expected text token").value)}function Dt(){te(r.OpenStatement,"Expected opening statement token");let Oe;switch(L[j].type){case r.Set:++j,Oe=ut(),te(r.CloseStatement,"Expected closing statement token");break;case r.If:++j,Oe=it(),te(r.OpenStatement,"Expected {% token"),te(r.EndIf,"Expected endif token"),te(r.CloseStatement,"Expected %} token");break;case r.Macro:++j,Oe=Nt(),te(r.OpenStatement,"Expected {% token"),te(r.EndMacro,"Expected endmacro token"),te(r.CloseStatement,"Expected %} token");break;case r.For:++j,Oe=Ms(),te(r.OpenStatement,"Expected {% token"),te(r.EndFor,"Expected endfor token"),te(r.CloseStatement,"Expected %} token");break;case r.Break:++j,te(r.CloseStatement,"Expected closing statement token"),Oe=new $;break;case r.Continue:++j,te(r.CloseStatement,"Expected closing statement token"),Oe=new w;break;default:throw new SyntaxError(`Unknown statement type: ${L[j].type}`)}return Oe}function mt(){te(r.OpenExpression,"Expected opening expression token");const Oe=Yt();return te(r.CloseExpression,"Expected closing expression token"),Oe}function ut(){var Ze,ct;const Oe=Yt();if(ve(r.Equals)){++j;const Ut=Yt();return new g(Oe,Ut,[])}else{const Ut=[];for(te(r.CloseStatement,"Expected %} token");!(((Ze=L[j])==null?void 0:Ze.type)===r.OpenStatement&&((ct=L[j+1])==null?void 0:ct.type)===r.EndSet);){const or=ge();Ut.push(or)}return te(r.OpenStatement,"Expected {% token"),te(r.EndSet,"Expected endset token"),new g(Oe,null,Ut)}}function it(){var Ut,or,ir,ps,ar,hs,_s,lr;const Oe=Yt();te(r.CloseStatement,"Expected closing statement token");const Ze=[],ct=[];for(;!(((Ut=L[j])==null?void 0:Ut.type)===r.OpenStatement&&(((or=L[j+1])==null?void 0:or.type)===r.ElseIf||((ir=L[j+1])==null?void 0:ir.type)===r.Else||((ps=L[j+1])==null?void 0:ps.type)===r.EndIf));)Ze.push(ge());if(((ar=L[j])==null?void 0:ar.type)===r.OpenStatement&&((hs=L[j+1])==null?void 0:hs.type)!==r.EndIf)if(++j,ve(r.ElseIf))te(r.ElseIf,"Expected elseif token"),ct.push(it());else for(te(r.Else,"Expected else token"),te(r.CloseStatement,"Expected closing statement token");!(((_s=L[j])==null?void 0:_s.type)===r.OpenStatement&&((lr=L[j+1])==null?void 0:lr.type)===r.EndIf);)ct.push(ge());return new f(Oe,Ze,ct)}function Nt(){const Oe=js();if(Oe.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Ze=fr();te(r.CloseStatement,"Expected closing statement token");const ct=[];for(;Le(r.OpenStatement,r.EndMacro);)ct.push(ge());return new C(Oe,Ze,ct)}function Qt(Oe=!1){const Ze=Oe?js:Yt,ct=[Ze()],Ut=ve(r.Comma);for(;Ut&&(++j,ct.push(Ze()),!!ve(r.Comma)););return Ut?new Y(ct):ct[0]}function Ms(){const Oe=Qt(!0);if(!(Oe instanceof x||Oe instanceof Y))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Oe.type} instead`);te(r.In,"Expected `in` keyword following loop variable");const Ze=Yt();te(r.CloseStatement,"Expected closing statement token");const ct=[];for(;Le(r.OpenStatement,r.EndFor)&&Le(r.OpenStatement,r.Else);)ct.push(ge());const Ut=[];if(ve(r.OpenStatement,r.Else))for(++j,++j,te(r.CloseStatement,"Expected closing statement token");Le(r.OpenStatement,r.EndFor);)Ut.push(ge());return new y(Oe,Ze,ct,Ut)}function Yt(){return zs()}function zs(){const Oe=rr();if(ve(r.If)){++j;const Ze=rr();if(ve(r.Else)){++j;const ct=rr();return new f(Ze,[Oe],[ct])}else return new se(Oe,Ze)}return Oe}function rr(){let Oe=mr();for(;ve(r.Or);){const Ze=L[j];++j;const ct=mr();Oe=new Q(Ze,Oe,ct)}return Oe}function mr(){let Oe=nr();for(;ve(r.And);){const Ze=L[j];++j;const ct=nr();Oe=new Q(Ze,Oe,ct)}return Oe}function nr(){let Oe;for(;ve(r.Not);){const Ze=L[j];++j;const ct=nr();Oe=new le(Ze,ct)}return Oe??kr()}function kr(){let Oe=Vs();for(;ve(r.ComparisonBinaryOperator)||ve(r.In)||ve(r.NotIn);){const Ze=L[j];++j;const ct=Vs();Oe=new Q(Ze,Oe,ct)}return Oe}function Vs(){let Oe=Fr();for(;ve(r.AdditiveBinaryOperator);){const Ze=L[j];++j;const ct=Fr();Oe=new Q(Ze,Oe,ct)}return Oe}function Ir(){const Oe=cs(js());return ve(r.OpenParen)?Qs(Oe):Oe}function Qs(Oe){let Ze=new b(Oe,fr());return Ze=cs(Ze),ve(r.OpenParen)&&(Ze=Qs(Ze)),Ze}function fr(){te(r.OpenParen,"Expected opening parenthesis for arguments list");const Oe=Ar();return te(r.CloseParen,"Expected closing parenthesis for arguments list"),Oe}function Ar(){const Oe=[];for(;!ve(r.CloseParen);){let Ze=Yt();if(ve(r.Equals)){if(++j,!(Ze instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const ct=Yt();Ze=new O(Ze,ct)}Oe.push(Ze),ve(r.Comma)&&++j}return Oe}function Or(){const Oe=[];let Ze=!1;for(;!ve(r.CloseSquareBracket);)ve(r.Colon)?(Oe.push(void 0),++j,Ze=!0):(Oe.push(Yt()),ve(r.Colon)&&(++j,Ze=!0));if(Oe.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Ze){if(Oe.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new R(...Oe)}return Oe[0]}function cs(Oe){for(;ve(r.Dot)||ve(r.OpenSquareBracket);){const Ze=L[j];++j;let ct;const Ut=Ze.type!==r.Dot;if(Ut)ct=Or(),te(r.CloseSquareBracket,"Expected closing square bracket");else if(ct=js(),ct.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Oe=new v(Oe,ct,Ut)}return Oe}function Fr(){let Oe=Cs();for(;ve(r.MultiplicativeBinaryOperator);){const Ze=L[j];++j;const ct=Cs();Oe=new Q(Ze,Oe,ct)}return Oe}function Cs(){let Oe=_r();for(;ve(r.Is);){++j;const Ze=ve(r.Not);Ze&&++j;let ct=js();if(ct instanceof H?ct=new x(ct.value.toString()):ct instanceof K&&(ct=new x("none")),!(ct instanceof x))throw new SyntaxError("Expected identifier for the test");Oe=new me(Oe,Ze,ct)}return Oe}function _r(){let Oe=Ir();for(;ve(r.Pipe);){++j;let Ze=js();if(!(Ze instanceof x))throw new SyntaxError("Expected identifier for the filter");ve(r.OpenParen)&&(Ze=Qs(Ze)),Oe=new X(Oe,Ze)}return Oe}function js(){const Oe=L[j];switch(Oe.type){case r.NumericLiteral:return++j,new A(Number(Oe.value));case r.StringLiteral:return++j,new D(Oe.value);case r.BooleanLiteral:return++j,new H(Oe.value.toLowerCase()==="true");case r.NullLiteral:return++j,new K(null);case r.Identifier:return++j,new x(Oe.value);case r.OpenParen:{++j;const Ze=Qt();if(L[j].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${L[j].type} instead`);return++j,Ze}case r.OpenSquareBracket:{++j;const Ze=[];for(;!ve(r.CloseSquareBracket);)Ze.push(Yt()),ve(r.Comma)&&++j;return++j,new B(Ze)}case r.OpenCurlyBracket:{++j;const Ze=new Map;for(;!ve(r.CloseCurlyBracket);){const ct=Yt();te(r.Colon,"Expected colon between key and value in object literal");const Ut=Yt();Ze.set(ct,Ut),ve(r.Comma)&&++j}return++j,new q(Ze)}default:throw new SyntaxError(`Unexpected token: ${Oe.type}`)}}for(;j<L.length;)oe.body.push(ge());return oe}function Z(L,oe,j=1){oe===void 0&&(oe=L,L=0);const te=[];for(let ge=L;ge<oe;ge+=j)te.push(ge);return te}function fe(L,oe,j,te=1){const ge=Math.sign(te);ge>=0?(oe=(oe??(oe=0))<0?Math.max(L.length+oe,0):Math.min(oe,L.length),j=(j??(j=L.length))<0?Math.max(L.length+j,0):Math.min(j,L.length)):(oe=(oe??(oe=L.length-1))<0?Math.max(L.length+oe,-1):Math.min(oe,L.length-1),j=(j??(j=-1))<-1?Math.max(L.length+j,-1):Math.min(j,L.length-1));const Le=[];for(let ve=oe;ge*ve<ge*j;ve+=te)Le.push(L[ve]);return Le}function ie(L){return L.replace(/\b\w/g,oe=>oe.toUpperCase())}var Me=class extends Error{},Re=class extends Error{},We=class{constructor(L=void 0){ee(this,"type","RuntimeValue");ee(this,"value");ee(this,"builtins",new Map);this.value=L}__bool__(){return new re(!!this.value)}},pe=class extends We{constructor(){super(...arguments);ee(this,"type","NumericValue")}},W=class extends We{constructor(){super(...arguments);ee(this,"type","StringValue");ee(this,"builtins",new Map([["upper",new xe(()=>new W(this.value.toUpperCase()))],["lower",new xe(()=>new W(this.value.toLowerCase()))],["strip",new xe(()=>new W(this.value.trim()))],["title",new xe(()=>new W(ie(this.value)))],["length",new pe(this.value.length)],["rstrip",new xe(()=>new W(this.value.trimEnd()))],["lstrip",new xe(()=>new W(this.value.trimStart()))],["startswith",new xe(oe=>{if(oe.length===0)throw new Error("startswith() requires at least one argument");const j=oe[0];if(!(j instanceof W))throw new Error("startswith() argument must be a string");return new re(this.value.startsWith(j.value))})],["endswith",new xe(oe=>{if(oe.length===0)throw new Error("endswith() requires at least one argument");const j=oe[0];if(!(j instanceof W))throw new Error("endswith() argument must be a string");return new re(this.value.endsWith(j.value))})],["split",new xe(oe=>{const j=oe[0]??new ke;if(!(j instanceof W||j instanceof ke))throw new Error("sep argument must be a string or null");const te=oe[1]??new pe(-1);if(!(te instanceof pe))throw new Error("maxsplit argument must be a number");let ge=[];if(j instanceof ke){const Le=this.value.trimStart();for(const{0:ve,index:xt}of Le.matchAll(/\S+/g)){if(te.value!==-1&&ge.length>=te.value&&xt!==void 0){ge.push(ve+Le.slice(xt+ve.length));break}ge.push(ve)}}else{if(j.value==="")throw new Error("empty separator");ge=this.value.split(j.value),te.value!==-1&&ge.length>te.value&&ge.push(ge.splice(te.value).join(j.value))}return new he(ge.map(Le=>new W(Le)))})]]))}},re=class extends We{constructor(){super(...arguments);ee(this,"type","BooleanValue")}},G=class extends We{constructor(){super(...arguments);ee(this,"type","ObjectValue");ee(this,"builtins",new Map([["get",new xe(([oe,j])=>{if(!(oe instanceof W))throw new Error(`Object key must be a string: got ${oe.type}`);return this.value.get(oe.value)??j??new ke})],["items",new xe(()=>new he(Array.from(this.value.entries()).map(([oe,j])=>new he([new W(oe),j]))))]]))}__bool__(){return new re(this.value.size>0)}},ye=class extends G{constructor(){super(...arguments);ee(this,"type","KeywordArgumentsValue")}},he=class extends We{constructor(){super(...arguments);ee(this,"type","ArrayValue");ee(this,"builtins",new Map([["length",new pe(this.value.length)]]))}__bool__(){return new re(this.value.length>0)}},Ee=class extends he{constructor(){super(...arguments);ee(this,"type","TupleValue")}},xe=class extends We{constructor(){super(...arguments);ee(this,"type","FunctionValue")}},ke=class extends We{constructor(){super(...arguments);ee(this,"type","NullValue")}},Ce=class extends We{constructor(){super(...arguments);ee(this,"type","UndefinedValue")}},Fe=class{constructor(L){ee(this,"variables",new Map([["namespace",new xe(L=>{if(L.length===0)return new G(new Map);if(L.length!==1||!(L[0]instanceof G))throw new Error("`namespace` expects either zero arguments or a single object argument");return L[0]})]]));ee(this,"tests",new Map([["boolean",L=>L.type==="BooleanValue"],["callable",L=>L instanceof xe],["odd",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${L.type}`);return L.value%2!==0}],["even",L=>{if(L.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${L.type}`);return L.value%2===0}],["false",L=>L.type==="BooleanValue"&&!L.value],["true",L=>L.type==="BooleanValue"&&L.value],["none",L=>L.type==="NullValue"],["string",L=>L.type==="StringValue"],["number",L=>L.type==="NumericValue"],["integer",L=>L.type==="NumericValue"&&Number.isInteger(L.value)],["iterable",L=>L.type==="ArrayValue"||L.type==="StringValue"],["mapping",L=>L.type==="ObjectValue"],["lower",L=>{const oe=L.value;return L.type==="StringValue"&&oe===oe.toLowerCase()}],["upper",L=>{const oe=L.value;return L.type==="StringValue"&&oe===oe.toUpperCase()}],["none",L=>L.type==="NullValue"],["defined",L=>L.type!=="UndefinedValue"],["undefined",L=>L.type==="UndefinedValue"],["equalto",(L,oe)=>L.value===oe.value],["eq",(L,oe)=>L.value===oe.value]]));this.parent=L}set(L,oe){return this.declareVariable(L,Ue(oe))}declareVariable(L,oe){if(this.variables.has(L))throw new SyntaxError(`Variable already declared: ${L}`);return this.variables.set(L,oe),oe}setVariable(L,oe){return this.variables.set(L,oe),oe}resolve(L){if(this.variables.has(L))return this;if(this.parent)return this.parent.resolve(L);throw new Error(`Unknown variable: ${L}`)}lookupVariable(L){try{return this.resolve(L).variables.get(L)??new Ce}catch{return new Ce}}},Ge=class{constructor(L){ee(this,"global");this.global=L??new Fe}run(L){return this.evaluate(L,this.global)}evaluateBinaryExpression(L,oe){const j=this.evaluate(L.left,oe);switch(L.operator.value){case"and":return j.__bool__().value?this.evaluate(L.right,oe):j;case"or":return j.__bool__().value?j:this.evaluate(L.right,oe)}const te=this.evaluate(L.right,oe);switch(L.operator.value){case"==":return new re(j.value==te.value);case"!=":return new re(j.value!=te.value)}if(j instanceof Ce||te instanceof Ce)throw new Error("Cannot perform operation on undefined values");if(j instanceof ke||te instanceof ke)throw new Error("Cannot perform operation on null values");if(j instanceof pe&&te instanceof pe)switch(L.operator.value){case"+":return new pe(j.value+te.value);case"-":return new pe(j.value-te.value);case"*":return new pe(j.value*te.value);case"/":return new pe(j.value/te.value);case"%":return new pe(j.value%te.value);case"<":return new re(j.value<te.value);case">":return new re(j.value>te.value);case">=":return new re(j.value>=te.value);case"<=":return new re(j.value<=te.value)}else if(j instanceof he&&te instanceof he)switch(L.operator.value){case"+":return new he(j.value.concat(te.value))}else if(te instanceof he){const ge=te.value.find(Le=>Le.value===j.value)!==void 0;switch(L.operator.value){case"in":return new re(ge);case"not in":return new re(!ge)}}if(j instanceof W||te instanceof W)switch(L.operator.value){case"+":return new W(j.value.toString()+te.value.toString())}if(j instanceof W&&te instanceof W)switch(L.operator.value){case"in":return new re(te.value.includes(j.value));case"not in":return new re(!te.value.includes(j.value))}if(j instanceof W&&te instanceof G)switch(L.operator.value){case"in":return new re(te.value.has(j.value));case"not in":return new re(!te.value.has(j.value))}throw new SyntaxError(`Unknown operator "${L.operator.value}" between ${j.type} and ${te.type}`)}evaluateArguments(L,oe){const j=[],te=new Map;for(const ge of L)if(ge.type==="KeywordArgumentExpression"){const Le=ge;te.set(Le.key.value,this.evaluate(Le.value,oe))}else{if(te.size>0)throw new Error("Positional arguments must come before keyword arguments");j.push(this.evaluate(ge,oe))}return[j,te]}evaluateFilterExpression(L,oe){const j=this.evaluate(L.operand,oe);if(L.filter.type==="Identifier"){const te=L.filter;if(te.value==="tojson")return new W(Ie(j));if(j instanceof he)switch(te.value){case"list":return j;case"first":return j.value[0];case"last":return j.value[j.value.length-1];case"length":return new pe(j.value.length);case"reverse":return new he(j.value.reverse());case"sort":return new he(j.value.sort((ge,Le)=>{if(ge.type!==Le.type)throw new Error(`Cannot compare different types: ${ge.type} and ${Le.type}`);switch(ge.type){case"NumericValue":return ge.value-Le.value;case"StringValue":return ge.value.localeCompare(Le.value);default:throw new Error(`Cannot compare type: ${ge.type}`)}}));case"join":return new W(j.value.map(ge=>ge.value).join(""));case"string":return new W(Ie(j));default:throw new Error(`Unknown ArrayValue filter: ${te.value}`)}else if(j instanceof W)switch(te.value){case"length":return new pe(j.value.length);case"upper":return new W(j.value.toUpperCase());case"lower":return new W(j.value.toLowerCase());case"title":return new W(ie(j.value));case"capitalize":return new W(j.value.charAt(0).toUpperCase()+j.value.slice(1));case"trim":return new W(j.value.trim());case"indent":return new W(j.value.split(`
`).map((ge,Le)=>Le===0||ge.length===0?ge:"    "+ge).join(`
`));case"join":case"string":return j;default:throw new Error(`Unknown StringValue filter: ${te.value}`)}else if(j instanceof pe)switch(te.value){case"abs":return new pe(Math.abs(j.value));default:throw new Error(`Unknown NumericValue filter: ${te.value}`)}else if(j instanceof G)switch(te.value){case"items":return new he(Array.from(j.value.entries()).map(([ge,Le])=>new he([new W(ge),Le])));case"length":return new pe(j.value.size);default:throw new Error(`Unknown ObjectValue filter: ${te.value}`)}throw new Error(`Cannot apply filter "${te.value}" to type: ${j.type}`)}else if(L.filter.type==="CallExpression"){const te=L.filter;if(te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${te.callee.type}`);const ge=te.callee.value;if(ge==="tojson"){const[,Le]=this.evaluateArguments(te.args,oe),ve=Le.get("indent")??new ke;if(!(ve instanceof pe||ve instanceof ke))throw new Error("If set, indent must be a number");return new W(Ie(j,ve.value))}else if(ge==="join"){let Le;if(j instanceof W)Le=Array.from(j.value);else if(j instanceof he)Le=j.value.map(mt=>mt.value);else throw new Error(`Cannot apply filter "${ge}" to type: ${j.type}`);const[ve,xt]=this.evaluateArguments(te.args,oe),Dt=ve.at(0)??xt.get("separator")??new W("");if(!(Dt instanceof W))throw new Error("separator must be a string");return new W(Le.join(Dt.value))}if(j instanceof he){switch(ge){case"selectattr":case"rejectattr":{const Le=ge==="selectattr";if(j.value.some(it=>!(it instanceof G)))throw new Error(`\`${ge}\` can only be applied to array of objects`);if(te.args.some(it=>it.type!=="StringLiteral"))throw new Error(`arguments of \`${ge}\` must be strings`);const[ve,xt,Dt]=te.args.map(it=>this.evaluate(it,oe));let mt;if(xt){const it=oe.tests.get(xt.value);if(!it)throw new Error(`Unknown test: ${xt.value}`);mt=it}else mt=(...it)=>it[0].__bool__().value;const ut=j.value.filter(it=>{const Nt=it.value.get(ve.value),Qt=Nt?mt(Nt,Dt):!1;return Le?Qt:!Qt});return new he(ut)}case"map":{const[,Le]=this.evaluateArguments(te.args,oe);if(Le.has("attribute")){const ve=Le.get("attribute");if(!(ve instanceof W))throw new Error("attribute must be a string");const xt=Le.get("default"),Dt=j.value.map(mt=>{if(!(mt instanceof G))throw new Error("items in map must be an object");return mt.value.get(ve.value)??xt??new Ce});return new he(Dt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ge}`)}else if(j instanceof W){switch(ge){case"indent":{const[Le,ve]=this.evaluateArguments(te.args,oe),xt=Le.at(0)??ve.get("width")??new pe(4);if(!(xt instanceof pe))throw new Error("width must be a number");const Dt=Le.at(1)??ve.get("first")??new re(!1),mt=Le.at(2)??ve.get("blank")??new re(!1),ut=j.value.split(`
`),it=" ".repeat(xt.value),Nt=ut.map((Qt,Ms)=>!Dt.value&&Ms===0||!mt.value&&Qt.length===0?Qt:it+Qt);return new W(Nt.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ge}`)}else throw new Error(`Cannot apply filter "${ge}" to type: ${j.type}`)}throw new Error(`Unknown filter: ${L.filter.type}`)}evaluateTestExpression(L,oe){const j=this.evaluate(L.operand,oe),te=oe.tests.get(L.test.value);if(!te)throw new Error(`Unknown test: ${L.test.value}`);const ge=te(j);return new re(L.negate?!ge:ge)}evaluateUnaryExpression(L,oe){const j=this.evaluate(L.argument,oe);switch(L.operator.value){case"not":return new re(!j.value);default:throw new SyntaxError(`Unknown operator: ${L.operator.value}`)}}evalProgram(L,oe){return this.evaluateBlock(L.body,oe)}evaluateBlock(L,oe){let j="";for(const te of L){const ge=this.evaluate(te,oe);ge.type!=="NullValue"&&ge.type!=="UndefinedValue"&&(j+=ge.value)}return new W(j)}evaluateIdentifier(L,oe){return oe.lookupVariable(L.value)}evaluateCallExpression(L,oe){const[j,te]=this.evaluateArguments(L.args,oe);te.size>0&&j.push(new ye(te));const ge=this.evaluate(L.callee,oe);if(ge.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);return ge.value(j,oe)}evaluateSliceExpression(L,oe,j){if(!(L instanceof he||L instanceof W))throw new Error("Slice object must be an array or string");const te=this.evaluate(oe.start,j),ge=this.evaluate(oe.stop,j),Le=this.evaluate(oe.step,j);if(!(te instanceof pe||te instanceof Ce))throw new Error("Slice start must be numeric or undefined");if(!(ge instanceof pe||ge instanceof Ce))throw new Error("Slice stop must be numeric or undefined");if(!(Le instanceof pe||Le instanceof Ce))throw new Error("Slice step must be numeric or undefined");return L instanceof he?new he(fe(L.value,te.value,ge.value,Le.value)):new W(fe(Array.from(L.value),te.value,ge.value,Le.value).join(""))}evaluateMemberExpression(L,oe){const j=this.evaluate(L.object,oe);let te;if(L.computed){if(L.property.type==="SliceExpression")return this.evaluateSliceExpression(j,L.property,oe);te=this.evaluate(L.property,oe)}else te=new W(L.property.value);let ge;if(j instanceof G){if(!(te instanceof W))throw new Error(`Cannot access property with non-string: got ${te.type}`);ge=j.value.get(te.value)??j.builtins.get(te.value)}else if(j instanceof he||j instanceof W)if(te instanceof pe)ge=j.value.at(te.value),j instanceof W&&(ge=new W(j.value.at(te.value)));else if(te instanceof W)ge=j.builtins.get(te.value);else throw new Error(`Cannot access property with non-string/non-number: got ${te.type}`);else{if(!(te instanceof W))throw new Error(`Cannot access property with non-string: got ${te.type}`);ge=j.builtins.get(te.value)}return ge instanceof We?ge:new Ce}evaluateSet(L,oe){const j=L.value?this.evaluate(L.value,oe):this.evaluateBlock(L.body,oe);if(L.assignee.type==="Identifier"){const te=L.assignee.value;oe.setVariable(te,j)}else if(L.assignee.type==="MemberExpression"){const te=L.assignee,ge=this.evaluate(te.object,oe);if(!(ge instanceof G))throw new Error("Cannot assign to member of non-object");if(te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ge.value.set(te.property.value,j)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(L.assignee)}`);return new ke}evaluateIf(L,oe){const j=this.evaluate(L.test,oe);return this.evaluateBlock(j.__bool__().value?L.body:L.alternate,oe)}evaluateFor(L,oe){const j=new Fe(oe);let te,ge;if(L.iterable.type==="SelectExpression"){const mt=L.iterable;ge=this.evaluate(mt.iterable,j),te=mt.test}else ge=this.evaluate(L.iterable,j);if(!(ge instanceof he))throw new Error(`Expected iterable type in for loop: got ${ge.type}`);const Le=[],ve=[];for(let mt=0;mt<ge.value.length;++mt){const ut=new Fe(j),it=ge.value[mt];let Nt;if(L.loopvar.type==="Identifier")Nt=Qt=>Qt.setVariable(L.loopvar.value,it);else if(L.loopvar.type==="TupleLiteral"){const Qt=L.loopvar;if(it.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${it.type}`);const Ms=it;if(Qt.value.length!==Ms.value.length)throw new Error(`Too ${Qt.value.length>Ms.value.length?"few":"many"} items to unpack`);Nt=Yt=>{for(let zs=0;zs<Qt.value.length;++zs){if(Qt.value[zs].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Qt.value[zs].type}`);Yt.setVariable(Qt.value[zs].value,Ms.value[zs])}}}else throw new Error(`Invalid loop variable(s): ${L.loopvar.type}`);te&&(Nt(ut),!this.evaluate(te,ut).__bool__().value)||(Le.push(it),ve.push(Nt))}let xt="",Dt=!0;for(let mt=0;mt<Le.length;++mt){const ut=new Map([["index",new pe(mt+1)],["index0",new pe(mt)],["revindex",new pe(Le.length-mt)],["revindex0",new pe(Le.length-mt-1)],["first",new re(mt===0)],["last",new re(mt===Le.length-1)],["length",new pe(Le.length)],["previtem",mt>0?Le[mt-1]:new Ce],["nextitem",mt<Le.length-1?Le[mt+1]:new Ce]]);j.setVariable("loop",new G(ut)),ve[mt](j);try{const it=this.evaluateBlock(L.body,j);xt+=it.value}catch(it){if(it instanceof Re)continue;if(it instanceof Me)break;throw it}Dt=!1}if(Dt){const mt=this.evaluateBlock(L.defaultBlock,j);xt+=mt.value}return new W(xt)}evaluateMacro(L,oe){return oe.setVariable(L.name.value,new xe((j,te)=>{var ve;const ge=new Fe(te);j=j.slice();let Le;((ve=j.at(-1))==null?void 0:ve.type)==="KeywordArgumentsValue"&&(Le=j.pop());for(let xt=0;xt<L.args.length;++xt){const Dt=L.args[xt],mt=j[xt];if(Dt.type==="Identifier"){const ut=Dt;if(!mt)throw new Error(`Missing positional argument: ${ut.value}`);ge.setVariable(ut.value,mt)}else if(Dt.type==="KeywordArgumentExpression"){const ut=Dt,it=mt??(Le==null?void 0:Le.value.get(ut.key.value))??this.evaluate(ut.value,ge);ge.setVariable(ut.key.value,it)}else throw new Error(`Unknown argument type: ${Dt.type}`)}return this.evaluateBlock(L.body,ge)})),new ke}evaluate(L,oe){if(L===void 0)return new Ce;switch(L.type){case"Program":return this.evalProgram(L,oe);case"Set":return this.evaluateSet(L,oe);case"If":return this.evaluateIf(L,oe);case"For":return this.evaluateFor(L,oe);case"Macro":return this.evaluateMacro(L,oe);case"Break":throw new Me;case"Continue":throw new Re;case"NumericLiteral":return new pe(Number(L.value));case"StringLiteral":return new W(L.value);case"BooleanLiteral":return new re(L.value);case"NullLiteral":return new ke(L.value);case"ArrayLiteral":return new he(L.value.map(j=>this.evaluate(j,oe)));case"TupleLiteral":return new Ee(L.value.map(j=>this.evaluate(j,oe)));case"ObjectLiteral":{const j=new Map;for(const[te,ge]of L.value){const Le=this.evaluate(te,oe);if(!(Le instanceof W))throw new Error(`Object keys must be strings: got ${Le.type}`);j.set(Le.value,this.evaluate(ge,oe))}return new G(j)}case"Identifier":return this.evaluateIdentifier(L,oe);case"CallExpression":return this.evaluateCallExpression(L,oe);case"MemberExpression":return this.evaluateMemberExpression(L,oe);case"UnaryExpression":return this.evaluateUnaryExpression(L,oe);case"BinaryExpression":return this.evaluateBinaryExpression(L,oe);case"FilterExpression":return this.evaluateFilterExpression(L,oe);case"TestExpression":return this.evaluateTestExpression(L,oe);default:throw new SyntaxError(`Unknown node type: ${L.type}`)}}};function Ue(L){switch(typeof L){case"number":return new pe(L);case"string":return new W(L);case"boolean":return new re(L);case"undefined":return new Ce;case"object":return L===null?new ke:Array.isArray(L)?new he(L.map(Ue)):new G(new Map(Object.entries(L).map(([oe,j])=>[oe,Ue(j)])));case"function":return new xe((oe,j)=>{const te=L(...oe.map(ge=>ge.value))??null;return Ue(te)});default:throw new Error(`Cannot convert to runtime value: ${L}`)}}function Ie(L,oe,j){const te=j??0;switch(L.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(L.value);case"ArrayValue":case"ObjectValue":{const ge=oe?" ".repeat(oe):"",Le=`
`+ge.repeat(te),ve=Le+ge;if(L.type==="ArrayValue"){const xt=L.value.map(Dt=>Ie(Dt,oe,te+1));return oe?`[${ve}${xt.join(`,${ve}`)}${Le}]`:`[${xt.join(", ")}]`}else{const xt=Array.from(L.value.entries()).map(([Dt,mt])=>{const ut=`"${Dt}": ${Ie(mt,oe,te+1)}`;return oe?`${ve}${ut}`:ut});return oe?`{${xt.join(",")}${Le}}`:`{${xt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${L.type}`)}}var De=`
`,qe="{%- ",Ye=" -%}",ot={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function Ke(L,oe="	"){const j=typeof oe=="number"?" ".repeat(oe):oe;return et(L.body,0,j).replace(/\n$/,"")}function Ae(...L){return qe+L.join(" ")+Ye}function et(L,oe,j){return L.map(te=>_t(te,oe,j)).join(De)}function _t(L,oe,j){const te=j.repeat(oe);switch(L.type){case"Program":return et(L.body,oe,j);case"If":return zt(L,oe,j);case"For":return jt(L,oe,j);case"Set":return bs(L,oe,j);case"Macro":return ls(L,oe,j);case"Break":return te+Ae("break");case"Continue":return te+Ae("continue");default:return te+"{{- "+Mt(L)+" -}}"}}function zt(L,oe,j){const te=j.repeat(oe),ge=[];let Le=L;for(;Le&&(ge.push({test:Le.test,body:Le.body}),Le.alternate.length===1&&Le.alternate[0].type==="If");)Le=Le.alternate[0];let ve=te+Ae("if",Mt(ge[0].test))+De+et(ge[0].body,oe+1,j);for(let xt=1;xt<ge.length;xt++)ve+=De+te+Ae("elif",Mt(ge[xt].test))+De+et(ge[xt].body,oe+1,j);return Le&&Le.alternate.length>0&&(ve+=De+te+Ae("else")+De+et(Le.alternate,oe+1,j)),ve+=De+te+Ae("endif"),ve}function jt(L,oe,j){const te=j.repeat(oe);let ge="";if(L.iterable.type==="SelectExpression"){const ve=L.iterable;ge=`${Mt(ve.iterable)} if ${Mt(ve.test)}`}else ge=Mt(L.iterable);let Le=te+Ae("for",Mt(L.loopvar),"in",ge)+De+et(L.body,oe+1,j);return L.defaultBlock.length>0&&(Le+=De+te+Ae("else")+De+et(L.defaultBlock,oe+1,j)),Le+=De+te+Ae("endfor"),Le}function bs(L,oe,j){const te=j.repeat(oe),ge=Mt(L.assignee),Le=L.value?Mt(L.value):"",ve=te+Ae("set",`${ge}${L.value?" = "+Le:""}`);return L.body.length===0?ve:ve+De+et(L.body,oe+1,j)+De+te+Ae("endset")}function ls(L,oe,j){const te=j.repeat(oe),ge=L.args.map(Mt).join(", ");return te+Ae("macro",`${L.name.value}(${ge})`)+De+et(L.body,oe+1,j)+De+te+Ae("endmacro")}function Mt(L,oe=-1){switch(L.type){case"Identifier":return L.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${L.value}`;case"StringLiteral":return JSON.stringify(L.value);case"BinaryExpression":{const j=L,te=ot[j.operator.type]??0,ge=Mt(j.left,te),Le=Mt(j.right,te+1),ve=`${ge} ${j.operator.value} ${Le}`;return te<oe?`(${ve})`:ve}case"UnaryExpression":{const j=L;return j.operator.value+(j.operator.value==="not"?" ":"")+Mt(j.argument,1/0)}case"LogicalNegationExpression":return`not ${Mt(L.argument,1/0)}`;case"CallExpression":{const j=L,te=j.args.map(ge=>Mt(ge,-1)).join(", ");return`${Mt(j.callee,-1)}(${te})`}case"MemberExpression":{const j=L;let te=Mt(j.object,-1);j.object.type!=="Identifier"&&(te=`(${te})`);let ge=Mt(j.property,-1);return!j.computed&&j.property.type!=="Identifier"&&(ge=`(${ge})`),j.computed?`${te}[${ge}]`:`${te}.${ge}`}case"FilterExpression":{const j=L,te=Mt(j.operand,1/0);return j.filter.type==="CallExpression"?`${te} | ${Mt(j.filter,-1)}`:`${te} | ${j.filter.value}`}case"SelectExpression":{const j=L;return`${Mt(j.iterable,-1)} | select(${Mt(j.test,-1)})`}case"TestExpression":{const j=L;return`${Mt(j.operand,-1)} is${j.negate?" not":""} ${j.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const j=L.value.map(ge=>Mt(ge,-1)),te=L.type==="ArrayLiteral"?"[]":"()";return`${te[0]}${j.join(", ")}${te[1]}`}case"ObjectLiteral":return`{ ${Array.from(L.value.entries()).map(([te,ge])=>`${Mt(te,-1)}: ${Mt(ge,-1)}`).join(", ")} }`;case"SliceExpression":{const j=L,te=j.start?Mt(j.start,-1):"",ge=j.stop?Mt(j.stop,-1):"",Le=j.step?`:${Mt(j.step,-1)}`:"";return`${te}:${ge}${Le}`}case"KeywordArgumentExpression":{const j=L;return`${j.key.value}=${Mt(j.value,-1)}`}case"If":{const j=L,te=Mt(j.test,-1),ge=Mt(j.body[0],0),Le=Mt(j.alternate[0],-1);return`${ge} if ${te} else ${Le}`}default:throw new Error(`Unknown expression type: ${L.type}`)}}var sr=class{constructor(L){ee(this,"parsed");const oe=u(L,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=N(oe)}render(L){const oe=new Fe;if(oe.set("false",!1),oe.set("true",!0),oe.set("raise_exception",ge=>{throw new Error(ge)}),oe.set("range",Z),L)for(const[ge,Le]of Object.entries(L))oe.set(ge,Le);return new Ge(oe).run(this.parsed).value}format(L){return Ke(this.parsed,(L==null?void 0:L.indent)||"	")}}},"./src/backends/onnx.js":(e,s,t)=>{var r;t.r(s),t.d(s,{Tensor:()=>a.Tensor,createInferenceSession:()=>$,deviceToExecutionProviders:()=>f,isONNXProxy:()=>C,isONNXTensor:()=>w});var o=t("./src/env.js"),n=t("?2ce3"),i=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,u;const d=Symbol.for("onnxruntime");if(d in globalThis)u=globalThis[d];else if(o.apis.IS_NODE_ENV){switch(u=n??(r||(r=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else u=i,o.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const _=u.InferenceSession;function f(T=null){if(!T)return p;switch(T){case"auto":return c;case"gpu":return c.filter(v=>["webgpu","cuda","dml","webnn-gpu"].includes(v))}if(c.includes(T))return[l[T]??T];throw new Error(`Unsupported device: "${T}". Should be one of: ${c.join(", ")}.`)}let y=null;async function $(T,v,b){y&&await y;const x=_.create(T,v);y??(y=x);const P=await x;return P.config=b,P}function w(T){return T instanceof u.Tensor}const g=u==null?void 0:u.env;g!=null&&g.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!g.wasm.wasmPaths&&(g.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`),g.wasm.proxy=!1),g!=null&&g.webgpu&&(g.webgpu.powerPreference="high-performance");function C(){var T;return(T=g==null?void 0:g.wasm)==null?void 0:T.proxy}o.env.backends.onnx=g},"./src/base/feature_extraction_utils.js":(e,s,t)=>{t.r(s),t.d(s,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var r=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p){const u=await(0,n.getModelJSON)(c,r.FEATURE_EXTRACTOR_NAME,!0,p);return new this(u)}}function a(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,s,t)=>{t.r(s),t.d(s,{ImageProcessor:()=>T,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>C,post_process_object_detection:()=>d,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>_});var r=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(v,b,x=0,P=null){const A=v/b;let D=(0,n.bankers_round)(A)*b;return P!==null&&D>P&&(D=Math.floor(A)*b),D<x&&(D=Math.ceil(A)*b),D}function p([v,b],x){return[Math.max(Math.floor(v/x),1)*x,Math.max(Math.floor(b/x),1)*x]}function u([v,b,x,P]){return[v-x/2,b-P/2,v+x/2,b+P/2]}function d(v,b=.5,x=null,P=!1){const A=v.logits,D=v.pred_boxes,[H,K,B]=A.dims;if(x!==null&&x.length!==H)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Y=[];for(let q=0;q<H;++q){let Q=x!==null?x[q]:null,X={boxes:[],classes:[],scores:[]},se=A[q],me=D[q];for(let le=0;le<K;++le){let R=se[le],O=[],N;if(P){N=R.sigmoid().data;for(let Z=0;Z<N.length;++Z)N[Z]>b&&O.push(Z)}else{let Z=(0,n.max)(R.data)[1];if(Z===B-1||(N=(0,n.softmax)(R.data),N[Z]<b))continue;O.push(Z)}for(const Z of O){let fe=me[le].data;fe=u(fe),Q!==null&&(fe=fe.map((ie,Me)=>ie*Q[(Me+1)%2])),X.boxes.push(fe),X.classes.push(Z),X.scores.push(N[Z])}}Y.push(X)}return Y}function _(v,b=null){const x=v.logits,P=x.dims[0];if(b!==null&&b.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const A=[];for(let D=0;D<P;++D){const H=b!==null?b[D]:null;let K=x[D];H!==null&&(K=(0,o.interpolate)(K,H,"bilinear",!1));const[B,Y]=H??K.dims.slice(-2),q=new o.Tensor("int32",new Int32Array(B*Y),[B,Y]),Q=K[0].data,X=q.data;for(let le=1;le<K.dims[0];++le){const R=K[le].data;for(let O=0;O<R.length;++O)R[O]>Q[O]&&(Q[O]=R[O],X[O]=le)}const se=new Array(K.dims[0]);for(let le=0;le<X.length;++le){const R=X[le];se[R]=R}const me=se.filter(le=>le!==void 0);A.push({segmentation:q,labels:me})}return A}function f(v,b,x,P){const A=[],D=[],H=[];for(let K=0;K<v.dims[0];++K){const B=v[K],Y=b[K],q=(0,n.max)(B.data)[1];if(q===P)continue;const X=(0,n.softmax)(B.data)[q];X>x&&(A.push(Y),D.push(X),H.push(q))}return[A,D,H]}function y(v,b,x,P=.5,A=.8){const D=[];let H=0,K=0;const B=b[x].data;for(let q=0;q<v.length;++q)v[q]===x&&(D.push(q),++H),B[q]>=P&&++K;let Y=H>0&&K>0;return Y&&(Y=H/K>A),[Y,D]}function $(v,b,x,P,A,D=null,H=null){const[K,B]=H??v[0].dims,Y=new o.Tensor("int32",new Int32Array(K*B),[K,B]),q=[];if(H!==null)for(let le=0;le<v.length;++le)v[le]=(0,o.interpolate)(v[le],H,"bilinear",!1);const Q=new Int32Array(v[0].data.length),X=new Float32Array(v[0].data.length);for(let le=0;le<v.length;++le){let R=b[le];const O=v[le].data;for(let N=0;N<O.length;++N)O[N]*=R,O[N]>X[N]&&(Q[N]=le,X[N]=O[N])}let se=0;const me=Y.data;for(let le=0;le<x.length;++le){const R=x[le],[O,N]=y(Q,v,le,P,A);if(O){++se;for(const Z of N)me[Z]=se;q.push({id:se,label_id:R,score:b[le]})}}return[Y,q]}function w(v,b,x=28,P=56*56,A=14*14*4*1280){if(v<x||b<x)throw new Error(`height:${v} or width:${b} must be larger than factor:${x}`);if(Math.max(v,b)/Math.min(v,b)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(v,b)/Math.min(v,b)}`);let D=Math.round(v/x)*x,H=Math.round(b/x)*x;if(D*H>A){const K=Math.sqrt(v*b/A);D=Math.floor(v/K/x)*x,H=Math.floor(b/K/x)*x}else if(D*H<P){const K=Math.sqrt(P/(v*b));D=Math.ceil(v*K/x)*x,H=Math.ceil(b*K/x)*x}return[D,H]}function g(v,b=.5,x=.5,P=.8,A=null,D=null){A===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),A=new Set);const H=v.class_queries_logits??v.logits,B=(v.masks_queries_logits??v.pred_masks).sigmoid();let[Y,q,Q]=H.dims;if(Q-=1,D!==null&&D.length!==Y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let X=[];for(let se=0;se<Y;++se){let me=D!==null?D[se]:null,le=H[se],R=B[se],[O,N,Z]=f(le,R,b,Q);if(Z.length===0){let[Me,Re]=me??R.dims.slice(-2),We=new o.Tensor("int32",new Int32Array(Me*Re).fill(-1),[Me,Re]);X.push({segmentation:We,segments_info:[]});continue}let[fe,ie]=$(O,N,Z,x,P,A,me);X.push({segmentation:fe,segments_info:ie})}return X}function C(v,b=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class T extends r.Callable{constructor(b){super(),this.image_mean=b.image_mean??b.mean,this.image_std=b.image_std??b.std,this.resample=b.resample??2,this.do_rescale=b.do_rescale??!0,this.rescale_factor=b.rescale_factor??1/255,this.do_normalize=b.do_normalize,this.do_thumbnail=b.do_thumbnail,this.size=b.size??b.image_size,this.do_resize=b.do_resize??this.size!==void 0,this.size_divisibility=b.size_divisibility??b.size_divisor,this.do_center_crop=b.do_center_crop,this.crop_size=b.crop_size,this.do_convert_rgb=b.do_convert_rgb??!0,this.do_crop_margin=b.do_crop_margin,this.pad_size=b.pad_size,this.do_pad=b.do_pad,this.min_pixels=b.min_pixels,this.max_pixels=b.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=b.do_flip_channel_order??!1,this.config=b}async thumbnail(b,x,P=2){const A=b.height,D=b.width,H=x.height,K=x.width;let B=Math.min(A,H),Y=Math.min(D,K);return B===A&&Y===D?b:(A>D?Y=Math.floor(D*B/A):D>A&&(B=Math.floor(A*Y/D)),await b.resize(Y,B,{resample:P}))}async crop_margin(b,x=200){const P=b.clone().grayscale(),A=(0,n.min)(P.data)[0],H=(0,n.max)(P.data)[0]-A;if(H===0)return b;const K=x/255;let B=P.width,Y=P.height,q=0,Q=0;const X=P.data;for(let se=0;se<P.height;++se){const me=se*P.width;for(let le=0;le<P.width;++le)(X[me+le]-A)/H<K&&(B=Math.min(B,le),Y=Math.min(Y,se),q=Math.max(q,le),Q=Math.max(Q,se))}return b=await b.crop([B,Y,q,Q]),b}pad_image(b,x,P,{mode:A="constant",center:D=!1,constant_values:H=0}={}){const[K,B,Y]=x;let q,Q;if(typeof P=="number"?(q=P,Q=P):P==="square"?q=Q=Math.max(K,B):(q=P.width,Q=P.height),q!==B||Q!==K){const X=new Float32Array(q*Q*Y);if(Array.isArray(H))for(let le=0;le<X.length;++le)X[le]=H[le%Y];else H!==0&&X.fill(H);const[se,me]=D?[Math.floor((q-B)/2),Math.floor((Q-K)/2)]:[0,0];for(let le=0;le<K;++le){const R=(le+me)*q,O=le*B;for(let N=0;N<B;++N){const Z=(R+N+se)*Y,fe=(O+N)*Y;for(let ie=0;ie<Y;++ie)X[Z+ie]=b[fe+ie]}}if(A==="symmetric"){if(D)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const le=K-1,R=B-1;for(let O=0;O<Q;++O){const N=O*q,Z=(0,i.calculateReflectOffset)(O,le)*B;for(let fe=0;fe<q;++fe){if(O<K&&fe<B)continue;const ie=(N+fe)*Y,Me=(Z+(0,i.calculateReflectOffset)(fe,R))*Y;for(let Re=0;Re<Y;++Re)X[ie+Re]=b[Me+Re]}}}b=X,x=[Q,q,Y]}return[b,x]}rescale(b){for(let x=0;x<b.length;++x)b[x]=this.rescale_factor*b[x]}get_resize_output_image_size(b,x){const[P,A]=b.size;let D,H;if(this.do_thumbnail){const{height:K,width:B}=x;D=Math.min(K,B)}else Number.isInteger(x)?(D=x,H=this.config.max_size??D):x!==void 0&&(D=x.shortest_edge,H=x.longest_edge);if(D!==void 0||H!==void 0){const K=D===void 0?1:Math.max(D/P,D/A),B=P*K,Y=A*K,q=H===void 0?1:Math.min(H/B,H/Y);let Q=Math.floor(Number((B*q).toFixed(2))),X=Math.floor(Number((Y*q).toFixed(2)));return this.size_divisibility!==void 0&&([Q,X]=p([Q,X],this.size_divisibility)),[Q,X]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let K=x.width,B=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Y=B/A,q=K/P;Math.abs(1-q)<Math.abs(1-Y)?Y=q:q=Y,B=c(Y*A,this.config.ensure_multiple_of),K=c(q*P,this.config.ensure_multiple_of)}return[K,B]}else{if(this.size_divisibility!==void 0)return p([P,A],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const K=this.config.patch_size*this.config.merge_size;return w(A,P,K,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(b){const[x,P]=this.get_resize_output_image_size(b,this.size);return await b.resize(x,P,{resample:this.resample})}async preprocess(b,{do_normalize:x=null,do_pad:P=null,do_convert_rgb:A=null,do_convert_grayscale:D=null,do_flip_channel_order:H=null}={}){this.do_crop_margin&&(b=await this.crop_margin(b));const[K,B]=b.size;if(A??this.do_convert_rgb?b=b.rgb():D&&(b=b.grayscale()),this.do_resize&&(b=await this.resize(b)),this.do_thumbnail&&(b=await this.thumbnail(b,this.size,this.resample)),this.do_center_crop){let se,me;Number.isInteger(this.crop_size)?(se=this.crop_size,me=this.crop_size):(se=this.crop_size.width,me=this.crop_size.height),b=await b.center_crop(se,me)}const Y=[b.height,b.width];let q=Float32Array.from(b.data),Q=[b.height,b.width,b.channels];if(this.do_rescale&&this.rescale(q),x??this.do_normalize){let se=this.image_mean;Array.isArray(this.image_mean)||(se=new Array(b.channels).fill(se));let me=this.image_std;if(Array.isArray(this.image_std)||(me=new Array(b.channels).fill(se)),se.length!==b.channels||me.length!==b.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${se.length}) and \`image_std\` (${me.length}) must match the number of channels in the image (${b.channels}).`);for(let le=0;le<q.length;le+=b.channels)for(let R=0;R<b.channels;++R)q[le+R]=(q[le+R]-se[R])/me[R]}if(P??this.do_pad){if(this.pad_size)[q,Q]=this.pad_image(q,[b.height,b.width,b.channels],this.pad_size);else if(this.size_divisibility){const[se,me]=p([Q[1],Q[0]],this.size_divisibility);[q,Q]=this.pad_image(q,Q,{width:se,height:me})}}if(H??this.do_flip_channel_order){if(Q[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let se=0;se<q.length;se+=3){const me=q[se];q[se]=q[se+2],q[se+2]=me}}const X=new o.Tensor("float32",q,Q).permute(2,0,1);return{original_size:[B,K],reshaped_input_size:Y,pixel_values:X}}async _call(b,...x){Array.isArray(b)||(b=[b]);const P=await Promise.all(b.map(D=>this.preprocess(D)));return{pixel_values:(0,o.stack)(P.map(D=>D.pixel_values),0),original_sizes:P.map(D=>D.original_size),reshaped_input_sizes:P.map(D=>D.reshaped_input_size)}}static async from_pretrained(b,x){const P=await(0,a.getModelJSON)(b,l.IMAGE_PROCESSOR_NAME,!0,x);return new this(P)}}},"./src/base/processing_utils.js":(e,s,t)=>{t.r(s),t.d(s,{Processor:()=>i});var r=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(l,c){super(),this.config=l,this.components=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c){const[p,u]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,r.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(d=>d in this).map(async d=>{const _=await this[d].from_pretrained(l,c);return[d.replace(/_class$/,""),_]})).then(Object.fromEntries)]);return new this(p,u)}}ee(i,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),ee(i,"uses_processor_config",!1)},"./src/configs.js":(e,s,t)=>{t.r(s),t.d(s,{AutoConfig:()=>c,PretrainedConfig:()=>l,getKeyValueShapes:()=>a});var r=t("./src/utils/core.js"),o=t("./src/utils/hub.js");async function n(p,u){return await(0,o.getModelJSON)(p,"config.json",!0,u)}function i(p){const u={};let d={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":d=i(p.text_config);break;case"moondream1":d=i(p.phi_config);break;case"musicgen":d=i(p.decoder);break;case"multi_modality":d=i(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const f=i(p.decoder),y="num_decoder_layers"in f,$=(0,r.pick)(p,["model_type","is_encoder_decoder"]);return y?($.num_decoder_layers=f.num_decoder_layers,$.num_decoder_heads=f.num_decoder_heads,$.decoder_hidden_size=f.decoder_hidden_size,$.num_encoder_layers=f.num_encoder_layers,$.num_encoder_heads=f.num_encoder_heads,$.encoder_hidden_size=f.encoder_hidden_size):($.num_layers=f.num_layers,$.num_heads=f.num_heads,$.hidden_size=f.hidden_size),$}const _={...d,...(0,r.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const f in u)_[f]=p[u[f]];return _}function a(p,{prefix:u="past_key_values",batch_size:d=1}={}){const _={},f=p.normalized_config;if(f.is_encoder_decoder&&"num_encoder_heads"in f&&"num_decoder_heads"in f){const y=f.encoder_dim_kv??f.encoder_hidden_size/f.num_encoder_heads,$=f.decoder_dim_kv??f.decoder_hidden_size/f.num_decoder_heads,w=[d,f.num_encoder_heads,0,y],g=[d,f.num_decoder_heads,0,$];for(let C=0;C<f.num_decoder_layers;++C)_[`${u}.${C}.encoder.key`]=w,_[`${u}.${C}.encoder.value`]=w,_[`${u}.${C}.decoder.key`]=g,_[`${u}.${C}.decoder.value`]=g}else{const y=f.num_heads,$=f.num_layers,w=f.dim_kv??f.hidden_size/(f.num_attention_heads??y);if(f.model_type==="falcon"){const g=[d*y,0,w];for(let C=0;C<$;++C)_[`${u}.${C}.key`]=g,_[`${u}.${C}.value`]=g}else if(f.multi_query){const g=[d*y,0,2*w];for(let C=0;C<$;++C)_[`${u}.${C}.key_value`]=g}else if(f.model_type==="bloom"){const g=[d*y,w,0],C=[d*y,0,w];for(let T=0;T<$;++T)_[`${u}.${T}.key`]=g,_[`${u}.${T}.value`]=C}else if(f.model_type==="openelm")for(let g=0;g<$;++g){const C=[d,y[g],0,w];_[`${u}.${g}.key`]=C,_[`${u}.${g}.value`]=C}else{const g=[d,y,0,w];for(let C=0;C<$;++C)_[`${u}.${C}.key`]=g,_[`${u}.${C}.value`]=g}}return _}class l{constructor(u){ee(this,"model_type",null);ee(this,"is_encoder_decoder",!1);ee(this,"max_position_embeddings");ee(this,"transformers.js_config");Object.assign(this,u),this.normalized_config=i(this)}static async from_pretrained(u,{progress_callback:d=null,config:_=null,cache_dir:f=null,local_files_only:y=!1,revision:$="main"}={}){_&&!(_ instanceof l)&&(_=new l(_));const w=_??await n(u,{progress_callback:d,config:_,cache_dir:f,local_files_only:y,revision:$});return new this(w)}}class c{static async from_pretrained(...u){return l.from_pretrained(...u)}}},"./src/env.js":(e,s,t)=>{var P,A;t.r(s),t.d(s,{apis:()=>$,env:()=>b});var r=t("?569f"),o=t("?3f59"),n=t("?154a");const i="3.5.2",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&((P=self.constructor)==null?void 0:P.name)==="DedicatedWorkerGlobalScope",c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,u=typeof navigator<"u"&&"ml"in navigator,d=typeof process<"u",_=d&&((A=process==null?void 0:process.release)==null?void 0:A.name)==="node",f=!x(r),y=!x(o),$=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:d,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:y}),w=f&&y;let g="./";if(w){const D=Object(import.meta).url;D?g=o.dirname(o.dirname(n.fileURLToPath(D))):typeof __dirname<"u"&&(g=o.dirname(__dirname))}const C=w?o.join(g,"/.cache/"):null,T="/models/",v=w?o.join(g,T):T,b={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:v,useFS:f,useBrowserCache:c,useFSCache:f,cacheDir:C,useCustomCache:!1,customCache:null};function x(D){return Object.keys(D).length===0}},"./src/generation/configuration_utils.js":(e,s,t)=>{t.r(s),t.d(s,{GenerationConfig:()=>o});var r=t("./src/utils/core.js");class o{constructor(i){ee(this,"max_length",20);ee(this,"max_new_tokens",null);ee(this,"min_length",0);ee(this,"min_new_tokens",null);ee(this,"early_stopping",!1);ee(this,"max_time",null);ee(this,"do_sample",!1);ee(this,"num_beams",1);ee(this,"num_beam_groups",1);ee(this,"penalty_alpha",null);ee(this,"use_cache",!0);ee(this,"temperature",1);ee(this,"top_k",50);ee(this,"top_p",1);ee(this,"typical_p",1);ee(this,"epsilon_cutoff",0);ee(this,"eta_cutoff",0);ee(this,"diversity_penalty",0);ee(this,"repetition_penalty",1);ee(this,"encoder_repetition_penalty",1);ee(this,"length_penalty",1);ee(this,"no_repeat_ngram_size",0);ee(this,"bad_words_ids",null);ee(this,"force_words_ids",null);ee(this,"renormalize_logits",!1);ee(this,"constraints",null);ee(this,"forced_bos_token_id",null);ee(this,"forced_eos_token_id",null);ee(this,"remove_invalid_values",!1);ee(this,"exponential_decay_length_penalty",null);ee(this,"suppress_tokens",null);ee(this,"streamer",null);ee(this,"begin_suppress_tokens",null);ee(this,"forced_decoder_ids",null);ee(this,"guidance_scale",null);ee(this,"num_return_sequences",1);ee(this,"output_attentions",!1);ee(this,"output_hidden_states",!1);ee(this,"output_scores",!1);ee(this,"return_dict_in_generate",!1);ee(this,"pad_token_id",null);ee(this,"bos_token_id",null);ee(this,"eos_token_id",null);ee(this,"encoder_no_repeat_ngram_size",0);ee(this,"decoder_start_token_id",null);ee(this,"generation_kwargs",{});Object.assign(this,(0,r.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,s,t)=>{t.r(s),t.d(s,{ClassifierFreeGuidanceLogitsProcessor:()=>w,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>y,NoBadWordsLogitsProcessor:()=>$,NoRepeatNGramLogitsProcessor:()=>d,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>g,TopKLogitsWarper:()=>T,TopPLogitsWarper:()=>C,WhisperTimeStampLogitsProcessor:()=>u});var r=t("./src/utils/generic.js");t("./src/utils/tensor.js");var o=t("./src/utils/maths.js");class n extends r.Callable{_call(b,x){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{_call(b,x){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{constructor(){super(),this.processors=[]}push(b){this.processors.push(b)}extend(b){this.processors.push(...b)}_call(b,x){let P=x;for(const A of this.processors)P=A(b,P);return P}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(b){super(),this.bos_token_id=b}_call(b,x){for(let P=0;P<b.length;++P)if(b[P].length===1){const A=x[P].data;A.fill(-1/0),A[this.bos_token_id]=0}return x}}class c extends n{constructor(b,x){super(),this.max_length=b,this.eos_token_id=Array.isArray(x)?x:[x]}_call(b,x){for(let P=0;P<b.length;++P)if(b[P].length===this.max_length-1){const A=x[P].data;A.fill(-1/0);for(const D of this.eos_token_id)A[D]=0}return x}}class p extends n{constructor(b,x){super(),this.begin_suppress_tokens=b,this.begin_index=x}_call(b,x){for(let P=0;P<b.length;++P)if(b[P].length===this.begin_index){const A=x[P].data;for(const D of this.begin_suppress_tokens)A[D]=-1/0}return x}}class u extends n{constructor(b,x){super(),this.eos_token_id=Array.isArray(b.eos_token_id)?b.eos_token_id[0]:b.eos_token_id,this.no_timestamps_token_id=b.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=b.max_initial_timestamp_index}_call(b,x){for(let P=0;P<b.length;++P){const A=x[P].data;if(A[this.no_timestamps_token_id]=-1/0,b[P].length===this.begin_index-1){A.fill(-1/0),A[this.timestamp_begin]=0;continue}const D=b[P].slice(this.begin_index),H=D.length>=1&&D[D.length-1]>=this.timestamp_begin,K=D.length<2||D[D.length-2]>=this.timestamp_begin;if(H&&(K?A.subarray(this.timestamp_begin).fill(-1/0):A.subarray(0,this.eos_token_id).fill(-1/0)),b[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Q=this.timestamp_begin+this.max_initial_timestamp_index;A.subarray(Q+1).fill(-1/0)}const B=(0,o.log_softmax)(A),Y=Math.log(B.subarray(this.timestamp_begin).map(Math.exp).reduce((Q,X)=>Q+X)),q=(0,o.max)(B.subarray(0,this.timestamp_begin))[0];Y>q&&A.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class d extends n{constructor(b){super(),this.no_repeat_ngram_size=b}getNgrams(b){const x=b.length,P=[];for(let D=0;D<x+1-this.no_repeat_ngram_size;++D){const H=[];for(let K=0;K<this.no_repeat_ngram_size;++K)H.push(b[D+K]);P.push(H.map(Number))}const A=new Map;for(const D of P){const H=D.slice(0,D.length-1),K=JSON.stringify(H),B=A.get(K)??[];B.push(D[D.length-1]),A.set(K,B)}return A}getGeneratedNgrams(b,x){const P=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return b.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(b){const x=[];if(b.length+1<this.no_repeat_ngram_size)return x;{const P=this.getNgrams(b);return this.getGeneratedNgrams(P,b)}}_call(b,x){for(let P=0;P<b.length;++P){const A=x[P].data,D=this.calcBannedNgramTokens(b[P]);for(const H of D)A[H]=-1/0}return x}}class _ extends n{constructor(b){super(),this.penalty=b}_call(b,x){for(let P=0;P<b.length;++P){const A=x[P].data;for(const D of new Set(b[P])){const H=Number(D);A[H]<0?A[H]*=this.penalty:A[H]/=this.penalty}}return x}}class f extends n{constructor(b,x){super(),this.min_length=b,this.eos_token_id=Array.isArray(x)?x:[x]}_call(b,x){for(let P=0;P<b.length;++P)if(b[P].length<this.min_length){const A=x[P].data;for(const D of this.eos_token_id)A[D]=-1/0}return x}}class y extends n{constructor(b,x,P){super(),this.prompt_length_to_skip=b,this.min_new_tokens=x,this.eos_token_id=Array.isArray(P)?P:[P]}_call(b,x){for(let P=0;P<b.length;++P)if(b[P].length-this.prompt_length_to_skip<this.min_new_tokens){const D=x[P].data;for(const H of this.eos_token_id)D[H]=-1/0}return x}}class $ extends n{constructor(b,x){super(),this.bad_words_ids=b,this.eos_token_id=Array.isArray(x)?x:[x]}_call(b,x){for(let P=0;P<b.length;++P){const A=x[P].data,D=b[P];for(const H of this.bad_words_ids){if(D.length<H.length-1)continue;let K=!0;for(let B=1;B<=H.length-1;++B)if(H.at(-B-1)!=D.at(-B)){K=!1;break}K&&(A[H.at(-1)]=-1/0)}}return x}}class w extends n{constructor(b){if(super(),b<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${b}.`);this.guidance_scale=b}_call(b,x){if(x.dims[0]!==2*b.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${b.length} for the input ids.`);const P=b.length,A=x.slice([0,P],null),D=x.slice([P,x.dims[0]],null);for(let H=0;H<D.data.length;++H)D.data[H]+=(A.data[H]-D.data[H])*this.guidance_scale;return D}}class g extends i{constructor(b){super(),this.temperature=b}_call(b,x){const P=x.data;for(let A=0;A<P.length;++A)P[A]/=this.temperature;return x}}class C extends i{constructor(b,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),b<0||b>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${b}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=b,this.filter_value=x,this.min_tokens_to_keep=P}}class T extends i{constructor(b,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(b)||b<0)throw new Error(`\`top_k\` must be a positive integer, but is ${b}`);this.top_k=Math.max(b,P),this.filter_value=x}}},"./src/generation/logits_sampler.js":(e,s,t)=>{t.r(s),t.d(s,{LogitsSampler:()=>i});var r=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends r.Callable{constructor(u){super(),this.generation_config=u}async _call(u){return this.sample(u)}async sample(u){throw Error("sample should be implemented in subclasses.")}getLogits(u,d){let _=u.dims.at(-1),f=u.data;if(d===-1)f=f.slice(-_);else{let y=d*_;f=f.slice(y,y+_)}return f}randomSelect(u){let d=0;for(let f=0;f<u.length;++f)d+=u[f];let _=Math.random()*d;for(let f=0;f<u.length;++f)if(_-=u[f],_<=0)return f;return 0}static getSampler(u){if(u.do_sample)return new l(u);if(u.num_beams>1)return new c(u);if(u.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${u.num_return_sequences}.`);return new a(u)}}class a extends i{async sample(u){const d=(0,n.max)(u.data)[1];return[[BigInt(d),0]]}}class l extends i{async sample(u){let d=u.dims.at(-1);this.generation_config.top_k>0&&(d=Math.min(this.generation_config.top_k,d));const[_,f]=await(0,o.topk)(u,d),y=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const $=this.randomSelect(y);return[f.data[$],Math.log(y[$])]})}}class c extends i{async sample(u){let d=u.dims.at(-1);this.generation_config.top_k>0&&(d=Math.min(this.generation_config.top_k,d));const[_,f]=await(0,o.topk)(u,d),y=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},($,w)=>[f.data[w],Math.log(y[w])])}}},"./src/generation/stopping_criteria.js":(e,s,t)=>{t.r(s),t.d(s,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>o,StoppingCriteriaList:()=>n});var r=t("./src/utils/generic.js");class o extends r.Callable{_call(p,u){throw Error("StoppingCriteria needs to be subclassed")}}class n extends r.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof o&&(p=[p]),this.criteria.push(...p)}_call(p,u){const d=new Array(p.length).fill(!1);for(const _ of this.criteria){const f=_(p,u);for(let y=0;y<d.length;++y)d[y]||(d[y]=f[y])}return d}[Symbol.iterator](){return this.criteria.values()}}class i extends o{constructor(p,u=null){super(),this.max_length=p,this.max_position_embeddings=u}_call(p){return p.map(u=>u.length>=this.max_length)}}class a extends o{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,u){return p.map(d=>{const _=d.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,u){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,s,t)=>{t.r(s),t.d(s,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var r=t("./src/utils/core.js"),o=t("./src/tokenizers.js"),n=t("./src/env.js");class i{put(u){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends i{constructor(u,{skip_prompt:d=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:y=!0,decode_kwargs:$={},...w}={}){super(),this.tokenizer=u,this.skip_prompt=d,this.callback_function=_??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:y,...$,...w},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(u){var $;if(u.length>1)throw Error("TextStreamer only supports batch size of 1");const d=this.next_tokens_are_prompt;if(d&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=u[0];($=this.token_callback_function)==null||$.call(this,_),this.token_cache=(0,r.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let y;d||f.endsWith(`
`)?(y=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,o.is_chinese_char)(f.charCodeAt(f.length-1))?(y=f.slice(this.print_len),this.print_len+=y.length):(y=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=y.length),this.on_finalized_text(y,!1)}end(){let u;this.token_cache.length>0?(u=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):u="",this.next_tokens_are_prompt=!0,this.on_finalized_text(u,!0)}on_finalized_text(u,d){var _,f;u.length>0&&((_=this.callback_function)==null||_.call(this,u)),d&&this.callback_function===a&&n.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class c extends l{constructor(u,{skip_prompt:d=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:y=null,on_chunk_end:$=null,on_finalize:w=null,time_precision:g=.02,skip_special_tokens:C=!0,decode_kwargs:T={}}={}){super(u,{skip_prompt:d,skip_special_tokens:C,callback_function:_,token_callback_function:f,decode_kwargs:T}),this.timestamp_begin=u.timestamp_begin,this.on_chunk_start=y,this.on_chunk_end=$,this.on_finalize=w,this.time_precision=g,this.waiting_for_timestamp=!1}put(u){var _,f,y;if(u.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const d=u[0];if(d.length===1){const $=Number(d[0])-this.timestamp_begin;if($>=0){const w=$*this.time_precision;this.waiting_for_timestamp?(_=this.on_chunk_end)==null||_.call(this,w):(f=this.on_chunk_start)==null||f.call(this,w),this.waiting_for_timestamp=!this.waiting_for_timestamp,(y=this.token_callback_function)==null||y.call(this,d);return}}return super.put(u)}end(){var u;super.end(),(u=this.on_finalize)==null||u.call(this)}}},"./src/models.js":(e,s,t)=>{t.r(s),t.d(s,{ASTForAudioClassification:()=>wi,ASTModel:()=>gi,ASTPreTrainedModel:()=>ho,AlbertForMaskedLM:()=>J,AlbertForQuestionAnswering:()=>U,AlbertForSequenceClassification:()=>k,AlbertModel:()=>de,AlbertPreTrainedModel:()=>Lr,AutoModel:()=>Fl,AutoModelForAudioClassification:()=>$f,AutoModelForAudioFrameClassification:()=>If,AutoModelForAudioTextToText:()=>jf,AutoModelForCTC:()=>Sf,AutoModelForCausalLM:()=>gf,AutoModelForDepthEstimation:()=>Df,AutoModelForDocumentQuestionAnswering:()=>Af,AutoModelForImageClassification:()=>Mf,AutoModelForImageFeatureExtraction:()=>Bf,AutoModelForImageMatting:()=>Of,AutoModelForImageSegmentation:()=>vf,AutoModelForImageTextToText:()=>Rf,AutoModelForImageToImage:()=>Ff,AutoModelForMaskGeneration:()=>Cf,AutoModelForMaskedLM:()=>wf,AutoModelForNormalEstimation:()=>Lf,AutoModelForObjectDetection:()=>Ef,AutoModelForPoseEstimation:()=>zf,AutoModelForQuestionAnswering:()=>yf,AutoModelForSemanticSegmentation:()=>xf,AutoModelForSeq2SeqLM:()=>hf,AutoModelForSequenceClassification:()=>df,AutoModelForSpeechSeq2Seq:()=>mf,AutoModelForTextToSpectrogram:()=>ff,AutoModelForTextToWaveform:()=>_f,AutoModelForTokenClassification:()=>pf,AutoModelForUniversalSegmentation:()=>Tf,AutoModelForVision2Seq:()=>bf,AutoModelForXVector:()=>kf,AutoModelForZeroShotObjectDetection:()=>Pf,BartForConditionalGeneration:()=>Gt,BartForSequenceClassification:()=>gs,BartModel:()=>Zt,BartPretrainedModel:()=>Ft,BaseModelOutput:()=>he,BeitForImageClassification:()=>Kd,BeitModel:()=>Gd,BeitPreTrainedModel:()=>Ja,BertForMaskedLM:()=>ke,BertForQuestionAnswering:()=>Ge,BertForSequenceClassification:()=>Ce,BertForTokenClassification:()=>Fe,BertModel:()=>xe,BertPreTrainedModel:()=>Ee,BlenderbotForConditionalGeneration:()=>Bs,BlenderbotModel:()=>ws,BlenderbotPreTrainedModel:()=>qt,BlenderbotSmallForConditionalGeneration:()=>Os,BlenderbotSmallModel:()=>Js,BlenderbotSmallPreTrainedModel:()=>Xs,BloomForCausalLM:()=>md,BloomModel:()=>hd,BloomPreTrainedModel:()=>Ra,CLIPModel:()=>Ci,CLIPPreTrainedModel:()=>Rr,CLIPSegForImageSegmentation:()=>Co,CLIPSegModel:()=>Po,CLIPSegPreTrainedModel:()=>Kn,CLIPTextModel:()=>Sa,CLIPTextModelWithProjection:()=>Si,CLIPVisionModel:()=>$a,CLIPVisionModelWithProjection:()=>$i,CamembertForMaskedLM:()=>it,CamembertForQuestionAnswering:()=>Ms,CamembertForSequenceClassification:()=>Nt,CamembertForTokenClassification:()=>Qt,CamembertModel:()=>ut,CamembertPreTrainedModel:()=>mt,CausalLMOutput:()=>Tn,CausalLMOutputWithPast:()=>Qv,ChineseCLIPModel:()=>Gn,ChineseCLIPPreTrainedModel:()=>Ii,ClapAudioModelWithProjection:()=>Kh,ClapModel:()=>Wh,ClapPreTrainedModel:()=>ji,ClapTextModelWithProjection:()=>Gh,CodeGenForCausalLM:()=>Jn,CodeGenModel:()=>vn,CodeGenPreTrainedModel:()=>Xn,CohereForCausalLM:()=>qu,CohereModel:()=>Hu,CoherePreTrainedModel:()=>ka,ConvBertForMaskedLM:()=>sr,ConvBertForQuestionAnswering:()=>j,ConvBertForSequenceClassification:()=>L,ConvBertForTokenClassification:()=>oe,ConvBertModel:()=>Mt,ConvBertPreTrainedModel:()=>ls,ConvNextForImageClassification:()=>jp,ConvNextModel:()=>Rp,ConvNextPreTrainedModel:()=>pl,ConvNextV2ForImageClassification:()=>Up,ConvNextV2Model:()=>Np,ConvNextV2PreTrainedModel:()=>hl,DFineForObjectDetection:()=>op,DFineModel:()=>np,DFinePreTrainedModel:()=>rl,DPTForDepthEstimation:()=>Mp,DPTModel:()=>bp,DPTPreTrainedModel:()=>cl,DacDecoderModel:()=>Fm,DacDecoderOutput:()=>Im,DacEncoderModel:()=>Om,DacEncoderOutput:()=>km,DacModel:()=>Am,DacPreTrainedModel:()=>Hi,DebertaForMaskedLM:()=>rr,DebertaForQuestionAnswering:()=>kr,DebertaForSequenceClassification:()=>mr,DebertaForTokenClassification:()=>nr,DebertaModel:()=>zs,DebertaPreTrainedModel:()=>Yt,DebertaV2ForMaskedLM:()=>Qs,DebertaV2ForQuestionAnswering:()=>Or,DebertaV2ForSequenceClassification:()=>fr,DebertaV2ForTokenClassification:()=>Ar,DebertaV2Model:()=>Ir,DebertaV2PreTrainedModel:()=>Vs,DecisionTransformerModel:()=>hm,DecisionTransformerPreTrainedModel:()=>pm,DeiTForImageClassification:()=>up,DeiTModel:()=>cp,DeiTPreTrainedModel:()=>ol,DepthAnythingForDepthEstimation:()=>xp,DepthAnythingPreTrainedModel:()=>vp,DepthProForDepthEstimation:()=>Sp,DepthProPreTrainedModel:()=>Cp,DetrForObjectDetection:()=>qd,DetrForSegmentation:()=>Ya,DetrModel:()=>Hd,DetrObjectDetectionOutput:()=>Za,DetrPreTrainedModel:()=>Fi,DetrSegmentationOutput:()=>Qd,Dinov2ForImageClassification:()=>Wp,Dinov2Model:()=>Vp,Dinov2PreTrainedModel:()=>ml,Dinov2WithRegistersForImageClassification:()=>Kp,Dinov2WithRegistersModel:()=>Gp,Dinov2WithRegistersPreTrainedModel:()=>fl,DistilBertForMaskedLM:()=>Oe,DistilBertForQuestionAnswering:()=>js,DistilBertForSequenceClassification:()=>Cs,DistilBertForTokenClassification:()=>_r,DistilBertModel:()=>Fr,DistilBertPreTrainedModel:()=>cs,DonutSwinModel:()=>Bp,DonutSwinPreTrainedModel:()=>zp,EfficientNetForImageClassification:()=>Zh,EfficientNetModel:()=>Yh,EfficientNetPreTrainedModel:()=>El,ElectraForMaskedLM:()=>Le,ElectraForQuestionAnswering:()=>Dt,ElectraForSequenceClassification:()=>ve,ElectraForTokenClassification:()=>xt,ElectraModel:()=>ge,ElectraPreTrainedModel:()=>te,EsmForMaskedLM:()=>Ut,EsmForSequenceClassification:()=>or,EsmForTokenClassification:()=>ir,EsmModel:()=>ct,EsmPreTrainedModel:()=>Ze,ExaoneForCausalLM:()=>V,ExaoneModel:()=>z,ExaonePreTrainedModel:()=>I,FalconForCausalLM:()=>Vh,FalconModel:()=>Uh,FalconPreTrainedModel:()=>vl,FastViTForImageClassification:()=>Fd,FastViTModel:()=>Od,FastViTPreTrainedModel:()=>Ka,Florence2ForConditionalGeneration:()=>xi,Florence2PreTrainedModel:()=>yo,GLPNForDepthEstimation:()=>Lp,GLPNModel:()=>Dp,GLPNPreTrainedModel:()=>dl,GPT2LMHeadModel:()=>ko,GPT2Model:()=>$o,GPT2PreTrainedModel:()=>So,GPTBigCodeForCausalLM:()=>Do,GPTBigCodeModel:()=>Fo,GPTBigCodePreTrainedModel:()=>Mn,GPTJForCausalLM:()=>Oo,GPTJModel:()=>Ao,GPTJPreTrainedModel:()=>Qn,GPTNeoForCausalLM:()=>yn,GPTNeoModel:()=>Io,GPTNeoPreTrainedModel:()=>Hn,GPTNeoXForCausalLM:()=>qn,GPTNeoXModel:()=>bn,GPTNeoXPreTrainedModel:()=>Hs,Gemma2ForCausalLM:()=>Yu,Gemma2Model:()=>Ju,Gemma2PreTrainedModel:()=>Aa,Gemma3ForCausalLM:()=>ed,Gemma3Model:()=>Zu,Gemma3PreTrainedModel:()=>Oa,GemmaForCausalLM:()=>Xu,GemmaModel:()=>Qu,GemmaPreTrainedModel:()=>Ia,GlmForCausalLM:()=>E,GlmModel:()=>h,GlmPreTrainedModel:()=>Zn,GraniteForCausalLM:()=>Ku,GraniteModel:()=>Oi,GranitePreTrainedModel:()=>zr,GroundingDinoForObjectDetection:()=>qp,GroundingDinoPreTrainedModel:()=>Hp,GroupViTModel:()=>Ad,GroupViTPreTrainedModel:()=>Id,HeliumForCausalLM:()=>Ro,HeliumModel:()=>Bo,HeliumPreTrainedModel:()=>Yn,HieraForImageClassification:()=>pp,HieraModel:()=>dp,HieraPreTrainedModel:()=>il,HubertForCTC:()=>Th,HubertForSequenceClassification:()=>Eh,HubertModel:()=>xh,HubertPreTrainedModel:()=>Dv,IJepaForImageClassification:()=>vd,IJepaModel:()=>Md,IJepaPreTrainedModel:()=>Va,Idefics3ForConditionalGeneration:()=>wn,Idefics3PreTrainedModel:()=>Wn,ImageMattingOutput:()=>Uf,JAISLMHeadModel:()=>Ai,JAISModel:()=>pt,JAISPreTrainedModel:()=>Xr,JinaCLIPModel:()=>xo,JinaCLIPPreTrainedModel:()=>Qr,JinaCLIPTextModel:()=>To,JinaCLIPVisionModel:()=>Eo,LiteWhisperForConditionalGeneration:()=>_o,LlamaForCausalLM:()=>zo,LlamaModel:()=>Lo,LlamaPreTrainedModel:()=>xn,LlavaForConditionalGeneration:()=>gn,LlavaOnevisionForConditionalGeneration:()=>Kr,LlavaPreTrainedModel:()=>wo,LongT5ForConditionalGeneration:()=>He,LongT5Model:()=>Xe,LongT5PreTrainedModel:()=>je,M2M100ForConditionalGeneration:()=>nh,M2M100Model:()=>rh,M2M100PreTrainedModel:()=>wl,MBartForCausalLM:()=>wr,MBartForConditionalGeneration:()=>$s,MBartForSequenceClassification:()=>ts,MBartModel:()=>Ss,MBartPreTrainedModel:()=>vs,MPNetForMaskedLM:()=>cn,MPNetForQuestionAnswering:()=>pn,MPNetForSequenceClassification:()=>un,MPNetForTokenClassification:()=>dn,MPNetModel:()=>ln,MPNetPreTrainedModel:()=>gr,MT5ForConditionalGeneration:()=>Lt,MT5Model:()=>wt,MT5PreTrainedModel:()=>tt,MarianMTModel:()=>sh,MarianModel:()=>th,MarianPreTrainedModel:()=>gl,MaskFormerForInstanceSegmentation:()=>Fp,MaskFormerModel:()=>Op,MaskFormerPreTrainedModel:()=>ul,MaskedLMOutput:()=>Ds,Metric3DForDepthEstimation:()=>kp,Metric3DPreTrainedModel:()=>$p,Metric3Dv2ForDepthEstimation:()=>Ap,Metric3Dv2PreTrainedModel:()=>Ip,MgpstrForSceneTextRecognition:()=>wm,MgpstrModelOutput:()=>_m,MgpstrPreTrainedModel:()=>gm,MimiDecoderModel:()=>$m,MimiDecoderOutput:()=>Pm,MimiEncoderModel:()=>Sm,MimiEncoderOutput:()=>Em,MimiModel:()=>Cm,MimiPreTrainedModel:()=>Ki,MistralForCausalLM:()=>Rh,MistralModel:()=>Bh,MistralPreTrainedModel:()=>bl,MobileBertForMaskedLM:()=>hs,MobileBertForQuestionAnswering:()=>lr,MobileBertForSequenceClassification:()=>_s,MobileBertModel:()=>ar,MobileBertPreTrainedModel:()=>ps,MobileLLMForCausalLM:()=>Be,MobileLLMModel:()=>Pe,MobileLLMPreTrainedModel:()=>ce,MobileNetV1ForImageClassification:()=>tm,MobileNetV1ForSemanticSegmentation:()=>sm,MobileNetV1Model:()=>em,MobileNetV1PreTrainedModel:()=>Ui,MobileNetV2ForImageClassification:()=>nm,MobileNetV2ForSemanticSegmentation:()=>om,MobileNetV2Model:()=>rm,MobileNetV2PreTrainedModel:()=>Vi,MobileNetV3ForImageClassification:()=>am,MobileNetV3ForSemanticSegmentation:()=>lm,MobileNetV3Model:()=>im,MobileNetV3PreTrainedModel:()=>Wi,MobileNetV4ForImageClassification:()=>um,MobileNetV4ForSemanticSegmentation:()=>dm,MobileNetV4Model:()=>cm,MobileNetV4PreTrainedModel:()=>Gi,MobileViTForImageClassification:()=>Bd,MobileViTModel:()=>zd,MobileViTPreTrainedModel:()=>Ha,MobileViTV2ForImageClassification:()=>jd,MobileViTV2Model:()=>Rd,MobileViTV2PreTrainedModel:()=>qa,ModelOutput:()=>ye,ModernBertForMaskedLM:()=>De,ModernBertForSequenceClassification:()=>qe,ModernBertForTokenClassification:()=>Ye,ModernBertModel:()=>Ie,ModernBertPreTrainedModel:()=>Ue,Moondream1ForConditionalGeneration:()=>vi,MoonshineForConditionalGeneration:()=>Mi,MoonshineModel:()=>bi,MoonshinePreTrainedModel:()=>Vn,MptForCausalLM:()=>_d,MptModel:()=>fd,MptPreTrainedModel:()=>ja,MultiModalityCausalLM:()=>fm,MultiModalityPreTrainedModel:()=>mm,MusicgenForCausalLM:()=>Rv,MusicgenForConditionalGeneration:()=>Cl,MusicgenModel:()=>Bv,MusicgenPreTrainedModel:()=>Pl,NomicBertModel:()=>Ke,NomicBertPreTrainedModel:()=>ot,OPTForCausalLM:()=>wd,OPTModel:()=>gd,OPTPreTrainedModel:()=>Na,Olmo2ForCausalLM:()=>Ts,Olmo2Model:()=>Kt,Olmo2PreTrainedModel:()=>At,OlmoForCausalLM:()=>vt,OlmoModel:()=>rt,OlmoPreTrainedModel:()=>Qe,OpenELMForCausalLM:()=>sd,OpenELMModel:()=>td,OpenELMPreTrainedModel:()=>Fa,OwlViTForObjectDetection:()=>Ud,OwlViTModel:()=>Nd,OwlViTPreTrainedModel:()=>Qa,Owlv2ForObjectDetection:()=>Wd,Owlv2Model:()=>Vd,Owlv2PreTrainedModel:()=>Xa,PaliGemmaForConditionalGeneration:()=>Ei,PaliGemmaPreTrainedModel:()=>Ti,PatchTSMixerForPrediction:()=>vm,PatchTSMixerModel:()=>Mm,PatchTSMixerPreTrainedModel:()=>$l,PatchTSTForPrediction:()=>bm,PatchTSTModel:()=>ym,PatchTSTPreTrainedModel:()=>Sl,Phi3ForCausalLM:()=>pd,Phi3Model:()=>dd,Phi3PreTrainedModel:()=>Ba,Phi3VForCausalLM:()=>Mo,Phi3VPreTrainedModel:()=>Pi,PhiForCausalLM:()=>ud,PhiModel:()=>cd,PhiPreTrainedModel:()=>za,PreTrainedModel:()=>G,PretrainedMixin:()=>Bt,PvtForImageClassification:()=>Pd,PvtModel:()=>Ed,PvtPreTrainedModel:()=>Wa,PyAnnoteForAudioFrameClassification:()=>uh,PyAnnoteModel:()=>ch,PyAnnotePreTrainedModel:()=>yl,QuestionAnsweringModelOutput:()=>Ns,Qwen2ForCausalLM:()=>nd,Qwen2Model:()=>rd,Qwen2PreTrainedModel:()=>Da,Qwen2VLForConditionalGeneration:()=>ld,Qwen2VLPreTrainedModel:()=>ad,Qwen3ForCausalLM:()=>id,Qwen3Model:()=>od,Qwen3PreTrainedModel:()=>La,RFDetrForObjectDetection:()=>sp,RFDetrModel:()=>tp,RFDetrObjectDetectionOutput:()=>rp,RFDetrPreTrainedModel:()=>sl,RTDetrForObjectDetection:()=>Jd,RTDetrModel:()=>Xd,RTDetrObjectDetectionOutput:()=>jo,RTDetrPreTrainedModel:()=>el,RTDetrV2ForObjectDetection:()=>Zd,RTDetrV2Model:()=>Yd,RTDetrV2ObjectDetectionOutput:()=>ep,RTDetrV2PreTrainedModel:()=>tl,ResNetForImageClassification:()=>mp,ResNetModel:()=>hp,ResNetPreTrainedModel:()=>al,RoFormerForMaskedLM:()=>_t,RoFormerForQuestionAnswering:()=>bs,RoFormerForSequenceClassification:()=>zt,RoFormerForTokenClassification:()=>jt,RoFormerModel:()=>et,RoFormerPreTrainedModel:()=>Ae,RobertaForMaskedLM:()=>ss,RobertaForQuestionAnswering:()=>Fs,RobertaForSequenceClassification:()=>ms,RobertaForTokenClassification:()=>fs,RobertaModel:()=>xs,RobertaPreTrainedModel:()=>Rs,SamImageSegmentationOutput:()=>eh,SamModel:()=>Zp,SamPreTrainedModel:()=>Yp,SapiensForDepthEstimation:()=>Ep,SapiensForNormalEstimation:()=>Pp,SapiensForSemanticSegmentation:()=>Tp,SapiensPreTrainedModel:()=>Li,SegformerForImageClassification:()=>qh,SegformerForSemanticSegmentation:()=>Qh,SegformerModel:()=>zv,SegformerPreTrainedModel:()=>Ni,Seq2SeqLMOutput:()=>qv,SequenceClassifierOutput:()=>Tt,SiglipModel:()=>qr,SiglipPreTrainedModel:()=>Hr,SiglipTextModel:()=>vo,SiglipVisionModel:()=>ki,SmolVLMForConditionalGeneration:()=>bo,SnacDecoderModel:()=>zm,SnacEncoderModel:()=>Lm,SnacModel:()=>Dm,SnacPreTrainedModel:()=>qi,SpeechT5ForSpeechToText:()=>Oh,SpeechT5ForTextToSpeech:()=>Fh,SpeechT5HifiGan:()=>Dh,SpeechT5Model:()=>Lv,SpeechT5PreTrainedModel:()=>Ri,SqueezeBertForMaskedLM:()=>hn,SqueezeBertForQuestionAnswering:()=>fn,SqueezeBertForSequenceClassification:()=>mn,SqueezeBertModel:()=>Wr,SqueezeBertPreTrainedModel:()=>Dr,StableLmForCausalLM:()=>Jh,StableLmModel:()=>Xh,StableLmPreTrainedModel:()=>Tl,Starcoder2ForCausalLM:()=>Nh,Starcoder2Model:()=>jh,Starcoder2PreTrainedModel:()=>Ml,StyleTextToSpeech2Model:()=>Ah,StyleTextToSpeech2PreTrainedModel:()=>Ih,Swin2SRForImageSuperResolution:()=>yp,Swin2SRModel:()=>wp,Swin2SRPreTrainedModel:()=>ll,SwinForImageClassification:()=>_p,SwinForSemanticSegmentation:()=>gp,SwinModel:()=>fp,SwinPreTrainedModel:()=>Di,T5ForConditionalGeneration:()=>Te,T5Model:()=>ue,T5PreTrainedModel:()=>ae,TableTransformerForObjectDetection:()=>ap,TableTransformerModel:()=>ip,TableTransformerObjectDetectionOutput:()=>lp,TableTransformerPreTrainedModel:()=>nl,TokenClassifierOutput:()=>ks,TrOCRForCausalLM:()=>zh,TrOCRPreTrainedModel:()=>Lh,UltravoxModel:()=>Tm,UltravoxPreTrainedModel:()=>xm,UniSpeechForCTC:()=>mh,UniSpeechForSequenceClassification:()=>fh,UniSpeechModel:()=>hh,UniSpeechPreTrainedModel:()=>zi,UniSpeechSatForAudioFrameClassification:()=>yh,UniSpeechSatForCTC:()=>gh,UniSpeechSatForSequenceClassification:()=>wh,UniSpeechSatModel:()=>_h,UniSpeechSatPreTrainedModel:()=>No,ViTForImageClassification:()=>bd,ViTMAEModel:()=>Sd,ViTMAEPreTrainedModel:()=>Cd,ViTMSNForImageClassification:()=>kd,ViTMSNModel:()=>$d,ViTMSNPreTrainedModel:()=>Ga,ViTModel:()=>yd,ViTPreTrainedModel:()=>Ua,VisionEncoderDecoderModel:()=>go,VitMatteForImageMatting:()=>Ld,VitMattePreTrainedModel:()=>Dd,VitPoseForPoseEstimation:()=>Td,VitPosePreTrainedModel:()=>xd,VitsModel:()=>xl,VitsModelOutput:()=>Vf,VitsPreTrainedModel:()=>Hh,Wav2Vec2BertForCTC:()=>Mh,Wav2Vec2BertForSequenceClassification:()=>vh,Wav2Vec2BertModel:()=>bh,Wav2Vec2BertPreTrainedModel:()=>Bi,Wav2Vec2ForAudioFrameClassification:()=>lh,Wav2Vec2ForCTC:()=>ih,Wav2Vec2ForSequenceClassification:()=>ah,Wav2Vec2Model:()=>oh,Wav2Vec2PreTrainedModel:()=>Jr,WavLMForAudioFrameClassification:()=>kh,WavLMForCTC:()=>Ch,WavLMForSequenceClassification:()=>Sh,WavLMForXVector:()=>$h,WavLMModel:()=>Ph,WavLMPreTrainedModel:()=>eo,WeSpeakerResNetModel:()=>ph,WeSpeakerResNetPreTrainedModel:()=>dh,WhisperForConditionalGeneration:()=>fo,WhisperModel:()=>yi,WhisperPreTrainedModel:()=>mo,XLMForQuestionAnswering:()=>po,XLMForSequenceClassification:()=>ui,XLMForTokenClassification:()=>di,XLMModel:()=>_n,XLMPreTrainedModel:()=>cr,XLMRobertaForMaskedLM:()=>hi,XLMRobertaForQuestionAnswering:()=>_i,XLMRobertaForSequenceClassification:()=>mi,XLMRobertaForTokenClassification:()=>fi,XLMRobertaModel:()=>pi,XLMRobertaPreTrainedModel:()=>Gr,XLMWithLMHeadModel:()=>ci,XVectorOutput:()=>Nf,YolosForObjectDetection:()=>Xp,YolosModel:()=>Qp,YolosObjectDetectionOutput:()=>Jp,YolosPreTrainedModel:()=>_l});var r=t("./src/configs.js"),o=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),u=t("./src/generation/configuration_utils.js"),d=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),y=t("./src/generation/stopping_criteria.js"),$=t("./src/generation/logits_sampler.js"),w=t("./src/env.js"),g=t("./src/models/whisper/generation_whisper.js"),C=t("./src/models/whisper/common_whisper.js");const T={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},v=new Map,b=new Map,x=new Map;async function P(M,S,F){var Is;let ne=((Is=F.config)==null?void 0:Is["transformers.js_config"])??{},we=F.device??ne.device;we&&typeof we!="string"&&(we.hasOwnProperty(S)?we=we[S]:(console.warn(`device not specified for "${S}". Using the default device.`),we=null));const _e=we??(w.apis.IS_NODE_ENV?"cpu":"wasm"),Se=(0,o.deviceToExecutionProviders)(_e),ze=ne.device_config??{};ze.hasOwnProperty(_e)&&(ne={...ne,...ze[_e]});let Ve=F.dtype??ne.dtype;if(typeof Ve!="string"&&(Ve&&Ve.hasOwnProperty(S)?Ve=Ve[S]:(Ve=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${Ve}) for this device (${_e}).`))),Ve===n.DATA_TYPES.auto){let kt=ne.dtype;typeof kt!="string"&&(kt=kt==null?void 0:kt[S]),kt&&kt!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(kt)?Ve=kt:Ve=n.DEFAULT_DEVICE_DTYPE_MAPPING[_e]??n.DATA_TYPES.fp32}const Je=Ve;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Je)){if(Je===n.DATA_TYPES.fp16&&_e==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${_e}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Je}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const ft=ne.kv_cache_dtype,bt=ft?typeof ft=="string"?ft:ft[Je]??"float32":void 0;if(bt&&!["float32","float16"].includes(bt))throw new Error(`Invalid kv_cache_dtype: ${bt}. Should be one of: float32, float16`);const ht={dtype:Je,kv_cache_dtype:bt,device:_e},$t=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Je],yt=`${S}${$t}.onnx`,St=`${F.subfolder??""}/${yt}`,at={...F.session_options};at.executionProviders??(at.executionProviders=Se);const It=ne.free_dimension_overrides;It?at.freeDimensionOverrides??(at.freeDimensionOverrides=It):_e.startsWith("webnn")&&!at.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${_e}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Xt=w.apis.IS_NODE_ENV&&w.env.useFSCache,rs=(0,l.getModelFile)(M,St,!0,F,Xt),us=F.use_external_data_format??ne.use_external_data_format;let is=[];if(us){let kt;typeof us=="object"?us.hasOwnProperty(yt)?kt=us[yt]:us.hasOwnProperty(S)?kt=us[S]:kt=!1:kt=us;const Es=+kt;if(Es>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Es}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let Ys=0;Ys<Es;++Ys){const En=`${yt}_data${Ys===0?"":"_"+Ys}`,Ws=`${F.subfolder??""}/${En}`;is.push(new Promise(async(ur,Qi)=>{const Pn=await(0,l.getModelFile)(M,Ws,!0,F,Xt);ur(Pn instanceof Uint8Array?{path:En,data:Pn}:En)}))}}else at.externalData!==void 0&&(is=at.externalData.map(async kt=>{if(typeof kt.data=="string"){const Es=await(0,l.getModelFile)(M,kt.data,!0,F);return{...kt,data:Es}}return kt}));if(is.length>0){const kt=await Promise.all(is);w.apis.IS_NODE_ENV||(at.externalData=kt)}if(_e==="webgpu"){const kt=(0,r.getKeyValueShapes)(F.config,{prefix:"present"});if(Object.keys(kt).length>0&&!(0,o.isONNXProxy)()){const Es={};for(const Ys in kt)Es[Ys]="gpu-buffer";at.preferredOutputLocation=Es}}return{buffer_or_path:await rs,session_options:at,session_config:ht}}async function A(M,S,F){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ne=>{const{buffer_or_path:we,session_options:_e,session_config:Se}=await P(M,S[ne],F),ze=await(0,o.createInferenceSession)(we,_e,Se);return[ne,ze]})))}async function D(M,S,F){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ne=>{const we=await(0,l.getModelJSON)(M,S[ne],!1,F);return[ne,we]})))}function H(M,S){const F=Object.create(null),ne=[];for(const Se of M.inputNames){const ze=S[Se];if(!(ze instanceof d.Tensor)){ne.push(Se);continue}F[Se]=(0,o.isONNXProxy)()?ze.clone():ze}if(ne.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ne.join(", ")}.`);const we=Object.keys(S).length,_e=M.inputNames.length;if(we>_e){let Se=Object.keys(S).filter(ze=>!M.inputNames.includes(ze));console.warn(`WARNING: Too many inputs were provided (${we} > ${_e}). The following inputs will be ignored: "${Se.join(", ")}".`)}return F}let K=Promise.resolve();async function B(M,S){const F=H(M,S);try{const ne=Object.fromEntries(Object.entries(F).map(([Se,ze])=>[Se,ze.ort_tensor])),we=()=>M.run(ne),_e=await(w.apis.IS_BROWSER_ENV||w.apis.IS_WEBWORKER_ENV?K=K.then(we):we());return Y(_e)}catch(ne){const we=Object.fromEntries(Object.entries(F).map(([_e,Se])=>{const ze={type:Se.type,dims:Se.dims,location:Se.location};return ze.location!=="gpu-buffer"&&(ze.data=Se.data),[_e,ze]}));throw console.error(`An error occurred during model execution: "${ne}".`),console.error("Inputs given to model:",we),ne}}function Y(M){for(let S in M)(0,o.isONNXTensor)(M[S])?M[S]=new d.Tensor(M[S]):typeof M[S]=="object"&&Y(M[S]);return M}function q(M){if(M instanceof d.Tensor)return M;if(M.length===0)throw Error("items must be non-empty");if(Array.isArray(M[0])){if(M.some(S=>S.length!==M[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new d.Tensor("int64",BigInt64Array.from(M.flat().map(S=>BigInt(S))),[M.length,M[0].length])}else return new d.Tensor("int64",BigInt64Array.from(M.map(S=>BigInt(S))),[1,M.length])}function Q(M){return new d.Tensor("bool",[M],[1])}async function X(M,S){let{encoder_outputs:F,input_ids:ne,decoder_input_ids:we,..._e}=S;if(!F){const ze=(0,a.pick)(S,M.sessions.model.inputNames);F=(await se(M,ze)).last_hidden_state}return _e.input_ids=we,_e.encoder_hidden_states=F,M.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(_e.encoder_attention_mask=S.attention_mask),await le(M,_e,!0)}async function se(M,S){const F=M.sessions.model,ne=(0,a.pick)(S,F.inputNames);if(F.inputNames.includes("inputs_embeds")&&!ne.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ne.inputs_embeds=await M.encode_text({input_ids:S.input_ids})}if(F.inputNames.includes("token_type_ids")&&!ne.token_type_ids){if(!ne.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ne.token_type_ids=(0,d.zeros_like)(ne.input_ids)}if(F.inputNames.includes("pixel_mask")&&!ne.pixel_mask){if(!ne.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const we=ne.pixel_values.dims;ne.pixel_mask=(0,d.ones)([we[0],we[2],we[3]])}return await B(F,ne)}async function me(M,S){const F=await M.encode(S);return await M.decode(F)}async function le(M,S,F=!1){const ne=M.sessions[F?"decoder_model_merged":"model"],{past_key_values:we,..._e}=S;if(ne.inputNames.includes("use_cache_branch")&&(_e.use_cache_branch=Q(!!we)),ne.inputNames.includes("position_ids")&&_e.attention_mask&&!_e.position_ids){const ze=["paligemma","gemma3_text","gemma3"].includes(M.config.model_type)?1:0;_e.position_ids=Re(_e,we,ze)}M.addPastKeyValues(_e,we);const Se=(0,a.pick)(_e,ne.inputNames);return await B(ne,Se)}function R({modality_token_id:M,inputs_embeds:S,modality_features:F,input_ids:ne,attention_mask:we}){const _e=ne.tolist().map(Je=>Je.reduce((ft,bt,ht)=>(bt==M&&ft.push(ht),ft),[])),Se=_e.reduce((Je,ft)=>Je+ft.length,0),ze=F.dims[0];if(Se!==ze)throw new Error(`Number of tokens and features do not match: tokens: ${Se}, features ${ze}`);let Ve=0;for(let Je=0;Je<_e.length;++Je){const ft=_e[Je],bt=S[Je];for(let ht=0;ht<ft.length;++ht)bt[ft[ht]].data.set(F[Ve++].data)}return{inputs_embeds:S,attention_mask:we}}function O({image_token_id:M,inputs_embeds:S,image_features:F,input_ids:ne,attention_mask:we}){return R({modality_token_id:M,inputs_embeds:S,modality_features:F,input_ids:ne,attention_mask:we})}function N({audio_token_id:M,inputs_embeds:S,audio_features:F,input_ids:ne,attention_mask:we}){return R({modality_token_id:M,inputs_embeds:S,modality_features:F,input_ids:ne,attention_mask:we})}async function Z(M,{encode_function:S,merge_function:F,modality_input_name:ne,modality_output_name:we,input_ids:_e=null,attention_mask:Se=null,position_ids:ze=null,inputs_embeds:Ve=null,past_key_values:Je=null,generation_config:ft=null,logits_processor:bt=null,...ht}){const $t=ht[ne];if(!Ve){if(Ve=await M.encode_text({input_ids:_e,...ht}),$t&&_e.dims[1]!==1){const St=await S({[ne]:$t,...ht});({inputs_embeds:Ve,attention_mask:Se}=F({[we]:St,inputs_embeds:Ve,input_ids:_e,attention_mask:Se}))}else if(Je&&$t&&_e.dims[1]===1){const St=_e.dims[1],at=Object.values(Je)[0].dims.at(-2);Se=(0,d.cat)([(0,d.ones)([_e.dims[0],at]),Se.slice(null,[Se.dims[1]-St,Se.dims[1]])],1)}}if(!ze&&M.config.model_type==="qwen2_vl"){const{image_grid_thw:St,video_grid_thw:at}=ht;[ze]=M.get_rope_index(_e,St,at,Se)}return await le(M,{inputs_embeds:Ve,past_key_values:Je,attention_mask:Se,position_ids:ze,generation_config:ft,logits_processor:bt},!0)}async function fe(M,S){return await Z(M,{...S,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:M.encode_audio.bind(M),merge_function:M._merge_input_ids_with_audio_features.bind(M)})}async function ie(M,S){return await Z(M,{...S,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:M.encode_image.bind(M),merge_function:M._merge_input_ids_with_image_features.bind(M)})}function Me(M,S=0){const[F,ne]=M.dims,we=M.data,_e=new BigInt64Array(we.length);for(let Se=0;Se<F;++Se){const ze=Se*ne;let Ve=BigInt(S);for(let Je=0;Je<ne;++Je){const ft=ze+Je;we[ft]===0n?_e[ft]=BigInt(1):(_e[ft]=Ve,Ve+=we[ft])}}return{data:_e,dims:M.dims}}function Re(M,S=null,F=0){const{input_ids:ne,inputs_embeds:we,attention_mask:_e}=M,{data:Se,dims:ze}=Me(_e,F);let Ve=new d.Tensor("int64",Se,ze);if(S){const Je=-(ne??we).dims.at(1);Ve=Ve.slice(null,[Je,null])}return Ve}function We(M,S,F,ne){if(F.past_key_values){const we=Object.values(F.past_key_values)[0].dims.at(-2),{input_ids:_e,attention_mask:Se}=F;if(!(Se&&Se.dims[1]>_e.dims[1])){if(we<_e.dims[1])F.input_ids=_e.slice(null,[we,null]);else if(M.config.image_token_index!=null&&_e.data.some(ze=>ze==M.config.image_token_index)){const ze=M.config.num_image_tokens;if(!ze)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ve=_e.dims[1]-(we-ze);F.input_ids=_e.slice(null,[-Ve,null]),F.attention_mask=(0,d.ones)([1,we+Ve])}}}return F}function pe(M,S,F,ne){return F.past_key_values&&(S=S.map(we=>[we.at(-1)])),{...F,decoder_input_ids:q(S)}}function W(M,...S){return M.config.is_encoder_decoder?pe(M,...S):We(M,...S)}function re(M,S,F,ne){const we=!!F.past_key_values;return ne.guidance_scale!==null&&ne.guidance_scale>1&&(we?F.input_ids=(0,d.cat)([F.input_ids,F.input_ids],0):(F.input_ids=(0,d.cat)([F.input_ids,(0,d.full_like)(F.input_ids,BigInt(ne.pad_token_id))],0),F.attention_mask=(0,d.cat)([F.attention_mask,(0,d.full_like)(F.attention_mask,0n)],0))),(we||!F.pixel_values)&&(F.pixel_values=(0,d.full)([0,0,3,384,384],1)),we&&(F.images_seq_mask=new d.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),F.images_emb_mask=new d.Tensor("bool",new Array(0).fill(!1),[1,1,0])),F}class G extends i.Callable{constructor(F,ne,we){super();ee(this,"main_input_name","input_ids");ee(this,"forward_params",["input_ids","attention_mask"]);this.config=F,this.sessions=ne,this.configs=we;const _e=x.get(this.constructor),Se=v.get(_e);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Se){case T.DecoderOnly:this.can_generate=!0,this._forward=le,this._prepare_inputs_for_generation=We;break;case T.Seq2Seq:case T.Vision2Seq:case T.Musicgen:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=pe;break;case T.EncoderDecoder:this._forward=X;break;case T.ImageTextToText:this.can_generate=!0,this._forward=ie,this._prepare_inputs_for_generation=W;break;case T.AudioTextToText:this.can_generate=!0,this._forward=fe,this._prepare_inputs_for_generation=W;break;case T.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=W;break;case T.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=re;break;case T.AutoEncoder:this._forward=me;break;default:this._forward=se;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ne;const F=[];for(const we of Object.values(this.sessions))(ne=we==null?void 0:we.handler)!=null&&ne.dispose&&F.push(we.handler.dispose());return await Promise.all(F)}static async from_pretrained(F,{progress_callback:ne=null,config:we=null,cache_dir:_e=null,local_files_only:Se=!1,revision:ze="main",model_file_name:Ve=null,subfolder:Je="onnx",device:ft=null,dtype:bt=null,use_external_data_format:ht=null,session_options:$t={}}={}){let yt={progress_callback:ne,config:we,cache_dir:_e,local_files_only:Se,revision:ze,model_file_name:Ve,subfolder:Je,device:ft,dtype:bt,use_external_data_format:ht,session_options:$t};const St=x.get(this),at=v.get(St);we=yt.config=await r.AutoConfig.from_pretrained(F,yt);let It;if(at===T.DecoderOnly)It=await Promise.all([A(F,{model:yt.model_file_name??"model"},yt),D(F,{generation_config:"generation_config.json"},yt)]);else if(at===T.Seq2Seq||at===T.Vision2Seq)It=await Promise.all([A(F,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},yt),D(F,{generation_config:"generation_config.json"},yt)]);else if(at===T.MaskGeneration)It=await Promise.all([A(F,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},yt)]);else if(at===T.EncoderDecoder)It=await Promise.all([A(F,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},yt)]);else if(at===T.ImageTextToText){const Xt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};we.is_encoder_decoder&&(Xt.model="encoder_model"),It=await Promise.all([A(F,Xt,yt),D(F,{generation_config:"generation_config.json"},yt)])}else if(at===T.AudioTextToText){const Xt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};It=await Promise.all([A(F,Xt,yt),D(F,{generation_config:"generation_config.json"},yt)])}else if(at===T.Musicgen)It=await Promise.all([A(F,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},yt),D(F,{generation_config:"generation_config.json"},yt)]);else if(at===T.MultiModality)It=await Promise.all([A(F,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},yt),D(F,{generation_config:"generation_config.json"},yt)]);else if(at===T.Phi3V)It=await Promise.all([A(F,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},yt),D(F,{generation_config:"generation_config.json"},yt)]);else if(at===T.AutoEncoder)It=await Promise.all([A(F,{encoder_model:"encoder_model",decoder_model:"decoder_model"},yt)]);else{if(at!==T.EncoderOnly){const Xt=St??(we==null?void 0:we.model_type);Xt!=="custom"&&console.warn(`Model type for '${Xt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}It=await Promise.all([A(F,{model:yt.model_file_name??"model"},yt)])}return new this(we,...It)}async _call(F){return await this.forward(F)}async forward(F){return await this._forward(this,F)}get generation_config(){var F;return((F=this.configs)==null?void 0:F.generation_config)??null}_get_logits_warper(F){const ne=new p.LogitsProcessorList;return F.temperature!==null&&F.temperature!==1&&ne.push(new p.TemperatureLogitsWarper(F.temperature)),F.top_k!==null&&F.top_k!==0&&ne.push(new p.TopKLogitsWarper(F.top_k)),F.top_p!==null&&F.top_p<1&&ne.push(new p.TopPLogitsWarper(F.top_p)),ne}_get_logits_processor(F,ne,we=null){const _e=new p.LogitsProcessorList;if(F.repetition_penalty!==null&&F.repetition_penalty!==1&&_e.push(new p.RepetitionPenaltyLogitsProcessor(F.repetition_penalty)),F.no_repeat_ngram_size!==null&&F.no_repeat_ngram_size>0&&_e.push(new p.NoRepeatNGramLogitsProcessor(F.no_repeat_ngram_size)),F.bad_words_ids!==null&&_e.push(new p.NoBadWordsLogitsProcessor(F.bad_words_ids,F.eos_token_id)),F.min_length!==null&&F.eos_token_id!==null&&F.min_length>0&&_e.push(new p.MinLengthLogitsProcessor(F.min_length,F.eos_token_id)),F.min_new_tokens!==null&&F.eos_token_id!==null&&F.min_new_tokens>0&&_e.push(new p.MinNewTokensLengthLogitsProcessor(ne,F.min_new_tokens,F.eos_token_id)),F.forced_bos_token_id!==null&&_e.push(new p.ForcedBOSTokenLogitsProcessor(F.forced_bos_token_id)),F.forced_eos_token_id!==null&&_e.push(new p.ForcedEOSTokenLogitsProcessor(F.max_length,F.forced_eos_token_id)),F.begin_suppress_tokens!==null){const Se=ne>1||F.forced_bos_token_id===null?ne:ne+1;_e.push(new p.SuppressTokensAtBeginLogitsProcessor(F.begin_suppress_tokens,Se))}return F.guidance_scale!==null&&F.guidance_scale>1&&_e.push(new p.ClassifierFreeGuidanceLogitsProcessor(F.guidance_scale)),we!==null&&_e.extend(we),_e}_prepare_generation_config(F,ne,we=u.GenerationConfig){const _e={...this.config};for(const ze of["decoder","generator","text_config"])ze in _e&&Object.assign(_e,_e[ze]);const Se=new we(_e);return Object.assign(Se,this.generation_config??{}),F&&Object.assign(Se,F),ne&&Object.assign(Se,(0,a.pick)(ne,Object.getOwnPropertyNames(Se))),Se}_get_stopping_criteria(F,ne=null){const we=new y.StoppingCriteriaList;return F.max_length!==null&&we.push(new y.MaxLengthCriteria(F.max_length,this.config.max_position_embeddings??null)),F.eos_token_id!==null&&we.push(new y.EosTokenCriteria(F.eos_token_id)),ne&&we.extend(ne),we}_validate_model_class(){if(!this.can_generate){const F=[Al,Ol,Il,kl],ne=x.get(this.constructor),we=new Set,_e=this.config.model_type;for(const ze of F){const Ve=ze.get(_e);Ve&&we.add(Ve[0])}let Se=`The current model class (${ne}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw we.size>0&&(Se+=` Please use the following class instead: ${[...we].join(", ")}`),Error(Se)}}prepare_inputs_for_generation(...F){return this._prepare_inputs_for_generation(this,...F)}_update_model_kwargs_for_generation({generated_input_ids:F,outputs:ne,model_inputs:we,is_encoder_decoder:_e}){return we.past_key_values=this.getPastKeyValues(ne,we.past_key_values),we.input_ids=new d.Tensor("int64",F.flat(),[F.length,1]),_e||(we.attention_mask=(0,d.cat)([we.attention_mask,(0,d.ones)([we.attention_mask.dims[0],1])],1)),we.position_ids=null,we}_prepare_model_inputs({inputs:F,bos_token_id:ne,model_kwargs:we}){const _e=(0,a.pick)(we,this.forward_params),Se=this.main_input_name;if(Se in _e){if(F)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else _e[Se]=F;return{inputs_tensor:_e[Se],model_inputs:_e,model_input_name:Se}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:F,model_inputs:ne,model_input_name:we,generation_config:_e}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ne.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:ze,pixel_values:Ve,attention_mask:Je,...ft}=ne,bt=await this._prepare_inputs_embeds(ne);ne={...ft,...(0,a.pick)(bt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Se}=await se(this,ne);if(_e.guidance_scale!==null&&_e.guidance_scale>1)Se=(0,d.cat)([Se,(0,d.full_like)(Se,0)],0),"attention_mask"in ne&&(ne.attention_mask=(0,d.cat)([ne.attention_mask,(0,d.zeros_like)(ne.attention_mask)],0));else if(ne.decoder_input_ids){const ze=q(ne.decoder_input_ids).dims[0];if(ze!==Se.dims[0]){if(Se.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Se.dims[0]}) than the decoder inputs (${ze}).`);Se=(0,d.cat)(Array.from({length:ze},()=>Se),0)}}return ne.encoder_outputs=Se,ne}_prepare_decoder_input_ids_for_generation({batch_size:F,model_input_name:ne,model_kwargs:we,decoder_start_token_id:_e,bos_token_id:Se,generation_config:ze}){let{decoder_input_ids:Ve,...Je}=we;if(!(Ve instanceof d.Tensor)){if(Ve)Array.isArray(Ve[0])||(Ve=Array.from({length:F},()=>Ve));else if(_e??(_e=Se),this.config.model_type==="musicgen")Ve=Array.from({length:F*this.config.decoder.num_codebooks},()=>[_e]);else if(Array.isArray(_e)){if(_e.length!==F)throw new Error(`\`decoder_start_token_id\` expcted to have length ${F} but got ${_e.length}`);Ve=_e}else Ve=Array.from({length:F},()=>[_e]);Ve=q(Ve)}return we.decoder_attention_mask=(0,d.ones_like)(Ve),{input_ids:Ve,model_inputs:Je}}async generate({inputs:F=null,generation_config:ne=null,logits_processor:we=null,stopping_criteria:_e=null,streamer:Se=null,...ze}){this._validate_model_class(),ne=this._prepare_generation_config(ne,ze);let{inputs_tensor:Ve,model_inputs:Je,model_input_name:ft}=this._prepare_model_inputs({inputs:F,model_kwargs:ze});const bt=this.config.is_encoder_decoder;bt&&("encoder_outputs"in Je||(Je=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ve,model_inputs:Je,model_input_name:ft,generation_config:ne})));let ht;bt?{input_ids:ht,model_inputs:Je}=this._prepare_decoder_input_ids_for_generation({batch_size:Je[ft].dims.at(0),model_input_name:ft,model_kwargs:Je,decoder_start_token_id:ne.decoder_start_token_id,bos_token_id:ne.bos_token_id,generation_config:ne}):ht=Je[ft];let $t=ht.dims.at(-1);ne.max_new_tokens!==null&&(ne.max_length=$t+ne.max_new_tokens);const yt=this._get_logits_processor(ne,$t,we),St=this._get_stopping_criteria(ne,_e),at=Je[ft].dims.at(0),It=$.LogitsSampler.getSampler(ne),Xt=new Array(at).fill(0),rs=ht.tolist();Se&&Se.put(rs);let us,is={};for(;;){if(Je=this.prepare_inputs_for_generation(rs,Je,ne),us=await this.forward(Je),ne.output_attentions&&ne.return_dict_in_generate){const Ws=this.getAttentions(us);for(const ur in Ws)ur in is||(is[ur]=[]),is[ur].push(Ws[ur])}const kt=us.logits.slice(null,-1,null),Es=yt(rs,kt),Ys=[];for(let Ws=0;Ws<Es.dims.at(0);++Ws){const ur=Es[Ws],Qi=await It(ur);for(const[Pn,Xi]of Qi){const Ji=BigInt(Pn);Xt[Ws]+=Xi,rs[Ws].push(Ji),Ys.push([Ji]);break}}if(Se&&Se.put(Ys),St(rs).every(Ws=>Ws))break;Je=this._update_model_kwargs_for_generation({generated_input_ids:Ys,outputs:us,model_inputs:Je,is_encoder_decoder:bt})}Se&&Se.end();const ys=this.getPastKeyValues(us,Je.past_key_values,!0),Is=new d.Tensor("int64",rs.flat(),[rs.length,rs[0].length]);if(ne.return_dict_in_generate)return{sequences:Is,past_key_values:ys,...is};for(const kt of Object.values(us))kt.location==="gpu-buffer"&&kt.dispose();return Is}getPastKeyValues(F,ne,we=!1){const _e=Object.create(null);for(const Se in F)if(Se.startsWith("present")){const ze=Se.replace("present","past_key_values"),Ve=Se.includes("encoder");if(Ve&&ne?_e[ze]=ne[ze]:_e[ze]=F[Se],ne&&(!Ve||we)){const Je=ne[ze];Je.location==="gpu-buffer"&&Je.dispose()}}return _e}getAttentions(F){const ne={};for(const we of["cross_attentions","encoder_attentions","decoder_attentions"])for(const _e in F)_e.startsWith(we)&&(we in ne||(ne[we]=[]),ne[we].push(F[_e]));return ne}addPastKeyValues(F,ne){var we,_e,Se;if(ne)Object.assign(F,ne);else{const ze=this.sessions.decoder_model_merged??this.sessions.model,Ve=((we=ze==null?void 0:ze.config)==null?void 0:we.kv_cache_dtype)??"float32",Je=Ve==="float16"?new d.DataTypeMap.float16:[],ft=((Se=(_e=F[this.main_input_name]??F.attention_mask)==null?void 0:_e.dims)==null?void 0:Se[0])??1,bt=(0,r.getKeyValueShapes)(this.config,{batch_size:ft});for(const ht in bt)F[ht]=new d.Tensor(Ve,Je,bt[ht])}}async encode_image({pixel_values:F}){const ne=(await B(this.sessions.vision_encoder,{pixel_values:F})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ne.dims[1]}).`),this.config.num_image_tokens=ne.dims[1]),ne}async encode_text({input_ids:F}){return(await B(this.sessions.embed_tokens,{input_ids:F})).inputs_embeds}async encode_audio({audio_values:F}){return(await B(this.sessions.audio_encoder,{audio_values:F})).audio_features}}class ye{}class he extends ye{constructor({last_hidden_state:S,hidden_states:F=null,attentions:ne=null}){super(),this.last_hidden_state=S,this.hidden_states=F,this.attentions=ne}}class Ee extends G{}class xe extends Ee{}class ke extends Ee{async _call(S){return new Ds(await super._call(S))}}class Ce extends Ee{async _call(S){return new Tt(await super._call(S))}}class Fe extends Ee{async _call(S){return new ks(await super._call(S))}}class Ge extends Ee{async _call(S){return new Ns(await super._call(S))}}class Ue extends G{}class Ie extends Ue{}class De extends Ue{async _call(S){return new Ds(await super._call(S))}}class qe extends Ue{async _call(S){return new Tt(await super._call(S))}}class Ye extends Ue{async _call(S){return new ks(await super._call(S))}}class ot extends G{}class Ke extends ot{}class Ae extends G{}class et extends Ae{}class _t extends Ae{async _call(S){return new Ds(await super._call(S))}}class zt extends Ae{async _call(S){return new Tt(await super._call(S))}}class jt extends Ae{async _call(S){return new ks(await super._call(S))}}class bs extends Ae{async _call(S){return new Ns(await super._call(S))}}class ls extends G{}class Mt extends ls{}class sr extends ls{async _call(S){return new Ds(await super._call(S))}}class L extends ls{async _call(S){return new Tt(await super._call(S))}}class oe extends ls{async _call(S){return new ks(await super._call(S))}}class j extends ls{async _call(S){return new Ns(await super._call(S))}}class te extends G{}class ge extends te{}class Le extends te{async _call(S){return new Ds(await super._call(S))}}class ve extends te{async _call(S){return new Tt(await super._call(S))}}class xt extends te{async _call(S){return new ks(await super._call(S))}}class Dt extends te{async _call(S){return new Ns(await super._call(S))}}class mt extends G{}class ut extends mt{}class it extends mt{async _call(S){return new Ds(await super._call(S))}}class Nt extends mt{async _call(S){return new Tt(await super._call(S))}}class Qt extends mt{async _call(S){return new ks(await super._call(S))}}class Ms extends mt{async _call(S){return new Ns(await super._call(S))}}class Yt extends G{}class zs extends Yt{}class rr extends Yt{async _call(S){return new Ds(await super._call(S))}}class mr extends Yt{async _call(S){return new Tt(await super._call(S))}}class nr extends Yt{async _call(S){return new ks(await super._call(S))}}class kr extends Yt{async _call(S){return new Ns(await super._call(S))}}class Vs extends G{}class Ir extends Vs{}class Qs extends Vs{async _call(S){return new Ds(await super._call(S))}}class fr extends Vs{async _call(S){return new Tt(await super._call(S))}}class Ar extends Vs{async _call(S){return new ks(await super._call(S))}}class Or extends Vs{async _call(S){return new Ns(await super._call(S))}}class cs extends G{}class Fr extends cs{}class Cs extends cs{async _call(S){return new Tt(await super._call(S))}}class _r extends cs{async _call(S){return new ks(await super._call(S))}}class js extends cs{async _call(S){return new Ns(await super._call(S))}}class Oe extends cs{async _call(S){return new Ds(await super._call(S))}}class Ze extends G{}class ct extends Ze{}class Ut extends Ze{async _call(S){return new Ds(await super._call(S))}}class or extends Ze{async _call(S){return new Tt(await super._call(S))}}class ir extends Ze{async _call(S){return new ks(await super._call(S))}}class ps extends G{}class ar extends ps{}class hs extends ps{async _call(S){return new Ds(await super._call(S))}}class _s extends ps{async _call(S){return new Tt(await super._call(S))}}class lr extends ps{async _call(S){return new Ns(await super._call(S))}}class gr extends G{}class ln extends gr{}class cn extends gr{async _call(S){return new Ds(await super._call(S))}}class un extends gr{async _call(S){return new Tt(await super._call(S))}}class dn extends gr{async _call(S){return new ks(await super._call(S))}}class pn extends gr{async _call(S){return new Ns(await super._call(S))}}class Dr extends G{}class Wr extends Dr{}class hn extends Dr{async _call(S){return new Ds(await super._call(S))}}class mn extends Dr{async _call(S){return new Tt(await super._call(S))}}class fn extends Dr{async _call(S){return new Ns(await super._call(S))}}class Lr extends G{}class de extends Lr{}class k extends Lr{async _call(S){return new Tt(await super._call(S))}}class U extends Lr{async _call(S){return new Ns(await super._call(S))}}class J extends Lr{async _call(S){return new Ds(await super._call(S))}}class ae extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ue extends ae{}class Te extends ae{}class je extends G{}class Xe extends je{}class He extends je{}class tt extends G{}class wt extends tt{}class Lt extends tt{}class Ft extends G{}class Zt extends Ft{}class Gt extends Ft{}class gs extends Ft{async _call(S){return new Tt(await super._call(S))}}class vs extends G{}class Ss extends vs{}class $s extends vs{}class ts extends vs{async _call(S){return new Tt(await super._call(S))}}class wr extends vs{}class qt extends G{}class ws extends qt{}class Bs extends qt{}class Xs extends G{}class Js extends Xs{}class Os extends Xs{}class Rs extends G{}class xs extends Rs{}class ss extends Rs{async _call(S){return new Ds(await super._call(S))}}class ms extends Rs{async _call(S){return new Tt(await super._call(S))}}class fs extends Rs{async _call(S){return new ks(await super._call(S))}}class Fs extends Rs{async _call(S){return new Ns(await super._call(S))}}class cr extends G{}class _n extends cr{}class ci extends cr{async _call(S){return new Ds(await super._call(S))}}class ui extends cr{async _call(S){return new Tt(await super._call(S))}}class di extends cr{async _call(S){return new ks(await super._call(S))}}class po extends cr{async _call(S){return new Ns(await super._call(S))}}class Gr extends G{}class pi extends Gr{}class hi extends Gr{async _call(S){return new Ds(await super._call(S))}}class mi extends Gr{async _call(S){return new Tt(await super._call(S))}}class fi extends Gr{async _call(S){return new ks(await super._call(S))}}class _i extends Gr{async _call(S){return new Ns(await super._call(S))}}class ho extends G{}class gi extends ho{}class wi extends ho{}class mo extends G{constructor(){super(...arguments);ee(this,"requires_attention_mask",!1);ee(this,"main_input_name","input_features");ee(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class yi extends mo{}class fo extends mo{_prepare_generation_config(S,F){return super._prepare_generation_config(S,F,g.WhisperGenerationConfig)}_retrieve_init_tokens(S){const F=[S.decoder_start_token_id];let ne=S.language;const we=S.task;if(S.is_multilingual){ne||(console.warn("No language specified - defaulting to English (en)."),ne="en");const Se=`<|${(0,C.whisper_language_to_code)(ne)}|>`;F.push(S.lang_to_id[Se]),F.push(S.task_to_id[we??"transcribe"])}else if(ne||we)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&F.at(-1)!==S.no_timestamps_token_id?F.push(S.no_timestamps_token_id):S.return_timestamps&&F.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),F.pop()),F.filter(_e=>_e!=null)}async generate({inputs:S=null,generation_config:F=null,logits_processor:ne=null,stopping_criteria:we=null,..._e}){F=this._prepare_generation_config(F,_e);const Se=_e.decoder_input_ids??this._retrieve_init_tokens(F);if(F.return_timestamps&&(ne??(ne=new p.LogitsProcessorList),ne.push(new p.WhisperTimeStampLogitsProcessor(F,Se))),F.begin_suppress_tokens&&(ne??(ne=new p.LogitsProcessorList),ne.push(new p.SuppressTokensAtBeginLogitsProcessor(F.begin_suppress_tokens,Se.length))),F.return_token_timestamps){if(!F.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");F.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),F.output_attentions=!0,F.return_dict_in_generate=!0}const ze=await super.generate({inputs:S,generation_config:F,logits_processor:ne,decoder_input_ids:Se,..._e});return F.return_token_timestamps&&(ze.token_timestamps=this._extract_token_timestamps(ze,F.alignment_heads,F.num_frames)),ze}_extract_token_timestamps(S,F,ne=null,we=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ne==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let _e=this.config.median_filter_width;_e===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),_e=7);const Se=S.cross_attentions,ze=Array.from({length:this.config.decoder_layers},(St,at)=>(0,d.cat)(Se.map(It=>It[at]),2)),Ve=(0,d.stack)(F.map(([St,at])=>{if(St>=ze.length)throw new Error(`Layer index ${St} is out of bounds for cross attentions (length ${ze.length}).`);return ne?ze[St].slice(null,at,null,[0,ne]):ze[St].slice(null,at)})).transpose(1,0,2,3),[Je,ft]=(0,d.std_mean)(Ve,-2,0,!0),bt=Ve.clone();for(let St=0;St<bt.dims[0];++St){const at=bt[St];for(let It=0;It<at.dims[0];++It){const Xt=at[It],rs=Je[St][It][0].data,us=ft[St][It][0].data;for(let is=0;is<Xt.dims[0];++is){let ys=Xt[is].data;for(let Is=0;Is<ys.length;++Is)ys[Is]=(ys[Is]-us[Is])/rs[Is];ys.set((0,f.medianFilter)(ys,_e))}}}const ht=[(0,d.mean)(bt,1)],$t=S.sequences.dims,yt=new d.Tensor("float32",new Float32Array($t[0]*$t[1]),$t);for(let St=0;St<$t[0];++St){const at=ht[St].neg().squeeze_(0),[It,Xt]=(0,f.dynamic_time_warping)(at.tolist()),rs=Array.from({length:It.length-1},(ys,Is)=>It[Is+1]-It[Is]),us=(0,a.mergeArrays)([1],rs).map(ys=>!!ys),is=[];for(let ys=0;ys<us.length;++ys)us[ys]&&is.push(Xt[ys]*we);yt[St].data.set(is,1)}return yt}}class _o extends fo{}class Vn extends G{constructor(){super(...arguments);ee(this,"requires_attention_mask",!1);ee(this,"main_input_name","input_values");ee(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class bi extends Vn{}class Mi extends Vn{}class go extends G{constructor(){super(...arguments);ee(this,"main_input_name","pixel_values");ee(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class wo extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class gn extends wo{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:F,input_ids:ne,attention_mask:we}){const _e=this.config.image_token_index,ze=ne.tolist().map(ht=>ht.findIndex($t=>$t==_e)),Ve=ze.every(ht=>ht===-1),Je=ze.every(ht=>ht!==-1);if(!Ve&&!Je)throw new Error("Every input should contain either 0 or 1 image token.");if(Ve)return{inputs_embeds:S,attention_mask:we};const ft=[],bt=[];for(let ht=0;ht<ze.length;++ht){const $t=ze[ht],yt=S[ht],St=F[ht],at=we[ht];ft.push((0,d.cat)([yt.slice([0,$t]),St,yt.slice([$t+1,yt.dims[0]])],0)),bt.push((0,d.cat)([at.slice([0,$t]),(0,d.ones)([St.dims[0]]),at.slice([$t+1,at.dims[0]])],0))}return{inputs_embeds:(0,d.stack)(ft,0),attention_mask:(0,d.stack)(bt,0)}}}class Kr extends gn{}class vi extends gn{}class yo extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);ee(this,"main_input_name","inputs_embeds")}}class xi extends yo{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:F,input_ids:ne,attention_mask:we}){return{inputs_embeds:(0,d.cat)([F,S],1),attention_mask:(0,d.cat)([(0,d.ones)(F.dims.slice(0,2)),we],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:F,inputs_embeds:ne,attention_mask:we}){if(!S&&!F)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let _e,Se;return S&&(_e=await this.encode_text({input_ids:S})),F&&(Se=await this.encode_image({pixel_values:F})),_e&&Se?{inputs_embeds:ne,attention_mask:we}=this._merge_input_ids_with_image_features({inputs_embeds:_e,image_features:Se,input_ids:S,attention_mask:we}):ne=_e||Se,{inputs_embeds:ne,attention_mask:we}}async forward({input_ids:S,pixel_values:F,attention_mask:ne,decoder_input_ids:we,decoder_attention_mask:_e,encoder_outputs:Se,past_key_values:ze,inputs_embeds:Ve,decoder_inputs_embeds:Je}){if(Ve||({inputs_embeds:Ve,attention_mask:ne}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:F,inputs_embeds:Ve,attention_mask:ne})),!Se){let{last_hidden_state:ht}=await se(this,{inputs_embeds:Ve,attention_mask:ne});Se=ht}if(!Je){if(!we)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Je=await this.encode_text({input_ids:we})}return await le(this,{inputs_embeds:Je,attention_mask:_e,encoder_attention_mask:ne,encoder_hidden_states:Se,past_key_values:ze},!0)}}class Ti extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ei extends Ti{_merge_input_ids_with_image_features(S){const F=S.image_features.dims.at(-1),ne=S.image_features.view(-1,F);return O({image_token_id:this.config.image_token_index,...S,image_features:ne})}}class Wn extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class wn extends Wn{async encode_image({pixel_values:S,pixel_attention_mask:F}){return(await B(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:F})).image_features}_merge_input_ids_with_image_features(S){const F=S.image_features.dims.at(-1),ne=S.image_features.view(-1,F);return O({image_token_id:this.config.image_token_id,...S,image_features:ne})}}class bo extends wn{}class Pi extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Mo extends Pi{async forward({input_ids:S=null,attention_mask:F=null,pixel_values:ne=null,image_sizes:we=null,position_ids:_e=null,inputs_embeds:Se=null,past_key_values:ze=null,generation_config:Ve=null,logits_processor:Je=null,...ft}){if(!Se){let ht;if(ne&&S.dims[1]!==1){if(!we)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:ht}=await B(this.sessions.vision_encoder,{pixel_values:ne,image_sizes:we}))}else{const $t=this.config.normalized_config.hidden_size;ht=new d.Tensor("float32",[],[0,$t])}({inputs_embeds:Se}=await B(this.sessions.prepare_inputs_embeds,{input_ids:S,image_features:ht}))}return await le(this,{inputs_embeds:Se,past_key_values:ze,attention_mask:F,position_ids:_e,generation_config:Ve,logits_processor:Je},!1)}}class Rr extends G{}class Ci extends Rr{}class Sa extends Rr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"text_model"})}}class Si extends Rr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"text_model"})}}class $a extends Rr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"vision_model"})}}class $i extends Rr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Hr extends G{}class qr extends Hr{}class vo extends Hr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"text_model"})}}class ki extends Rr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Ii extends G{}class Gn extends Ii{}class Qr extends G{}class xo extends Qr{async forward(S){const F=!S.input_ids,ne=!S.pixel_values;if(F&&ne)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(F&&(S.input_ids=(0,d.ones)([S.pixel_values.dims[0],1])),ne){const{image_size:Je}=this.config.vision_config;S.pixel_values=(0,d.full)([0,3,Je,Je],0)}const{text_embeddings:we,image_embeddings:_e,l2norm_text_embeddings:Se,l2norm_image_embeddings:ze}=await super.forward(S),Ve={};return F||(Ve.text_embeddings=we,Ve.l2norm_text_embeddings=Se),ne||(Ve.image_embeddings=_e,Ve.l2norm_image_embeddings=ze),Ve}}class To extends Qr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"text_model"})}}class Eo extends Qr{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Kn extends G{}class Po extends Kn{}class Co extends Kn{}class So extends G{}class $o extends So{}class ko extends So{}class Xr extends G{}class pt extends Xr{}class Ai extends Xr{}class Hn extends G{}class Io extends Hn{}class yn extends Hn{}class Hs extends G{}class bn extends Hs{}class qn extends Hs{}class Qn extends G{}class Ao extends Qn{}class Oo extends Qn{}class Mn extends G{}class Fo extends Mn{}class Do extends Mn{}class Xn extends G{}class vn extends Xn{}class Jn extends Xn{}class xn extends G{}class Lo extends xn{}class zo extends xn{}class Yn extends G{}class Bo extends Yn{}class Ro extends Yn{}class Zn extends G{}class h extends Zn{}class E extends Zn{}class I extends G{}class z extends I{}class V extends I{}class ce extends G{}class Pe extends ce{}class Be extends ce{}class Qe extends G{}class rt extends Qe{}class vt extends Qe{}class At extends G{}class Kt extends At{}class Ts extends At{}class zr extends G{}class Oi extends zr{}class Ku extends zr{}class ka extends G{}class Hu extends ka{}class qu extends ka{}class Ia extends G{}class Qu extends Ia{}class Xu extends Ia{}class Aa extends G{}class Ju extends Aa{}class Yu extends Aa{}class Oa extends G{}class Zu extends Oa{}class ed extends Oa{}class Fa extends G{}class td extends Fa{}class sd extends Fa{}class Da extends G{}class rd extends Da{}class nd extends Da{}class La extends G{}class od extends La{}class id extends La{}class ad extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class ld extends ad{get_rope_index(S,F,ne,we){const{vision_config:_e,image_token_id:Se,video_token_id:ze,vision_start_token_id:Ve}=this.config,Je=_e.spatial_merge_size??2,ft=[];if(F||ne){let bt=S.tolist();we||(we=(0,d.ones_like)(S));const ht=we.tolist(),$t=Array.from({length:3},Xt=>Array.from({length:S.dims[0]},rs=>Array.from({length:S.dims[1]},us=>1))),yt=F?F.tolist():[],St=ne?ne.tolist():[];let at=0,It=0;for(let Xt=0;Xt<bt.length;++Xt){const rs=bt[Xt].filter((ns,Ps)=>ht[Xt][Ps]==1),is=rs.reduce((ns,Ps,Yr)=>(Ps==Ve&&ns.push(Yr),ns),[]).map(ns=>rs[ns+1]),ys=is.filter(ns=>ns==Se).length,Is=is.filter(ns=>ns==ze).length;let kt=[],Es=0,Ys=ys,En=Is;for(let ns=0;ns<is.length;++ns){const Ps=rs.findIndex((Sn,yr)=>yr>Es&&Sn==Se),Yr=rs.findIndex((Sn,yr)=>yr>Es&&Sn==ze),Cn=Ys>0&&Ps!==-1?Ps:rs.length+1,so=En>0&&Yr!==-1?Yr:rs.length+1;let Yi,Dl,Ll,zl;Cn<so?([Dl,Ll,zl]=yt[at],++at,--Ys,Yi=Cn):([Dl,Ll,zl]=St[It],++It,--En,Yi=so);const[Xv,Bl,Zi]=[Number(Dl),Math.floor(Number(Ll)/Je),Math.floor(Number(zl)/Je)],Rl=Yi-Es,Wf=kt.length>0?(0,f.max)(kt.at(-1))[0]+1:0;kt.push(Array.from({length:3*Rl},(Sn,yr)=>Wf+yr%Rl));const jl=Rl+Wf,ea=Xv*Bl*Zi,Jv=Array.from({length:ea},(Sn,yr)=>jl+Math.floor(yr/(Bl*Zi))),Yv=Array.from({length:ea},(Sn,yr)=>jl+Math.floor(yr/Zi)%Bl),Zv=Array.from({length:ea},(Sn,yr)=>jl+yr%Zi);kt.push([Jv,Yv,Zv].flat()),Es=Yi+ea}if(Es<rs.length){const ns=kt.length>0?(0,f.max)(kt.at(-1))[0]+1:0,Ps=rs.length-Es;kt.push(Array.from({length:3*Ps},(Yr,Cn)=>ns+Cn%Ps))}const Ws=kt.reduce((ns,Ps)=>ns+Ps.length,0),ur=new Array(Ws);let Qi=0;for(let ns=0;ns<3;++ns)for(let Ps=0;Ps<kt.length;++Ps){const Yr=kt[Ps],Cn=Yr.length/3;for(let so=ns*Cn;so<(ns+1)*Cn;++so)ur[Qi++]=Yr[so]}let Pn=0;const Xi=ht[Xt];for(let ns=0;ns<Xi.length;++ns)if(Xi[ns]==1){for(let Ps=0;Ps<3;++Ps)$t[Ps][Xt][ns]=ur[Ps*Ws/3+Pn];++Pn}const Ji=(0,f.max)(ur)[0];ft.push(Ji+1-bt[Xt].length)}return[new d.Tensor("int64",$t.flat(1/0),[3,S.dims[0],S.dims[1]]),new d.Tensor("int64",ft,[ft.length,1])]}else if(we){const{data:bt,dims:ht}=Me(we),$t=BigInt64Array.from({length:3*bt.length},(St,at)=>bt[at%bt.length]),yt=Array.from({length:ht[0]},(St,at)=>(0,f.max)(bt.subarray(ht[1]*at,ht[1]*(at+1)))[0]+1n+BigInt(ht[1]));return[new d.Tensor("int64",$t,[3,...ht]),new d.Tensor("int64",yt,[yt.length,1])]}else{const[bt,ht]=S.dims,$t=BigInt64Array.from({length:3*bt*ht},(yt,St)=>BigInt(Math.floor(St%ht/bt)));return[new d.Tensor("int64",$t,[3,...S.dims]),(0,d.zeros)([bt,1])]}}async encode_image({pixel_values:S,image_grid_thw:F}){return(await B(this.sessions.vision_encoder,{pixel_values:S,grid_thw:F})).image_features}_merge_input_ids_with_image_features(S){return O({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,F,ne){if(F.attention_mask&&!F.position_ids)if(!F.past_key_values)[F.position_ids,F.rope_deltas]=this.get_rope_index(F.input_ids,F.image_grid_thw,F.video_grid_thw,F.attention_mask);else{F.pixel_values=null;const we=BigInt(Object.values(F.past_key_values)[0].dims.at(-2)),_e=F.rope_deltas.map(Se=>we+Se);F.position_ids=(0,d.stack)([_e,_e,_e],0)}return F}}class za extends G{}class cd extends za{}class ud extends za{}class Ba extends G{}class dd extends Ba{}class pd extends Ba{}class Ra extends G{}class hd extends Ra{}class md extends Ra{}class ja extends G{}class fd extends ja{}class _d extends ja{}class Na extends G{}class gd extends Na{}class wd extends Na{}class Ua extends G{}class yd extends Ua{}class bd extends Ua{async _call(S){return new Tt(await super._call(S))}}class Va extends G{}class Md extends Va{}class vd extends Va{async _call(S){return new Tt(await super._call(S))}}class xd extends G{}class Td extends xd{}class Wa extends G{}class Ed extends Wa{}class Pd extends Wa{async _call(S){return new Tt(await super._call(S))}}class Cd extends G{}class Sd extends Cd{}class Ga extends G{}class $d extends Ga{}class kd extends Ga{async _call(S){return new Tt(await super._call(S))}}class Id extends G{}class Ad extends Id{}class Ka extends G{}class Od extends Ka{}class Fd extends Ka{async _call(S){return new Tt(await super._call(S))}}class Dd extends G{}class Ld extends Dd{async _call(S){return new Uf(await super._call(S))}}class Ha extends G{}class zd extends Ha{}class Bd extends Ha{async _call(S){return new Tt(await super._call(S))}}class qa extends G{}class Rd extends qa{}class jd extends qa{async _call(S){return new Tt(await super._call(S))}}class Qa extends G{}class Nd extends Qa{}class Ud extends Qa{}class Xa extends G{}class Vd extends Xa{}class Wd extends Xa{}class Ja extends G{}class Gd extends Ja{}class Kd extends Ja{async _call(S){return new Tt(await super._call(S))}}class Fi extends G{}class Hd extends Fi{}class qd extends Fi{async _call(S){return new Za(await super._call(S))}}class Ya extends Fi{async _call(S){return new Qd(await super._call(S))}}class Za extends ye{constructor({logits:S,pred_boxes:F}){super(),this.logits=S,this.pred_boxes=F}}class Qd extends ye{constructor({logits:S,pred_boxes:F,pred_masks:ne}){super(),this.logits=S,this.pred_boxes=F,this.pred_masks=ne}}class el extends G{}class Xd extends el{}class Jd extends el{async _call(S){return new jo(await super._call(S))}}class jo extends ye{constructor({logits:S,pred_boxes:F}){super(),this.logits=S,this.pred_boxes=F}}class tl extends G{}class Yd extends tl{}class Zd extends tl{async _call(S){return new ep(await super._call(S))}}class ep extends jo{}class sl extends G{}class tp extends sl{}class sp extends sl{async _call(S){return new rp(await super._call(S))}}class rp extends jo{}class rl extends G{}class np extends rl{}class op extends rl{async _call(S){return new jo(await super._call(S))}}class nl extends G{}class ip extends nl{}class ap extends nl{async _call(S){return new lp(await super._call(S))}}class lp extends Za{}class ol extends G{}class cp extends ol{}class up extends ol{async _call(S){return new Tt(await super._call(S))}}class il extends G{}class dp extends il{}class pp extends il{async _call(S){return new Tt(await super._call(S))}}class al extends G{}class hp extends al{}class mp extends al{async _call(S){return new Tt(await super._call(S))}}class Di extends G{}class fp extends Di{}class _p extends Di{async _call(S){return new Tt(await super._call(S))}}class gp extends Di{}class ll extends G{}class wp extends ll{}class yp extends ll{}class cl extends G{}class bp extends cl{}class Mp extends cl{}class vp extends G{}class xp extends vp{}class Li extends G{}class Tp extends Li{}class Ep extends Li{}class Pp extends Li{}class Cp extends G{}class Sp extends Cp{}class $p extends G{}class kp extends $p{}class Ip extends G{}class Ap extends Ip{}class ul extends G{}class Op extends ul{}class Fp extends ul{}class dl extends G{}class Dp extends dl{}class Lp extends dl{}class zp extends G{}class Bp extends zp{}class pl extends G{}class Rp extends pl{}class jp extends pl{async _call(S){return new Tt(await super._call(S))}}class hl extends G{}class Np extends hl{}class Up extends hl{async _call(S){return new Tt(await super._call(S))}}class ml extends G{}class Vp extends ml{}class Wp extends ml{async _call(S){return new Tt(await super._call(S))}}class fl extends G{}class Gp extends fl{}class Kp extends fl{async _call(S){return new Tt(await super._call(S))}}class Hp extends G{}class qp extends Hp{}class _l extends G{}class Qp extends _l{}class Xp extends _l{async _call(S){return new Jp(await super._call(S))}}class Jp extends ye{constructor({logits:S,pred_boxes:F}){super(),this.logits=S,this.pred_boxes=F}}class Yp extends G{}class Zp extends Yp{async get_image_embeddings({pixel_values:S}){return await se(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const ne=S.input_points.dims.slice(0,-1),we=ne.reduce((_e,Se)=>_e*Se,1);S.input_labels=new d.Tensor("int64",new BigInt64Array(we).fill(1n),ne)}const F={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(F.input_points=S.input_points),S.input_labels&&(F.input_labels=S.input_labels),S.input_boxes&&(F.input_boxes=S.input_boxes),await B(this.sessions.prompt_encoder_mask_decoder,F)}async _call(S){return new eh(await super._call(S))}}class eh extends ye{constructor({iou_scores:S,pred_masks:F}){super(),this.iou_scores=S,this.pred_masks=F}}class gl extends G{}class th extends gl{}class sh extends gl{}class wl extends G{}class rh extends wl{}class nh extends wl{}class Jr extends G{}class oh extends Jr{}class ih extends Jr{async _call(S){return new Tn(await super._call(S))}}class ah extends Jr{async _call(S){return new Tt(await super._call(S))}}class lh extends Jr{async _call(S){return new ks(await super._call(S))}}class yl extends G{}class ch extends yl{}class uh extends yl{async _call(S){return new ks(await super._call(S))}}class dh extends G{}class ph extends dh{}class zi extends G{}class hh extends zi{}class mh extends zi{async _call(S){return new Tn(await super._call(S))}}class fh extends zi{async _call(S){return new Tt(await super._call(S))}}class No extends G{}class _h extends No{}class gh extends No{async _call(S){return new Tn(await super._call(S))}}class wh extends No{async _call(S){return new Tt(await super._call(S))}}class yh extends No{async _call(S){return new ks(await super._call(S))}}class Bi extends G{}class bh extends Bi{}class Mh extends Bi{async _call(S){return new Tn(await super._call(S))}}class vh extends Bi{async _call(S){return new Tt(await super._call(S))}}class Dv extends G{}class xh extends Jr{}class Th extends Jr{async _call(S){return new Tn(await super._call(S))}}class Eh extends Jr{async _call(S){return new Tt(await super._call(S))}}class eo extends G{}class Ph extends eo{}class Ch extends eo{async _call(S){return new Tn(await super._call(S))}}class Sh extends eo{async _call(S){return new Tt(await super._call(S))}}class $h extends eo{async _call(S){return new Nf(await super._call(S))}}class kh extends eo{async _call(S){return new ks(await super._call(S))}}class Ih extends G{}class Ah extends Ih{}class Ri extends G{}class Lv extends Ri{}class Oh extends Ri{}class Fh extends Ri{async generate_speech(S,F,{threshold:ne=.5,minlenratio:we=0,maxlenratio:_e=20,vocoder:Se=null}={}){const ze={input_ids:S},{encoder_outputs:Ve,encoder_attention_mask:Je}=await se(this,ze),ft=Ve.dims[1]/this.config.reduction_factor,bt=Math.floor(ft*_e),ht=Math.floor(ft*we),$t=this.config.num_mel_bins;let yt=[],St=null,at=null,It=0;for(;;){++It;const us=Q(!!at);let is;at?is=at.output_sequence_out:is=new d.Tensor("float32",new Float32Array($t),[1,1,$t]);let ys={use_cache_branch:us,output_sequence:is,encoder_attention_mask:Je,speaker_embeddings:F,encoder_hidden_states:Ve};this.addPastKeyValues(ys,St),at=await B(this.sessions.decoder_model_merged,ys),St=this.getPastKeyValues(at,St);const{prob:Is,spectrum:kt}=at;if(yt.push(kt),It>=ht&&(Array.from(Is.data).filter(Es=>Es>=ne).length>0||It>=bt))break}const Xt=(0,d.cat)(yt),{waveform:rs}=await B(Se.sessions.model,{spectrogram:Xt});return{spectrogram:Xt,waveform:rs}}}class Dh extends G{constructor(){super(...arguments);ee(this,"main_input_name","spectrogram")}}class Lh extends G{}class zh extends Lh{}class bl extends G{}class Bh extends bl{}class Rh extends bl{}class Ml extends G{}class jh extends Ml{}class Nh extends Ml{}class vl extends G{}class Uh extends vl{}class Vh extends vl{}class ji extends G{}class Wh extends ji{}class Gh extends ji{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"text_model"})}}class Kh extends ji{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"audio_model"})}}class Hh extends G{}class xl extends Hh{async _call(S){return new Vf(await super._call(S))}}class Ni extends G{}class zv extends Ni{}class qh extends Ni{}class Qh extends Ni{}class Tl extends G{}class Xh extends Tl{}class Jh extends Tl{}class El extends G{}class Yh extends El{}class Zh extends El{async _call(S){return new Tt(await super._call(S))}}class Pl extends G{}class Bv extends Pl{}class Rv extends Pl{}class Cl extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(F){const[ne,we]=F.dims,_e=this.config.decoder.num_codebooks,Se=we-_e;let ze=0;for(let ft=0;ft<F.size;++ft){if(F.data[ft]===this.config.decoder.pad_token_id)continue;const bt=ft%we,ht=Math.floor(ft/we)%_e,$t=bt-ht;$t>0&&$t<=Se&&(F.data[ze++]=F.data[ft])}const Ve=Math.floor(ne/_e),Je=ze/(Ve*_e);return new d.Tensor(F.type,F.data.slice(0,ze),[Ve,_e,Je])}prepare_inputs_for_generation(F,ne,we){let _e=structuredClone(F);for(let ze=0;ze<_e.length;++ze)for(let Ve=0;Ve<_e[ze].length;++Ve)ze%this.config.decoder.num_codebooks>=Ve&&(_e[ze][Ve]=BigInt(this.config.decoder.pad_token_id));return we.guidance_scale!==null&&we.guidance_scale>1&&(_e=_e.concat(_e)),super.prepare_inputs_for_generation(_e,ne,we)}async generate(F){const ne=await super.generate(F),we=this._apply_and_filter_by_delay_pattern_mask(ne).unsqueeze_(0),{audio_values:_e}=await B(this.sessions.encodec_decode,{audio_codes:we});return _e}}class Ui extends G{}class em extends Ui{}class tm extends Ui{async _call(S){return new Tt(await super._call(S))}}class sm extends Ui{}class Vi extends G{}class rm extends Vi{}class nm extends Vi{async _call(S){return new Tt(await super._call(S))}}class om extends Vi{}class Wi extends G{}class im extends Wi{}class am extends Wi{async _call(S){return new Tt(await super._call(S))}}class lm extends Wi{}class Gi extends G{}class cm extends Gi{}class um extends Gi{async _call(S){return new Tt(await super._call(S))}}class dm extends Gi{}class pm extends G{}class hm extends pm{}class mm extends G{}class fm extends mm{constructor(...F){super(...F);ee(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(F){const ne=this._generation_mode??"text";let we;if(ne==="text"||!F.past_key_values){const Je=this.sessions.prepare_inputs_embeds,ft=(0,a.pick)(F,Je.inputNames);we=await B(Je,ft)}else{const Je=this.sessions.gen_img_embeds,ft=(0,a.pick)({image_ids:F.input_ids},Je.inputNames);we=await B(Je,ft)}const _e={...F,...we},Se=await le(this,_e),ze=this.sessions[ne==="text"?"lm_head":"gen_head"];if(!ze)throw new Error(`Unable to find "${ze}" generation head`);const Ve=await B(ze,(0,a.pick)(Se,ze.inputNames));return{...we,...Se,...Ve}}async generate(F){return this._generation_mode="text",super.generate(F)}async generate_images(F){this._generation_mode="image";const ne=(F.inputs??F[this.main_input_name]).dims[1],_e=(await super.generate(F)).slice(null,[ne,null]),Se=this.sessions.image_decode,{decoded_image:ze}=await B(Se,{generated_tokens:_e}),Ve=ze.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Je=[];for(const ft of Ve){const bt=_.RawImage.fromTensor(ft);Je.push(bt)}return Je}}class _m extends ye{constructor({char_logits:S,bpe_logits:F,wp_logits:ne}){super(),this.char_logits=S,this.bpe_logits=F,this.wp_logits=ne}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class gm extends G{}class wm extends gm{async _call(S){return new _m(await super._call(S))}}class Sl extends G{}class ym extends Sl{}class bm extends Sl{}class $l extends G{}class Mm extends $l{}class vm extends $l{}class xm extends G{constructor(){super(...arguments);ee(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Tm extends xm{_merge_input_ids_with_audio_features(S){const F=S.audio_features.dims.at(-1),ne=S.audio_features.view(-1,F);return N({audio_token_id:this.config.ignore_index,...S,audio_features:ne})}}class Ki extends G{constructor(){super(...arguments);ee(this,"main_input_name","input_values");ee(this,"forward_params",["input_values"])}}class Em extends ye{constructor({audio_codes:S}){super(),this.audio_codes=S}}class Pm extends ye{constructor({audio_values:S}){super(),this.audio_values=S}}class Cm extends Ki{async encode(S){return new Em(await B(this.sessions.encoder_model,S))}async decode(S){return new Pm(await B(this.sessions.decoder_model,S))}}class Sm extends Ki{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class $m extends Ki{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class Hi extends G{constructor(){super(...arguments);ee(this,"main_input_name","input_values");ee(this,"forward_params",["input_values"])}}class km extends ye{constructor({audio_codes:S}){super(),this.audio_codes=S}}class Im extends ye{constructor({audio_values:S}){super(),this.audio_values=S}}class Am extends Hi{async encode(S){return new km(await B(this.sessions.encoder_model,S))}async decode(S){return new Im(await B(this.sessions.decoder_model,S))}}class Om extends Hi{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class Fm extends Hi{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class qi extends G{constructor(){super(...arguments);ee(this,"main_input_name","input_values");ee(this,"forward_params",["input_values"])}}class Dm extends qi{async encode(S){return await B(this.sessions.encoder_model,S)}async decode(S){return await B(this.sessions.decoder_model,S)}}class Lm extends qi{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class zm extends qi{static async from_pretrained(S,F={}){return super.from_pretrained(S,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class Bt{static async from_pretrained(S,{progress_callback:F=null,config:ne=null,cache_dir:we=null,local_files_only:_e=!1,revision:Se="main",model_file_name:ze=null,subfolder:Ve="onnx",device:Je=null,dtype:ft=null,use_external_data_format:bt=null,session_options:ht={}}={}){const $t={progress_callback:F,config:ne,cache_dir:we,local_files_only:_e,revision:Se,model_file_name:ze,subfolder:Ve,device:Je,dtype:ft,use_external_data_format:bt,session_options:ht};if($t.config=await r.AutoConfig.from_pretrained(S,$t),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const yt=$t.config.model_type;for(const St of this.MODEL_CLASS_MAPPINGS){let at=St.get(yt);if(!at){for(const It of St.values())if(It[0]===yt){at=It;break}if(!at)continue}return await at[1].from_pretrained(S,$t)}if(this.BASE_IF_FAIL)return uf.has(yt)||console.warn(`Unknown model class "${yt}", attempting to construct from base class.`),await G.from_pretrained(S,$t);throw Error(`Unsupported model type: ${yt}`)}}ee(Bt,"MODEL_CLASS_MAPPINGS",null),ee(Bt,"BASE_IF_FAIL",!1);const jv=new Map([["bert",["BertModel",xe]],["modernbert",["ModernBertModel",Ie]],["nomic_bert",["NomicBertModel",Ke]],["roformer",["RoFormerModel",et]],["electra",["ElectraModel",ge]],["esm",["EsmModel",ct]],["convbert",["ConvBertModel",Mt]],["camembert",["CamembertModel",ut]],["deberta",["DebertaModel",zs]],["deberta-v2",["DebertaV2Model",Ir]],["mpnet",["MPNetModel",ln]],["albert",["AlbertModel",de]],["distilbert",["DistilBertModel",Fr]],["roberta",["RobertaModel",xs]],["xlm",["XLMModel",_n]],["xlm-roberta",["XLMRobertaModel",pi]],["clap",["ClapModel",Wh]],["clip",["CLIPModel",Ci]],["clipseg",["CLIPSegModel",Po]],["chinese_clip",["ChineseCLIPModel",Gn]],["siglip",["SiglipModel",qr]],["jina_clip",["JinaCLIPModel",xo]],["mobilebert",["MobileBertModel",ar]],["squeezebert",["SqueezeBertModel",Wr]],["wav2vec2",["Wav2Vec2Model",oh]],["wav2vec2-bert",["Wav2Vec2BertModel",bh]],["unispeech",["UniSpeechModel",hh]],["unispeech-sat",["UniSpeechSatModel",_h]],["hubert",["HubertModel",xh]],["wavlm",["WavLMModel",Ph]],["audio-spectrogram-transformer",["ASTModel",gi]],["vits",["VitsModel",xl]],["pyannote",["PyAnnoteModel",ch]],["wespeaker-resnet",["WeSpeakerResNetModel",ph]],["detr",["DetrModel",Hd]],["rt_detr",["RTDetrModel",Xd]],["rt_detr_v2",["RTDetrV2Model",Yd]],["rf_detr",["RFDetrModel",tp]],["d_fine",["DFineModel",np]],["table-transformer",["TableTransformerModel",ip]],["vit",["ViTModel",yd]],["ijepa",["IJepaModel",Md]],["pvt",["PvtModel",Ed]],["vit_msn",["ViTMSNModel",$d]],["vit_mae",["ViTMAEModel",Sd]],["groupvit",["GroupViTModel",Ad]],["fastvit",["FastViTModel",Od]],["mobilevit",["MobileViTModel",zd]],["mobilevitv2",["MobileViTV2Model",Rd]],["owlvit",["OwlViTModel",Nd]],["owlv2",["Owlv2Model",Vd]],["beit",["BeitModel",Gd]],["deit",["DeiTModel",cp]],["hiera",["HieraModel",dp]],["convnext",["ConvNextModel",Rp]],["convnextv2",["ConvNextV2Model",Np]],["dinov2",["Dinov2Model",Vp]],["dinov2_with_registers",["Dinov2WithRegistersModel",Gp]],["resnet",["ResNetModel",hp]],["swin",["SwinModel",fp]],["swin2sr",["Swin2SRModel",wp]],["donut-swin",["DonutSwinModel",Bp]],["yolos",["YolosModel",Qp]],["dpt",["DPTModel",bp]],["glpn",["GLPNModel",Dp]],["hifigan",["SpeechT5HifiGan",Dh]],["efficientnet",["EfficientNetModel",Yh]],["decision_transformer",["DecisionTransformerModel",hm]],["patchtst",["PatchTSTForPrediction",ym]],["patchtsmixer",["PatchTSMixerForPrediction",Mm]],["mobilenet_v1",["MobileNetV1Model",em]],["mobilenet_v2",["MobileNetV2Model",rm]],["mobilenet_v3",["MobileNetV3Model",im]],["mobilenet_v4",["MobileNetV4Model",cm]],["maskformer",["MaskFormerModel",Op]],["mgp-str",["MgpstrForSceneTextRecognition",wm]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Ah]]]),Nv=new Map([["t5",["T5Model",ue]],["longt5",["LongT5Model",Xe]],["mt5",["MT5Model",wt]],["bart",["BartModel",Zt]],["mbart",["MBartModel",Ss]],["marian",["MarianModel",th]],["whisper",["WhisperModel",yi]],["m2m_100",["M2M100Model",rh]],["blenderbot",["BlenderbotModel",ws]],["blenderbot-small",["BlenderbotSmallModel",Js]]]),Uv=new Map([["mimi",["MimiModel",Cm]],["dac",["DacModel",Am]],["snac",["SnacModel",Dm]]]),Vv=new Map([["bloom",["BloomModel",hd]],["jais",["JAISModel",pt]],["gpt2",["GPT2Model",$o]],["gptj",["GPTJModel",Ao]],["gpt_bigcode",["GPTBigCodeModel",Fo]],["gpt_neo",["GPTNeoModel",Io]],["gpt_neox",["GPTNeoXModel",bn]],["codegen",["CodeGenModel",vn]],["llama",["LlamaModel",Lo]],["exaone",["ExaoneModel",z]],["olmo",["OlmoModel",rt]],["olmo2",["Olmo2Model",Kt]],["mobilellm",["MobileLLMModel",Pe]],["granite",["GraniteModel",Oi]],["cohere",["CohereModel",Hu]],["gemma",["GemmaModel",Qu]],["gemma2",["Gemma2Model",Ju]],["gemma3_text",["Gemma3Model",Zu]],["helium",["HeliumModel",Bo]],["glm",["GlmModel",h]],["openelm",["OpenELMModel",td]],["qwen2",["Qwen2Model",rd]],["qwen3",["Qwen3Model",od]],["phi",["PhiModel",cd]],["phi3",["Phi3Model",dd]],["mpt",["MptModel",fd]],["opt",["OPTModel",gd]],["mistral",["MistralModel",Bh]],["starcoder2",["Starcoder2Model",jh]],["falcon",["FalconModel",Uh]],["stablelm",["StableLmModel",Xh]]]),kl=new Map([["speecht5",["SpeechT5ForSpeechToText",Oh]],["whisper",["WhisperForConditionalGeneration",fo]],["lite-whisper",["LiteWhisperForConditionalGeneration",_o]],["moonshine",["MoonshineForConditionalGeneration",Mi]]]),Bm=new Map([["speecht5",["SpeechT5ForTextToSpeech",Fh]]]),Rm=new Map([["vits",["VitsModel",xl]],["musicgen",["MusicgenForConditionalGeneration",Cl]]]),jm=new Map([["bert",["BertForSequenceClassification",Ce]],["modernbert",["ModernBertForSequenceClassification",qe]],["roformer",["RoFormerForSequenceClassification",zt]],["electra",["ElectraForSequenceClassification",ve]],["esm",["EsmForSequenceClassification",or]],["convbert",["ConvBertForSequenceClassification",L]],["camembert",["CamembertForSequenceClassification",Nt]],["deberta",["DebertaForSequenceClassification",mr]],["deberta-v2",["DebertaV2ForSequenceClassification",fr]],["mpnet",["MPNetForSequenceClassification",un]],["albert",["AlbertForSequenceClassification",k]],["distilbert",["DistilBertForSequenceClassification",Cs]],["roberta",["RobertaForSequenceClassification",ms]],["xlm",["XLMForSequenceClassification",ui]],["xlm-roberta",["XLMRobertaForSequenceClassification",mi]],["bart",["BartForSequenceClassification",gs]],["mbart",["MBartForSequenceClassification",ts]],["mobilebert",["MobileBertForSequenceClassification",_s]],["squeezebert",["SqueezeBertForSequenceClassification",mn]]]),Nm=new Map([["bert",["BertForTokenClassification",Fe]],["modernbert",["ModernBertForTokenClassification",Ye]],["roformer",["RoFormerForTokenClassification",jt]],["electra",["ElectraForTokenClassification",xt]],["esm",["EsmForTokenClassification",ir]],["convbert",["ConvBertForTokenClassification",oe]],["camembert",["CamembertForTokenClassification",Qt]],["deberta",["DebertaForTokenClassification",nr]],["deberta-v2",["DebertaV2ForTokenClassification",Ar]],["mpnet",["MPNetForTokenClassification",dn]],["distilbert",["DistilBertForTokenClassification",_r]],["roberta",["RobertaForTokenClassification",fs]],["xlm",["XLMForTokenClassification",di]],["xlm-roberta",["XLMRobertaForTokenClassification",fi]]]),Il=new Map([["t5",["T5ForConditionalGeneration",Te]],["longt5",["LongT5ForConditionalGeneration",He]],["mt5",["MT5ForConditionalGeneration",Lt]],["bart",["BartForConditionalGeneration",Gt]],["mbart",["MBartForConditionalGeneration",$s]],["marian",["MarianMTModel",sh]],["m2m_100",["M2M100ForConditionalGeneration",nh]],["blenderbot",["BlenderbotForConditionalGeneration",Bs]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Os]]]),Al=new Map([["bloom",["BloomForCausalLM",md]],["gpt2",["GPT2LMHeadModel",ko]],["jais",["JAISLMHeadModel",Ai]],["gptj",["GPTJForCausalLM",Oo]],["gpt_bigcode",["GPTBigCodeForCausalLM",Do]],["gpt_neo",["GPTNeoForCausalLM",yn]],["gpt_neox",["GPTNeoXForCausalLM",qn]],["codegen",["CodeGenForCausalLM",Jn]],["llama",["LlamaForCausalLM",zo]],["exaone",["ExaoneForCausalLM",V]],["olmo",["OlmoForCausalLM",vt]],["olmo2",["Olmo2ForCausalLM",Ts]],["mobilellm",["MobileLLMForCausalLM",Be]],["granite",["GraniteForCausalLM",Ku]],["cohere",["CohereForCausalLM",qu]],["gemma",["GemmaForCausalLM",Xu]],["gemma2",["Gemma2ForCausalLM",Yu]],["gemma3_text",["Gemma3ForCausalLM",ed]],["helium",["HeliumForCausalLM",Ro]],["glm",["GlmForCausalLM",E]],["openelm",["OpenELMForCausalLM",sd]],["qwen2",["Qwen2ForCausalLM",nd]],["qwen3",["Qwen3ForCausalLM",id]],["phi",["PhiForCausalLM",ud]],["phi3",["Phi3ForCausalLM",pd]],["mpt",["MptForCausalLM",_d]],["opt",["OPTForCausalLM",wd]],["mbart",["MBartForCausalLM",wr]],["mistral",["MistralForCausalLM",Rh]],["starcoder2",["Starcoder2ForCausalLM",Nh]],["falcon",["FalconForCausalLM",Vh]],["trocr",["TrOCRForCausalLM",zh]],["stablelm",["StableLmForCausalLM",Jh]],["phi3_v",["Phi3VForCausalLM",Mo]]]),Wv=new Map([["multi_modality",["MultiModalityCausalLM",fm]]]),Um=new Map([["bert",["BertForMaskedLM",ke]],["modernbert",["ModernBertForMaskedLM",De]],["roformer",["RoFormerForMaskedLM",_t]],["electra",["ElectraForMaskedLM",Le]],["esm",["EsmForMaskedLM",Ut]],["convbert",["ConvBertForMaskedLM",sr]],["camembert",["CamembertForMaskedLM",it]],["deberta",["DebertaForMaskedLM",rr]],["deberta-v2",["DebertaV2ForMaskedLM",Qs]],["mpnet",["MPNetForMaskedLM",cn]],["albert",["AlbertForMaskedLM",J]],["distilbert",["DistilBertForMaskedLM",Oe]],["roberta",["RobertaForMaskedLM",ss]],["xlm",["XLMWithLMHeadModel",ci]],["xlm-roberta",["XLMRobertaForMaskedLM",hi]],["mobilebert",["MobileBertForMaskedLM",hs]],["squeezebert",["SqueezeBertForMaskedLM",hn]]]),Vm=new Map([["bert",["BertForQuestionAnswering",Ge]],["roformer",["RoFormerForQuestionAnswering",bs]],["electra",["ElectraForQuestionAnswering",Dt]],["convbert",["ConvBertForQuestionAnswering",j]],["camembert",["CamembertForQuestionAnswering",Ms]],["deberta",["DebertaForQuestionAnswering",kr]],["deberta-v2",["DebertaV2ForQuestionAnswering",Or]],["mpnet",["MPNetForQuestionAnswering",pn]],["albert",["AlbertForQuestionAnswering",U]],["distilbert",["DistilBertForQuestionAnswering",js]],["roberta",["RobertaForQuestionAnswering",Fs]],["xlm",["XLMForQuestionAnswering",po]],["xlm-roberta",["XLMRobertaForQuestionAnswering",_i]],["mobilebert",["MobileBertForQuestionAnswering",lr]],["squeezebert",["SqueezeBertForQuestionAnswering",fn]]]),Ol=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",go]],["idefics3",["Idefics3ForConditionalGeneration",wn]],["smolvlm",["SmolVLMForConditionalGeneration",bo]]]),Wm=new Map([["llava",["LlavaForConditionalGeneration",gn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Kr]],["moondream1",["Moondream1ForConditionalGeneration",vi]],["florence2",["Florence2ForConditionalGeneration",xi]],["qwen2-vl",["Qwen2VLForConditionalGeneration",ld]],["idefics3",["Idefics3ForConditionalGeneration",wn]],["smolvlm",["SmolVLMForConditionalGeneration",bo]],["paligemma",["PaliGemmaForConditionalGeneration",Ei]]]),Gm=new Map([["ultravox",["UltravoxModel",Tm]]]),Gv=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",go]]]),Km=new Map([["vit",["ViTForImageClassification",bd]],["ijepa",["IJepaForImageClassification",vd]],["pvt",["PvtForImageClassification",Pd]],["vit_msn",["ViTMSNForImageClassification",kd]],["fastvit",["FastViTForImageClassification",Fd]],["mobilevit",["MobileViTForImageClassification",Bd]],["mobilevitv2",["MobileViTV2ForImageClassification",jd]],["beit",["BeitForImageClassification",Kd]],["deit",["DeiTForImageClassification",up]],["hiera",["HieraForImageClassification",pp]],["convnext",["ConvNextForImageClassification",jp]],["convnextv2",["ConvNextV2ForImageClassification",Up]],["dinov2",["Dinov2ForImageClassification",Wp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Kp]],["resnet",["ResNetForImageClassification",mp]],["swin",["SwinForImageClassification",_p]],["segformer",["SegformerForImageClassification",qh]],["efficientnet",["EfficientNetForImageClassification",Zh]],["mobilenet_v1",["MobileNetV1ForImageClassification",tm]],["mobilenet_v2",["MobileNetV2ForImageClassification",nm]],["mobilenet_v3",["MobileNetV3ForImageClassification",am]],["mobilenet_v4",["MobileNetV4ForImageClassification",um]]]),Hm=new Map([["detr",["DetrForObjectDetection",qd]],["rt_detr",["RTDetrForObjectDetection",Jd]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Zd]],["rf_detr",["RFDetrForObjectDetection",sp]],["d_fine",["DFineForObjectDetection",op]],["table-transformer",["TableTransformerForObjectDetection",ap]],["yolos",["YolosForObjectDetection",Xp]]]),qm=new Map([["owlvit",["OwlViTForObjectDetection",Ud]],["owlv2",["Owlv2ForObjectDetection",Wd]],["grounding-dino",["GroundingDinoForObjectDetection",qp]]]),to=new Map([["detr",["DetrForSegmentation",Ya]],["clipseg",["CLIPSegForImageSegmentation",Co]]]),Qm=new Map([["segformer",["SegformerForSemanticSegmentation",Qh]],["sapiens",["SapiensForSemanticSegmentation",Tp]],["swin",["SwinForSemanticSegmentation",gp]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",sm]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",om]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",lm]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",dm]]]),Xm=new Map([["detr",["DetrForSegmentation",Ya]],["maskformer",["MaskFormerForInstanceSegmentation",Fp]]]),Jm=new Map([["sam",["SamModel",Zp]]]),Ym=new Map([["wav2vec2",["Wav2Vec2ForCTC",ih]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Mh]],["unispeech",["UniSpeechForCTC",mh]],["unispeech-sat",["UniSpeechSatForCTC",gh]],["wavlm",["WavLMForCTC",Ch]],["hubert",["HubertForCTC",Th]]]),Zm=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",ah]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",vh]],["unispeech",["UniSpeechForSequenceClassification",fh]],["unispeech-sat",["UniSpeechSatForSequenceClassification",wh]],["wavlm",["WavLMForSequenceClassification",Sh]],["hubert",["HubertForSequenceClassification",Eh]],["audio-spectrogram-transformer",["ASTForAudioClassification",wi]]]),ef=new Map([["wavlm",["WavLMForXVector",$h]]]),tf=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",yh]],["wavlm",["WavLMForAudioFrameClassification",kh]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",lh]],["pyannote",["PyAnnoteForAudioFrameClassification",uh]]]),sf=new Map([["vitmatte",["VitMatteForImageMatting",Ld]]]),Kv=new Map([["patchtst",["PatchTSTForPrediction",bm]],["patchtsmixer",["PatchTSMixerForPrediction",vm]]]),rf=new Map([["swin2sr",["Swin2SRForImageSuperResolution",yp]]]),nf=new Map([["dpt",["DPTForDepthEstimation",Mp]],["depth_anything",["DepthAnythingForDepthEstimation",xp]],["glpn",["GLPNForDepthEstimation",Lp]],["sapiens",["SapiensForDepthEstimation",Ep]],["depth_pro",["DepthProForDepthEstimation",Sp]],["metric3d",["Metric3DForDepthEstimation",kp]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Ap]]]),of=new Map([["sapiens",["SapiensForNormalEstimation",Pp]]]),af=new Map([["vitpose",["VitPoseForPoseEstimation",Td]]]),lf=new Map([["clip",["CLIPVisionModelWithProjection",$i]],["siglip",["SiglipVisionModel",ki]],["jina_clip",["JinaCLIPVisionModel",Eo]]]),cf=[[jv,T.EncoderOnly],[Nv,T.EncoderDecoder],[Vv,T.DecoderOnly],[Uv,T.AutoEncoder],[jm,T.EncoderOnly],[Nm,T.EncoderOnly],[Il,T.Seq2Seq],[kl,T.Seq2Seq],[Al,T.DecoderOnly],[Wv,T.MultiModality],[Um,T.EncoderOnly],[Vm,T.EncoderOnly],[Ol,T.Vision2Seq],[Wm,T.ImageTextToText],[Gm,T.AudioTextToText],[Km,T.EncoderOnly],[to,T.EncoderOnly],[Xm,T.EncoderOnly],[Qm,T.EncoderOnly],[sf,T.EncoderOnly],[Kv,T.EncoderOnly],[rf,T.EncoderOnly],[nf,T.EncoderOnly],[of,T.EncoderOnly],[af,T.EncoderOnly],[Hm,T.EncoderOnly],[qm,T.EncoderOnly],[Jm,T.MaskGeneration],[Ym,T.EncoderOnly],[Zm,T.EncoderOnly],[Bm,T.Seq2Seq],[Rm,T.EncoderOnly],[ef,T.EncoderOnly],[tf,T.EncoderOnly],[lf,T.EncoderOnly]];for(const[M,S]of cf)for(const[F,ne]of M.values())v.set(F,S),x.set(ne,F),b.set(F,ne);const Hv=[["MusicgenForConditionalGeneration",Cl,T.Musicgen],["Phi3VForCausalLM",Mo,T.Phi3V],["CLIPTextModelWithProjection",Si,T.EncoderOnly],["SiglipTextModel",vo,T.EncoderOnly],["JinaCLIPTextModel",To,T.EncoderOnly],["ClapTextModelWithProjection",Gh,T.EncoderOnly],["ClapAudioModelWithProjection",Kh,T.EncoderOnly],["DacEncoderModel",Om,T.EncoderOnly],["DacDecoderModel",Fm,T.EncoderOnly],["MimiEncoderModel",Sm,T.EncoderOnly],["MimiDecoderModel",$m,T.EncoderOnly],["SnacEncoderModel",Lm,T.EncoderOnly],["SnacDecoderModel",zm,T.EncoderOnly]];for(const[M,S,F]of Hv)v.set(M,F),x.set(S,M),b.set(M,S);const uf=new Map([["modnet",to],["birefnet",to],["isnet",to],["ben",to]]);for(const[M,S]of uf.entries())S.set(M,["PreTrainedModel",G]),v.set(M,T.EncoderOnly),x.set(G,M),b.set(M,G);class Fl extends Bt{}ee(Fl,"MODEL_CLASS_MAPPINGS",cf.map(S=>S[0])),ee(Fl,"BASE_IF_FAIL",!0);class df extends Bt{}ee(df,"MODEL_CLASS_MAPPINGS",[jm]);class pf extends Bt{}ee(pf,"MODEL_CLASS_MAPPINGS",[Nm]);class hf extends Bt{}ee(hf,"MODEL_CLASS_MAPPINGS",[Il]);class mf extends Bt{}ee(mf,"MODEL_CLASS_MAPPINGS",[kl]);class ff extends Bt{}ee(ff,"MODEL_CLASS_MAPPINGS",[Bm]);class _f extends Bt{}ee(_f,"MODEL_CLASS_MAPPINGS",[Rm]);class gf extends Bt{}ee(gf,"MODEL_CLASS_MAPPINGS",[Al]);class wf extends Bt{}ee(wf,"MODEL_CLASS_MAPPINGS",[Um]);class yf extends Bt{}ee(yf,"MODEL_CLASS_MAPPINGS",[Vm]);class bf extends Bt{}ee(bf,"MODEL_CLASS_MAPPINGS",[Ol]);class Mf extends Bt{}ee(Mf,"MODEL_CLASS_MAPPINGS",[Km]);class vf extends Bt{}ee(vf,"MODEL_CLASS_MAPPINGS",[to]);class xf extends Bt{}ee(xf,"MODEL_CLASS_MAPPINGS",[Qm]);class Tf extends Bt{}ee(Tf,"MODEL_CLASS_MAPPINGS",[Xm]);class Ef extends Bt{}ee(Ef,"MODEL_CLASS_MAPPINGS",[Hm]);class Pf extends Bt{}ee(Pf,"MODEL_CLASS_MAPPINGS",[qm]);class Cf extends Bt{}ee(Cf,"MODEL_CLASS_MAPPINGS",[Jm]);class Sf extends Bt{}ee(Sf,"MODEL_CLASS_MAPPINGS",[Ym]);class $f extends Bt{}ee($f,"MODEL_CLASS_MAPPINGS",[Zm]);class kf extends Bt{}ee(kf,"MODEL_CLASS_MAPPINGS",[ef]);class If extends Bt{}ee(If,"MODEL_CLASS_MAPPINGS",[tf]);class Af extends Bt{}ee(Af,"MODEL_CLASS_MAPPINGS",[Gv]);class Of extends Bt{}ee(Of,"MODEL_CLASS_MAPPINGS",[sf]);class Ff extends Bt{}ee(Ff,"MODEL_CLASS_MAPPINGS",[rf]);class Df extends Bt{}ee(Df,"MODEL_CLASS_MAPPINGS",[nf]);class Lf extends Bt{}ee(Lf,"MODEL_CLASS_MAPPINGS",[of]);class zf extends Bt{}ee(zf,"MODEL_CLASS_MAPPINGS",[af]);class Bf extends Bt{}ee(Bf,"MODEL_CLASS_MAPPINGS",[lf]);class Rf extends Bt{}ee(Rf,"MODEL_CLASS_MAPPINGS",[Wm]);class jf extends Bt{}ee(jf,"MODEL_CLASS_MAPPINGS",[Gm]);class qv extends ye{constructor({logits:S,past_key_values:F,encoder_outputs:ne,decoder_attentions:we=null,cross_attentions:_e=null}){super(),this.logits=S,this.past_key_values=F,this.encoder_outputs=ne,this.decoder_attentions=we,this.cross_attentions=_e}}class Tt extends ye{constructor({logits:S,...F}){super(),this.logits=S;const ne=Object.values(F);ne.length>0&&(this.attentions=ne)}}class Nf extends ye{constructor({logits:S,embeddings:F}){super(),this.logits=S,this.embeddings=F}}class ks extends ye{constructor({logits:S}){super(),this.logits=S}}class Ds extends ye{constructor({logits:S}){super(),this.logits=S}}class Ns extends ye{constructor({start_logits:S,end_logits:F}){super(),this.start_logits=S,this.end_logits=F}}class Tn extends ye{constructor({logits:S}){super(),this.logits=S}}class Qv extends ye{constructor({logits:S,past_key_values:F}){super(),this.logits=S,this.past_key_values=F}}class Uf extends ye{constructor({alphas:S}){super(),this.alphas=S}}class Vf extends ye{constructor({waveform:S,spectrogram:F}){super(),this.waveform=S,this.spectrogram=F}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,s,t)=>{t.r(s),t.d(s,{ASTFeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends r.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,r.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let u=0;u<p.length;++u)p[u]=(p[u]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,s,t)=>{t.r(s),t.d(s,{AutoFeatureExtractor:()=>i});var r=t("./src/utils/constants.js"),o=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,c={}){const p=await(0,o.getModelJSON)(l,r.FEATURE_EXTRACTOR_NAME,!0,c),u=p.feature_extractor_type,d=n[u];if(!d)throw new Error(`Unknown feature_extractor_type: '${u}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new d(p)}}},"./src/models/auto/image_processing_auto.js":(e,s,t)=>{t.r(s),t.d(s,{AutoImageProcessor:()=>a});var r=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const u=await(0,o.getModelJSON)(c,r.IMAGE_PROCESSOR_NAME,!0,p),d=u.image_processor_type??u.feature_extractor_type;let _=i[d];return _||(d!==void 0&&console.warn(`Image processor type '${d}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),_=n.ImageProcessor),new _(u)}}},"./src/models/auto/processing_auto.js":(e,s,t)=>{t.r(s),t.d(s,{AutoProcessor:()=>c});var r=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(u,d={}){const _=await(0,o.getModelJSON)(u,r.IMAGE_PROCESSOR_NAME,!0,d),{image_processor_type:f,feature_extractor_type:y,processor_class:$}=_;if($&&i[$])return i[$].from_pretrained(u,d);if(!f&&!y)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const w={};if(f){const C=a[f];if(!C)throw new Error(`Unknown image_processor_type: '${f}'.`);w.image_processor=new C(_)}if(y){const C=a[y];if(C)w.image_processor=new C(_);else{const T=l[y];if(!T)throw new Error(`Unknown feature_extractor_type: '${y}'.`);w.feature_extractor=new T(_)}}const g={};return new n.Processor(g,w)}}},"./src/models/beit/image_processing_beit.js":(e,s,t)=>{t.r(s),t.d(s,{BeitFeatureExtractor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,s,t)=>{t.r(s),t.d(s,{BitImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,s,t)=>{t.r(s),t.d(s,{ChineseCLIPFeatureExtractor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,s,t)=>{t.r(s),t.d(s,{ClapFeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends r.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let u;const d=a.length-l;if(d>0)if(c==="rand_trunc"){const _=Math.floor(Math.random()*(d+1));a=a.subarray(_,_+l),u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(d<0){let _=new Float64Array(l);if(_.set(a),p==="repeat")for(let f=a.length;f<l;f+=a.length)_.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(p==="repeatpad")for(let f=a.length;f<-d;f+=a.length)_.set(a,f);a=_}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return u.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,o.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,r.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,s,t)=>{t.r(s),t.d(s,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/convnext/image_processing_convnext.js":(e,s,t)=>{t.r(s),t.d(s,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[u,d]=this.get_resize_output_image_size(a,{shortest_edge:p});a=await a.resize(u,d,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class n extends o{}},"./src/models/dac/feature_extraction_dac.js":(e,s,t)=>{t.r(s),t.d(s,{DacFeatureExtractor:()=>o});var r=t("./src/models/encodec/feature_extraction_encodec.js");class o extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,s,t)=>{t.r(s),t.d(s,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/detr/image_processing_detr.js":(e,s,t)=>{t.r(s),t.d(s,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],u=(0,o.full)(p,1n);return{...c,pixel_mask:u}}post_process_object_detection(...l){return(0,r.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,r.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,r.post_process_instance_segmentation)(...l)}}class i extends n{}},"./src/models/donut/image_processing_donut.js":(e,s,t)=>{t.r(s),t.d(s,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(a,l,c,p={}){const[u,d,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let y=this.image_std;Array.isArray(y)||(y=new Array(_).fill(f));const $=f.map((w,g)=>-w/y[g]);return super.pad_image(a,l,c,{center:!0,constant_values:$,...p})}}class n extends o{}},"./src/models/dpt/image_processing_dpt.js":(e,s,t)=>{t.r(s),t.d(s,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,s,t)=>{t.r(s),t.d(s,{EfficientNetImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,s,t)=>{t.r(s),t.d(s,{EncodecFeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends r.FeatureExtractor{async _call(a){(0,r.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new o.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,s,t)=>{t.r(s),t.d(s,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>o.EncodecFeatureExtractor,ImageFeatureExtractor:()=>y.ImageProcessor,MoonshineFeatureExtractor:()=>a.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var r=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),o=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),d=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),_=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),f=t("./src/models/whisper/feature_extraction_whisper.js"),y=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,s,t)=>{t.r(s),t.d(s,{Florence2Processor:()=>i});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends r.Processor{constructor(l,c){super(l,c);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:u,task_prompts_with_input:d}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(d??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[u,d]of this.task_prompts_with_input)if(p.includes(u)){c.push(d.replaceAll("{input}",p).replaceAll(u,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const u=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let d;switch(u){case"pure_text":d=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=u==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),y=[],$=[];for(const[w,g,...C]of f)y.push(g?g.trim():y.at(-1)??""),$.push(C.map((T,v)=>(Number(T)+.5)/this.size_per_bin*p[v%2]));d={labels:y,[_]:$};break;default:throw new Error(`Task "${c}" (of type "${u}") not yet implemented.`)}return{[c]:d}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=await this.image_processor(l,p),d=c?this.tokenizer(c,p):{};return{...u,...d}}}ee(i,"tokenizer_class",n.AutoTokenizer),ee(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(e,s,t)=>{t.r(s),t.d(s,{GLPNFeatureExtractor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,s,t)=>{t.r(s),t.d(s,{GroundingDinoImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,o.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,s,t)=>{t.r(s),t.d(s,{GroundingDinoProcessor:()=>l});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function a(c,p){const d=c.dims.at(-1)-1,_=c.tolist();_.fill(!1,0,1),_.fill(!1,d);const f=p.tolist();return _.map((y,$)=>y?$:null).filter(y=>y!==null).map(y=>f[y])}class l extends r.Processor{async _call(p,u,d={}){const _=p?await this.image_processor(p,d):{};return{...u?this.tokenizer(u,d):{},..._}}post_process_grounded_object_detection(p,u,{box_threshold:d=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:y,pred_boxes:$}=p,w=y.dims[0];if(f!==null&&f.length!==w)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const g=y.dims.at(1),C=y.sigmoid(),T=C.max(-1).tolist(),v=$.tolist().map(x=>x.map(P=>(0,i.center_to_corners_format)(P))),b=[];for(let x=0;x<w;++x){const P=f!==null?f[x]:null;P!==null&&(v[x]=v[x].map(B=>B.map((Y,q)=>Y*P[(q+1)%2])));const A=T[x],D=[],H=[],K=[];for(let B=0;B<g;++B){const Y=A[B];if(Y<=d)continue;const q=v[x][B],Q=C[x][B];D.push(Y),K.push(q);const X=a(Q.gt(_),u[x]);H.push(X)}b.push({scores:D,boxes:K,labels:this.batch_decode(H)})}return b}}ee(l,"tokenizer_class",n.AutoTokenizer),ee(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,s,t)=>{t.r(s),t.d(s,{Idefics3ImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends r.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const u=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/u),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*u),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let u=[],d=[],_=[];const f=[],y=[];for(const x of p){let P=await Promise.all(x.map(H=>this.preprocess(H)));f.push(...P.map(H=>H.original_size)),y.push(...P.map(H=>H.reshaped_input_size)),P.forEach(H=>H.pixel_values.unsqueeze_(0));const{longest_edge:A}=this.max_image_size;let D;if(l??this.do_image_splitting){let H=new Array(P.length),K=new Array(P.length);D=await Promise.all(P.map(async(B,Y)=>{const q=this.get_resize_for_vision_encoder(B.pixel_values,A),Q=await(0,o.interpolate_4d)(B.pixel_values,{size:[q.height,q.width]}),{frames:X,num_splits_h:se,num_splits_w:me}=await this.split_image(Q,this.max_image_size);return H[Y]=se,K[Y]=me,(0,o.cat)(X,0)})),d.push(H),_.push(K)}else{const H=[A,A];D=await Promise.all(P.map(K=>(0,o.interpolate_4d)(K.pixel_values,{size:H}))),d.push(new Array(P.length).fill(0)),_.push(new Array(P.length).fill(0))}u.push((0,o.cat)(D,0))}const $=u.length,[w,g,C,T]=u[0].dims;let v,b;if($===1)v=u[0].unsqueeze_(0),b=(0,o.full)([$,w,C,T],!0);else{const x=Math.max(...u.map(D=>D.dims.at(0)));b=(0,o.full)([$,x,C,T],!0);const P=b.data,A=x*C*T;for(let D=0;D<$;++D){const H=u[D].dims[0];if(H<x){u[D]=(0,o.cat)([u[D],(0,o.full)([x-H,g,C,T],0)],0);const K=D*A+H*C*T,B=(D+1)*A;P.fill(!1,K,B)}}v=(0,o.stack)(u,0)}return{pixel_values:v,pixel_attention_mask:b,original_sizes:f,reshaped_input_sizes:y,...c?{rows:d,cols:_}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,u=[],[d,_]=a.dims.slice(-2);let f=0,y=0;if(d>c||_>p){f=Math.ceil(d/c),y=Math.ceil(_/p);const $=Math.ceil(d/f),w=Math.ceil(_/y);for(let T=0;T<f;++T)for(let v=0;v<y;++v){let b,x,P,A;T===f-1?(x=d-$,A=d):(x=T*$,A=(T+1)*$),v===y-1?(b=_-w,P=_):(b=v*w,P=(v+1)*w);const D=[x,b],H=[A,P],K=await(0,o.slice)(a,D,H,[2,3]);u.push(K)}const g=c,C=p;(d!==g||_!==C)&&(a=await(0,o.interpolate_4d)(a,{size:[g,C]}))}return u.push(a),{frames:u,num_splits_h:f,num_splits_w:y}}}},"./src/models/idefics3/processing_idefics3.js":(e,s,t)=>{t.r(s),t.d(s,{Idefics3Processor:()=>p});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function a(u,d,_,f,y,$){let w="";for(let g=0;g<d;++g){for(let C=0;C<_;++C)w+=f+`<row_${g+1}_col_${C+1}>`+y.repeat(u);w+=`
`}return w+=`
${f}${$}`+y.repeat(u)+`${f}`,w}function l(u,d,_,f){return`${d}${f}`+_.repeat(u)+`${d}`}function c(u,d,_,f,y,$){return u===0&&d===0?l(_,f,y,$):a(_,u,d,f,y,$)}class p extends r.Processor{constructor(){super(...arguments);ee(this,"fake_image_token","<fake_token_around_image>");ee(this,"image_token","<image>");ee(this,"global_img_token","<global-img>")}async _call(_,f=null,y={}){y.return_row_col_info??(y.return_row_col_info=!0);let $;f&&($=await this.image_processor(f,y)),Array.isArray(_)||(_=[_]);const w=$.rows??[new Array(_.length).fill(0)],g=$.cols??[new Array(_.length).fill(0)],C=this.config.image_seq_len,T=[],v=[];for(let x=0;x<_.length;++x){const P=_[x],A=w[x],D=g[x];T.push((0,i.count)(P,this.image_token));const H=A.map((Y,q)=>c(Y,D[q],C,this.fake_image_token,this.image_token,this.global_img_token)),K=P.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let B=K[0];for(let Y=0;Y<H.length;++Y)B+=H[Y]+K[Y+1];v.push(B)}return{...this.tokenizer(v),...$}}}ee(p,"image_processor_class",o.AutoImageProcessor),ee(p,"tokenizer_class",n.AutoTokenizer),ee(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,s,t)=>{t.r(s),t.d(s,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>o.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>d.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>y.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>C.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>T.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>T.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>b.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>b.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>A.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>A.MobileViTImageProcessor,NougatImageProcessor:()=>D.NougatImageProcessor,OwlViTFeatureExtractor:()=>K.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>K.OwlViTImageProcessor,Owlv2ImageProcessor:()=>H.Owlv2ImageProcessor,Phi3VImageProcessor:()=>B.Phi3VImageProcessor,PvtImageProcessor:()=>Y.PvtImageProcessor,Qwen2VLImageProcessor:()=>q.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Q.RTDetrImageProcessor,SamImageProcessor:()=>X.SamImageProcessor,SegformerFeatureExtractor:()=>se.SegformerFeatureExtractor,SegformerImageProcessor:()=>se.SegformerImageProcessor,SiglipImageProcessor:()=>me.SiglipImageProcessor,SmolVLMImageProcessor:()=>le.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>R.Swin2SRImageProcessor,VLMImageProcessor:()=>$.VLMImageProcessor,ViTFeatureExtractor:()=>O.ViTFeatureExtractor,ViTImageProcessor:()=>O.ViTImageProcessor,VitMatteImageProcessor:()=>N.VitMatteImageProcessor,VitPoseImageProcessor:()=>Z.VitPoseImageProcessor,YolosFeatureExtractor:()=>fe.YolosFeatureExtractor,YolosImageProcessor:()=>fe.YolosImageProcessor});var r=t("./src/models/beit/image_processing_beit.js"),o=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),d=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),y=t("./src/models/idefics3/image_processing_idefics3.js"),$=t("./src/models/janus/image_processing_janus.js"),w=t("./src/models/jina_clip/image_processing_jina_clip.js"),g=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),C=t("./src/models/mask2former/image_processing_mask2former.js"),T=t("./src/models/maskformer/image_processing_maskformer.js"),v=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),b=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),A=t("./src/models/mobilevit/image_processing_mobilevit.js"),D=t("./src/models/nougat/image_processing_nougat.js"),H=t("./src/models/owlv2/image_processing_owlv2.js"),K=t("./src/models/owlvit/image_processing_owlvit.js"),B=t("./src/models/phi3_v/image_processing_phi3_v.js"),Y=t("./src/models/pvt/image_processing_pvt.js"),q=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Q=t("./src/models/rt_detr/image_processing_rt_detr.js"),X=t("./src/models/sam/image_processing_sam.js"),se=t("./src/models/segformer/image_processing_segformer.js"),me=t("./src/models/siglip/image_processing_siglip.js"),le=t("./src/models/smolvlm/image_processing_smolvlm.js"),R=t("./src/models/swin2sr/image_processing_swin2sr.js"),O=t("./src/models/vit/image_processing_vit.js"),N=t("./src/models/vitmatte/image_processing_vitmatte.js"),Z=t("./src/models/vitpose/image_processing_vitpose.js"),fe=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,s,t)=>{t.r(s),t.d(s,{VLMImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(i,a,l,c){return super.pad_image(i,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,s,t)=>{t.r(s),t.d(s,{VLChatProcessor:()=>c});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends r.Processor{constructor(u,d){super(u,d),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(u,{images:d=null,chat_template:_="default"}={}){d?Array.isArray(d)||(d=[d]):d=await Promise.all(u.filter(D=>D.images).flatMap(D=>D.images).map(D=>l.RawImage.read(D)));const f=this.tokenizer,y=f.apply_chat_template(u,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),$=D=>f.encode(D,{add_special_tokens:!1}),w=y.split(this.image_tag),g=w.length-1;if(d.length!==g)throw new Error(`Number of images provided (${d.length}) does not match number of "${this.image_tag}" image tags (${g})`);const[C,T,v]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let b=$(w[0]),x=new Array(b.length).fill(!1);for(let D=1;D<w.length;++D){const H=new Array(this.num_image_tokens).fill(C),K=$(w[D]);b=(0,i.mergeArrays)(b,[T],H,[v],K);const B=new Array(this.num_image_tokens).fill(!0);x=(0,i.mergeArrays)(x,[!1],B,[!1],new Array(K.length).fill(!1))}const P=[1,b.length],A={input_ids:new a.Tensor("int64",b,P),attention_mask:new a.Tensor("int64",new Array(b.length).fill(1),P),images_seq_mask:new a.Tensor("bool",x,P),images_emb_mask:new a.Tensor("bool",new Array(g*this.num_image_tokens).fill(!0),[1,g,this.num_image_tokens])};if(d&&d.length>0){const D=await this.image_processor(d);return D.pixel_values.unsqueeze_(0),{...A,...D}}return A}}ee(c,"image_processor_class",o.AutoImageProcessor),ee(c,"tokenizer_class",n.AutoTokenizer),ee(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,s,t)=>{t.r(s),t.d(s,{JinaCLIPImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(i){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...u}=i,d=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},_=c==="bicubic"?3:2;super({...u,size:d,resample:_,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,s,t)=>{t.r(s),t.d(s,{JinaCLIPProcessor:()=>i});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends r.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=l?this.tokenizer(l,p):{},d=c?await this.image_processor(c,p):{};return{...u,...d}}}ee(i,"tokenizer_class",n.AutoTokenizer),ee(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,s,t)=>{t.r(s),t.d(s,{LlavaOnevisionImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,s,t)=>{t.r(s),t.d(s,{Mask2FormerImageProcessor:()=>o});var r=t("./src/models/maskformer/image_processing_maskformer.js");class o extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,s,t)=>{t.r(s),t.d(s,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,r.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,r.post_process_instance_segmentation)(...a)}}class n extends o{}},"./src/models/mgp_str/processing_mgp_str.js":(e,s,t)=>{t.r(s),t.d(s,{MgpstrProcessor:()=>l});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,u){if(!a.hasOwnProperty(u))throw new Error(`Format ${u} is not supported.`);const[d,_]=a[u],f=this[d].bind(this),[y,$]=p.dims,w=[],g=[],C=p.tolist();for(let v=0;v<y;++v){const b=C[v],x=[],P=[];for(let D=1;D<$;++D){const[H,K]=(0,i.max)((0,i.softmax)(b[D]));if(P.push(H),K==_)break;x.push(K)}const A=P.length>0?P.reduce((D,H)=>D*H,1):0;g.push(x),w.push(A)}return[f(g),w]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}batch_decode([p,u,d]){const[_,f]=this._decode_helper(p,"char"),[y,$]=this._decode_helper(u,"bpe"),[w,g]=this._decode_helper(d,"wp"),C=[],T=[];for(let v=0;v<_.length;++v){const[b,x]=(0,i.max)([f[v],$[v],g[v]]);C.push([_[v],y[v],w[v]][x]),T.push(b)}return{generated_text:C,scores:T,char_preds:_,bpe_preds:y,wp_preds:w}}static async from_pretrained(...p){const u=await super.from_pretrained(...p),d=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return u.components={image_processor:u.image_processor,char_tokenizer:u.tokenizer,bpe_tokenizer:d,wp_tokenizer:_},u}async _call(p,u=null){const d=await this.image_processor(p);return u&&(d.labels=this.tokenizer(u).input_ids),d}}ee(l,"tokenizer_class",n.AutoTokenizer),ee(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,s,t)=>{t.r(s),t.d(s,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,s,t)=>{t.r(s),t.d(s,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,s,t)=>{t.r(s),t.d(s,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,s,t)=>{t.r(s),t.d(s,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,s,t)=>{t.r(s),t.d(s,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,s,t)=>{t.r(s),t.d(s,{MoonshineFeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends r.FeatureExtractor{async _call(a){(0,r.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new o.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,s,t)=>{t.r(s),t.d(s,{MoonshineProcessor:()=>i});var r=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}ee(i,"tokenizer_class",o.AutoTokenizer),ee(i,"feature_extractor_class",r.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,s,t)=>{t.r(s),t.d(s,{NougatImageProcessor:()=>o});var r=t("./src/models/donut/image_processing_donut.js");class o extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,s,t)=>{t.r(s),t.d(s,{Owlv2ImageProcessor:()=>o});var r=t("./src/models/owlvit/image_processing_owlvit.js");class o extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,s,t)=>{t.r(s),t.d(s,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...a){return(0,r.post_process_object_detection)(...a)}}class n extends o{}},"./src/models/owlvit/processing_owlvit.js":(e,s,t)=>{t.r(s),t.d(s,{OwlViTProcessor:()=>i});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends r.Processor{}ee(i,"tokenizer_class",n.AutoTokenizer),ee(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,s,t)=>{t.r(s),t.d(s,{PaliGemmaProcessor:()=>l});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const i="<image>";function a(c,p,u,d,_){return`${d.repeat(u*_)}${p}${c}
`}class l extends r.Processor{async _call(p,u=null,d={}){u||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),u=""),Array.isArray(p)||(p=[p]),Array.isArray(u)||(u=[u]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let y;u.some(g=>g.includes(i))?y=u.map(g=>{const C=g.replaceAll(i,i.repeat(f)),T=C.lastIndexOf(i),v=T===-1?0:T+i.length;return C.slice(0,v)+_+C.slice(v)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),y=u.map(g=>a(g,_,f,i,p.length)));const $=this.tokenizer(y,d);return{...await this.image_processor(p,d),...$}}}ee(l,"tokenizer_class",n.AutoTokenizer),ee(l,"image_processor_class",o.AutoImageProcessor),ee(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,s,t)=>{t.r(s),t.d(s,{Phi3VImageProcessor:()=>p});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");const n=336,i=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends r.ImageProcessor{constructor(d){super({...d,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=d.num_crops}calc_num_image_tokens_from_image_size(d,_){const{num_img_tokens:f}=this.config;return l((l(_/n)*l(d/n)+1)*f+1+(l(_/n)+1)*c(f))}get_resize_output_image_size(d,_){const f=this._num_crops,[y,$]=d.size;let w=y/$,g=1;for(;g*Math.ceil(g/w)<=f;)g+=1;g-=1;const C=Math.floor(g*336),T=Math.floor(C/w);return[C,T]}pad_image(d,_,f,y={}){const[$,w]=_,g=n*a($/n),C=n*a(w/n),T=[1,1,1].map((v,b)=>(v-this.image_mean[b])/this.image_std[b]);return super.pad_image(d,_,{width:C,height:g},{center:!0,constant_values:T,...y})}async _call(d,{num_crops:_=null}={}){if(this._num_crops=_??(_=this.config.num_crops),_<4||c(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(d)||(d=[d]);const f=d.length,y=await Promise.all(d.map(x=>this.preprocess(x))),$=y.map(x=>x.original_size),w=y.map(x=>x.reshaped_input_size),g=[];for(const{pixel_values:x}of y){x.unsqueeze_(0);const[P,A]=x.dims.slice(-2),D=await(0,o.interpolate_4d)(x,{size:[n,n],mode:"bicubic"});if(_>0){const H=[],K=c(_),B=l(A/K),Y=l(P/K);for(let Q=0;Q<K;++Q)for(let X=0;X<K;++X){let se,me,le,R;Q===K-1?(me=P-Y,R=P):(me=Q*Y,R=(Q+1)*Y),X===K-1?(se=A-B,le=A):(se=X*B,le=(X+1)*B);const O=[me,se],N=[R,le],Z=await(0,o.slice)(x,O,N,i);H.push(Z)}const q=await(0,o.interpolate_4d)((0,o.cat)(H,0),{size:[n,n],mode:"bicubic"});g.push((0,o.cat)([D,q],0))}else g.push(D)}const C=(0,o.stack)(g,0),T=w.map(x=>x.map(P=>n*a(P/n))),v=new o.Tensor("int64",T.flat(),[f,2]),b=T.map(([x,P])=>this.calc_num_image_tokens_from_image_size(P,x));return{pixel_values:C,original_sizes:$,reshaped_input_sizes:w,image_sizes:v,num_img_tokens:b}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,s,t)=>{t.r(s),t.d(s,{Phi3VProcessor:()=>l});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",a=/<\|image_\d+\|>/g;class l extends r.Processor{async _call(p,u=null,{padding:d=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let y,$;if(u){$=await this.image_processor(u,{num_crops:f});const{num_img_tokens:w}=$,g=p.map((T,v)=>T.split(a).join(i.repeat(w[v])));y=this.tokenizer(g,{padding:d,truncation:_});const C=this.tokenizer.model.convert_tokens_to_ids([i])[0];y.input_ids.map_(T=>T==C?-T:T)}else y=this.tokenizer(p);return{...y,...$}}}ee(l,"image_processor_class",o.AutoImageProcessor),ee(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,s,t)=>{t.r(s),t.d(s,{Florence2Processor:()=>r.Florence2Processor,GroundingDinoProcessor:()=>o.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>a.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>d.PaliGemmaProcessor,Phi3VProcessor:()=>u.Phi3VProcessor,PyAnnoteProcessor:()=>_.PyAnnoteProcessor,Qwen2VLProcessor:()=>f.Qwen2VLProcessor,SamProcessor:()=>y.SamProcessor,SmolVLMProcessor:()=>$.SmolVLMProcessor,SpeechT5Processor:()=>w.SpeechT5Processor,UltravoxProcessor:()=>g.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2Processor:()=>C.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>T.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>v.WhisperProcessor});var r=t("./src/models/florence2/processing_florence2.js"),o=t("./src/models/grounding_dino/processing_grounding_dino.js"),n=t("./src/models/idefics3/processing_idefics3.js"),i=t("./src/models/janus/processing_janus.js"),a=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),c=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),u=t("./src/models/phi3_v/processing_phi3_v.js"),d=t("./src/models/paligemma/processing_paligemma.js"),_=t("./src/models/pyannote/processing_pyannote.js"),f=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),y=t("./src/models/sam/processing_sam.js"),$=t("./src/models/smolvlm/processing_smolvlm.js"),w=t("./src/models/speecht5/processing_speecht5.js"),g=t("./src/models/ultravox/processing_ultravox.js"),C=t("./src/models/wav2vec2/processing_wav2vec2.js"),T=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),v=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,s,t)=>{t.r(s),t.d(s,{PvtImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,s,t)=>{t.r(s),t.d(s,{PyAnnoteFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class i extends r.FeatureExtractor{async _call(l){(0,r.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new o.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,u=[];for(const d of l.tolist()){const _=[];let f=-1;for(let y=0;y<d.length;++y){const $=(0,n.softmax)(d[y]),[w,g]=(0,n.max)($),[C,T]=[y,y+1];g!==f?(f=g,_.push({id:g,start:C,end:T,score:w})):(_.at(-1).end=T,_.at(-1).score+=w)}u.push(_.map(({id:y,start:$,end:w,score:g})=>({id:y,start:$*p,end:w*p,confidence:g/(w-$)})))}return u}}},"./src/models/pyannote/processing_pyannote.js":(e,s,t)=>{t.r(s),t.d(s,{PyAnnoteProcessor:()=>n});var r=t("./src/base/processing_utils.js"),o=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends r.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}ee(n,"feature_extractor_class",o.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,s,t)=>{t.r(s),t.d(s,{Qwen2VLImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:u}=await super._call(a,...l);let d=c;const{temporal_patch_size:_,merge_size:f,patch_size:y}=this.config;d.dims[0]===1&&(d=(0,o.cat)(Array.from({length:_},()=>d),0));const $=d.dims[0]/_,w=d.dims[1],g=Math.floor(d.dims[2]/y),C=Math.floor(d.dims[3]/y),T=d.view($,_,w,Math.floor(g/f),f,y,Math.floor(C/f),f,y).permute(0,3,6,4,7,2,1,5,8).view($*g*C,w*_*y*y),v=new o.Tensor("int64",[$,g,C],[1,3]);return{pixel_values:T,image_grid_thw:v,original_sizes:p,reshaped_input_sizes:u}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,s,t)=>{t.r(s),t.d(s,{Qwen2VLProcessor:()=>i});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends r.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let u,d;if(c&&(u=await this.image_processor(c),d=u.image_grid_thw),d){let f=this.image_processor.config.merge_size**2,y=0;const $=d.tolist();l=l.map(w=>{for(;w.includes("<|image_pad|>");){const g=Number($[y++].reduce((C,T)=>C*T,1n));w=w.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(g/f)))}return w.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...u}}}ee(i,"image_processor_class",o.AutoImageProcessor),ee(i,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,s,t)=>{t.r(s),t.d(s,{RTDetrImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...i){return(0,r.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,s,t)=>{t.r(s),t.d(s,{SamImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{reshape_input_points(l,c,p,u=!1){l=structuredClone(l);let d=(0,o.calculateDimensions)(l);if(d.length===3)u||(d=[1,...d]),l=[l];else if(d.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=c[_],y=p[_],$=[y[0]/f[0],y[1]/f[1]];for(let w=0;w<l[_].length;++w)for(let g=0;g<l[_][w].length;++g)for(let C=0;C<l[_][w][g].length;++C)l[_][w][g][C]*=$[C%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),d)}add_input_labels(l,c){let p=(0,o.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((u,d)=>u!==c.dims[d]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:u=null}={}){const d=await super._call(l);if(c&&(d.input_points=this.reshape_input_points(c,d.original_sizes,d.reshaped_input_sizes)),p){if(!d.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");d.input_labels=this.add_input_labels(p,d.input_points)}return u&&(d.input_boxes=this.reshape_input_points(u,d.original_sizes,d.reshaped_input_sizes,!0)),d}async post_process_masks(l,c,p,{mask_threshold:u=0,binarize:d=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const y=[_.height,_.width];for(let $=0;$<c.length;++$){const w=c[$],g=p[$];let C=await(0,n.interpolate_4d)(l[$],{mode:"bilinear",size:y});if(C=C.slice(null,null,[0,g[0]],[0,g[1]]),C=await(0,n.interpolate_4d)(C,{mode:"bilinear",size:w}),d){const T=C.data,v=new Uint8Array(T.length);for(let b=0;b<T.length;++b)T[b]>u&&(v[b]=1);C=new n.Tensor("bool",v,C.dims)}f.push(C)}return f}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:u=512/1500,points_per_crop:d=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(e,s,t)=>{t.r(s),t.d(s,{SamProcessor:()=>n});var r=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js");class n extends r.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}ee(n,"image_processor_class",o.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,s,t)=>{t.r(s),t.d(s,{SeamlessM4TFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:u=!0,return_attention_mask:d=!0}={}){(0,r.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(u){const[v,b]=_.dims,x=_.data;for(let P=0;P<b;++P){let A=0;for(let B=0;B<v;++B)A+=x[B*b+P];const D=A/v;let H=0;for(let B=0;B<v;++B)H+=(x[B*b+P]-D)**2;H/=v-1;const K=Math.sqrt(H+1e-7);for(let B=0;B<v;++B){const Y=B*b+P;x[Y]=(x[Y]-D)/K}}}let f;if(c){const[v,b]=_.dims,x=_.data,P=v%p;if(P>0){const A=new Float32Array(b*(v+P));A.set(x),A.fill(this.config.padding_value,x.length);const D=v+P;_=new o.Tensor(_.type,A,[D,b]),d&&(f=new o.Tensor("int64",new BigInt64Array(D),[1,D]),f.data.fill(1n,0,v))}}const[y,$]=_.dims,w=this.config.stride;if(y%w!==0)throw new Error(`The number of frames (${y}) must be a multiple of the stride (${w}).`);const C=_.view(1,Math.floor(y/w),$*w),T={input_features:C};if(d){const v=C.dims[1],b=new BigInt64Array(v);if(f){const x=f.data;for(let P=1,A=0;P<y;P+=w,++A)b[A]=x[P]}else b.fill(1n);T.attention_mask=new o.Tensor("int64",b,[1,v])}return T}}},"./src/models/segformer/image_processing_segformer.js":(e,s,t)=>{t.r(s),t.d(s,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_semantic_segmentation(...a){return(0,r.post_process_semantic_segmentation)(...a)}}class n extends o{}},"./src/models/siglip/image_processing_siglip.js":(e,s,t)=>{t.r(s),t.d(s,{SiglipImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,s,t)=>{t.r(s),t.d(s,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,s,t)=>{t.r(s),t.d(s,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,s,t)=>{t.r(s),t.d(s,{SnacFeatureExtractor:()=>o});var r=t("./src/models/dac/feature_extraction_dac.js");class o extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,s,t)=>{t.r(s),t.d(s,{SpeechT5FeatureExtractor:()=>o});var r=t("./src/base/feature_extraction_utils.js");class o extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,s,t)=>{t.r(s),t.d(s,{SpeechT5Processor:()=>i});var r=t("./src/base/processing_utils.js"),o=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class i extends r.Processor{async _call(l){return await this.feature_extractor(l)}}ee(i,"tokenizer_class",o.AutoTokenizer),ee(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,s,t)=>{t.r(s),t.d(s,{Swin2SRImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(i,a,l,c={}){const[p,u,d]=a;return super.pad_image(i,a,{width:u+(l-u%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,s,t)=>{t.r(s),t.d(s,{UltravoxProcessor:()=>i});var r=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let u={};if(c){const _=c.length,{input_features:f}=await this.feature_extractor(c,{...p,max_length:_}),y=Math.round(_/this.config.encoder_ds_factor+1e-4),$=1+Math.ceil(y/this.config.stack_factor);u.audio_token_len=[$],u.audio_values=f;const w=this.config.audio_placeholder;if(!l.includes(w))throw new Error(`The input text does not contain the image token ${w}.`);l=l.replaceAll(w,w.repeat($))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...u}}}ee(i,"tokenizer_class",o.AutoTokenizer),ee(i,"feature_extractor_class",r.AutoFeatureExtractor),ee(i,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,s,t)=>{t.r(s),t.d(s,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,s,t)=>{t.r(s),t.d(s,{VitMatteImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(d=>this.preprocess(d))),p=await Promise.all(l.map(d=>this.preprocess(d,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,o.stack)(c.map((d,_)=>(0,o.cat)([d.pixel_values,p[_].pixel_values],0)),0),original_sizes:c.map(d=>d.original_size),reshaped_input_sizes:c.map(d=>d.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,s,t)=>{t.r(s),t.d(s,{VitPoseImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_pose_estimation(i,a,{threshold:l=null}={}){const c=i.tolist(),[p,u,d,_]=i.dims,f=[];for(let y=0;y<p;++y){const $=c[y],w=a[y],g=[];for(let C=0;C<w.length;++C){const T=w[C],v=[],b=[],x=[],P=T.at(-2)/_,A=T.at(-1)/d;for(let D=0;D<$.length;++D){let[H,K]=[0,0],B=0,Y=-1/0;const q=$[D];for(let X=0;X<q.length;++X){const se=q[X];for(let me=0;me<se.length;++me){const le=se[me];B+=le,Y=Math.max(Y,le),H+=(me+.5)*le,K+=X*le}}if(l!=null&&Y<l)continue;const Q=[P*H/B,A*K/B];v.push(Q),x.push(D),b.push(Y)}g.push({bbox:T,scores:b,labels:x,keypoints:v})}f.push(g)}return f}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,s,t)=>{t.r(s),t.d(s,{Wav2Vec2FeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends r.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((u,d)=>u+d,0)/a.length,p=a.reduce((u,d)=>u+(d-c)**2,0)/a.length;return a.map(u=>(u-c)/Math.sqrt(p+1e-7))}async _call(a){(0,r.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new o.Tensor("float32",l,c),attention_mask:new o.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,s,t)=>{t.r(s),t.d(s,{Wav2Vec2Processor:()=>i});var r=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}ee(i,"tokenizer_class",r.AutoTokenizer),ee(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,s,t)=>{t.r(s),t.d(s,{Wav2Vec2ProcessorWithLM:()=>i});var r=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}ee(i,"tokenizer_class",r.AutoTokenizer),ee(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,s,t)=>{t.r(s),t.d(s,{WeSpeakerFeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends r.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,r.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[u,d,_]=l.dims;for(let f=0;f<u;++f){const y=f*d*_,$=f*_;for(let w=0;w<d;++w){const g=y+w*_;for(let C=0;C<_;++C)p[g+C]-=c[$+C]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,s,t)=>{t.r(s),t.d(s,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>i});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(r),n=new Map([...r.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(a){a=a.toLowerCase();let l=n.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),o.has(a))l=a;else{const u=a.length===2?o.keys():o.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(u))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,s,t)=>{t.r(s),t.d(s,{WhisperFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class i extends r.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,o.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,o.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,u=(0,n.max)(p)[0];for(let d=0;d<p.length;++d)p[d]=(Math.max(p[d],u-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,r.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const u=c??this.config.n_samples;return l.length>u?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,u)):(p=new Float32Array(u),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,s,t)=>{t.r(s),t.d(s,{WhisperGenerationConfig:()=>o});var r=t("./src/generation/configuration_utils.js");class o extends r.GenerationConfig{constructor(){super(...arguments);ee(this,"return_timestamps",null);ee(this,"return_token_timestamps",null);ee(this,"num_frames",null);ee(this,"alignment_heads",null);ee(this,"task",null);ee(this,"language",null);ee(this,"no_timestamps_token_id",null);ee(this,"prompt_ids",null);ee(this,"is_multilingual",null);ee(this,"lang_to_id",null);ee(this,"task_to_id",null);ee(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,s,t)=>{t.r(s),t.d(s,{WhisperProcessor:()=>i});var r=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}ee(i,"tokenizer_class",o.AutoTokenizer),ee(i,"feature_extractor_class",r.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,s,t)=>{t.r(s),t.d(s,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>o});var r=t("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...a){return(0,r.post_process_object_detection)(...a)}}class n extends o{}},"./src/ops/registry.js":(e,s,t)=>{t.r(s),t.d(s,{TensorOpRegistry:()=>l});var r=t("./src/backends/onnx.js"),o=t("./src/utils/tensor.js"),n=t("./src/env.js");const i=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,a=async(c,p,u)=>{const d=await(0,r.createInferenceSession)(new Uint8Array(c),p);let _=Promise.resolve();return async f=>{const y=(0,r.isONNXProxy)(),$=Object.fromEntries(Object.entries(f).map(([g,C])=>[g,(y?C.clone():C).ort_tensor])),w=await(_=i?_.then(()=>d.run($)):d.run($));return Array.isArray(u)?u.map(g=>new o.Tensor(w[g])):new o.Tensor(w[u])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}ee(l,"session_options",{})},"./src/pipelines.js":(e,s,t)=>{t.r(s),t.d(s,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>Y,BackgroundRemovalPipeline:()=>se,DepthEstimationPipeline:()=>fe,DocumentQuestionAnsweringPipeline:()=>O,FeatureExtractionPipeline:()=>D,FillMaskPipeline:()=>C,ImageClassificationPipeline:()=>Q,ImageFeatureExtractionPipeline:()=>H,ImageSegmentationPipeline:()=>X,ImageToImagePipeline:()=>Z,ImageToTextPipeline:()=>q,ObjectDetectionPipeline:()=>le,Pipeline:()=>y,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>T,TextClassificationPipeline:()=>$,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>N,TokenClassificationPipeline:()=>w,TranslationPipeline:()=>b,ZeroShotAudioClassificationPipeline:()=>B,ZeroShotClassificationPipeline:()=>A,ZeroShotImageClassificationPipeline:()=>me,ZeroShotObjectDetectionPipeline:()=>R,pipeline:()=>Re});var r=t("./src/tokenizers.js"),o=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),u=t("./src/utils/image.js");async function d(pe){return Array.isArray(pe)||(pe=[pe]),await Promise.all(pe.map(W=>u.RawImage.read(W)))}async function _(pe,W){return Array.isArray(pe)||(pe=[pe]),await Promise.all(pe.map(re=>typeof re=="string"||re instanceof URL?(0,c.read_audio)(re,W):re instanceof Float64Array?new Float32Array(re):re))}function f(pe,W){W&&(pe=pe.map(Ee=>Ee|0));const[re,G,ye,he]=pe;return{xmin:re,ymin:G,xmax:ye,ymax:he}}class y extends i.Callable{constructor({task:W,model:re,tokenizer:G=null,processor:ye=null}){super(),this.task=W,this.model=re,this.tokenizer=G,this.processor=ye}async dispose(){await this.model.dispose()}}class $ extends y{constructor(W){super(W)}async _call(W,{top_k:re=1}={}){const G=this.tokenizer(W,{padding:!0,truncation:!0}),ye=await this.model(G),he=this.model.config.problem_type==="multi_label_classification"?ke=>ke.sigmoid():ke=>new p.Tensor("float32",(0,l.softmax)(ke.data),ke.dims),Ee=this.model.config.id2label,xe=[];for(const ke of ye.logits){const Ce=he(ke),Fe=await(0,p.topk)(Ce,re),Ge=Fe[0].tolist(),Ie=Fe[1].tolist().map((De,qe)=>({label:Ee?Ee[De]:`LABEL_${De}`,score:Ge[qe]}));re===1?xe.push(...Ie):xe.push(Ie)}return Array.isArray(W)||re===1?xe:xe[0]}}class w extends y{constructor(W){super(W)}async _call(W,{ignore_labels:re=["O"]}={}){const G=Array.isArray(W),ye=this.tokenizer(G?W:[W],{padding:!0,truncation:!0}),Ee=(await this.model(ye)).logits,xe=this.model.config.id2label,ke=[];for(let Ce=0;Ce<Ee.dims[0];++Ce){const Fe=ye.input_ids[Ce],Ge=Ee[Ce],Ue=[];for(let Ie=0;Ie<Ge.dims[0];++Ie){const De=Ge[Ie],qe=(0,l.max)(De.data)[1],Ye=xe?xe[qe]:`LABEL_${qe}`;if(re.includes(Ye))continue;const ot=this.tokenizer.decode([Fe[Ie].item()],{skip_special_tokens:!0});if(ot==="")continue;const Ke=(0,l.softmax)(De.data);Ue.push({entity:Ye,score:Ke[qe],index:Ie,word:ot})}ke.push(Ue)}return G?ke:ke[0]}}class g extends y{constructor(W){super(W)}async _call(W,re,{top_k:G=1}={}){const ye=this.tokenizer(W,{text_pair:re,padding:!0,truncation:!0}),{start_logits:he,end_logits:Ee}=await this.model(ye),xe=ye.input_ids.tolist(),ke=ye.attention_mask.tolist(),Ce=this.tokenizer.all_special_ids,Fe=[];for(let Ge=0;Ge<he.dims[0];++Ge){const Ue=xe[Ge],Ie=Ue.findIndex(Ae=>Ae==this.tokenizer.sep_token_id);ke[Ge].map((Ae,et)=>Ae==1&&(et===0||et>Ie&&Ce.findIndex(_t=>_t==Ue[et])===-1));const De=he[Ge].tolist(),qe=Ee[Ge].tolist();for(let Ae=1;Ae<De.length;++Ae)(ke[Ge]==0||Ae<=Ie||Ce.findIndex(et=>et==Ue[Ae])!==-1)&&(De[Ae]=-1/0,qe[Ae]=-1/0);const Ye=(0,l.softmax)(De).map((Ae,et)=>[Ae,et]),ot=(0,l.softmax)(qe).map((Ae,et)=>[Ae,et]);Ye[0][0]=0,ot[0][0]=0;const Ke=(0,a.product)(Ye,ot).filter(Ae=>Ae[0][1]<=Ae[1][1]).map(Ae=>[Ae[0][1],Ae[1][1],Ae[0][0]*Ae[1][0]]).sort((Ae,et)=>et[2]-Ae[2]);for(let Ae=0;Ae<Math.min(Ke.length,G);++Ae){const[et,_t,zt]=Ke[Ae],jt=Ue.slice(et,_t+1),bs=this.tokenizer.decode(jt,{skip_special_tokens:!0});Fe.push({answer:bs,score:zt})}}return G===1?Fe[0]:Fe}}class C extends y{constructor(W){super(W)}async _call(W,{top_k:re=5}={}){const G=this.tokenizer(W,{padding:!0,truncation:!0}),{logits:ye}=await this.model(G),he=[],Ee=G.input_ids.tolist();for(let xe=0;xe<Ee.length;++xe){const ke=Ee[xe],Ce=ke.findIndex(De=>De==this.tokenizer.mask_token_id);if(Ce===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Fe=ye[xe][Ce],Ge=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Fe.data),Fe.dims),re),Ue=Ge[0].tolist(),Ie=Ge[1].tolist();he.push(Ie.map((De,qe)=>{const Ye=ke.slice();return Ye[Ce]=De,{score:Ue[qe],token:Number(De),token_str:this.tokenizer.decode([De]),sequence:this.tokenizer.decode(Ye,{skip_special_tokens:!0})}}))}return Array.isArray(W)?he:he[0]}}class T extends y{constructor(re){super(re);ee(this,"_key","generated_text")}async _call(re,G={}){Array.isArray(re)||(re=[re]),this.model.config.prefix&&(re=re.map(Ce=>this.model.config.prefix+Ce));const ye=this.model.config.task_specific_params;ye&&ye[this.task]&&ye[this.task].prefix&&(re=re.map(Ce=>ye[this.task].prefix+Ce));const he=this.tokenizer,Ee={padding:!0,truncation:!0};let xe;this instanceof b&&"_build_translation_inputs"in he?xe=he._build_translation_inputs(re,Ee,G):xe=he(re,Ee);const ke=await this.model.generate({...xe,...G});return he.batch_decode(ke,{skip_special_tokens:!0}).map(Ce=>({[this._key]:Ce}))}}class v extends T{constructor(re){super(re);ee(this,"_key","summary_text")}}class b extends T{constructor(re){super(re);ee(this,"_key","translation_text")}}function x(pe){return Array.isArray(pe)&&pe.every(W=>"role"in W&&"content"in W)}class P extends y{constructor(W){super(W)}async _call(W,re={}){let G=!1,ye=!1,he;if(typeof W=="string")he=W=[W];else if(Array.isArray(W)&&W.every(Ie=>typeof Ie=="string"))G=!0,he=W;else{if(x(W))W=[W];else if(Array.isArray(W)&&W.every(x))G=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");ye=!0,he=W.map(Ie=>this.tokenizer.apply_chat_template(Ie,{tokenize:!1,add_generation_prompt:!0}))}const Ee=re.add_special_tokens??!1,xe=ye?!1:re.return_full_text??!0;this.tokenizer.padding_side="left";const ke=this.tokenizer(he,{add_special_tokens:Ee,padding:!0,truncation:!0}),Ce=await this.model.generate({...ke,...re}),Fe=this.tokenizer.batch_decode(Ce,{skip_special_tokens:!0});let Ge;!xe&&ke.input_ids.dims.at(-1)>0&&(Ge=this.tokenizer.batch_decode(ke.input_ids,{skip_special_tokens:!0}).map(Ie=>Ie.length));const Ue=Array.from({length:W.length},Ie=>[]);for(let Ie=0;Ie<Fe.length;++Ie){const De=Math.floor(Ie/Ce.dims[0]*W.length);Ge&&(Fe[Ie]=Fe[Ie].slice(Ge[De])),Ue[De].push({generated_text:ye?[...W[De],{role:"assistant",content:Fe[Ie]}]:Fe[Ie]})}return!G&&Ue.length===1?Ue[0]:Ue}}class A extends y{constructor(W){super(W),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([re,G])=>[re.toLowerCase(),G])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(W,re,{hypothesis_template:G="This example is {}.",multi_label:ye=!1}={}){const he=Array.isArray(W);he||(W=[W]),Array.isArray(re)||(re=[re]);const Ee=re.map(Ce=>G.replace("{}",Ce)),xe=ye||re.length===1,ke=[];for(const Ce of W){const Fe=[];for(const Ie of Ee){const De=this.tokenizer(Ce,{text_pair:Ie,padding:!0,truncation:!0}),qe=await this.model(De);xe?Fe.push([qe.logits.data[this.contradiction_id],qe.logits.data[this.entailment_id]]):Fe.push(qe.logits.data[this.entailment_id])}const Ue=(xe?Fe.map(Ie=>(0,l.softmax)(Ie)[1]):(0,l.softmax)(Fe)).map((Ie,De)=>[Ie,De]).sort((Ie,De)=>De[0]-Ie[0]);ke.push({sequence:Ce,labels:Ue.map(Ie=>re[Ie[1]]),scores:Ue.map(Ie=>Ie[0])})}return he?ke:ke[0]}}class D extends y{constructor(W){super(W)}async _call(W,{pooling:re="none",normalize:G=!1,quantize:ye=!1,precision:he="binary"}={}){const Ee=this.tokenizer(W,{padding:!0,truncation:!0}),xe=await this.model(Ee);let ke=xe.last_hidden_state??xe.logits??xe.token_embeddings;if(re!=="none")if(re==="mean")ke=(0,p.mean_pooling)(ke,Ee.attention_mask);else if(re==="cls")ke=ke.slice(null,0);else throw Error(`Pooling method '${re}' not supported.`);return G&&(ke=ke.normalize(2,-1)),ye&&(ke=(0,p.quantize_embeddings)(ke,he)),ke}}class H extends y{constructor(W){super(W)}async _call(W,{pool:re=null}={}){const G=await d(W),{pixel_values:ye}=await this.processor(G),he=await this.model({pixel_values:ye});let Ee;if(re){if(!("pooler_output"in he))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ee=he.pooler_output}else Ee=he.last_hidden_state??he.logits??he.image_embeds;return Ee}}class K extends y{constructor(W){super(W)}async _call(W,{top_k:re=5}={}){const G=this.processor.feature_extractor.config.sampling_rate,ye=await _(W,G),he=this.model.config.id2label,Ee=[];for(const xe of ye){const ke=await this.processor(xe),Fe=(await this.model(ke)).logits[0],Ge=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Fe.data),Fe.dims),re),Ue=Ge[0].tolist(),De=Ge[1].tolist().map((qe,Ye)=>({label:he?he[qe]:`LABEL_${qe}`,score:Ue[Ye]}));Ee.push(De)}return Array.isArray(W)?Ee:Ee[0]}}class B extends y{constructor(W){super(W)}async _call(W,re,{hypothesis_template:G="This is a sound of {}."}={}){const ye=!Array.isArray(W);ye&&(W=[W]);const he=re.map(Fe=>G.replace("{}",Fe)),Ee=this.tokenizer(he,{padding:!0,truncation:!0}),xe=this.processor.feature_extractor.config.sampling_rate,ke=await _(W,xe),Ce=[];for(const Fe of ke){const Ge=await this.processor(Fe),Ue=await this.model({...Ee,...Ge}),Ie=(0,l.softmax)(Ue.logits_per_audio.data);Ce.push([...Ie].map((De,qe)=>({score:De,label:re[qe]})))}return ye?Ce[0]:Ce}}class Y extends y{constructor(W){super(W)}async _call(W,re={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(W,re);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(W,re);case"moonshine":return this._call_moonshine(W,re);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(W,re){re.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),re.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const G=!Array.isArray(W);G&&(W=[W]);const ye=this.processor.feature_extractor.config.sampling_rate,he=await _(W,ye),Ee=[];for(const xe of he){const ke=await this.processor(xe),Fe=(await this.model(ke)).logits[0],Ge=[];for(const Ie of Fe)Ge.push((0,l.max)(Ie.data)[1]);const Ue=this.tokenizer.decode(Ge);Ee.push({text:Ue})}return G?Ee[0]:Ee}async _call_whisper(W,re){const G=re.return_timestamps??!1,ye=re.chunk_length_s??0,he=re.force_full_sequences??!1;let Ee=re.stride_length_s??null;const xe={...re};G==="word"&&(xe.return_token_timestamps=!0,xe.return_timestamps=!1);const ke=!Array.isArray(W);ke&&(W=[W]);const Ce=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Fe=this.processor.feature_extractor.config.hop_length,Ge=this.processor.feature_extractor.config.sampling_rate,Ue=await _(W,Ge),Ie=[];for(const De of Ue){let qe=[];if(ye>0){if(Ee===null)Ee=ye/6;else if(ye<=Ee)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Ke=Ge*ye,Ae=Ge*Ee,et=Ke-2*Ae;let _t=0;for(;;){const zt=_t+Ke,jt=De.subarray(_t,zt),bs=await this.processor(jt),ls=_t===0,Mt=zt>=De.length;if(qe.push({stride:[jt.length,ls?0:Ae,Mt?0:Ae],input_features:bs.input_features,is_last:Mt}),Mt)break;_t+=et}}else qe=[{stride:[De.length,0,0],input_features:(await this.processor(De)).input_features,is_last:!0}];for(const Ke of qe){xe.num_frames=Math.floor(Ke.stride[0]/Fe);const Ae=await this.model.generate({inputs:Ke.input_features,...xe});G==="word"?(Ke.tokens=Ae.sequences.tolist()[0],Ke.token_timestamps=Ae.token_timestamps.tolist()[0].map(et=>(0,l.round)(et,2))):Ke.tokens=Ae[0].tolist(),Ke.stride=Ke.stride.map(et=>et/Ge)}const[Ye,ot]=this.tokenizer._decode_asr(qe,{time_precision:Ce,return_timestamps:G,force_full_sequences:he});Ie.push({text:Ye,...ot})}return ke?Ie[0]:Ie}async _call_moonshine(W,re){const G=!Array.isArray(W);G&&(W=[W]);const ye=this.processor.feature_extractor.config.sampling_rate,he=await _(W,ye),Ee=[];for(const xe of he){const ke=await this.processor(xe),Ce=Math.floor(xe.length/ye)*6,Fe=await this.model.generate({max_new_tokens:Ce,...re,...ke}),Ge=this.processor.batch_decode(Fe,{skip_special_tokens:!0})[0];Ee.push({text:Ge})}return G?Ee[0]:Ee}}class q extends y{constructor(W){super(W)}async _call(W,re={}){const G=Array.isArray(W),ye=await d(W),{pixel_values:he}=await this.processor(ye),Ee=[];for(const xe of he){xe.dims=[1,...xe.dims];const ke=await this.model.generate({inputs:xe,...re}),Ce=this.tokenizer.batch_decode(ke,{skip_special_tokens:!0}).map(Fe=>({generated_text:Fe.trim()}));Ee.push(Ce)}return G?Ee:Ee[0]}}class Q extends y{constructor(W){super(W)}async _call(W,{top_k:re=5}={}){const G=await d(W),{pixel_values:ye}=await this.processor(G),he=await this.model({pixel_values:ye}),Ee=this.model.config.id2label,xe=[];for(const ke of he.logits){const Ce=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(ke.data),ke.dims),re),Fe=Ce[0].tolist(),Ue=Ce[1].tolist().map((Ie,De)=>({label:Ee?Ee[Ie]:`LABEL_${Ie}`,score:Fe[De]}));xe.push(Ue)}return Array.isArray(W)?xe:xe[0]}}class X extends y{constructor(W){super(W),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(W,{threshold:re=.5,mask_threshold:G=.5,overlap_mask_area_threshold:ye=.8,label_ids_to_fuse:he=null,target_sizes:Ee=null,subtask:xe=null}={}){if(Array.isArray(W)&&W.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Ce=await d(W),Fe=Ce.map(Ke=>[Ke.height,Ke.width]),Ge=await this.processor(Ce),{inputNames:Ue,outputNames:Ie}=this.model.sessions.model;if(!Ue.includes("pixel_values")){if(Ue.length!==1)throw Error(`Expected a single input name, but got ${Ue.length} inputs: ${Ue}.`);const Ke=Ue[0];if(Ke in Ge)throw Error(`Input name ${Ke} already exists in the inputs.`);Ge[Ke]=Ge.pixel_values}const De=await this.model(Ge);let qe=null;if(xe!==null)qe=this.subtasks_mapping[xe];else if(this.processor.image_processor){for(const[Ke,Ae]of Object.entries(this.subtasks_mapping))if(Ae in this.processor.image_processor){qe=this.processor.image_processor[Ae].bind(this.processor.image_processor),xe=Ke;break}}const Ye=this.model.config.id2label,ot=[];if(xe)if(xe==="panoptic"||xe==="instance"){const Ke=qe(De,re,G,ye,he,Ee??Fe)[0],Ae=Ke.segmentation;for(const et of Ke.segments_info){const _t=new Uint8ClampedArray(Ae.data.length);for(let jt=0;jt<Ae.data.length;++jt)Ae.data[jt]===et.id&&(_t[jt]=255);const zt=new u.RawImage(_t,Ae.dims[1],Ae.dims[0],1);ot.push({score:et.score,label:Ye[et.label_id],mask:zt})}}else if(xe==="semantic"){const{segmentation:Ke,labels:Ae}=qe(De,Ee??Fe)[0];for(const et of Ae){const _t=new Uint8ClampedArray(Ke.data.length);for(let jt=0;jt<Ke.data.length;++jt)Ke.data[jt]===et&&(_t[jt]=255);const zt=new u.RawImage(_t,Ke.dims[1],Ke.dims[0],1);ot.push({score:null,label:Ye[et],mask:zt})}}else throw Error(`Subtask ${xe} not supported.`);else{const Ae=De[Ie[0]];for(let et=0;et<Fe.length;++et){const _t=Fe[et],zt=Ae[et];zt.data.some(bs=>bs<-1e-5||bs>1+1e-5)&&zt.sigmoid_();const jt=await u.RawImage.fromTensor(zt.mul_(255).to("uint8")).resize(_t[1],_t[0]);ot.push({label:null,score:null,mask:jt})}}return ot}}class se extends X{constructor(W){super(W)}async _call(W,re={}){if(Array.isArray(W)&&W.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const ye=await d(W),he=await super._call(W,re);return ye.map((xe,ke)=>{const Ce=xe.clone();return Ce.putAlpha(he[ke].mask),Ce})}}class me extends y{constructor(W){super(W)}async _call(W,re,{hypothesis_template:G="This is a photo of {}"}={}){const ye=Array.isArray(W),he=await d(W),Ee=re.map(Ue=>G.replace("{}",Ue)),xe=this.tokenizer(Ee,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:ke}=await this.processor(he),Ce=await this.model({...xe,pixel_values:ke}),Fe=this.model.config.model_type==="siglip"?Ue=>Ue.sigmoid().data:Ue=>(0,l.softmax)(Ue.data),Ge=[];for(const Ue of Ce.logits_per_image){const De=[...Fe(Ue)].map((qe,Ye)=>({score:qe,label:re[Ye]}));De.sort((qe,Ye)=>Ye.score-qe.score),Ge.push(De)}return ye?Ge:Ge[0]}}class le extends y{constructor(W){super(W)}async _call(W,{threshold:re=.9,percentage:G=!1}={}){const ye=Array.isArray(W);if(ye&&W.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const he=await d(W),Ee=G?null:he.map(Ie=>[Ie.height,Ie.width]),{pixel_values:xe,pixel_mask:ke}=await this.processor(he),Ce=await this.model({pixel_values:xe,pixel_mask:ke}),Fe=this.processor.image_processor.post_process_object_detection(Ce,re,Ee),Ge=this.model.config.id2label,Ue=Fe.map(Ie=>Ie.boxes.map((De,qe)=>({score:Ie.scores[qe],label:Ge[Ie.classes[qe]],box:f(De,!G)})));return ye?Ue:Ue[0]}}class R extends y{constructor(W){super(W)}async _call(W,re,{threshold:G=.1,top_k:ye=null,percentage:he=!1}={}){const Ee=Array.isArray(W),xe=await d(W),ke=this.tokenizer(re,{padding:!0,truncation:!0}),Ce=await this.processor(xe),Fe=[];for(let Ge=0;Ge<xe.length;++Ge){const Ue=xe[Ge],Ie=he?null:[[Ue.height,Ue.width]],De=Ce.pixel_values[Ge].unsqueeze_(0),qe=await this.model({...ke,pixel_values:De});let Ye;if("post_process_grounded_object_detection"in this.processor){const ot=this.processor.post_process_grounded_object_detection(qe,ke.input_ids,{box_threshold:G,text_threshold:G,target_sizes:Ie})[0];Ye=ot.boxes.map((Ke,Ae)=>({score:ot.scores[Ae],label:ot.labels[Ae],box:f(Ke,!he)}))}else{const ot=this.processor.image_processor.post_process_object_detection(qe,G,Ie,!0)[0];Ye=ot.boxes.map((Ke,Ae)=>({score:ot.scores[Ae],label:re[ot.classes[Ae]],box:f(Ke,!he)}))}Ye.sort((ot,Ke)=>Ke.score-ot.score),ye!==null&&(Ye=Ye.slice(0,ye)),Fe.push(Ye)}return Ee?Fe:Fe[0]}}class O extends y{constructor(W){super(W)}async _call(W,re,G={}){const ye=(await d(W))[0],{pixel_values:he}=await this.processor(ye),Ee=`<s_docvqa><s_question>${re}</s_question><s_answer>`,xe=this.tokenizer(Ee,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,ke=await this.model.generate({inputs:he,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:xe,...G}),Fe=this.tokenizer.batch_decode(ke)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Ge=null;return Fe&&Fe.length>=2&&(Ge=Fe[1].trim()),[{answer:Ge}]}}class N extends y{constructor(re){super(re);ee(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=re.vocoder??null}async _call(re,{speaker_embeddings:G=null}={}){return this.processor?this._call_text_to_spectrogram(re,{speaker_embeddings:G}):this._call_text_to_waveform(re)}async _call_text_to_waveform(re){const G=this.tokenizer(re,{padding:!0,truncation:!0}),{waveform:ye}=await this.model(G),he=this.model.config.sampling_rate;return new c.RawAudio(ye.data,he)}async _call_text_to_spectrogram(re,{speaker_embeddings:G}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof G=="string"||G instanceof URL)&&(G=new Float32Array(await(await fetch(G)).arrayBuffer())),G instanceof Float32Array)G=new p.Tensor("float32",G,[1,G.length]);else if(!(G instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:ye}=this.tokenizer(re,{padding:!0,truncation:!0}),{waveform:he}=await this.model.generate_speech(ye,G,{vocoder:this.vocoder}),Ee=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(he.data,Ee)}}class Z extends y{constructor(W){super(W)}async _call(W){const re=await d(W),G=await this.processor(re),ye=await this.model(G),he=[];for(const Ee of ye.reconstruction){const xe=Ee.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");he.push(u.RawImage.fromTensor(xe))}return he.length>1?he:he[0]}}class fe extends y{constructor(W){super(W)}async _call(W){const re=await d(W),G=await this.processor(re),{predicted_depth:ye}=await this.model(G),he=[];for(let Ee=0;Ee<re.length;++Ee){const xe=ye[Ee],[ke,Ce]=xe.dims.slice(-2),[Fe,Ge]=re[Ee].size,Ue=(await(0,p.interpolate_4d)(xe.view(1,1,ke,Ce),{size:[Ge,Fe],mode:"bilinear"})).view(Ge,Fe),Ie=Ue.min().item(),De=Ue.max().item(),qe=Ue.sub(Ie).div_(De-Ie).mul_(255).to("uint8").unsqueeze(0),Ye=u.RawImage.fromTensor(qe);he.push({predicted_depth:Ue,depth:Ye})}return he.length>1?he:he[0]}}const ie=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:$,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:w,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:g,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:C,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:v,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:b,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:T,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:P,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:A,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:o.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:B,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:Y,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:N,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:q,model:o.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Q,model:o.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:X,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:se,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:me,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:le,model:o.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:R,model:o.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:O,model:o.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Z,model:o.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:fe,model:o.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:D,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:H,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Me=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Re(pe,W=null,{progress_callback:re=null,config:G=null,cache_dir:ye=null,local_files_only:he=!1,revision:Ee="main",device:xe=null,dtype:ke=null,subfolder:Ce="onnx",use_external_data_format:Fe=null,model_file_name:Ge=null,session_options:Ue={}}={}){pe=Me[pe]??pe;const Ie=ie[pe.split("_",1)[0]];if(!Ie)throw Error(`Unsupported pipeline: ${pe}. Must be one of [${Object.keys(ie)}]`);W||(W=Ie.default.model,console.log(`No model specified. Using default model: "${W}".`));const De={progress_callback:re,config:G,cache_dir:ye,local_files_only:he,revision:Ee,device:xe,dtype:ke,subfolder:Ce,use_external_data_format:Fe,model_file_name:Ge,session_options:Ue},qe=new Map([["tokenizer",Ie.tokenizer],["model",Ie.model],["processor",Ie.processor]]),Ye=await We(qe,W,De);Ye.task=pe,(0,a.dispatchCallback)(re,{status:"ready",task:pe,model:W});const ot=Ie.pipeline;return new ot(Ye)}async function We(pe,W,re){const G=Object.create(null),ye=[];for(const[he,Ee]of pe.entries()){if(!Ee)continue;let xe;Array.isArray(Ee)?xe=new Promise(async(ke,Ce)=>{var Ge,Ue;let Fe;for(const Ie of Ee){if(Ie===null){ke(null);return}try{ke(await Ie.from_pretrained(W,re));return}catch(De){if((Ge=De.message)!=null&&Ge.includes("Unsupported model type"))Fe=De;else if((Ue=De.message)!=null&&Ue.includes("Could not locate file"))Fe=De;else{Ce(De);return}}}Ce(Fe)}):xe=Ee.from_pretrained(W,re),G[he]=xe,ye.push(xe)}await Promise.all(ye);for(const[he,Ee]of Object.entries(G))G[he]=await Ee;return G}},"./src/tokenizers.js":(e,s,t)=>{t.r(s),t.d(s,{AlbertTokenizer:()=>Dt,AutoTokenizer:()=>Lr,BartTokenizer:()=>Ir,BertTokenizer:()=>xt,BlenderbotSmallTokenizer:()=>pn,BlenderbotTokenizer:()=>dn,BloomTokenizer:()=>Or,CLIPTokenizer:()=>gr,CamembertTokenizer:()=>rr,CodeGenTokenizer:()=>lr,CodeLlamaTokenizer:()=>Cs,CohereTokenizer:()=>mn,ConvBertTokenizer:()=>Ms,DebertaTokenizer:()=>it,DebertaV2Tokenizer:()=>Nt,DistilBertTokenizer:()=>zs,ElectraTokenizer:()=>nr,EsmTokenizer:()=>ct,FalconTokenizer:()=>Oe,GPT2Tokenizer:()=>Vs,GPTNeoXTokenizer:()=>Ze,GemmaTokenizer:()=>or,Grok1Tokenizer:()=>ir,HerbertTokenizer:()=>Qt,LlamaTokenizer:()=>Fr,M2M100Tokenizer:()=>hs,MBart50Tokenizer:()=>fr,MBartTokenizer:()=>Qs,MPNetTokenizer:()=>js,MarianTokenizer:()=>cn,MgpstrTokenizer:()=>fn,MobileBertTokenizer:()=>mt,NllbTokenizer:()=>ar,NougatTokenizer:()=>Wr,PreTrainedTokenizer:()=>ve,Qwen2Tokenizer:()=>Ut,RoFormerTokenizer:()=>Yt,RobertaTokenizer:()=>Ar,SiglipTokenizer:()=>ln,SpeechT5Tokenizer:()=>Dr,SqueezeBertTokenizer:()=>ut,T5Tokenizer:()=>kr,TokenizerModel:()=>H,VitsTokenizer:()=>hn,Wav2Vec2CTCTokenizer:()=>un,WhisperTokenizer:()=>_s,XLMRobertaTokenizer:()=>_r,XLMTokenizer:()=>mr,is_chinese_char:()=>C});var r=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function u(de,k){const U=await Promise.all([(0,n.getModelJSON)(de,"tokenizer.json",!0,k),(0,n.getModelJSON)(de,"tokenizer_config.json",!0,k)]);return k.legacy!==null&&(U[1].legacy=k.legacy),U}function d(de,k){const U=[];let J=0;for(const ae of de.matchAll(k)){const ue=ae[0];J<ae.index&&U.push(de.slice(J,ae.index)),ue.length>0&&U.push(ue),J=ae.index+ue.length}return J<de.length&&U.push(de.slice(J)),U}function _(de,k=!0){if(de.Regex!==void 0){let U=de.Regex.replace(/\\([#&~])/g,"$1");for(const[J,ae]of A)U=U.replaceAll(J,ae);return new RegExp(U,"gu")}else if(de.String!==void 0){const U=(0,o.escapeRegExp)(de.String);return new RegExp(k?U:`(${U})`,"gu")}else return console.warn("Unknown pattern type:",de),null}function f(de){return new Map(Object.entries(de))}function y(de){const k=de.dims;switch(k.length){case 1:return de.tolist();case 2:if(k[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return de.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${k.length}.`)}}function $(de){return de.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function w(de){return de.replace(new RegExp("\\p{M}","gu"),"")}function g(de){return w(de.toLowerCase())}function C(de){return de>=19968&&de<=40959||de>=13312&&de<=19903||de>=131072&&de<=173791||de>=173824&&de<=177983||de>=177984&&de<=178207||de>=178208&&de<=183983||de>=63744&&de<=64255||de>=194560&&de<=195103}function T(de,k,U){const J=[];let ae=0;for(;ae<de.length;){if(J.push(de[ae]),(k.get(de[ae])??U)!==U){++ae;continue}for(;++ae<de.length&&(k.get(de[ae])??U)===U;)k.get(J.at(-1))!==U&&(J[J.length-1]+=de[ae])}return J}function v(de){return de.match(/\S+/g)||[]}const b="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${b}]+$`,"gu"),P=".,!?…。，、।۔،",A=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class D{constructor(k){this.content=k.content,this.id=k.id,this.single_word=k.single_word??!1,this.lstrip=k.lstrip??!1,this.rstrip=k.rstrip??!1,this.special=k.special??!1,this.normalized=k.normalized??null}}class H extends r.Callable{constructor(k){super(),this.config=k,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(k,...U){switch(k.type){case"WordPiece":return new K(k);case"Unigram":return new B(k,...U);case"BPE":return new Q(k);default:if(k.vocab)return Array.isArray(k.vocab)?new B(k,...U):Object.hasOwn(k,"continuing_subword_prefix")&&Object.hasOwn(k,"unk_token")?Object.hasOwn(k,"merges")?new Q(k):new K(k):new X(k,...U);throw new Error(`Unknown TokenizerModel type: ${k.type}`)}}_call(k){return k=this.encode(k),this.fuse_unk&&(k=T(k,this.tokens_to_ids,this.unk_token_id)),k}encode(k){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(k){return k.map(U=>this.tokens_to_ids.get(U)??this.unk_token_id)}convert_ids_to_tokens(k){return k.map(U=>this.vocab[U]??this.unk_token)}}class K extends H{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.max_input_chars_per_word=k.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[U,J]of this.tokens_to_ids)this.vocab[J]=U}encode(k){const U=[];for(const J of k){const ae=[...J];if(ae.length>this.max_input_chars_per_word){U.push(this.unk_token);continue}let ue=!1,Te=0;const je=[];for(;Te<ae.length;){let Xe=ae.length,He=null;for(;Te<Xe;){let tt=ae.slice(Te,Xe).join("");if(Te>0&&(tt=this.config.continuing_subword_prefix+tt),this.tokens_to_ids.has(tt)){He=tt;break}--Xe}if(He===null){ue=!0;break}je.push(He),Te=Xe}ue?U.push(this.unk_token):U.push(...je)}return U}}class B extends H{constructor(k,U){super(k);const J=k.vocab.length;this.vocab=new Array(J),this.scores=new Array(J);for(let ae=0;ae<J;++ae)[this.vocab[ae],this.scores[ae]]=k.vocab[ae];this.unk_token_id=k.unk_id,this.unk_token=this.vocab[k.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ae,ue)=>[ae,ue])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(k){const U=k.chars,J=1;let ae=0;for(;ae<U.length;){let ue=!1;const Te=U.slice(ae).join(""),je=this.trie.commonPrefixSearch(Te);for(const Xe of je){const He=this.tokens_to_ids.get(Xe),tt=this.scores[He],wt=(0,o.len)(Xe);k.insert(ae,wt,tt,He),!ue&&wt===J&&(ue=!0)}ue||k.insert(ae,J,this.unk_score,this.unk_token_id),ae+=J}}tokenize(k){const U=new l.TokenLattice(k,this.bos_token_id,this.eos_token_id);return this.populateNodes(U),U.tokens()}encode(k){const U=[];for(const J of k){const ae=this.tokenize(J);U.push(...ae)}return U}}const Y=(()=>{const de=[...Array.from({length:94},(ae,ue)=>ue+33),...Array.from({length:12},(ae,ue)=>ue+161),...Array.from({length:82},(ae,ue)=>ue+174)],k=de.slice();let U=0;for(let ae=0;ae<256;++ae)de.includes(ae)||(de.push(ae),k.push(256+U),U+=1);const J=k.map(ae=>String.fromCharCode(ae));return Object.fromEntries(de.map((ae,ue)=>[ae,J[ue]]))})(),q=(0,o.reverseDictionary)(Y);class Q extends H{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[J,ae]of this.tokens_to_ids)this.vocab[ae]=J;const U=Array.isArray(k.merges[0]);this.merges=U?k.merges:k.merges.map(J=>J.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((J,ae)=>[JSON.stringify(J),ae])),this.end_of_word_suffix=k.end_of_word_suffix,this.continuing_subword_suffix=k.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(k){if(k.length===0)return[];const U=this.cache.get(k);if(U!==void 0)return U;const J=Array.from(k);this.end_of_word_suffix&&(J[J.length-1]+=this.end_of_word_suffix);let ae=[];if(J.length>1){const ue=new l.PriorityQueue((Xe,He)=>Xe.score<He.score);let Te={token:J[0],bias:0,prev:null,next:null},je=Te;for(let Xe=1;Xe<J.length;++Xe){const He={bias:Xe/J.length,token:J[Xe],prev:je,next:null};je.next=He,this._add_node(ue,je),je=He}for(;!ue.isEmpty();){const Xe=ue.pop();if(Xe.deleted||!Xe.next||Xe.next.deleted)continue;if(Xe.deleted=!0,Xe.next.deleted=!0,Xe.prev){const tt={...Xe.prev};Xe.prev.deleted=!0,Xe.prev=tt,tt.prev?tt.prev.next=tt:Te=tt}const He={token:Xe.token+Xe.next.token,bias:Xe.bias,prev:Xe.prev,next:Xe.next.next};He.prev?(He.prev.next=He,this._add_node(ue,He.prev)):Te=He,He.next&&(He.next.prev=He,this._add_node(ue,He))}for(let Xe=Te;Xe!==null;Xe=Xe.next)ae.push(Xe.token)}else ae=J;if(this.continuing_subword_suffix)for(let ue=0;ue<ae.length-1;++ue)ae[ue]+=this.continuing_subword_suffix;return k.length<this.max_length_to_cache&&this.cache.put(k,ae),ae}_add_node(k,U){const J=this.bpe_ranks.get(JSON.stringify([U.token,U.next.token]));J!==void 0&&(U.score=J+U.bias,k.push(U))}encode(k){const U=[];for(const J of k){if(this.ignore_merges&&this.tokens_to_ids.has(J)){U.push(J);continue}const ae=this.bpe(J);for(const ue of ae)if(this.tokens_to_ids.has(ue))U.push(ue);else if(this.byte_fallback){const Te=Array.from(this.text_encoder.encode(ue)).map(je=>`<0x${je.toString(16).toUpperCase().padStart(2,"0")}>`);Te.every(je=>this.tokens_to_ids.has(je))?U.push(...Te):U.push(this.unk_token)}else U.push(this.unk_token)}return U}}class X extends H{constructor(k,U){super(k),this.tokens_to_ids=f(U.target_lang?k.vocab[U.target_lang]:k.vocab),this.bos_token=U.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=U.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=U.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[J,ae]of this.tokens_to_ids)this.vocab[ae]=J}encode(k){return k}}class se extends r.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"BertNormalizer":return new pe(k);case"Precompiled":return new Mt(k);case"Sequence":return new We(k);case"Replace":return new me(k);case"NFC":return new R(k);case"NFD":return new O(k);case"NFKC":return new N(k);case"NFKD":return new Z(k);case"Strip":return new fe(k);case"StripAccents":return new ie(k);case"Lowercase":return new Me(k);case"Prepend":return new Re(k);default:throw new Error(`Unknown Normalizer type: ${k.type}`)}}normalize(k){throw Error("normalize should be implemented in subclass.")}_call(k){return this.normalize(k)}}class me extends se{normalize(k){const U=_(this.config.pattern);return U===null?k:k.replaceAll(U,this.config.content)}}class le extends se{constructor(){super(...arguments);ee(this,"form")}normalize(U){return U=U.normalize(this.form),U}}class R extends le{constructor(){super(...arguments);ee(this,"form","NFC")}}class O extends le{constructor(){super(...arguments);ee(this,"form","NFD")}}class N extends le{constructor(){super(...arguments);ee(this,"form","NFKC")}}class Z extends le{constructor(){super(...arguments);ee(this,"form","NFKD")}}class fe extends se{normalize(k){return this.config.strip_left&&this.config.strip_right?k=k.trim():(this.config.strip_left&&(k=k.trimStart()),this.config.strip_right&&(k=k.trimEnd())),k}}class ie extends se{normalize(k){return k=w(k),k}}class Me extends se{normalize(k){return k=k.toLowerCase(),k}}class Re extends se{normalize(k){return k=this.config.prepend+k,k}}class We extends se{constructor(k){super(k),this.normalizers=k.normalizers.map(U=>se.fromConfig(U))}normalize(k){return this.normalizers.reduce((U,J)=>J.normalize(U),k)}}class pe extends se{_tokenize_chinese_chars(k){const U=[];for(let J=0;J<k.length;++J){const ae=k[J],ue=ae.charCodeAt(0);C(ue)?(U.push(" "),U.push(ae),U.push(" ")):U.push(ae)}return U.join("")}stripAccents(k){return k.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(k){switch(k){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(k)}}_clean_text(k){const U=[];for(const J of k){const ae=J.charCodeAt(0);ae===0||ae===65533||this._is_control(J)||(/^\s$/.test(J)?U.push(" "):U.push(J))}return U.join("")}normalize(k){return this.config.clean_text&&(k=this._clean_text(k)),this.config.handle_chinese_chars&&(k=this._tokenize_chinese_chars(k)),this.config.lowercase?(k=k.toLowerCase(),this.config.strip_accents!==!1&&(k=this.stripAccents(k))):this.config.strip_accents&&(k=this.stripAccents(k)),k}}class W extends r.Callable{static fromConfig(k){if(k===null)return null;switch(k.type){case"BertPreTokenizer":return new re(k);case"Sequence":return new sr(k);case"Whitespace":return new L(k);case"WhitespaceSplit":return new oe(k);case"Metaspace":return new bs(k);case"ByteLevel":return new G(k);case"Split":return new ye(k);case"Punctuation":return new he(k);case"Digits":return new Ee(k);case"Replace":return new j(k);default:throw new Error(`Unknown PreTokenizer type: ${k.type}`)}}pre_tokenize_text(k,U){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(k,U){return(Array.isArray(k)?k.map(J=>this.pre_tokenize_text(J,U)):this.pre_tokenize_text(k,U)).flat()}_call(k,U){return this.pre_tokenize(k,U)}}class re extends W{constructor(k){super(),this.pattern=new RegExp(`[^\\s${b}]+|[${b}]`,"gu")}pre_tokenize_text(k,U){return k.trim().match(this.pattern)||[]}}class G extends W{constructor(k){super(),this.config=k,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Y,this.text_encoder=new TextEncoder}pre_tokenize_text(k,U){return this.add_prefix_space&&!k.startsWith(" ")&&(k=" "+k),(this.use_regex?k.match(this.pattern)||[]:[k]).map(ae=>Array.from(this.text_encoder.encode(ae),ue=>this.byte_encoder[ue]).join(""))}}class ye extends W{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(k,U){var J;return this.pattern===null?[]:this.config.invert?k.match(this.pattern)||[]:((J=this.config.behavior)==null?void 0:J.toLowerCase())==="removed"?k.split(this.pattern).filter(ae=>ae):d(k,this.pattern)}}class he extends W{constructor(k){super(),this.config=k,this.pattern=new RegExp(`[^${b}]+|[${b}]+`,"gu")}pre_tokenize_text(k,U){return k.match(this.pattern)||[]}}class Ee extends W{constructor(k){super(),this.config=k;const U=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(U,"gu")}pre_tokenize_text(k,U){return k.match(this.pattern)||[]}}class xe extends r.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"TemplateProcessing":return new Fe(k);case"ByteLevel":return new Ge(k);case"RobertaProcessing":return new Ce(k);case"BertProcessing":return new ke(k);case"Sequence":return new Ue(k);default:throw new Error(`Unknown PostProcessor type: ${k.type}`)}}post_process(k,...U){throw Error("post_process should be implemented in subclass.")}_call(k,...U){return this.post_process(k,...U)}}class ke extends xe{constructor(k){super(k),this.cls=k.cls[0],this.sep=k.sep[0]}post_process(k,U=null,{add_special_tokens:J=!0}={}){J&&(k=(0,o.mergeArrays)([this.cls],k,[this.sep]));let ae=new Array(k.length).fill(0);if(U!==null){const ue=J&&this instanceof Ce?[this.sep]:[],Te=J?[this.sep]:[];k=(0,o.mergeArrays)(k,ue,U,Te),ae=(0,o.mergeArrays)(ae,new Array(U.length+ue.length+Te.length).fill(1))}return{tokens:k,token_type_ids:ae}}}class Ce extends ke{}class Fe extends xe{constructor(k){super(k),this.single=k.single,this.pair=k.pair}post_process(k,U=null,{add_special_tokens:J=!0}={}){const ae=U===null?this.single:this.pair;let ue=[],Te=[];for(const je of ae)"SpecialToken"in je?J&&(ue.push(je.SpecialToken.id),Te.push(je.SpecialToken.type_id)):"Sequence"in je&&(je.Sequence.id==="A"?(ue=(0,o.mergeArrays)(ue,k),Te=(0,o.mergeArrays)(Te,new Array(k.length).fill(je.Sequence.type_id))):je.Sequence.id==="B"&&(ue=(0,o.mergeArrays)(ue,U),Te=(0,o.mergeArrays)(Te,new Array(U.length).fill(je.Sequence.type_id))));return{tokens:ue,token_type_ids:Te}}}class Ge extends xe{post_process(k,U=null){return U&&(k=(0,o.mergeArrays)(k,U)),{tokens:k}}}class Ue extends xe{constructor(k){super(k),this.processors=k.processors.map(U=>xe.fromConfig(U))}post_process(k,U=null,J={}){let ae;for(const ue of this.processors)if(ue instanceof Ge)k=ue.post_process(k).tokens,U&&(U=ue.post_process(U).tokens);else{const Te=ue.post_process(k,U,J);k=Te.tokens,ae=Te.token_type_ids}return{tokens:k,token_type_ids:ae}}}class Ie extends r.Callable{constructor(k){super(),this.config=k,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=k.trim_offsets}static fromConfig(k){if(k===null)return null;switch(k.type){case"WordPiece":return new Ke(k);case"Metaspace":return new ls(k);case"ByteLevel":return new Ae(k);case"Replace":return new De(k);case"ByteFallback":return new qe(k);case"Fuse":return new Ye(k);case"Strip":return new ot(k);case"Sequence":return new _t(k);case"CTC":return new et(k);case"BPEDecoder":return new zt(k);default:throw new Error(`Unknown Decoder type: ${k.type}`)}}_call(k){return this.decode(k)}decode(k){return this.decode_chain(k).join("")}decode_chain(k){throw Error("`decode_chain` should be implemented in subclass.")}}class De extends Ie{decode_chain(k){const U=_(this.config.pattern);return U===null?k:k.map(J=>J.replaceAll(U,this.config.content))}}class qe extends Ie{constructor(k){super(k),this.text_decoder=new TextDecoder}decode_chain(k){const U=[];let J=[];for(const ae of k){let ue=null;if(ae.length===6&&ae.startsWith("<0x")&&ae.endsWith(">")){const Te=parseInt(ae.slice(3,5),16);isNaN(Te)||(ue=Te)}if(ue!==null)J.push(ue);else{if(J.length>0){const Te=this.text_decoder.decode(Uint8Array.from(J));U.push(Te),J=[]}U.push(ae)}}if(J.length>0){const ae=this.text_decoder.decode(Uint8Array.from(J));U.push(ae),J=[]}return U}}class Ye extends Ie{decode_chain(k){return[k.join("")]}}class ot extends Ie{constructor(k){super(k),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(k){return k.map(U=>{let J=0;for(let ue=0;ue<this.start&&U[ue]===this.content;++ue){J=ue+1;continue}let ae=U.length;for(let ue=0;ue<this.stop;++ue){const Te=U.length-ue-1;if(U[Te]===this.content){ae=Te;continue}else break}return U.slice(J,ae)})}}class Ke extends Ie{constructor(k){super(k),this.cleanup=k.cleanup}decode_chain(k){return k.map((U,J)=>(J!==0&&(U.startsWith(this.config.prefix)?U=U.replace(this.config.prefix,""):U=" "+U),this.cleanup&&(U=$(U)),U))}}class Ae extends Ie{constructor(k){super(k),this.byte_decoder=q,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(k){const U=k.join(""),J=new Uint8Array([...U].map(ue=>this.byte_decoder[ue]));return this.text_decoder.decode(J)}decode_chain(k){const U=[];let J=[];for(const ae of k)this.added_tokens.find(ue=>ue.content===ae)!==void 0?(J.length>0&&(U.push(this.convert_tokens_to_string(J)),J=[]),U.push(ae)):J.push(ae);return J.length>0&&U.push(this.convert_tokens_to_string(J)),U}}class et extends Ie{constructor(k){super(k),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(k){if(k.length===0)return"";const U=[k[0]];for(let ue=1;ue<k.length;++ue)k[ue]!==U.at(-1)&&U.push(k[ue]);let ae=U.filter(ue=>ue!==this.pad_token).join("");return this.cleanup&&(ae=$(ae).replaceAll(this.word_delimiter_token," ").trim()),ae}decode_chain(k){return[this.convert_tokens_to_string(k)]}}class _t extends Ie{constructor(k){super(k),this.decoders=k.decoders.map(U=>Ie.fromConfig(U))}decode_chain(k){return this.decoders.reduce((U,J)=>J.decode_chain(U),k)}}class zt extends Ie{constructor(k){super(k),this.suffix=this.config.suffix}decode_chain(k){return k.map((U,J)=>U.replaceAll(this.suffix,J===k.length-1?"":" "))}}class jt extends Ie{decode_chain(k){let U="";for(let J=1;J<k.length;J+=2)U+=k[J];return[U]}}class bs extends W{constructor(k){super(),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement,this.strRep=k.str_rep||this.replacement,this.prepend_scheme=k.prepend_scheme??"always"}pre_tokenize_text(k,{section_index:U=void 0}={}){let J=k.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!J.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&U===0)&&(J=this.strRep+J),[J]}}class ls extends Ie{constructor(k){super(k),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement}decode_chain(k){const U=[];for(let J=0;J<k.length;++J){let ae=k[J].replaceAll(this.replacement," ");this.addPrefixSpace&&J==0&&ae.startsWith(" ")&&(ae=ae.substring(1)),U.push(ae)}return U}}class Mt extends se{constructor(k){super(k),this.charsmap=k.precompiled_charsmap}normalize(k){return k=k.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),k=k.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),k.includes("～")?k=k.split("～").map(J=>J.normalize("NFKC")).join("～"):k=k.normalize("NFKC"),k}}class sr extends W{constructor(k){super(),this.tokenizers=k.pretokenizers.map(U=>W.fromConfig(U))}pre_tokenize_text(k,U){return this.tokenizers.reduce((J,ae)=>ae.pre_tokenize(J,U),[k])}}class L extends W{constructor(k){super()}pre_tokenize_text(k,U){return k.match(/\w+|[^\w\s]+/g)||[]}}class oe extends W{constructor(k){super()}pre_tokenize_text(k,U){return v(k)}}class j extends W{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(k,U){return this.pattern===null?[k]:[k.replaceAll(this.pattern,this.config.content)]}}const te=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ge(de,k,U,J){for(const ae of Object.keys(de)){const ue=k-de[ae].length,Te=U(ae),je=new Array(ue).fill(Te);de[ae]=J==="right"?(0,o.mergeArrays)(de[ae],je):(0,o.mergeArrays)(je,de[ae])}}function Le(de,k){for(const U of Object.keys(de))de[U].length=k}class ve extends r.Callable{constructor(U,J){super();ee(this,"return_token_type_ids",!1);ee(this,"padding_side","right");this._tokenizer_config=J,this.normalizer=se.fromConfig(U.normalizer),this.pre_tokenizer=W.fromConfig(U.pre_tokenizer),this.model=H.fromConfig(U.model,J),this.post_processor=xe.fromConfig(U.post_processor),this.decoder=Ie.fromConfig(U.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ae of U.added_tokens){const ue=new D(ae);this.added_tokens.push(ue),this.model.tokens_to_ids.set(ue.content,ue.id),this.model.vocab[ue.id]=ue.content,ue.special&&(this.special_tokens.push(ue.content),this.all_special_ids.push(ue.id))}if(this.additional_special_tokens=J.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ae=>ae.content)),this.added_tokens_map=new Map(this.added_tokens.map(ae=>[ae.content,ae])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=J.model_max_length,this.remove_space=J.remove_space,this.clean_up_tokenization_spaces=J.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=J.do_lowercase_and_remove_accent??!1,J.padding_side&&(this.padding_side=J.padding_side),this.legacy=!1,this.chat_template=J.chat_template??null,Array.isArray(this.chat_template)){const ae=Object.create(null);for(const{name:ue,template:Te}of this.chat_template){if(typeof ue!="string"||typeof Te!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ae[ue]=Te}this.chat_template=ae}this._compiled_template_cache=new Map}getToken(...U){for(const J of U){const ae=this._tokenizer_config[J];if(ae)if(typeof ae=="object"){if(ae.__type==="AddedToken")return ae.content;throw Error(`Unknown token: ${ae}`)}else return ae}return null}static async from_pretrained(U,{progress_callback:J=null,config:ae=null,cache_dir:ue=null,local_files_only:Te=!1,revision:je="main",legacy:Xe=null}={}){const He=await u(U,{progress_callback:J,config:ae,cache_dir:ue,local_files_only:Te,revision:je,legacy:Xe});return new this(...He)}_call(U,{text_pair:J=null,add_special_tokens:ae=!0,padding:ue=!1,truncation:Te=null,max_length:je=null,return_tensor:Xe=!0,return_token_type_ids:He=null}={}){const tt=Array.isArray(U);let wt;if(tt){if(U.length===0)throw Error("text array must be non-empty");if(J!==null){if(Array.isArray(J)){if(U.length!==J.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");wt=U.map((Ft,Zt)=>this._encode_plus(Ft,{text_pair:J[Zt],add_special_tokens:ae,return_token_type_ids:He}))}else wt=U.map(Ft=>this._encode_plus(Ft,{add_special_tokens:ae,return_token_type_ids:He}))}else{if(U==null)throw Error("text may not be null or undefined");if(Array.isArray(J))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");wt=[this._encode_plus(U,{text_pair:J,add_special_tokens:ae,return_token_type_ids:He})]}if(je===null?je=this.model_max_length:Te===null&&(ue===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),je=this.model_max_length):ue===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),Te=!0)),ue===!0&&(je=Math.min((0,i.max)(wt.map(Ft=>Ft.input_ids.length))[0],je??1/0)),je=Math.min(je,this.model_max_length??1/0),ue||Te)for(let Ft=0;Ft<wt.length;++Ft)wt[Ft].input_ids.length!==je&&(wt[Ft].input_ids.length>je?Te&&Le(wt[Ft],je):ue&&ge(wt[Ft],je,Zt=>Zt==="input_ids"?this.pad_token_id:0,this.padding_side));const Lt={};if(Xe){if(!(ue&&Te)&&wt.some(Zt=>{var Gt;for(const gs of Object.keys(Zt))if(Zt[gs].length!==((Gt=wt[0][gs])==null?void 0:Gt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Ft=[wt.length,wt[0].input_ids.length];for(const Zt of Object.keys(wt[0]))Lt[Zt]=new a.Tensor("int64",BigInt64Array.from(wt.flatMap(Gt=>Gt[Zt]).map(BigInt)),Ft)}else{for(const Ft of Object.keys(wt[0]))Lt[Ft]=wt.map(Zt=>Zt[Ft]);if(!tt)for(const Ft of Object.keys(Lt))Lt[Ft]=Lt[Ft][0]}return Lt}_encode_text(U){if(U===null)return null;const J=this.added_tokens_splitter.split(U);for(let ue=0;ue<J.length;++ue){const Te=this.added_tokens_map.get(J[ue]);Te&&(Te.lstrip&&ue>0&&(J[ue-1]=J[ue-1].trimEnd()),Te.rstrip&&ue<J.length-1&&(J[ue+1]=J[ue+1].trimStart()))}return J.flatMap((ue,Te)=>{if(ue.length===0)return[];if(this.added_tokens_map.has(ue))return[ue];if(this.remove_space===!0&&(ue=ue.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ue=g(ue)),this.normalizer!==null&&(ue=this.normalizer(ue)),ue.length===0)return[];const je=this.pre_tokenizer!==null?this.pre_tokenizer(ue,{section_index:Te}):[ue];return this.model(je)})}_encode_plus(U,{text_pair:J=null,add_special_tokens:ae=!0,return_token_type_ids:ue=null}={}){const{tokens:Te,token_type_ids:je}=this._tokenize_helper(U,{pair:J,add_special_tokens:ae}),Xe=this.model.convert_tokens_to_ids(Te),He={input_ids:Xe,attention_mask:new Array(Xe.length).fill(1)};return(ue??this.return_token_type_ids)&&je&&(He.token_type_ids=je),He}_tokenize_helper(U,{pair:J=null,add_special_tokens:ae=!1}={}){const ue=this._encode_text(U),Te=this._encode_text(J);return this.post_processor?this.post_processor(ue,Te,{add_special_tokens:ae}):{tokens:(0,o.mergeArrays)(ue??[],Te??[])}}tokenize(U,{pair:J=null,add_special_tokens:ae=!1}={}){return this._tokenize_helper(U,{pair:J,add_special_tokens:ae}).tokens}encode(U,{text_pair:J=null,add_special_tokens:ae=!0,return_token_type_ids:ue=null}={}){return this._encode_plus(U,{text_pair:J,add_special_tokens:ae,return_token_type_ids:ue}).input_ids}batch_decode(U,J={}){return U instanceof a.Tensor&&(U=U.tolist()),U.map(ae=>this.decode(ae,J))}decode(U,J={}){if(U instanceof a.Tensor&&(U=y(U)),!Array.isArray(U)||U.length===0||!(0,o.isIntegralNumber)(U[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(U,J)}decode_single(U,{skip_special_tokens:J=!1,clean_up_tokenization_spaces:ae=null}){let ue=this.model.convert_ids_to_tokens(U);J&&(ue=ue.filter(je=>!this.special_tokens.includes(je)));let Te=this.decoder?this.decoder(ue):ue.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Te=Te.replaceAll(this.decoder.end_of_word_suffix," "),J&&(Te=Te.trim())),(ae??this.clean_up_tokenization_spaces)&&(Te=$(Te)),Te}get_chat_template({chat_template:U=null,tools:J=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ae=this.chat_template;if(U!==null&&Object.hasOwn(ae,U))U=ae[U];else if(U===null)if(J!==null&&"tool_use"in ae)U=ae.tool_use;else if("default"in ae)U=ae.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ae).sort()}.`)}else if(U===null)if(this.chat_template)U=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return U}apply_chat_template(U,{tools:J=null,documents:ae=null,chat_template:ue=null,add_generation_prompt:Te=!1,tokenize:je=!0,padding:Xe=!1,truncation:He=!1,max_length:tt=null,return_tensor:wt=!0,return_dict:Lt=!1,tokenizer_kwargs:Ft={},...Zt}={}){if(ue=this.get_chat_template({chat_template:ue,tools:J}),typeof ue!="string")throw Error(`chat_template must be a string, but got ${typeof ue}`);let Gt=this._compiled_template_cache.get(ue);Gt===void 0&&(Gt=new c.Template(ue),this._compiled_template_cache.set(ue,Gt));const gs=Object.create(null);for(const Ss of te){const $s=this.getToken(Ss);$s&&(gs[Ss]=$s)}const vs=Gt.render({messages:U,add_generation_prompt:Te,tools:J,documents:ae,...gs,...Zt});if(je){const Ss=this._call(vs,{add_special_tokens:!1,padding:Xe,truncation:He,max_length:tt,return_tensor:wt,...Ft});return Lt?Ss:Ss.input_ids}return vs}}class xt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class Dt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class mt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class ut extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class it extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class Nt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class Qt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class Ms extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class Yt extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class zs extends ve{}class rr extends ve{}class mr extends ve{constructor(U,J){super(U,J);ee(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class nr extends ve{constructor(){super(...arguments);ee(this,"return_token_type_ids",!0)}}class kr extends ve{}class Vs extends ve{}class Ir extends ve{}class Qs extends ve{constructor(k,U){super(k,U),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(k,U,J){return ps(this,k,U,J)}}class fr extends Qs{}class Ar extends ve{}class Or extends ve{}const cs="▁";class Fr extends ve{constructor(U,J){super(U,J);ee(this,"padding_side","left");this.legacy=J.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new bs({replacement:cs,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(U){if(U===null)return null;if(this.legacy||U.length===0)return super._encode_text(U);let J=super._encode_text(cs+U.replaceAll(cs," "));return J.length>1&&J[0]===cs&&this.special_tokens.includes(J[1])&&(J=J.slice(1)),J}}class Cs extends ve{}class _r extends ve{}class js extends ve{}class Oe extends ve{}class Ze extends ve{}class ct extends ve{}class Ut extends ve{}class or extends ve{}class ir extends ve{}function ps(de,k,U,J){if(!("language_codes"in de)||!Array.isArray(de.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in de)||!(de.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in de)||typeof de.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ae=J.src_lang,ue=J.tgt_lang;if(!de.language_codes.includes(ue))throw new Error(`Target language code "${ue}" is not valid. Must be one of: {${de.language_codes.join(", ")}}`);if(ae!==void 0){if(!de.language_codes.includes(ae))throw new Error(`Source language code "${ae}" is not valid. Must be one of: {${de.language_codes.join(", ")}}`);for(const Te of de.post_processor.config.single)if("SpecialToken"in Te&&de.languageRegex.test(Te.SpecialToken.id)){Te.SpecialToken.id=de.lang_to_token(ae);break}}return J.forced_bos_token_id=de.model.convert_tokens_to_ids([de.lang_to_token(ue)])[0],de._call(k,U)}class ar extends ve{constructor(k,U){super(k,U),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(k,U,J){return ps(this,k,U,J)}}class hs extends ve{constructor(k,U){super(k,U),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)).map(J=>J.slice(2,-2)),this.lang_to_token=J=>`__${J}__`}_build_translation_inputs(k,U,J){return ps(this,k,U,J)}}class _s extends ve{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(k,{return_timestamps:U=!1,return_language:J=!1,time_precision:ae=null,force_full_sequences:ue=!0}={}){if(ae===null)throw Error("Must specify time_precision");let Te=null;const je=U==="word";function Xe(){return{language:Te,timestamp:[null,null],text:""}}const He=[];let tt=Xe(),wt=0;const Lt=this.timestamp_begin,Zt=Lt+1500;let Gt=[],gs=[],vs=!1,Ss=null;const $s=new Set(this.all_special_ids);for(const qt of k){const ws=qt.tokens,Bs=je?qt.token_timestamps:null;let Xs=null,Js=Lt;if("stride"in qt){const[xs,ss,ms]=qt.stride;if(wt-=ss,Ss=xs-ms,ss&&(Js=ss/ae+Lt),ms)for(let fs=ws.length-1;fs>=0;--fs){const Fs=Number(ws[fs]);if(Fs>=Lt){if(Xs!==null&&(Fs-Lt)*ae<Ss)break;Xs=Fs}}}let Os=[],Rs=[];for(let xs=0;xs<ws.length;++xs){const ss=Number(ws[xs]);if($s.has(ss)){const ms=this.decode([ss]),fs=p.WHISPER_LANGUAGE_MAPPING.get(ms.slice(2,-2));if(fs!==void 0){if(Te!==null&&fs!==Te&&!U){Gt.push(Os);const Fs=this.findLongestCommonSequence(Gt)[0],cr=this.decode(Fs);tt.text=cr,He.push(tt),Gt=[],Os=[],tt=Xe()}Te=tt.language=fs}}else if(ss>=Lt&&ss<=Zt){const ms=(ss-Lt)*ae+wt,fs=(0,i.round)(ms,2);if(Xs!==null&&ss>=Xs)vs=!0;else if(vs||Gt.length>0&&ss<Js)vs=!1;else if(tt.timestamp[0]===null)tt.timestamp[0]=fs;else if(fs!==tt.timestamp[0]){tt.timestamp[1]=fs,Gt.push(Os),je&&gs.push(Rs);const[Fs,cr]=this.findLongestCommonSequence(Gt,gs),_n=this.decode(Fs);tt.text=_n,je&&(tt.words=this.collateWordTimestamps(Fs,cr,Te)),He.push(tt),Gt=[],Os=[],gs=[],Rs=[],tt=Xe()}}else if(Os.push(ss),je){let ms=(0,i.round)(Bs[xs]+wt,2),fs;if(xs+1<Bs.length){fs=(0,i.round)(Bs[xs+1]+wt,2);const Fs=this.decode([ss]);x.test(Fs)&&(fs=(0,i.round)(Math.min(ms+ae,fs),2))}else fs=null;Rs.push([ms,fs])}}if("stride"in qt){const[xs,ss,ms]=qt.stride;wt+=xs-ms}Os.length>0?(Gt.push(Os),je&&gs.push(Rs)):Gt.every(xs=>xs.length===0)&&(tt=Xe(),Gt=[],Os=[],gs=[],Rs=[])}if(Gt.length>0){if(ue&&U)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[qt,ws]=this.findLongestCommonSequence(Gt,gs),Bs=this.decode(qt);tt.text=Bs,je&&(tt.words=this.collateWordTimestamps(qt,ws,Te)),He.push(tt)}let ts=Object.create(null);const wr=He.map(qt=>qt.text).join("");if(U||J){for(let qt=0;qt<He.length;++qt){const ws=He[qt];U||delete ws.timestamp,J||delete ws.language}if(je){const qt=[];for(const ws of He)for(const Bs of ws.words)qt.push(Bs);ts={chunks:qt}}else ts={chunks:He}}return[wr,ts]}findLongestCommonSequence(k,U=null){let J=k[0],ae=J.length,ue=[];const Te=Array.isArray(U)&&U.length>0;let je=Te?[]:null,Xe=Te?U[0]:null;for(let He=1;He<k.length;++He){const tt=k[He];let wt=0,Lt=[ae,ae,0,0];const Ft=tt.length;for(let ts=1;ts<ae+Ft;++ts){const wr=Math.max(0,ae-ts),qt=Math.min(ae,ae+Ft-ts),ws=J.slice(wr,qt),Bs=Math.max(0,ts-ae),Xs=Math.min(Ft,ts),Js=tt.slice(Bs,Xs);if(ws.length!==Js.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Os;Te?Os=ws.filter((ss,ms)=>ss===Js[ms]&&Xe[wr+ms]<=U[He][Bs+ms]).length:Os=ws.filter((ss,ms)=>ss===Js[ms]).length;const Rs=ts/1e4,xs=Os/ts+Rs;Os>1&&xs>wt&&(wt=xs,Lt=[wr,qt,Bs,Xs])}const[Zt,Gt,gs,vs]=Lt,Ss=Math.floor((Gt+Zt)/2),$s=Math.floor((vs+gs)/2);ue.push(...J.slice(0,Ss)),J=tt.slice($s),ae=J.length,Te&&(je.push(...Xe.slice(0,Ss)),Xe=U[He].slice($s))}return ue.push(...J),Te?(je.push(...Xe),[ue,je]):[ue,[]]}collateWordTimestamps(k,U,J){const[ae,ue,Te]=this.combineTokensIntoWords(k,J),je=[];for(let Xe=0;Xe<ae.length;++Xe){const He=Te[Xe];je.push({text:ae[Xe],timestamp:[U[He.at(0)][0],U[He.at(-1)][1]]})}return je}combineTokensIntoWords(k,U,J=`"'“¡¿([{-`,ae=`"'.。,，!！?？:：”)]}、`){U=U??"english";let ue,Te,je;return["chinese","japanese","thai","lao","myanmar"].includes(U)?[ue,Te,je]=this.splitTokensOnUnicode(k):[ue,Te,je]=this.splitTokensOnSpaces(k),this.mergePunctuations(ue,Te,je,J,ae)}decode(k,U){let J;return U!=null&&U.decode_with_timestamps?(k instanceof a.Tensor&&(k=y(k)),J=this.decodeWithTimestamps(k,U)):J=super.decode(k,U),J}decodeWithTimestamps(k,U){const J=(U==null?void 0:U.time_precision)??.02,ae=Array.from(this.all_special_ids).at(-1)+1;let ue=[[]];for(let Te of k)if(Te=Number(Te),Te>=ae){const je=((Te-ae)*J).toFixed(2);ue.push(`<|${je}|>`),ue.push([])}else ue[ue.length-1].push(Te);return ue=ue.map(Te=>typeof Te=="string"?Te:super.decode(Te,U)),ue.join("")}splitTokensOnUnicode(k){const U=this.decode(k,{decode_with_timestamps:!0}),J="�",ae=[],ue=[],Te=[];let je=[],Xe=[],He=0;for(let tt=0;tt<k.length;++tt){const wt=k[tt];je.push(wt),Xe.push(tt);const Lt=this.decode(je,{decode_with_timestamps:!0});(!Lt.includes(J)||U[He+Lt.indexOf(J)]===J)&&(ae.push(Lt),ue.push(je),Te.push(Xe),je=[],Xe=[],He+=Lt.length)}return[ae,ue,Te]}splitTokensOnSpaces(k){const[U,J,ae]=this.splitTokensOnUnicode(k),ue=[],Te=[],je=[],Xe=new RegExp(`^[${b}]$`,"gu");for(let He=0;He<U.length;++He){const tt=U[He],wt=J[He],Lt=ae[He],Ft=wt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Zt=tt.startsWith(" "),Gt=tt.trim(),gs=Xe.test(Gt);if(Ft||Zt||gs||ue.length===0)ue.push(tt),Te.push(wt),je.push(Lt);else{const vs=ue.length-1;ue[vs]+=tt,Te[vs].push(...wt),je[vs].push(...Lt)}}return[ue,Te,je]}mergePunctuations(k,U,J,ae,ue){const Te=structuredClone(k),je=structuredClone(U),Xe=structuredClone(J);let He=Te.length-2,tt=Te.length-1;for(;He>=0;)Te[He].startsWith(" ")&&ae.includes(Te[He].trim())?(Te[tt]=Te[He]+Te[tt],je[tt]=(0,o.mergeArrays)(je[He],je[tt]),Xe[tt]=(0,o.mergeArrays)(Xe[He],Xe[tt]),Te[He]="",je[He]=[],Xe[He]=[]):tt=He,--He;for(He=0,tt=1;tt<Te.length;)!Te[He].endsWith(" ")&&ue.includes(Te[tt])?(Te[He]+=Te[tt],je[He]=(0,o.mergeArrays)(je[He],je[tt]),Xe[He]=(0,o.mergeArrays)(Xe[He],Xe[tt]),Te[tt]="",je[tt]=[],Xe[tt]=[]):He=tt,++tt;return[Te.filter(wt=>wt),je.filter(wt=>wt.length>0),Xe.filter(wt=>wt.length>0)]}}class lr extends ve{}class gr extends ve{}class ln extends ve{}class cn extends ve{constructor(k,U){super(k,U),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(J=>this.languageRegex.test(J)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(k){if(k===null)return null;const[U,...J]=k.trim().split(this.languageRegex);if(J.length===0)return super._encode_text(U);if(J.length===2){const[ae,ue]=J;return this.supported_language_codes.includes(ae)||console.warn(`Unsupported language code "${ae}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([ae],super._encode_text(ue))}}}class un extends ve{}class dn extends ve{}class pn extends ve{}class Dr extends ve{}class Wr extends ve{}class hn extends ve{constructor(k,U){super(k,U),this.decoder=new jt({})}}class mn extends ve{}class fn extends ve{}class Lr{static async from_pretrained(k,{progress_callback:U=null,config:J=null,cache_dir:ae=null,local_files_only:ue=!1,revision:Te="main",legacy:je=null}={}){var Lt;const[Xe,He]=await u(k,{progress_callback:U,config:J,cache_dir:ae,local_files_only:ue,revision:Te,legacy:je}),tt=((Lt=He.tokenizer_class)==null?void 0:Lt.replace(/Fast$/,""))??"PreTrainedTokenizer";let wt=this.TOKENIZER_CLASS_MAPPING[tt];return wt||(console.warn(`Unknown tokenizer class "${tt}", attempting to construct from base class.`),wt=ve),new wt(Xe,He)}}ee(Lr,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:kr,DistilBertTokenizer:zs,CamembertTokenizer:rr,DebertaTokenizer:it,DebertaV2Tokenizer:Nt,BertTokenizer:xt,HerbertTokenizer:Qt,ConvBertTokenizer:Ms,RoFormerTokenizer:Yt,XLMTokenizer:mr,ElectraTokenizer:nr,MobileBertTokenizer:mt,SqueezeBertTokenizer:ut,AlbertTokenizer:Dt,GPT2Tokenizer:Vs,BartTokenizer:Ir,MBartTokenizer:Qs,MBart50Tokenizer:fr,RobertaTokenizer:Ar,WhisperTokenizer:_s,CodeGenTokenizer:lr,CLIPTokenizer:gr,SiglipTokenizer:ln,MarianTokenizer:cn,BloomTokenizer:Or,NllbTokenizer:ar,M2M100Tokenizer:hs,LlamaTokenizer:Fr,CodeLlamaTokenizer:Cs,XLMRobertaTokenizer:_r,MPNetTokenizer:js,FalconTokenizer:Oe,GPTNeoXTokenizer:Ze,EsmTokenizer:ct,Wav2Vec2CTCTokenizer:un,BlenderbotTokenizer:dn,BlenderbotSmallTokenizer:pn,SpeechT5Tokenizer:Dr,NougatTokenizer:Wr,VitsTokenizer:hn,Qwen2Tokenizer:Ut,GemmaTokenizer:or,Grok1Tokenizer:ir,CohereTokenizer:mn,MgpstrTokenizer:fn,PreTrainedTokenizer:ve})},"./src/utils/audio.js":(e,s,t)=>{t.r(s),t.d(s,{RawAudio:()=>K,hamming:()=>d,hanning:()=>u,mel_filter_bank:()=>C,read_audio:()=>c,spectrogram:()=>P,window_function:()=>A});var r=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),i=t("./src/env.js"),a=t("?7a2c"),l=t("./src/utils/tensor.js");async function c(B,Y){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const q=await(await(0,r.getFile)(B)).arrayBuffer(),Q=new AudioContext({sampleRate:Y});typeof Y>"u"&&console.warn(`No sampling rate provided, using default of ${Q.sampleRate}Hz.`);const X=await Q.decodeAudioData(q);let se;if(X.numberOfChannels===2){const me=Math.sqrt(2),le=X.getChannelData(0),R=X.getChannelData(1);se=new Float32Array(le.length);for(let O=0;O<X.length;++O)se[O]=me*(le[O]+R[O])/2}else se=X.getChannelData(0);return se}function p(B,Y){if(B<1)return new Float64Array;if(B===1)return new Float64Array([1]);const q=1-Y,Q=2*Math.PI/(B-1),X=new Float64Array(B);for(let se=0;se<B;++se)X[se]=Y-q*Math.cos(se*Q);return X}function u(B){return p(B,.5)}function d(B){return p(B,.54)}const _={htk:B=>2595*Math.log10(1+B/700),kaldi:B=>1127*Math.log(1+B/700),slaney:(B,Y=1e3,q=15,Q=27/Math.log(6.4))=>B>=Y?q+Math.log(B/Y)*Q:3*B/200};function f(B,Y="htk"){const q=_[Y];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof B=="number"?q(B):B.map(Q=>q(Q))}const y={htk:B=>700*(10**(B/2595)-1),kaldi:B=>700*(Math.exp(B/1127)-1),slaney:(B,Y=1e3,q=15,Q=Math.log(6.4)/27)=>B>=q?Y*Math.exp(Q*(B-q)):200*B/3};function $(B,Y="htk"){const q=y[Y];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof B=="number"?q(B):B.map(Q=>q(Q))}function w(B,Y){const q=Float64Array.from({length:Y.length-1},(me,le)=>Y[le+1]-Y[le]),Q=Array.from({length:B.length},()=>new Array(Y.length));for(let me=0;me<B.length;++me){const le=Q[me];for(let R=0;R<Y.length;++R)le[R]=Y[R]-B[me]}const X=Y.length-2,se=Array.from({length:X},()=>new Array(B.length));for(let me=0;me<B.length;++me){const le=Q[me];for(let R=0;R<X;++R){const O=-le[R]/q[R],N=le[R+2]/q[R+1];se[R][me]=Math.max(0,Math.min(O,N))}}return se}function g(B,Y,q){const Q=(Y-B)/(q-1);return Float64Array.from({length:q},(X,se)=>B+Q*se)}function C(B,Y,q,Q,X,se=null,me="htk",le=!1){if(se!==null&&se!=="slaney")throw new Error('norm must be one of null or "slaney"');if(B<2)throw new Error(`Require num_frequency_bins: ${B} >= 2`);if(q>Q)throw new Error(`Require min_frequency: ${q} <= max_frequency: ${Q}`);const R=f(q,me),O=f(Q,me),N=g(R,O,Y+2);let Z=$(N,me),fe;if(le){const Me=X/((B-1)*2);fe=f(Float64Array.from({length:B},(Re,We)=>We*Me),me),Z=N}else fe=g(0,Math.floor(X/2),B);const ie=w(fe,Z);if(se!==null&&se==="slaney")for(let Me=0;Me<Y;++Me){const Re=ie[Me],We=2/(Z[Me+2]-Z[Me]);for(let pe=0;pe<B;++pe)Re[pe]*=We}return ie}function T(B,Y,q){const Q=new B.constructor(B.length+Y+q),X=B.length-1;for(let se=0;se<B.length;++se)Q[Y+se]=B[se];for(let se=1;se<=Y;++se)Q[Y-se]=B[(0,n.calculateReflectOffset)(se,X)];for(let se=1;se<=q;++se)Q[X+Y+se]=B[(0,n.calculateReflectOffset)(X-se,X)];return Q}function v(B,Y,q,Q,X){if(q<=0)throw new Error("reference must be greater than zero");if(Q<=0)throw new Error("min_value must be greater than zero");q=Math.max(Q,q);const se=Math.log10(q);for(let me=0;me<B.length;++me)B[me]=Y*Math.log10(Math.max(Q,B[me])-se);if(X!==null){if(X<=0)throw new Error("db_range must be greater than zero");const me=(0,o.max)(B)[0]-X;for(let le=0;le<B.length;++le)B[le]=Math.max(B[le],me)}return B}function b(B,Y=1,q=1e-5,Q=null){return v(B,20,Y,q,Q)}function x(B,Y=1,q=1e-10,Q=null){return v(B,10,Y,q,Q)}async function P(B,Y,q,Q,{fft_length:X=null,power:se=1,center:me=!0,pad_mode:le="reflect",onesided:R=!0,preemphasis:O=null,mel_filters:N=null,mel_floor:Z=1e-10,log_mel:fe=null,reference:ie=1,min_value:Me=1e-10,db_range:Re=null,remove_dc_offset:We=null,min_num_frames:pe=null,max_num_frames:W=null,do_pad:re=!0,transpose:G=!1}={}){const ye=Y.length;if(X===null&&(X=q),q>X)throw Error(`frame_length (${q}) may not be larger than fft_length (${X})`);if(ye!==q)throw new Error(`Length of the window (${ye}) must equal frame_length (${q})`);if(Q<=0)throw new Error("hop_length must be greater than zero");if(se===null&&N!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(me){if(le!=="reflect")throw new Error(`pad_mode="${le}" not implemented yet.`);const Ye=Math.floor((X-1)/2)+1;B=T(B,Ye,Ye)}let he=Math.floor(1+Math.floor((B.length-q)/Q));pe!==null&&he<pe&&(he=pe);const Ee=R?Math.floor(X/2)+1:X;let xe=he,ke=he;W!==null&&(W>he?re&&(ke=W):ke=xe=W);const Ce=new o.FFT(X),Fe=new Float64Array(X),Ge=new Float64Array(Ce.outputBufferSize),Ue=new Float32Array(Ee*ke);for(let Ye=0;Ye<xe;++Ye){const ot=Ye*Q,Ke=Math.min(B.length-ot,q);Ke!==q&&Fe.fill(0,0,q);for(let Ae=0;Ae<Ke;++Ae)Fe[Ae]=B[ot+Ae];if(We){let Ae=0;for(let _t=0;_t<Ke;++_t)Ae+=Fe[_t];const et=Ae/Ke;for(let _t=0;_t<Ke;++_t)Fe[_t]-=et}if(O!==null){for(let Ae=Ke-1;Ae>=1;--Ae)Fe[Ae]-=O*Fe[Ae-1];Fe[0]*=1-O}for(let Ae=0;Ae<Y.length;++Ae)Fe[Ae]*=Y[Ae];Ce.realTransform(Ge,Fe);for(let Ae=0;Ae<Ee;++Ae){const et=Ae<<1;Ue[Ae*ke+Ye]=Ge[et]**2+Ge[et+1]**2}}if(se!==null&&se!==2){const Ye=2/se;for(let ot=0;ot<Ue.length;++ot)Ue[ot]**=Ye}const Ie=N.length;let De=await(0,l.matmul)(new l.Tensor("float32",N.flat(),[Ie,Ee]),new l.Tensor("float32",Ue,[Ee,ke]));G&&(De=De.transpose(1,0));const qe=De.data;for(let Ye=0;Ye<qe.length;++Ye)qe[Ye]=Math.max(Z,qe[Ye]);if(se!==null&&fe!==null){const Ye=Math.min(qe.length,xe*Ie);switch(fe){case"log":for(let ot=0;ot<Ye;++ot)qe[ot]=Math.log(qe[ot]);break;case"log10":for(let ot=0;ot<Ye;++ot)qe[ot]=Math.log10(qe[ot]);break;case"dB":if(se===1)b(qe,ie,Me,Re);else if(se===2)x(qe,ie,Me,Re);else throw new Error(`Cannot use log_mel option '${fe}' with power ${se}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${fe}'`)}}return De}function A(B,Y,{periodic:q=!0,frame_length:Q=null,center:X=!0}={}){const se=q?B+1:B;let me;switch(Y){case"boxcar":me=new Float64Array(se).fill(1);break;case"hann":case"hann_window":me=u(se);break;case"hamming":me=d(se);break;case"povey":me=u(se).map(le=>Math.pow(le,.85));break;default:throw new Error(`Unknown window type ${Y}.`)}if(q&&(me=me.subarray(0,B)),Q===null)return me;if(B>Q)throw new Error(`Length of the window (${B}) may not be larger than frame_length (${Q})`);return me}function D(B,Y){let q=44;const Q=new ArrayBuffer(q+B.length*4),X=new DataView(Q);H(X,0,"RIFF"),X.setUint32(4,36+B.length*4,!0),H(X,8,"WAVE"),H(X,12,"fmt "),X.setUint32(16,16,!0),X.setUint16(20,3,!0),X.setUint16(22,1,!0),X.setUint32(24,Y,!0),X.setUint32(28,Y*4,!0),X.setUint16(32,4,!0),X.setUint16(34,32,!0),H(X,36,"data"),X.setUint32(40,B.length*4,!0);for(let se=0;se<B.length;++se,q+=4)X.setFloat32(q,B[se],!0);return Q}function H(B,Y,q){for(let Q=0;Q<q.length;++Q)B.setUint8(Y+Q,q.charCodeAt(Q))}class K{constructor(Y,q){this.audio=Y,this.sampling_rate=q}toWav(){return D(this.audio,this.sampling_rate)}toBlob(){const Y=this.toWav();return new Blob([Y],{type:"audio/wav"})}async save(Y){let q;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");q=n.saveBlob}else if(i.apis.IS_FS_AVAILABLE)q=async(Q,X)=>{let se=await X.arrayBuffer();a.writeFileSync(Q,Buffer.from(se))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await q(Y,this.toBlob())}}},"./src/utils/constants.js":(e,s,t)=>{t.r(s),t.d(s,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>o,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const r="https://github.com/huggingface/transformers.js/issues/new/choose",o="config.json",n="preprocessor_config.json",i=n,a="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,s,t)=>{t.r(s),t.d(s,{calculateDimensions:()=>c,calculateReflectOffset:()=>_,count:()=>w,dispatchCallback:()=>r,escapeRegExp:()=>n,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>$,mergeArrays:()=>u,pick:()=>y,pop:()=>p,product:()=>d,reverseDictionary:()=>o,saveBlob:()=>f});function r(g,C){g&&g(C)}function o(g){return Object.fromEntries(Object.entries(g).map(([C,T])=>[T,C]))}function n(g){return g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(g){var C,T,v;return((v=(T=(C=g==null?void 0:g.prototype)==null?void 0:C.__proto__)==null?void 0:T.constructor)==null?void 0:v.name)==="TypedArray"}function a(g){return Number.isInteger(g)||typeof g=="bigint"}function l(g){return g==null||g===-1}function c(g){const C=[];let T=g;for(;Array.isArray(T);)C.push(T.length),T=T[0];return C}function p(g,C,T=void 0){const v=g[C];if(v!==void 0)return delete g[C],v;if(T===void 0)throw Error(`Key ${C} does not exist in object.`);return T}function u(...g){return Array.prototype.concat.apply([],g)}function d(...g){return g.reduce((C,T)=>C.flatMap(v=>T.map(b=>[v,b])))}function _(g,C){return Math.abs((g+C)%(2*C)-C)}function f(g,C){const T=URL.createObjectURL(C),v=document.createElement("a");v.href=T,v.download=g,v.click(),v.remove(),URL.revokeObjectURL(T)}function y(g,C){return Object.assign({},...C.map(T=>{if(g[T]!==void 0)return{[T]:g[T]}}))}function $(g){let C=0;for(const T of g)++C;return C}function w(g,C){let T=0;for(const v of g)v===C&&++T;return T}},"./src/utils/data-structures.js":(e,s,t)=>{t.r(s),t.d(s,{CharTrie:()=>o,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>r,TokenLattice:()=>i});class r{constructor(u=(_,f)=>_>f,d=1/0){this._heap=[],this._comparator=u,this._maxSize=d}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...u){return this.extend(u)}extend(u){for(const d of u)if(this.size<this._maxSize)this._heap.push(d),this._siftUp();else{const _=this._smallest();this._comparator(d,this._heap[_])&&(this._heap[_]=d,this._siftUpFrom(_))}return this.size}pop(){const u=this.peek(),d=this.size-1;return d>0&&this._swap(0,d),this._heap.pop(),this._siftDown(),u}replace(u){const d=this.peek();return this._heap[0]=u,this._siftDown(),d}_parent(u){return(u+1>>>1)-1}_left(u){return(u<<1)+1}_right(u){return u+1<<1}_greater(u,d){return this._comparator(this._heap[u],this._heap[d])}_swap(u,d){const _=this._heap[u];this._heap[u]=this._heap[d],this._heap[d]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(u){for(;u>0&&this._greater(u,this._parent(u));)this._swap(u,this._parent(u)),u=this._parent(u)}_siftDown(){let u=0;for(;this._left(u)<this.size&&this._greater(this._left(u),u)||this._right(u)<this.size&&this._greater(this._right(u),u);){const d=this._right(u)<this.size&&this._greater(this._right(u),this._left(u))?this._right(u):this._left(u);this._swap(u,d),u=d}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=n.default()}extend(u){for(const d of u)this.push(d)}push(u){let d=this.root;for(const _ of u){let f=d.children.get(_);f===void 0&&(f=n.default(),d.children.set(_,f)),d=f}d.isLeaf=!0}*commonPrefixSearch(u){let d=this.root;if(d===void 0)return;let _="";for(const f of u){if(_+=f,d=d.children.get(f),d===void 0)return;d.isLeaf&&(yield _)}}}class n{constructor(u,d){this.isLeaf=u,this.children=d}static default(){return new n(!1,new Map)}}class i{constructor(u,d,_){this.chars=Array.from(u),this.len=this.chars.length,this.bosTokenId=d,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),y=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(y.clone()),this.beginNodes[this.len].push(y),this.endNodes[0].push(f)}insert(u,d,_,f){const y=this.nodes.length,$=new a(f,y,u,d,_);this.beginNodes[u].push($),this.endNodes[u+d].push($),this.nodes.push($)}viterbi(){const u=this.len;let d=0;for(;d<=u;){if(this.beginNodes[d].length==0)return[];for(let w of this.beginNodes[d]){w.prev=null;let g=0,C=null;for(let T of this.endNodes[d]){const v=T.backtraceScore+w.score;(C===null||v>g)&&(C=T.clone(),g=v)}if(C!==null)w.prev=C,w.backtraceScore=g;else return[]}++d}const _=[],y=this.beginNodes[u][0].prev;if(y===null)return[];let $=y.clone();for(;$.prev!==null;)_.push($.clone()),$=$.clone().prev.clone();return _.reverse(),_}piece(u){return this.chars.slice(u.pos,u.pos+u.length).join("")}tokens(){return this.viterbi().map(d=>this.piece(d))}tokenIds(){return this.viterbi().map(d=>d.tokenId)}}class a{constructor(u,d,_,f,y){this.tokenId=u,this.nodeId=d,this.pos=_,this.length=f,this.score=y,this.prev=null,this.backtraceScore=0}clone(){const u=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return u.prev=this.prev,u.backtraceScore=this.backtraceScore,u}}class l{constructor(u){this.trie=this._buildTrie(u)}_buildTrie(u){var _;const d=Object.create(null);for(const f of u){let y=d;for(let $=0;$<f.length;++$)y=y[_=f[$]]??(y[_]=Object.create(null));y.end=f}return d}split(u){const d=[],_=u.length;let f=0,y=0;for(;y<_;){let $=this.trie,w=null,g=y;for(;g<_&&($=$[u[g]]);)$.end&&(w=$.end),++g;w?(y>f&&d.push(u.slice(f,y)),d.push(w),y+=w.length,f=y):++y}return f<_&&d.push(u.slice(f)),d}}class c{constructor(u){this.capacity=u,this.cache=new Map}get(u){if(!this.cache.has(u))return;const d=this.cache.get(u);return this.cache.delete(u),this.cache.set(u,d),d}put(u,d){this.cache.has(u)&&this.cache.delete(u),this.cache.set(u,d),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,s,t)=>{t.r(s),t.d(s,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,s,t)=>{t.r(s),t.d(s,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var r=t("./src/env.js"),o=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!r.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[o.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,s,t)=>{t.r(s),t.d(s,{Callable:()=>r});const r=class{constructor(){let o=function(...n){return o._call(...n)};return Object.setPrototypeOf(o,new.target.prototype)}_call(...o){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,s,t)=>{t.r(s),t.d(s,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>_,getModelFile:()=>g,getModelJSON:()=>C});var r=t("?7a2c"),o=t("?a42a"),n=t("./src/env.js"),i=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(x){if(this.filePath=x,this.headers=new Headers,this.exists=r.existsSync(x),this.exists){this.status=200,this.statusText="OK";let P=r.statSync(x);this.headers.set("content-length",P.size.toString()),this.updateContentType();const A=r.createReadStream(x);this.body=new ReadableStream({start(D){A.on("data",H=>D.enqueue(H)),A.on("end",()=>D.close()),A.on("error",H=>D.error(H))},cancel(){A.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const x=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[x]??"application/octet-stream")}clone(){let x=new c(this.filePath);return x.exists=this.exists,x.status=this.status,x.statusText=this.statusText,x.headers=new Headers(this.headers),x}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const x=await r.promises.readFile(this.filePath);return new Blob([x],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(b,x=null,P=null){let A;try{A=new URL(b)}catch{return!1}return!(x&&!x.includes(A.protocol)||P&&!P.includes(A.hostname))}const u=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function d(b){return!(!u.test(b)||b.includes("..")||b.includes("--")||b.endsWith(".git")||b.endsWith(".ipynb"))}async function _(b){var x;if(n.env.useFS&&!p(b,["http:","https:","blob:"]))return new c(b instanceof URL?b.protocol==="file:"?b.pathname:b.toString():b);if(typeof process<"u"&&((x=process==null?void 0:process.release)==null?void 0:x.name)==="node"){const P=!!(Nr!=null&&Nr.TESTING_REMOTELY),A=n.env.version,D=new Headers;if(D.set("User-Agent",`transformers.js/${A}; is_ci/${P};`),p(b,["http:","https:"],["huggingface.co","hf.co"])){const K=(Nr==null?void 0:Nr.HF_TOKEN)??(Nr==null?void 0:Nr.HF_ACCESS_TOKEN);K&&D.set("Authorization",`Bearer ${K}`)}return fetch(b,{headers:D})}else return fetch(b)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function y(b,x,P){if(!P)return null;const A=f[b]??`Error (${b}) occurred while trying to load file`;throw Error(`${A}: "${x}".`)}class ${constructor(x){this.path=x}async match(x){let P=o.join(this.path,x),A=new c(P);if(A.exists)return A}async put(x,P,A=void 0){let D=o.join(this.path,x);try{const H=P.headers.get("Content-Length"),K=parseInt(H??"0");let B=0;await r.promises.mkdir(o.dirname(D),{recursive:!0});const Y=r.createWriteStream(D),q=P.body.getReader();for(;;){const{done:Q,value:X}=await q.read();if(Q)break;await new Promise((me,le)=>{Y.write(X,R=>{if(R){le(R);return}me()})}),B+=X.length;const se=K?B/K*100:0;A==null||A({progress:se,loaded:B,total:K})}Y.close()}catch(H){try{await r.promises.unlink(D)}catch{}throw H}}}async function w(b,...x){for(let P of x)try{let A=await b.match(P);if(A)return A}catch{continue}}async function g(b,x,P=!0,A={},D=!1){if(!n.env.allowLocalModels){if(A.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(A.progress_callback,{status:"initiate",name:b,file:x});let H;if(!H&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");H=n.env.customCache}if(!H&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{H=await caches.open("transformers-cache")}catch(Z){console.warn("An error occurred while opening the browser cache:",Z)}}if(!H&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");H=new $(A.cache_dir??n.env.cacheDir)}const K=A.revision??"main",B=v(b,x),Y=d(b),q=Y?v(n.env.localModelPath,B):B,Q=v(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",b).replaceAll("{revision}",encodeURIComponent(K)),x);let X;const se=H instanceof $?K==="main"?B:v(b,K,x):Q;let me=!1,le;H&&(le=await w(H,q,se));const R=le!==void 0;if(le===void 0){if(n.env.allowLocalModels)if(p(B,["http:","https:"])){if(A.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${B}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${B}.`)}else try{le=await _(q),X=q}catch(fe){console.warn(`Unable to load from local path "${q}": "${fe}"`)}if(le===void 0||le.status===404){if(A.local_files_only||!n.env.allowRemoteModels){if(P)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${q}".`);return null}if(!Y)throw Error(`Local file missing at "${q}" and download aborted due to invalid model ID "${b}".`);if(le=await _(Q),le.status!==200)return y(le.status,Q,P);X=se}me=H&&typeof Response<"u"&&le instanceof Response&&le.status===200}(0,i.dispatchCallback)(A.progress_callback,{status:"download",name:b,file:x});let O;if(!(n.apis.IS_NODE_ENV&&D)){let Z;A.progress_callback?R&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Z=new Uint8Array(await le.arrayBuffer()),(0,i.dispatchCallback)(A.progress_callback,{status:"progress",name:b,file:x,progress:100,loaded:Z.length,total:Z.length})):Z=await T(le,fe=>{(0,i.dispatchCallback)(A.progress_callback,{status:"progress",name:b,file:x,...fe})}):Z=new Uint8Array(await le.arrayBuffer()),O=Z}if(me&&X&&await H.match(X)===void 0&&(O?await H.put(X,new Response(O,{headers:le.headers})).catch(Z=>{console.warn(`Unable to add response to browser cache: ${Z}.`)}):await H.put(X,le,A.progress_callback)),(0,i.dispatchCallback)(A.progress_callback,{status:"done",name:b,file:x}),O){if(!n.apis.IS_NODE_ENV&&D)throw new Error("Cannot return path in a browser environment.");return O}if(le instanceof c)return le.filePath;const N=await(H==null?void 0:H.match(X));if(N instanceof c)return N.filePath;if(N instanceof Response)return new Uint8Array(await N.arrayBuffer());if(typeof N=="string")return N;throw new Error("Unable to get model file path or buffer.")}async function C(b,x,P=!0,A={}){const D=await g(b,x,P,A,!1);if(D===null)return{};const K=new TextDecoder("utf-8").decode(D);return JSON.parse(K)}async function T(b,x){const P=b.headers.get("Content-Length");P===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let A=parseInt(P??"0"),D=new Uint8Array(A),H=0;const K=b.body.getReader();async function B(){const{done:Y,value:q}=await K.read();if(Y)return;const Q=H+q.length;if(Q>A){A=Q;const se=new Uint8Array(A);se.set(D),D=se}D.set(q,H),H=Q;const X=H/A*100;return x({progress:X,loaded:H,total:A}),B()}return await B(),D}function v(...b){return b=b.map((x,P)=>(P&&(x=x.replace(new RegExp("^/"),"")),P!==b.length-1&&(x=x.replace(new RegExp("/$"),"")),x)),b.join("/")}},"./src/utils/image.js":(e,s,t)=>{t.r(s),t.d(s,{RawImage:()=>f,load_image:()=>y});var r=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),n=t("./src/env.js"),i=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const u=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(u)l=($,w)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas($,w)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async $=>{const g=(await $.metadata()).channels,{data:C,info:T}=await $.rotate().raw().toBuffer({resolveWithObject:!0}),v=new f(new Uint8ClampedArray(C),T.width,T.height,T.channels);return g!==void 0&&g!==T.channels&&v.convert(g),v};else throw new Error("Unable to load image processing library.");const d={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(w,g,C,T){this.data=w,this.width=g,this.height=C,this.channels=T}get size(){return[this.width,this.height]}static async read(w){if(w instanceof f)return w;if(typeof w=="string"||w instanceof URL)return await this.fromURL(w);if(w instanceof Blob)return await this.fromBlob(w);if(typeof HTMLCanvasElement<"u"&&w instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&w instanceof OffscreenCanvas)return this.fromCanvas(w);throw new Error(`Unsupported input type: ${typeof w}`)}static fromCanvas(w){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const C=w.getContext("2d").getImageData(0,0,w.width,w.height).data;return new f(C,w.width,w.height,4)}static async fromURL(w){const g=await(0,o.getFile)(w);if(g.status!==200)throw new Error(`Unable to read image from "${w}" (${g.status} ${g.statusText})`);const C=await g.blob();return this.fromBlob(C)}static async fromBlob(w){if(u){const g=await p(w),C=l(g.width,g.height).getContext("2d");return C.drawImage(g,0,0),new this(C.getImageData(0,0,g.width,g.height).data,g.width,g.height,4)}else{const g=a(await w.arrayBuffer());return await p(g)}}static fromTensor(w,g="CHW"){if(w.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${w.dims.length} dimensions.`);if(g==="CHW")w=w.transpose(1,2,0);else if(g!=="HWC")throw new Error(`Unsupported channel format: ${g}`);if(!(w.data instanceof Uint8ClampedArray||w.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${w.type}`);switch(w.dims[2]){case 1:case 2:case 3:case 4:return new f(w.data,w.dims[1],w.dims[0],w.dims[2]);default:throw new Error(`Unsupported number of channels: ${w.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const w=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let g=0,C=0;g<this.data.length;g+=this.channels){const T=this.data[g],v=this.data[g+1],b=this.data[g+2];w[C++]=Math.round(.2989*T+.587*v+.114*b)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const w=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=this.data[g];break;case 4:for(let g=0,C=0;g<this.data.length;g+=4)w[C++]=this.data[g],w[C++]=this.data[g+1],w[C++]=this.data[g+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const w=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=255;break;case 3:for(let g=0,C=0;g<this.data.length;g+=3)w[C++]=this.data[g],w[C++]=this.data[g+1],w[C++]=this.data[g+2],w[C++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,4)}putAlpha(w){if(w.width!==this.width||w.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${w.width}x${w.height}`);if(w.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${w.channels}`);const g=this.data,C=w.data,T=this.width*this.height;if(this.channels===3){const v=new Uint8ClampedArray(T*4);for(let b=0,x=0,P=0;b<T;++b)v[P++]=g[x++],v[P++]=g[x++],v[P++]=g[x++],v[P++]=C[b];return this._update(v,this.width,this.height,4)}else if(this.channels===4){for(let v=0;v<T;++v)g[4*v+3]=C[v];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(w,g,{resample:C=2}={}){if(this.width===w&&this.height===g)return this;let T=d[C]??C;const v=(0,r.isNullishDimension)(w),b=(0,r.isNullishDimension)(g);if(v&&b)return this;if(v?w=g/this.height*this.width:b&&(g=w/this.width*this.height),u){const x=this.channels,P=this.toCanvas(),A=l(w,g).getContext("2d");return A.drawImage(P,0,0,w,g),new f(A.getImageData(0,0,w,g).data,w,g,4).convert(x)}else{let x=this.toSharp();switch(T){case"box":case"hamming":(T==="box"||T==="hamming")&&(console.warn(`Resampling method ${T} is not yet supported. Using bilinear instead.`),T="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([w/this.width,0,0,g/this.height],{interpolator:T});break;case"lanczos":x=x.resize({width:w,height:g,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${T} is not supported.`)}return await p(x)}}async pad([w,g,C,T]){if(w=Math.max(w,0),g=Math.max(g,0),C=Math.max(C,0),T=Math.max(T,0),w===0&&g===0&&C===0&&T===0)return this;if(u){const v=this.channels,b=this.toCanvas(),x=this.width+w+g,P=this.height+C+T,A=l(x,P).getContext("2d");return A.drawImage(b,0,0,this.width,this.height,w,C,this.width,this.height),new f(A.getImageData(0,0,x,P).data,x,P,4).convert(v)}else{const v=this.toSharp().extend({left:w,right:g,top:C,bottom:T});return await p(v)}}async crop([w,g,C,T]){if(w=Math.max(w,0),g=Math.max(g,0),C=Math.min(C,this.width-1),T=Math.min(T,this.height-1),w===0&&g===0&&C===this.width-1&&T===this.height-1)return this;const v=C-w+1,b=T-g+1;if(u){const x=this.channels,P=this.toCanvas(),A=l(v,b).getContext("2d");return A.drawImage(P,w,g,v,b,0,0,v,b),new f(A.getImageData(0,0,v,b).data,v,b,4).convert(x)}else{const x=this.toSharp().extract({left:w,top:g,width:v,height:b});return await p(x)}}async center_crop(w,g){if(this.width===w&&this.height===g)return this;const C=(this.width-w)/2,T=(this.height-g)/2;if(u){const v=this.channels,b=this.toCanvas(),x=l(w,g).getContext("2d");let P=0,A=0,D=0,H=0;return C>=0?P=C:D=-C,T>=0?A=T:H=-T,x.drawImage(b,P,A,w,g,D,H,w,g),new f(x.getImageData(0,0,w,g).data,w,g,4).convert(v)}else{let v=this.toSharp();if(C>=0&&T>=0)v=v.extract({left:Math.floor(C),top:Math.floor(T),width:w,height:g});else if(C<=0&&T<=0){const b=Math.floor(-T),x=Math.floor(-C);v=v.extend({top:b,left:x,right:w-this.width-x,bottom:g-this.height-b})}else{let b=[0,0],x=0;T<0?(b[0]=Math.floor(-T),b[1]=g-this.height-b[0]):x=Math.floor(T);let P=[0,0],A=0;C<0?(P[0]=Math.floor(-C),P[1]=w-this.width-P[0]):A=Math.floor(C),v=v.extend({top:b[0],bottom:b[1],left:P[0],right:P[1]}).extract({left:A,top:x,width:w,height:g})}return await p(v)}}async toBlob(w="image/png",g=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:w,quality:g})}toTensor(w="CHW"){let g=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(w!=="HWC")if(w==="CHW")g=g.permute(2,0,1);else throw new Error(`Unsupported channel format: ${w}`);return g}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const w=this.clone().rgba(),g=l(w.width,w.height),C=new c(w.data,w.width,w.height);return g.getContext("2d").putImageData(C,0,0),g}split(){const{data:w,width:g,height:C,channels:T}=this,v=w.constructor,b=w.length/T,x=Array.from({length:T},()=>new v(b));for(let P=0;P<b;++P){const A=T*P;for(let D=0;D<T;++D)x[D][P]=w[A+D]}return x.map(P=>new f(P,g,C,1))}_update(w,g,C,T=null){return this.data=w,this.width=g,this.height=C,T!==null&&(this.channels=T),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(w){if(this.channels===w)return this;switch(w){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(w){if(u){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const g=w.split(".").pop().toLowerCase(),C=_.get(g)??"image/png",T=await this.toBlob(C);(0,r.saveBlob)(w,T)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(w);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const y=f.read.bind(f)},"./src/utils/maths.js":(e,s,t)=>{t.r(s),t.d(s,{FFT:()=>y,bankers_round:()=>g,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>C,interpolate_data:()=>r,log_softmax:()=>i,magnitude:()=>c,max:()=>u,medianFilter:()=>$,min:()=>p,permute_data:()=>o,round:()=>w,softmax:()=>n});function r(T,[v,b,x],[P,A],D="bilinear",H=!1){const K=A/x,B=P/b,Y=new T.constructor(P*A*v),q=b*x,Q=P*A;for(let X=0;X<P;++X)for(let se=0;se<A;++se){const me=X*A+se,le=(se+.5)/K-.5,R=(X+.5)/B-.5;let O=Math.floor(le),N=Math.floor(R);const Z=Math.min(O+1,x-1),fe=Math.min(N+1,b-1);O=Math.max(O,0),N=Math.max(N,0);const ie=le-O,Me=R-N,Re=(1-ie)*(1-Me),We=ie*(1-Me),pe=(1-ie)*Me,W=ie*Me,re=N*x,G=fe*x,ye=re+O,he=re+Z,Ee=G+O,xe=G+Z;for(let ke=0;ke<v;++ke){const Ce=ke*q;Y[ke*Q+me]=Re*T[Ce+ye]+We*T[Ce+he]+pe*T[Ce+Ee]+W*T[Ce+xe]}}return Y}function o(T,v,b){const x=new Array(b.length),P=new Array(b.length);for(let H=b.length-1,K=1;H>=0;--H)P[H]=K,x[H]=v[b[H]],K*=x[H];const A=b.map((H,K)=>P[b.indexOf(K)]),D=new T.constructor(T.length);for(let H=0;H<T.length;++H){let K=0;for(let B=v.length-1,Y=H;B>=0;--B)K+=Y%v[B]*A[B],Y=Math.floor(Y/v[B]);D[K]=T[H]}return[D,x]}function n(T){const v=u(T)[0],b=T.map(A=>Math.exp(A-v)),x=b.reduce((A,D)=>A+D,0);return b.map(A=>A/x)}function i(T){const v=u(T)[0];let b=0;for(let A=0;A<T.length;++A)b+=Math.exp(T[A]-v);const x=Math.log(b);return T.map(A=>A-v-x)}function a(T,v){let b=0;for(let x=0;x<T.length;++x)b+=T[x]*v[x];return b}function l(T,v){const b=a(T,v),x=c(T),P=c(v);return b/(x*P)}function c(T){return Math.sqrt(T.reduce((v,b)=>v+b*b,0))}function p(T){if(T.length===0)throw Error("Array must not be empty");let v=T[0],b=0;for(let x=1;x<T.length;++x)T[x]<v&&(v=T[x],b=x);return[v,b]}function u(T){if(T.length===0)throw Error("Array must not be empty");let v=T[0],b=0;for(let x=1;x<T.length;++x)T[x]>v&&(v=T[x],b=x);return[v,b]}function d(T){return T>0&&(T&T-1)===0}class _{constructor(v){if(this.size=v|0,this.size<=1||!d(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=v<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const P=Math.PI*x/this.size;this.table[x]=Math.cos(P),this.table[x+1]=-Math.sin(P)}let b=0;for(let x=1;this.size>x;x<<=1)++b;this._width=b%2===0?b-1:b,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let P=0;P<this._width;P+=2){const A=this._width-P-2;this._bitrev[x]|=(x>>>P&3)<<A}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(v,b){const x=b||new Array(v.length>>>1);for(let P=0;P<v.length;P+=2)x[P>>>1]=v[P];return x}toComplexArray(v,b){const x=b||this.createComplexArray();for(let P=0;P<x.length;P+=2)x[P]=v[P>>>1],x[P+1]=0;return x}transform(v,b){if(v===b)throw new Error("Input and output buffers must be different");this._transform4(v,b,1)}realTransform(v,b){if(v===b)throw new Error("Input and output buffers must be different");this._realTransform4(v,b,1)}inverseTransform(v,b){if(v===b)throw new Error("Input and output buffers must be different");this._transform4(v,b,-1);for(let x=0;x<v.length;++x)v[x]/=this.size}_transform4(v,b,x){const P=this._csize;let D=1<<this._width,H=P/D<<1,K,B;const Y=this._bitrev;if(H===4)for(K=0,B=0;K<P;K+=H,++B){const Q=Y[B];this._singleTransform2(b,v,K,Q,D)}else for(K=0,B=0;K<P;K+=H,++B){const Q=Y[B];this._singleTransform4(b,v,K,Q,D,x)}const q=this.table;for(D>>=2;D>=2;D>>=2){H=P/D<<1;const Q=H>>>2;for(K=0;K<P;K+=H){const X=K+Q-1;for(let se=K,me=0;se<X;se+=2,me+=D){const le=se,R=le+Q,O=R+Q,N=O+Q,Z=v[le],fe=v[le+1],ie=v[R],Me=v[R+1],Re=v[O],We=v[O+1],pe=v[N],W=v[N+1],re=q[me],G=x*q[me+1],ye=ie*re-Me*G,he=ie*G+Me*re,Ee=q[2*me],xe=x*q[2*me+1],ke=Re*Ee-We*xe,Ce=Re*xe+We*Ee,Fe=q[3*me],Ge=x*q[3*me+1],Ue=pe*Fe-W*Ge,Ie=pe*Ge+W*Fe,De=Z+ke,qe=fe+Ce,Ye=Z-ke,ot=fe-Ce,Ke=ye+Ue,Ae=he+Ie,et=x*(ye-Ue),_t=x*(he-Ie);v[le]=De+Ke,v[le+1]=qe+Ae,v[R]=Ye+_t,v[R+1]=ot-et,v[O]=De-Ke,v[O+1]=qe-Ae,v[N]=Ye-_t,v[N+1]=ot+et}}}}_singleTransform2(v,b,x,P,A){const D=v[P],H=v[P+1],K=v[P+A],B=v[P+A+1];b[x]=D+K,b[x+1]=H+B,b[x+2]=D-K,b[x+3]=H-B}_singleTransform4(v,b,x,P,A,D){const H=A*2,K=A*3,B=v[P],Y=v[P+1],q=v[P+A],Q=v[P+A+1],X=v[P+H],se=v[P+H+1],me=v[P+K],le=v[P+K+1],R=B+X,O=Y+se,N=B-X,Z=Y-se,fe=q+me,ie=Q+le,Me=D*(q-me),Re=D*(Q-le);b[x]=R+fe,b[x+1]=O+ie,b[x+2]=N+Re,b[x+3]=Z-Me,b[x+4]=R-fe,b[x+5]=O-ie,b[x+6]=N-Re,b[x+7]=Z+Me}_realTransform4(v,b,x){const P=this._csize;let D=1<<this._width,H=P/D<<1,K,B;const Y=this._bitrev;if(H===4)for(K=0,B=0;K<P;K+=H,++B){const X=Y[B];this._singleRealTransform2(b,v,K,X>>>1,D>>>1)}else for(K=0,B=0;K<P;K+=H,++B){const X=Y[B];this._singleRealTransform4(b,v,K,X>>>1,D>>>1,x)}const q=this.table;for(D>>=2;D>=2;D>>=2){H=P/D<<1;const X=H>>>1,se=X>>>1,me=se>>>1;for(K=0;K<P;K+=H)for(let le=0,R=0;le<=me;le+=2,R+=D){const O=K+le,N=O+se,Z=N+se,fe=Z+se,ie=v[O],Me=v[O+1],Re=v[N],We=v[N+1],pe=v[Z],W=v[Z+1],re=v[fe],G=v[fe+1],ye=ie,he=Me,Ee=q[R],xe=x*q[R+1],ke=Re*Ee-We*xe,Ce=Re*xe+We*Ee,Fe=q[2*R],Ge=x*q[2*R+1],Ue=pe*Fe-W*Ge,Ie=pe*Ge+W*Fe,De=q[3*R],qe=x*q[3*R+1],Ye=re*De-G*qe,ot=re*qe+G*De,Ke=ye+Ue,Ae=he+Ie,et=ye-Ue,_t=he-Ie,zt=ke+Ye,jt=Ce+ot,bs=x*(ke-Ye),ls=x*(Ce-ot);if(v[O]=Ke+zt,v[O+1]=Ae+jt,v[N]=et+ls,v[N+1]=_t-bs,le===0){v[Z]=Ke-zt,v[Z+1]=Ae-jt;continue}if(le===me)continue;const Mt=K+se-le,sr=K+X-le;v[Mt]=et-x*ls,v[Mt+1]=-_t-x*bs,v[sr]=Ke-x*zt,v[sr+1]=-Ae+x*jt}}const Q=P>>>1;for(let X=2;X<Q;X+=2)v[P-X]=v[X],v[P-X+1]=-v[X+1]}_singleRealTransform2(v,b,x,P,A){const D=v[P],H=v[P+A];b[x]=D+H,b[x+1]=0,b[x+2]=D-H,b[x+3]=0}_singleRealTransform4(v,b,x,P,A,D){const H=A*2,K=A*3,B=v[P],Y=v[P+A],q=v[P+H],Q=v[P+K],X=B+q,se=B-q,me=Y+Q,le=D*(Y-Q);b[x]=X+me,b[x+1]=0,b[x+2]=se,b[x+3]=-le,b[x+4]=X-me,b[x+5]=0,b[x+6]=se,b[x+7]=le}}class f{constructor(v){const b=2*(v-1),x=2*(2*v-1),P=2**Math.ceil(Math.log2(x));this.bufferSize=P,this._a=b;const A=new Float64Array(x),D=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const H=-2*Math.PI/v,K=Math.cos(H),B=Math.sin(H);for(let Y=0;Y<x>>1;++Y){const q=(Y+1-v)**2/2,Q=Math.sqrt(K**2+B**2)**q,X=q*Math.atan2(B,K),se=2*Y;A[se]=Q*Math.cos(X),A[se+1]=Q*Math.sin(X),D[se]=A[se],D[se+1]=-A[se+1]}this._slicedChirpBuffer=A.subarray(b,x),this._f=new _(P>>1),this._f.transform(this._chirpBuffer,D)}_transform(v,b,x){const P=this._buffer1,A=this._buffer2,D=this._outBuffer1,H=this._outBuffer2,K=this._chirpBuffer,B=this._slicedChirpBuffer,Y=this._a;if(x)for(let q=0;q<B.length;q+=2){const Q=q+1,X=q>>1,se=b[X];P[q]=se*B[q],P[Q]=se*B[Q]}else for(let q=0;q<B.length;q+=2){const Q=q+1;P[q]=b[q]*B[q]-b[Q]*B[Q],P[Q]=b[q]*B[Q]+b[Q]*B[q]}this._f.transform(D,P);for(let q=0;q<K.length;q+=2){const Q=q+1;A[q]=D[q]*K[q]-D[Q]*K[Q],A[Q]=D[q]*K[Q]+D[Q]*K[q]}this._f.inverseTransform(H,A);for(let q=0;q<H.length;q+=2){const Q=H[q+Y],X=H[q+Y+1],se=B[q],me=B[q+1];v[q]=Q*se-X*me,v[q+1]=Q*me+X*se}}transform(v,b){this._transform(v,b,!1)}realTransform(v,b){this._transform(v,b,!0)}}class y{constructor(v){this.fft_length=v,this.isPowerOfTwo=d(v),this.isPowerOfTwo?(this.fft=new _(v),this.outputBufferSize=2*v):(this.fft=new f(v),this.outputBufferSize=this.fft.bufferSize)}realTransform(v,b){this.fft.realTransform(v,b)}transform(v,b){this.fft.transform(v,b)}}function $(T,v){if(v%2===0||v<=0)throw new Error("Window size must be a positive odd number");const b=new T.constructor(T.length),x=new T.constructor(v),P=Math.floor(v/2);for(let A=0;A<T.length;++A){let D=0;for(let H=-P;H<=P;++H){let K=A+H;K<0?K=Math.abs(K):K>=T.length&&(K=2*(T.length-1)-K),x[D++]=T[K]}x.sort(),b[A]=x[P]}return b}function w(T,v){const b=Math.pow(10,v);return Math.round(T*b)/b}function g(T){const v=Math.round(T);return Math.abs(T)%1===.5?v%2===0?v:v-1:v}function C(T){const v=T.length,b=T[0].length,x=[v+1,b+1],P=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));P[0][0]=0;const A=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let Y=1;Y<x[1];++Y)for(let q=1;q<x[0];++q){const Q=P[q-1][Y-1],X=P[q-1][Y],se=P[q][Y-1];let me,le;Q<X&&Q<se?(me=Q,le=0):X<Q&&X<se?(me=X,le=1):(me=se,le=2),P[q][Y]=T[q-1][Y-1]+me,A[q][Y]=le}for(let Y=0;Y<x[1];++Y)A[0][Y]=2;for(let Y=0;Y<x[0];++Y)A[Y][0]=1;let D=v,H=b,K=[],B=[];for(;D>0||H>0;)switch(K.push(D-1),B.push(H-1),A[D][H]){case 0:--D,--H;break;case 1:--D;break;case 2:--H;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${D}, ${H}]. Please file a bug report.`)}return K.reverse(),B.reverse(),[K,B]}},"./src/utils/tensor.js":(e,s,t)=>{t.r(s),t.d(s,{DataTypeMap:()=>i,Tensor:()=>a,cat:()=>b,full:()=>B,full_like:()=>Y,interpolate:()=>p,interpolate_4d:()=>u,layer_norm:()=>g,matmul:()=>d,mean:()=>D,mean_pooling:()=>w,ones:()=>q,ones_like:()=>Q,permute:()=>c,quantize_embeddings:()=>le,rand:()=>me,rfft:()=>_,slice:()=>$,stack:()=>x,std_mean:()=>A,topk:()=>f,zeros:()=>X,zeros_like:()=>se});var r=t("./src/utils/maths.js"),o=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...O){ee(this,"ort_tensor");return(0,o.isONNXTensor)(O[0])?this.ort_tensor=O[0]:this.ort_tensor=new o.Tensor(O[0],O[1],O[2]),new Proxy(this,{get:(N,Z)=>{if(typeof Z=="string"){let fe=Number(Z);if(Number.isInteger(fe))return N._getitem(fe)}return N[Z]},set:(N,Z,fe)=>N[Z]=fe})}get dims(){return this.ort_tensor.dims}set dims(O){this.ort_tensor.dims=O}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[O,...N]=this.dims;if(N.length>0){const Z=N.reduce((fe,ie)=>fe*ie);for(let fe=0;fe<O;++fe)yield this._subarray(fe,Z,N)}else yield*this.data}_getitem(O){const[N,...Z]=this.dims;if(O=v(O,N),Z.length>0){const fe=Z.reduce((ie,Me)=>ie*Me);return this._subarray(O,fe,Z)}else return new a(this.type,[this.data[O]],Z)}indexOf(O){const N=this.data;for(let Z=0;Z<N.length;++Z)if(N[Z]==O)return Z;return-1}_subarray(O,N,Z){const fe=O*N,ie=(O+1)*N,Me="subarray"in this.data?this.data.subarray(fe,ie):this.data.slice(fe,ie);return new a(this.type,Me,Z)}item(){const O=this.data;if(O.length!==1)throw new Error(`a Tensor with ${O.length} elements cannot be converted to Scalar`);return O[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const O=this.data;for(let N=0;N<O.length;++N)O[N]=1/(1+Math.exp(-O[N]));return this}map(O){return this.clone().map_(O)}map_(O){const N=this.data;for(let Z=0;Z<N.length;++Z)N[Z]=O(N[Z],Z,N);return this}mul(O){return this.clone().mul_(O)}mul_(O){const N=this.data;for(let Z=0;Z<N.length;++Z)N[Z]*=O;return this}div(O){return this.clone().div_(O)}div_(O){const N=this.data;for(let Z=0;Z<N.length;++Z)N[Z]/=O;return this}add(O){return this.clone().add_(O)}add_(O){const N=this.data;for(let Z=0;Z<N.length;++Z)N[Z]+=O;return this}sub(O){return this.clone().sub_(O)}sub_(O){const N=this.data;for(let Z=0;Z<N.length;++Z)N[Z]-=O;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...O){const N=[],Z=[];for(let pe=0;pe<this.dims.length;++pe){let W=O[pe];if(W==null)Z.push([0,this.dims[pe]]),N.push(this.dims[pe]);else if(typeof W=="number")W=v(W,this.dims[pe],pe),Z.push([W,W+1]);else if(Array.isArray(W)&&W.length===2){let[re,G]=W;if(re=re===null?0:v(re,this.dims[pe],pe,!1),G=G===null?this.dims[pe]:v(G,this.dims[pe],pe,!1),re>G)throw new Error(`Invalid slice: ${W}`);const ye=[Math.max(re,0),Math.min(G,this.dims[pe])];Z.push(ye),N.push(ye[1]-ye[0])}else throw new Error(`Invalid slice: ${W}`)}const fe=Z.map(([pe,W])=>W-pe),ie=fe.reduce((pe,W)=>pe*W),Me=this.data,Re=new Me.constructor(ie),We=this.stride();for(let pe=0;pe<ie;++pe){let W=0;for(let re=fe.length-1,G=pe;re>=0;--re){const ye=fe[re];W+=(G%ye+Z[re][0])*We[re],G=Math.floor(G/ye)}Re[pe]=Me[W]}return new a(this.type,Re,N)}permute(...O){return c(this,O)}transpose(...O){return this.permute(...O)}sum(O=null,N=!1){return this.norm(1,O,N)}norm(O="fro",N=null,Z=!1){if(O==="fro")O=2;else if(typeof O=="string")throw Error(`Unsupported norm: ${O}`);const fe=this.data,ie=(pe,W)=>pe+W**O;if(N===null){const pe=fe.reduce(ie,0)**(1/O);return new a(this.type,[pe],[])}const[Me,Re,We]=P(ie,this,N,Z);if(O!==1)for(let pe=0;pe<Re.length;++pe)Re[pe]=Re[pe]**(1/O);return new a(Me,Re,We)}normalize_(O=2,N=1){N=v(N,this.dims.length);const Z=this.norm(O,N,!0),fe=this.data,ie=Z.data;for(let Me=0;Me<fe.length;++Me){let Re=0;for(let We=this.dims.length-1,pe=Me,W=1;We>=0;--We){const re=this.dims[We];if(We!==N){const G=pe%re;Re+=G*W,W*=this.dims[We]}pe=Math.floor(pe/re)}fe[Me]/=ie[Re]}return this}normalize(O=2,N=1){return this.clone().normalize_(O,N)}stride(){return H(this.dims)}squeeze(O=null){return new a(this.type,this.data,C(this.dims,O))}squeeze_(O=null){return this.dims=C(this.dims,O),this}unsqueeze(O=null){return new a(this.type,this.data,T(this.dims,O))}unsqueeze_(O=null){return this.dims=T(this.dims,O),this}flatten_(O=0,N=-1){N=(N+this.dims.length)%this.dims.length;let Z=this.dims.slice(0,O),fe=this.dims.slice(O,N+1),ie=this.dims.slice(N+1);return this.dims=[...Z,fe.reduce((Me,Re)=>Me*Re,1),...ie],this}flatten(O=0,N=-1){return this.clone().flatten_(O,N)}view(...O){let N=-1;for(let fe=0;fe<O.length;++fe)if(O[fe]===-1){if(N!==-1)throw new Error("Only one dimension can be inferred");N=fe}const Z=this.data;if(N!==-1){const fe=O.reduce((ie,Me,Re)=>Re!==N?ie*Me:ie,1);O[N]=Z.length/fe}return new a(this.type,Z,O)}neg_(){const O=this.data;for(let N=0;N<O.length;++N)O[N]=-O[N];return this}neg(){return this.clone().neg_()}gt(O){const N=new Uint8Array(this.data.length),Z=this.data;for(let fe=0;fe<Z.length;++fe)N[fe]=Z[fe]>O?1:0;return new a("bool",N,this.dims)}lt(O){const N=new Uint8Array(this.data.length),Z=this.data;for(let fe=0;fe<Z.length;++fe)N[fe]=Z[fe]<O?1:0;return new a("bool",N,this.dims)}clamp_(O,N){const Z=this.data;for(let fe=0;fe<Z.length;++fe)Z[fe]=Math.min(Math.max(Z[fe],O),N);return this}clamp(O,N){return this.clone().clamp_(O,N)}round_(){const O=this.data;for(let N=0;N<O.length;++N)O[N]=Math.round(O[N]);return this}round(){return this.clone().round_()}mean(O=null,N=!1){return D(this,O,N)}min(O=null,N=!1){if(O===null){const Me=(0,r.min)(this.data)[0];return new a(this.type,[Me],[])}const[Z,fe,ie]=P((Me,Re)=>Math.min(Me,Re),this,O,N,1/0);return new a(Z,fe,ie)}max(O=null,N=!1){if(O===null){const Me=(0,r.max)(this.data)[0];return new a(this.type,[Me],[])}const[Z,fe,ie]=P((Me,Re)=>Math.max(Me,Re),this,O,N,-1/0);return new a(Z,fe,ie)}argmin(O=null,N=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const Z=(0,r.min)(this.data)[1];return new a("int64",[BigInt(Z)],[])}argmax(O=null,N=!1){if(O!==null)throw new Error("`dim !== null` not yet implemented.");const Z=(0,r.max)(this.data)[1];return new a("int64",[BigInt(Z)],[])}to(O){if(this.type===O)return this;if(!i.hasOwnProperty(O))throw new Error(`Unsupported type: ${O}`);let N;const Z=["int64","uint64"].includes(this.type),fe=["int64","uint64"].includes(O);return Z&&!fe?N=Number:!Z&&fe&&(N=BigInt),new a(O,i[O].from(this.data,N),this.dims)}}function l(R,O){const N=R.length,Z=O.reduce((ie,Me)=>ie*Me);if(N!==Z)throw Error(`cannot reshape array of size ${N} into shape (${O})`);let fe=R;for(let ie=O.length-1;ie>=0;ie--)fe=fe.reduce((Me,Re)=>{let We=Me[Me.length-1];return We.length<O[ie]?We.push(Re):Me.push([Re]),Me},[[]]);return fe[0]}function c(R,O){const[N,Z]=(0,r.permute_data)(R.data,R.dims,O);return new a(R.type,N,Z)}function p(R,[O,N],Z="bilinear",fe=!1){const ie=R.dims.at(-3)??1,Me=R.dims.at(-2),Re=R.dims.at(-1);let We=(0,r.interpolate_data)(R.data,[ie,Me,Re],[O,N],Z,fe);return new a(R.type,We,[ie,O,N])}async function u(R,{size:O=null,mode:N="bilinear"}={}){if(R.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!O)throw new Error("`interpolate_4d` requires a `size` argument.");let Z;if(O.length===2)Z=[...R.dims.slice(0,2),...O];else if(O.length===3)Z=[R.dims[0],...O];else if(O.length===4)Z=O;else throw new Error("`size` must be of length 2, 3, or 4.");let fe;if(N==="nearest")fe=await n.TensorOpRegistry.nearest_interpolate_4d;else if(N==="bilinear")fe=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(N==="bicubic")fe=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${N}`);const ie=new a("int64",new BigInt64Array(Z.map(BigInt)),[Z.length]);return await fe({x:R,s:ie})}async function d(R,O){return await(await n.TensorOpRegistry.matmul)({a:R,b:O})}async function _(R,O){return await(await n.TensorOpRegistry.rfft)({x:R,a:O})}async function f(R,O){const N=await n.TensorOpRegistry.top_k;return O==null?O=R.dims.at(-1):O=Math.min(O,R.dims.at(-1)),await N({x:R,k:new a("int64",[BigInt(O)],[1])})}const y=R=>new a("int64",R,[R.length]);async function $(R,O,N,Z,fe){return await(await n.TensorOpRegistry.slice)({x:R,s:y(O),e:y(N),a:y(Z),t:y(fe??new Array(Z.length).fill(1))})}function w(R,O){const N=R.data,Z=O.data,fe=[R.dims[0],R.dims[2]],ie=new N.constructor(fe[0]*fe[1]),[Me,Re,We]=R.dims;let pe=0;for(let W=0;W<Me;++W){const re=W*We*Re;for(let G=0;G<We;++G){let ye=0,he=0;const Ee=W*Re,xe=re+G;for(let Ce=0;Ce<Re;++Ce){const Fe=Number(Z[Ee+Ce]);he+=Fe,ye+=N[xe+Ce*We]*Fe}const ke=ye/he;ie[pe++]=ke}}return new a(R.type,ie,fe)}function g(R,O,{eps:N=1e-5}={}){if(R.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Z,fe]=R.dims;if(O.length!==1&&O[0]!==fe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ie,Me]=A(R,1,0,!0),Re=ie.data,We=Me.data,pe=R.data,W=new pe.constructor(pe.length);for(let re=0;re<Z;++re){const G=re*fe;for(let ye=0;ye<fe;++ye){const he=G+ye;W[he]=(pe[he]-We[re])/(Re[re]+N)}}return new a(R.type,W,R.dims)}function C(R,O){return R=R.slice(),O===null?R=R.filter(N=>N!==1):typeof O=="number"?R[O]===1&&R.splice(O,1):Array.isArray(O)&&(R=R.filter((N,Z)=>N!==1||!O.includes(Z))),R}function T(R,O){return O=v(O,R.length+1),R=R.slice(),R.splice(O,0,1),R}function v(R,O,N=null,Z=!0){if(R<-O||R>=O){if(Z)throw new Error(`IndexError: index ${R} is out of bounds for dimension${N===null?"":" "+N} with size ${O}`);return R<-O?0:O}return R<0&&(R=(R%O+O)%O),R}function b(R,O=0){O=v(O,R[0].dims.length);const N=R[0].dims.slice();N[O]=R.reduce((Me,Re)=>Me+Re.dims[O],0);const Z=N.reduce((Me,Re)=>Me*Re,1),fe=new R[0].data.constructor(Z),ie=R[0].type;if(O===0){let Me=0;for(const Re of R){const We=Re.data;fe.set(We,Me),Me+=We.length}}else{let Me=0;for(let Re=0;Re<R.length;++Re){const{data:We,dims:pe}=R[Re];for(let W=0;W<We.length;++W){let re=0;for(let G=pe.length-1,ye=W,he=1;G>=0;--G){const Ee=pe[G];let xe=ye%Ee;G===O&&(xe+=Me),re+=xe*he,he*=N[G],ye=Math.floor(ye/Ee)}fe[re]=We[W]}Me+=pe[O]}}return new a(ie,fe,N)}function x(R,O=0){return b(R.map(N=>N.unsqueeze(O)),O)}function P(R,O,N=null,Z=!1,fe=null){const ie=O.data,Me=O.dims;N=v(N,Me.length);const Re=Me.slice();Re[N]=1;const We=new ie.constructor(ie.length/Me[N]);fe!==null&&We.fill(fe);for(let pe=0;pe<ie.length;++pe){let W=0;for(let re=Me.length-1,G=pe,ye=1;re>=0;--re){const he=Me[re];if(re!==N){const Ee=G%he;W+=Ee*ye,ye*=Re[re]}G=Math.floor(G/he)}We[W]=R(We[W],ie[pe],pe,W)}return Z||Re.splice(N,1),[O.type,We,Re]}function A(R,O=null,N=1,Z=!1){const fe=R.data,ie=R.dims;if(O===null){const ye=fe.reduce((ke,Ce)=>ke+Ce,0)/fe.length,he=Math.sqrt(fe.reduce((ke,Ce)=>ke+(Ce-ye)**2,0)/(fe.length-N)),Ee=new a(R.type,[ye],[]);return[new a(R.type,[he],[]),Ee]}O=v(O,ie.length);const Me=D(R,O,Z),Re=Me.data,[We,pe,W]=P((G,ye,he,Ee)=>G+(ye-Re[Ee])**2,R,O,Z);for(let G=0;G<pe.length;++G)pe[G]=Math.sqrt(pe[G]/(ie[O]-N));return[new a(We,pe,W),Me]}function D(R,O=null,N=!1){const Z=R.dims,fe=R.data;if(O===null){const We=fe.reduce((pe,W)=>pe+W,0);return new a(R.type,[We/fe.length],[])}O=v(O,Z.length);const[ie,Me,Re]=P((We,pe)=>We+pe,R,O,N);if(Z[O]!==1)for(let We=0;We<Me.length;++We)Me[We]/=Z[O];return new a(ie,Me,Re)}function H(R){const O=new Array(R.length);for(let N=R.length-1,Z=1;N>=0;--N)O[N]=Z,Z*=R[N];return O}function K(R,O,N,Z){const fe=R.reduce((ie,Me)=>ie*Me,1);return new a(N,new Z(fe).fill(O),R)}function B(R,O){let N,Z;if(typeof O=="number")N="float32",Z=Float32Array;else if(typeof O=="bigint")N="int64",Z=BigInt64Array;else if(typeof O=="boolean")N="bool",Z=Uint8Array;else throw new Error(`Unsupported data type: ${typeof O}`);return K(R,O,N,Z)}function Y(R,O){return B(R.dims,O)}function q(R){return K(R,1n,"int64",BigInt64Array)}function Q(R){return q(R.dims)}function X(R){return K(R,0n,"int64",BigInt64Array)}function se(R){return X(R.dims)}function me(R){const O=R.reduce((N,Z)=>N*Z,1);return new a("float32",Float32Array.from({length:O},()=>Math.random()),R)}function le(R,O){if(R.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(R.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(O))throw new Error("The precision must be either 'binary' or 'ubinary'");const N=O==="binary",Z=N?"int8":"uint8",fe=N?Int8Array:Uint8Array,ie=R.data,Me=new fe(ie.length/8);for(let Re=0;Re<ie.length;++Re){const We=ie[Re]>0?1:0,pe=Math.floor(Re/8),W=Re%8;Me[pe]|=We<<7-W,N&&W===0&&(Me[pe]-=128)}return new a(Z,Me,[R.dims[0],R.dims[1]/8])}},"./src/utils/video.js":(e,s,t)=>{t.r(s),t.d(s,{RawVideo:()=>i,RawVideoFrame:()=>n,load_video:()=>a});var r=t("./src/utils/image.js"),o=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class i{constructor(c,p){c.length>0&&c[0]instanceof r.RawImage&&(c=c.map((u,d)=>new n(u,(d+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!o.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const u=[],d=document.createElement("video");if(d.crossOrigin="anonymous",d.muted=!0,typeof l=="string")d.src=l;else if(l instanceof Blob)d.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)d.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(C=>d.onloadedmetadata=C),d.seekable.start(0)===d.seekable.end(0)){const T=await(await fetch(d.src)).blob();d.src=URL.createObjectURL(T),await new Promise(v=>d.onloadedmetadata=v)}const _=d.duration;let f,y;c!=null?(f=c,y=c===1?0:_/(c-1)):(y=1/p,f=Math.floor(_/y));let $=[];for(let C=0;C<f;++C)$.push(c===1?_/2:C*y);const w=document.createElement("canvas");w.width=d.videoWidth,w.height=d.videoHeight;const g=w.getContext("2d",{willReadFrequently:!0});for(const C of $){d.currentTime=C,await new Promise(x=>{d.onseeked=x}),g.drawImage(d,0,0,w.width,w.height);const T=g.getImageData(0,0,w.width,w.height),v=new r.RawImage(T.data,w.width,w.height,4),b=new n(v,C);u.push(b)}return d.remove(),new i(u,_)}}},Cy={};function Vt(e){var s=Cy[e];if(s!==void 0)return s.exports;var t=Cy[e]={exports:{}};return a1[e](t,t.exports,Vt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,s;Vt.t=function(t,r){if(r&1&&(t=this(t)),r&8||typeof t=="object"&&t&&(r&4&&t.__esModule||r&16&&typeof t.then=="function"))return t;var o=Object.create(null);Vt.r(o);var n={};s=s||[null,e({}),e([]),e(e)];for(var i=r&2&&t;typeof i=="object"&&!~s.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(a=>n[a]=()=>t[a]);return n.default=()=>t,Vt.d(o,n),o}})();Vt.d=(e,s)=>{for(var t in s)Vt.o(s,t)&&!Vt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:s[t]})};Vt.o=(e,s)=>Object.prototype.hasOwnProperty.call(e,s);Vt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Vt.r(m),Vt.d(m,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,AudioClassificationPipeline:()=>s.AudioClassificationPipeline,AutoConfig:()=>o.AutoConfig,AutoFeatureExtractor:()=>d.AutoFeatureExtractor,AutoImageProcessor:()=>y.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>g.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>s.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>s.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>C.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>u.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>u.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>s.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>s.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>u.EncodecFeatureExtractor,EosTokenCriteria:()=>T.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>s.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>s.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>w.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>w.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>w.Idefics3Processor,ImageClassificationPipeline:()=>s.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>s.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>u.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>s.ImageSegmentationPipeline,ImageToImagePipeline:()=>s.ImageToImagePipeline,ImageToTextPipeline:()=>s.ImageToTextPipeline,InterruptableStoppingCriteria:()=>T.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>w.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>T.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>w.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>u.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>w.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>s.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>w.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>w.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>w.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>s.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>o.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>$.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>s.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>w.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>w.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>w.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>T.StoppingCriteria,StoppingCriteriaList:()=>T.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>s.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>s.Text2TextGenerationPipeline,TextClassificationPipeline:()=>s.TextClassificationPipeline,TextGenerationPipeline:()=>s.TextGenerationPipeline,TextStreamer:()=>C.TextStreamer,TextToAudioPipeline:()=>s.TextToAudioPipeline,TokenClassificationPipeline:()=>s.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>s.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>w.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>w.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>u.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>w.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>w.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>u.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>w.WhisperProcessor,WhisperTextStreamer:()=>C.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>s.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>s.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>s.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>s.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>o.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>s.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Vt("./src/env.js"),s=Vt("./src/pipelines.js"),t=Vt("./src/models.js"),r=Vt("./src/tokenizers.js"),o=Vt("./src/configs.js"),n=Vt("./src/utils/audio.js"),i=Vt("./src/utils/image.js"),a=Vt("./src/utils/video.js"),l=Vt("./src/utils/tensor.js"),c=Vt("./src/utils/maths.js"),p=Vt("./src/base/feature_extraction_utils.js"),u=Vt("./src/models/feature_extractors.js"),d=Vt("./src/models/auto/feature_extraction_auto.js"),_=Vt("./src/base/image_processors_utils.js"),f=Vt("./src/models/image_processors.js"),y=Vt("./src/models/auto/image_processing_auto.js"),$=Vt("./src/base/processing_utils.js"),w=Vt("./src/models/processors.js"),g=Vt("./src/models/auto/processing_auto.js"),C=Vt("./src/generation/streamers.js"),T=Vt("./src/generation/stopping_criteria.js"),v=Vt("./src/generation/logits_process.js")})();m.ASTFeatureExtractor;m.ASTForAudioClassification;m.ASTModel;m.ASTPreTrainedModel;m.AlbertForMaskedLM;m.AlbertForQuestionAnswering;m.AlbertForSequenceClassification;m.AlbertModel;m.AlbertPreTrainedModel;m.AlbertTokenizer;m.AudioClassificationPipeline;m.AutoConfig;m.AutoFeatureExtractor;m.AutoImageProcessor;m.AutoModel;m.AutoModelForAudioClassification;m.AutoModelForAudioFrameClassification;m.AutoModelForAudioTextToText;m.AutoModelForCTC;m.AutoModelForCausalLM;m.AutoModelForDepthEstimation;m.AutoModelForDocumentQuestionAnswering;m.AutoModelForImageClassification;m.AutoModelForImageFeatureExtraction;m.AutoModelForImageMatting;m.AutoModelForImageSegmentation;m.AutoModelForImageTextToText;m.AutoModelForImageToImage;m.AutoModelForMaskGeneration;m.AutoModelForMaskedLM;m.AutoModelForNormalEstimation;m.AutoModelForObjectDetection;m.AutoModelForPoseEstimation;m.AutoModelForQuestionAnswering;m.AutoModelForSemanticSegmentation;m.AutoModelForSeq2SeqLM;m.AutoModelForSequenceClassification;m.AutoModelForSpeechSeq2Seq;m.AutoModelForTextToSpectrogram;m.AutoModelForTextToWaveform;m.AutoModelForTokenClassification;m.AutoModelForUniversalSegmentation;m.AutoModelForVision2Seq;m.AutoModelForXVector;m.AutoModelForZeroShotObjectDetection;m.AutoProcessor;m.AutoTokenizer;m.AutomaticSpeechRecognitionPipeline;m.BackgroundRemovalPipeline;m.BartForConditionalGeneration;m.BartForSequenceClassification;m.BartModel;m.BartPretrainedModel;m.BartTokenizer;m.BaseModelOutput;m.BaseStreamer;m.BeitFeatureExtractor;m.BeitForImageClassification;m.BeitModel;m.BeitPreTrainedModel;m.BertForMaskedLM;m.BertForQuestionAnswering;m.BertForSequenceClassification;m.BertForTokenClassification;m.BertModel;m.BertPreTrainedModel;m.BertTokenizer;m.BitImageProcessor;m.BlenderbotForConditionalGeneration;m.BlenderbotModel;m.BlenderbotPreTrainedModel;m.BlenderbotSmallForConditionalGeneration;m.BlenderbotSmallModel;m.BlenderbotSmallPreTrainedModel;m.BlenderbotSmallTokenizer;m.BlenderbotTokenizer;m.BloomForCausalLM;m.BloomModel;m.BloomPreTrainedModel;m.BloomTokenizer;m.CLIPFeatureExtractor;m.CLIPImageProcessor;m.CLIPModel;m.CLIPPreTrainedModel;m.CLIPSegForImageSegmentation;m.CLIPSegModel;m.CLIPSegPreTrainedModel;m.CLIPTextModel;m.CLIPTextModelWithProjection;m.CLIPTokenizer;m.CLIPVisionModel;m.CLIPVisionModelWithProjection;m.CamembertForMaskedLM;m.CamembertForQuestionAnswering;m.CamembertForSequenceClassification;m.CamembertForTokenClassification;m.CamembertModel;m.CamembertPreTrainedModel;m.CamembertTokenizer;m.CausalLMOutput;m.CausalLMOutputWithPast;m.ChineseCLIPFeatureExtractor;m.ChineseCLIPModel;m.ChineseCLIPPreTrainedModel;m.ClapAudioModelWithProjection;m.ClapFeatureExtractor;m.ClapModel;m.ClapPreTrainedModel;m.ClapTextModelWithProjection;m.ClassifierFreeGuidanceLogitsProcessor;m.CodeGenForCausalLM;m.CodeGenModel;m.CodeGenPreTrainedModel;m.CodeGenTokenizer;m.CodeLlamaTokenizer;m.CohereForCausalLM;m.CohereModel;m.CoherePreTrainedModel;m.CohereTokenizer;m.ConvBertForMaskedLM;m.ConvBertForQuestionAnswering;m.ConvBertForSequenceClassification;m.ConvBertForTokenClassification;m.ConvBertModel;m.ConvBertPreTrainedModel;m.ConvBertTokenizer;m.ConvNextFeatureExtractor;m.ConvNextForImageClassification;m.ConvNextImageProcessor;m.ConvNextModel;m.ConvNextPreTrainedModel;m.ConvNextV2ForImageClassification;m.ConvNextV2Model;m.ConvNextV2PreTrainedModel;m.DFineForObjectDetection;m.DFineModel;m.DFinePreTrainedModel;m.DPTFeatureExtractor;m.DPTForDepthEstimation;m.DPTImageProcessor;m.DPTModel;m.DPTPreTrainedModel;m.DacDecoderModel;m.DacDecoderOutput;m.DacEncoderModel;m.DacEncoderOutput;m.DacFeatureExtractor;m.DacModel;m.DacPreTrainedModel;m.DataTypeMap;m.DebertaForMaskedLM;m.DebertaForQuestionAnswering;m.DebertaForSequenceClassification;m.DebertaForTokenClassification;m.DebertaModel;m.DebertaPreTrainedModel;m.DebertaTokenizer;m.DebertaV2ForMaskedLM;m.DebertaV2ForQuestionAnswering;m.DebertaV2ForSequenceClassification;m.DebertaV2ForTokenClassification;m.DebertaV2Model;m.DebertaV2PreTrainedModel;m.DebertaV2Tokenizer;m.DecisionTransformerModel;m.DecisionTransformerPreTrainedModel;m.DeiTFeatureExtractor;m.DeiTForImageClassification;m.DeiTImageProcessor;m.DeiTModel;m.DeiTPreTrainedModel;m.DepthAnythingForDepthEstimation;m.DepthAnythingPreTrainedModel;m.DepthEstimationPipeline;m.DepthProForDepthEstimation;m.DepthProPreTrainedModel;m.DetrFeatureExtractor;m.DetrForObjectDetection;m.DetrForSegmentation;m.DetrImageProcessor;m.DetrModel;m.DetrObjectDetectionOutput;m.DetrPreTrainedModel;m.DetrSegmentationOutput;m.Dinov2ForImageClassification;m.Dinov2Model;m.Dinov2PreTrainedModel;m.Dinov2WithRegistersForImageClassification;m.Dinov2WithRegistersModel;m.Dinov2WithRegistersPreTrainedModel;m.DistilBertForMaskedLM;m.DistilBertForQuestionAnswering;m.DistilBertForSequenceClassification;m.DistilBertForTokenClassification;m.DistilBertModel;m.DistilBertPreTrainedModel;m.DistilBertTokenizer;m.DocumentQuestionAnsweringPipeline;m.DonutFeatureExtractor;m.DonutImageProcessor;m.DonutSwinModel;m.DonutSwinPreTrainedModel;m.EfficientNetForImageClassification;m.EfficientNetImageProcessor;m.EfficientNetModel;m.EfficientNetPreTrainedModel;m.ElectraForMaskedLM;m.ElectraForQuestionAnswering;m.ElectraForSequenceClassification;m.ElectraForTokenClassification;m.ElectraModel;m.ElectraPreTrainedModel;m.ElectraTokenizer;m.EncodecFeatureExtractor;m.EosTokenCriteria;m.EsmForMaskedLM;m.EsmForSequenceClassification;m.EsmForTokenClassification;m.EsmModel;m.EsmPreTrainedModel;m.EsmTokenizer;m.ExaoneForCausalLM;m.ExaoneModel;m.ExaonePreTrainedModel;m.FFT;m.FalconForCausalLM;m.FalconModel;m.FalconPreTrainedModel;m.FalconTokenizer;m.FastViTForImageClassification;m.FastViTModel;m.FastViTPreTrainedModel;m.FeatureExtractionPipeline;m.FeatureExtractor;m.FillMaskPipeline;m.Florence2ForConditionalGeneration;m.Florence2PreTrainedModel;m.Florence2Processor;m.ForcedBOSTokenLogitsProcessor;m.ForcedEOSTokenLogitsProcessor;m.GLPNFeatureExtractor;m.GLPNForDepthEstimation;m.GLPNModel;m.GLPNPreTrainedModel;m.GPT2LMHeadModel;m.GPT2Model;m.GPT2PreTrainedModel;m.GPT2Tokenizer;m.GPTBigCodeForCausalLM;m.GPTBigCodeModel;m.GPTBigCodePreTrainedModel;m.GPTJForCausalLM;m.GPTJModel;m.GPTJPreTrainedModel;m.GPTNeoForCausalLM;m.GPTNeoModel;m.GPTNeoPreTrainedModel;m.GPTNeoXForCausalLM;m.GPTNeoXModel;m.GPTNeoXPreTrainedModel;m.GPTNeoXTokenizer;m.Gemma2ForCausalLM;m.Gemma2Model;m.Gemma2PreTrainedModel;m.Gemma3ForCausalLM;m.Gemma3Model;m.Gemma3PreTrainedModel;m.GemmaForCausalLM;m.GemmaModel;m.GemmaPreTrainedModel;m.GemmaTokenizer;m.GlmForCausalLM;m.GlmModel;m.GlmPreTrainedModel;m.GraniteForCausalLM;m.GraniteModel;m.GranitePreTrainedModel;m.Grok1Tokenizer;m.GroundingDinoForObjectDetection;m.GroundingDinoImageProcessor;m.GroundingDinoPreTrainedModel;m.GroundingDinoProcessor;m.GroupViTModel;m.GroupViTPreTrainedModel;m.HeliumForCausalLM;m.HeliumModel;m.HeliumPreTrainedModel;m.HerbertTokenizer;m.HieraForImageClassification;m.HieraModel;m.HieraPreTrainedModel;m.HubertForCTC;m.HubertForSequenceClassification;m.HubertModel;m.HubertPreTrainedModel;m.IJepaForImageClassification;m.IJepaModel;m.IJepaPreTrainedModel;m.Idefics3ForConditionalGeneration;m.Idefics3ImageProcessor;m.Idefics3PreTrainedModel;m.Idefics3Processor;m.ImageClassificationPipeline;m.ImageFeatureExtractionPipeline;m.ImageFeatureExtractor;m.ImageMattingOutput;m.ImageProcessor;m.ImageSegmentationPipeline;m.ImageToImagePipeline;m.ImageToTextPipeline;m.InterruptableStoppingCriteria;m.JAISLMHeadModel;m.JAISModel;m.JAISPreTrainedModel;m.JinaCLIPImageProcessor;m.JinaCLIPModel;m.JinaCLIPPreTrainedModel;m.JinaCLIPProcessor;m.JinaCLIPTextModel;m.JinaCLIPVisionModel;m.LiteWhisperForConditionalGeneration;m.LlamaForCausalLM;m.LlamaModel;m.LlamaPreTrainedModel;m.LlamaTokenizer;m.LlavaForConditionalGeneration;m.LlavaOnevisionForConditionalGeneration;m.LlavaOnevisionImageProcessor;m.LlavaPreTrainedModel;m.LogitsProcessor;m.LogitsProcessorList;m.LogitsWarper;m.LongT5ForConditionalGeneration;m.LongT5Model;m.LongT5PreTrainedModel;m.M2M100ForConditionalGeneration;m.M2M100Model;m.M2M100PreTrainedModel;m.M2M100Tokenizer;m.MBart50Tokenizer;m.MBartForCausalLM;m.MBartForConditionalGeneration;m.MBartForSequenceClassification;m.MBartModel;m.MBartPreTrainedModel;m.MBartTokenizer;m.MPNetForMaskedLM;m.MPNetForQuestionAnswering;m.MPNetForSequenceClassification;m.MPNetForTokenClassification;m.MPNetModel;m.MPNetPreTrainedModel;m.MPNetTokenizer;m.MT5ForConditionalGeneration;m.MT5Model;m.MT5PreTrainedModel;m.MarianMTModel;m.MarianModel;m.MarianPreTrainedModel;m.MarianTokenizer;m.Mask2FormerImageProcessor;m.MaskFormerFeatureExtractor;m.MaskFormerForInstanceSegmentation;m.MaskFormerImageProcessor;m.MaskFormerModel;m.MaskFormerPreTrainedModel;m.MaskedLMOutput;m.MaxLengthCriteria;m.Metric3DForDepthEstimation;m.Metric3DPreTrainedModel;m.Metric3Dv2ForDepthEstimation;m.Metric3Dv2PreTrainedModel;m.MgpstrForSceneTextRecognition;m.MgpstrModelOutput;m.MgpstrPreTrainedModel;m.MgpstrProcessor;m.MgpstrTokenizer;m.MimiDecoderModel;m.MimiDecoderOutput;m.MimiEncoderModel;m.MimiEncoderOutput;m.MimiModel;m.MimiPreTrainedModel;m.MinLengthLogitsProcessor;m.MinNewTokensLengthLogitsProcessor;m.MistralForCausalLM;m.MistralModel;m.MistralPreTrainedModel;m.MobileBertForMaskedLM;m.MobileBertForQuestionAnswering;m.MobileBertForSequenceClassification;m.MobileBertModel;m.MobileBertPreTrainedModel;m.MobileBertTokenizer;m.MobileLLMForCausalLM;m.MobileLLMModel;m.MobileLLMPreTrainedModel;m.MobileNetV1FeatureExtractor;m.MobileNetV1ForImageClassification;m.MobileNetV1ForSemanticSegmentation;m.MobileNetV1ImageProcessor;m.MobileNetV1Model;m.MobileNetV1PreTrainedModel;m.MobileNetV2FeatureExtractor;m.MobileNetV2ForImageClassification;m.MobileNetV2ForSemanticSegmentation;m.MobileNetV2ImageProcessor;m.MobileNetV2Model;m.MobileNetV2PreTrainedModel;m.MobileNetV3FeatureExtractor;m.MobileNetV3ForImageClassification;m.MobileNetV3ForSemanticSegmentation;m.MobileNetV3ImageProcessor;m.MobileNetV3Model;m.MobileNetV3PreTrainedModel;m.MobileNetV4FeatureExtractor;m.MobileNetV4ForImageClassification;m.MobileNetV4ForSemanticSegmentation;m.MobileNetV4ImageProcessor;m.MobileNetV4Model;m.MobileNetV4PreTrainedModel;m.MobileViTFeatureExtractor;m.MobileViTForImageClassification;m.MobileViTImageProcessor;m.MobileViTModel;m.MobileViTPreTrainedModel;m.MobileViTV2ForImageClassification;m.MobileViTV2Model;m.MobileViTV2PreTrainedModel;m.ModelOutput;m.ModernBertForMaskedLM;m.ModernBertForSequenceClassification;m.ModernBertForTokenClassification;m.ModernBertModel;m.ModernBertPreTrainedModel;m.Moondream1ForConditionalGeneration;m.MoonshineFeatureExtractor;m.MoonshineForConditionalGeneration;m.MoonshineModel;m.MoonshinePreTrainedModel;m.MoonshineProcessor;m.MptForCausalLM;m.MptModel;m.MptPreTrainedModel;m.MultiModalityCausalLM;m.MultiModalityPreTrainedModel;m.MusicgenForCausalLM;m.MusicgenForConditionalGeneration;m.MusicgenModel;m.MusicgenPreTrainedModel;m.NllbTokenizer;m.NoBadWordsLogitsProcessor;m.NoRepeatNGramLogitsProcessor;m.NomicBertModel;m.NomicBertPreTrainedModel;m.NougatImageProcessor;m.NougatTokenizer;m.OPTForCausalLM;m.OPTModel;m.OPTPreTrainedModel;m.ObjectDetectionPipeline;m.Olmo2ForCausalLM;m.Olmo2Model;m.Olmo2PreTrainedModel;m.OlmoForCausalLM;m.OlmoModel;m.OlmoPreTrainedModel;m.OpenELMForCausalLM;m.OpenELMModel;m.OpenELMPreTrainedModel;m.OwlViTFeatureExtractor;m.OwlViTForObjectDetection;m.OwlViTImageProcessor;m.OwlViTModel;m.OwlViTPreTrainedModel;m.OwlViTProcessor;m.Owlv2ForObjectDetection;m.Owlv2ImageProcessor;m.Owlv2Model;m.Owlv2PreTrainedModel;m.PaliGemmaForConditionalGeneration;m.PaliGemmaPreTrainedModel;m.PaliGemmaProcessor;m.PatchTSMixerForPrediction;m.PatchTSMixerModel;m.PatchTSMixerPreTrainedModel;m.PatchTSTForPrediction;m.PatchTSTModel;m.PatchTSTPreTrainedModel;m.Phi3ForCausalLM;m.Phi3Model;m.Phi3PreTrainedModel;m.Phi3VForCausalLM;m.Phi3VImageProcessor;m.Phi3VPreTrainedModel;m.Phi3VProcessor;m.PhiForCausalLM;m.PhiModel;m.PhiPreTrainedModel;m.Pipeline;m.PreTrainedModel;m.PreTrainedTokenizer;m.PretrainedConfig;m.PretrainedMixin;m.Processor;m.PvtForImageClassification;m.PvtImageProcessor;m.PvtModel;m.PvtPreTrainedModel;m.PyAnnoteFeatureExtractor;m.PyAnnoteForAudioFrameClassification;m.PyAnnoteModel;m.PyAnnotePreTrainedModel;m.PyAnnoteProcessor;m.QuestionAnsweringModelOutput;m.QuestionAnsweringPipeline;m.Qwen2ForCausalLM;m.Qwen2Model;m.Qwen2PreTrainedModel;m.Qwen2Tokenizer;m.Qwen2VLForConditionalGeneration;m.Qwen2VLImageProcessor;m.Qwen2VLPreTrainedModel;m.Qwen2VLProcessor;m.Qwen3ForCausalLM;m.Qwen3Model;m.Qwen3PreTrainedModel;m.RFDetrForObjectDetection;m.RFDetrModel;m.RFDetrObjectDetectionOutput;m.RFDetrPreTrainedModel;m.RTDetrForObjectDetection;m.RTDetrImageProcessor;m.RTDetrModel;m.RTDetrObjectDetectionOutput;m.RTDetrPreTrainedModel;m.RTDetrV2ForObjectDetection;m.RTDetrV2Model;m.RTDetrV2ObjectDetectionOutput;m.RTDetrV2PreTrainedModel;m.RawAudio;m.RawImage;m.RawVideo;m.RawVideoFrame;m.RepetitionPenaltyLogitsProcessor;m.ResNetForImageClassification;m.ResNetModel;m.ResNetPreTrainedModel;m.RoFormerForMaskedLM;m.RoFormerForQuestionAnswering;m.RoFormerForSequenceClassification;m.RoFormerForTokenClassification;m.RoFormerModel;m.RoFormerPreTrainedModel;m.RoFormerTokenizer;m.RobertaForMaskedLM;m.RobertaForQuestionAnswering;m.RobertaForSequenceClassification;m.RobertaForTokenClassification;m.RobertaModel;m.RobertaPreTrainedModel;m.RobertaTokenizer;m.SamImageProcessor;m.SamImageSegmentationOutput;m.SamModel;m.SamPreTrainedModel;m.SamProcessor;m.SapiensForDepthEstimation;m.SapiensForNormalEstimation;m.SapiensForSemanticSegmentation;m.SapiensPreTrainedModel;m.SeamlessM4TFeatureExtractor;m.SegformerFeatureExtractor;m.SegformerForImageClassification;m.SegformerForSemanticSegmentation;m.SegformerImageProcessor;m.SegformerModel;m.SegformerPreTrainedModel;m.Seq2SeqLMOutput;m.SequenceClassifierOutput;m.SiglipImageProcessor;m.SiglipModel;m.SiglipPreTrainedModel;m.SiglipTextModel;m.SiglipTokenizer;m.SiglipVisionModel;m.SmolVLMForConditionalGeneration;m.SmolVLMImageProcessor;m.SmolVLMProcessor;m.SnacDecoderModel;m.SnacEncoderModel;m.SnacFeatureExtractor;m.SnacModel;m.SnacPreTrainedModel;m.SpeechT5FeatureExtractor;m.SpeechT5ForSpeechToText;m.SpeechT5ForTextToSpeech;m.SpeechT5HifiGan;m.SpeechT5Model;m.SpeechT5PreTrainedModel;m.SpeechT5Processor;m.SpeechT5Tokenizer;m.SqueezeBertForMaskedLM;m.SqueezeBertForQuestionAnswering;m.SqueezeBertForSequenceClassification;m.SqueezeBertModel;m.SqueezeBertPreTrainedModel;m.SqueezeBertTokenizer;m.StableLmForCausalLM;m.StableLmModel;m.StableLmPreTrainedModel;m.Starcoder2ForCausalLM;m.Starcoder2Model;m.Starcoder2PreTrainedModel;m.StoppingCriteria;m.StoppingCriteriaList;m.StyleTextToSpeech2Model;m.StyleTextToSpeech2PreTrainedModel;m.SummarizationPipeline;m.SuppressTokensAtBeginLogitsProcessor;m.Swin2SRForImageSuperResolution;m.Swin2SRImageProcessor;m.Swin2SRModel;m.Swin2SRPreTrainedModel;m.SwinForImageClassification;m.SwinForSemanticSegmentation;m.SwinModel;m.SwinPreTrainedModel;m.T5ForConditionalGeneration;m.T5Model;m.T5PreTrainedModel;m.T5Tokenizer;m.TableTransformerForObjectDetection;m.TableTransformerModel;m.TableTransformerObjectDetectionOutput;m.TableTransformerPreTrainedModel;m.TemperatureLogitsWarper;m.Tensor;m.Text2TextGenerationPipeline;m.TextClassificationPipeline;m.TextGenerationPipeline;m.TextStreamer;m.TextToAudioPipeline;m.TokenClassificationPipeline;m.TokenClassifierOutput;m.TokenizerModel;m.TopKLogitsWarper;m.TopPLogitsWarper;m.TrOCRForCausalLM;m.TrOCRPreTrainedModel;m.TranslationPipeline;m.UltravoxModel;m.UltravoxPreTrainedModel;m.UltravoxProcessor;m.UniSpeechForCTC;m.UniSpeechForSequenceClassification;m.UniSpeechModel;m.UniSpeechPreTrainedModel;m.UniSpeechSatForAudioFrameClassification;m.UniSpeechSatForCTC;m.UniSpeechSatForSequenceClassification;m.UniSpeechSatModel;m.UniSpeechSatPreTrainedModel;m.VLChatProcessor;m.VLMImageProcessor;m.ViTFeatureExtractor;m.ViTForImageClassification;m.ViTImageProcessor;m.ViTMAEModel;m.ViTMAEPreTrainedModel;m.ViTMSNForImageClassification;m.ViTMSNModel;m.ViTMSNPreTrainedModel;m.ViTModel;m.ViTPreTrainedModel;m.VisionEncoderDecoderModel;m.VitMatteForImageMatting;m.VitMatteImageProcessor;m.VitMattePreTrainedModel;m.VitPoseForPoseEstimation;m.VitPoseImageProcessor;m.VitPosePreTrainedModel;m.VitsModel;m.VitsModelOutput;m.VitsPreTrainedModel;m.VitsTokenizer;m.Wav2Vec2BertForCTC;m.Wav2Vec2BertForSequenceClassification;m.Wav2Vec2BertModel;m.Wav2Vec2BertPreTrainedModel;m.Wav2Vec2CTCTokenizer;m.Wav2Vec2FeatureExtractor;m.Wav2Vec2ForAudioFrameClassification;m.Wav2Vec2ForCTC;m.Wav2Vec2ForSequenceClassification;m.Wav2Vec2Model;m.Wav2Vec2PreTrainedModel;m.Wav2Vec2Processor;m.Wav2Vec2ProcessorWithLM;m.WavLMForAudioFrameClassification;m.WavLMForCTC;m.WavLMForSequenceClassification;m.WavLMForXVector;m.WavLMModel;m.WavLMPreTrainedModel;m.WeSpeakerFeatureExtractor;m.WeSpeakerResNetModel;m.WeSpeakerResNetPreTrainedModel;m.WhisperFeatureExtractor;m.WhisperForConditionalGeneration;m.WhisperModel;m.WhisperPreTrainedModel;m.WhisperProcessor;m.WhisperTextStreamer;m.WhisperTimeStampLogitsProcessor;m.WhisperTokenizer;m.XLMForQuestionAnswering;m.XLMForSequenceClassification;m.XLMForTokenClassification;m.XLMModel;m.XLMPreTrainedModel;m.XLMRobertaForMaskedLM;m.XLMRobertaForQuestionAnswering;m.XLMRobertaForSequenceClassification;m.XLMRobertaForTokenClassification;m.XLMRobertaModel;m.XLMRobertaPreTrainedModel;m.XLMRobertaTokenizer;m.XLMTokenizer;m.XLMWithLMHeadModel;m.XVectorOutput;m.YolosFeatureExtractor;m.YolosForObjectDetection;m.YolosImageProcessor;m.YolosModel;m.YolosObjectDetectionOutput;m.YolosPreTrainedModel;m.ZeroShotAudioClassificationPipeline;m.ZeroShotClassificationPipeline;m.ZeroShotImageClassificationPipeline;m.ZeroShotObjectDetectionPipeline;m.bankers_round;m.cat;m.cos_sim;m.dot;m.dynamic_time_warping;var l1=m.env;m.full;m.full_like;m.getKeyValueShapes;m.hamming;m.hanning;m.interpolate;m.interpolate_4d;m.interpolate_data;m.is_chinese_char;m.layer_norm;m.load_image;m.load_video;m.log_softmax;m.magnitude;m.matmul;m.max;m.mean;m.mean_pooling;m.medianFilter;m.mel_filter_bank;m.min;m.ones;m.ones_like;m.permute;m.permute_data;var c1=m.pipeline;m.quantize_embeddings;m.rand;m.read_audio;m.rfft;m.round;m.slice;m.softmax;m.spectrogram;m.stack;m.std_mean;m.topk;m.window_function;m.zeros;m.zeros_like;var u1=Object.defineProperty,d1=(e,s,t)=>s in e?u1(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t,Pt=(e,s,t)=>(d1(e,typeof s!="symbol"?s+"":s,t),t),xv=(e,s,t)=>{if(!s.has(e))throw TypeError("Cannot "+t)},Yo=(e,s,t)=>(xv(e,s,"read from private field"),t?t.call(e):s.get(e)),p1=(e,s,t)=>{if(s.has(e))throw TypeError("Cannot add the same private member more than once");s instanceof WeakSet?s.add(e):s.set(e,t)},h1=(e,s,t,r)=>(xv(e,s,"write to private field"),s.set(e,t),t),rn,Uc=new Intl.Collator(0,{numeric:1}).compare;function Tv(e,s,t){return e=e.split("."),s=s.split("."),Uc(e[0],s[0])||Uc(e[1],s[1])||(s[2]=s.slice(2).join("."),t=/[.-]/.test(e[2]=e.slice(2).join(".")),t==/[.-]/.test(s[2])?Uc(e[2],s[2]):t?-1:1)}const m1="host",Ev="queue/data",f1="queue/join",Sy="upload",_1="login",$y="config",g1="info",w1="runtime",y1="sleeptime",b1="heartbeat",M1="component_server",v1="reset",x1="cancel",T1="https://gradio-space-api-fetcher-v2.hf.space/api",Pv="This application is currently busy. Please try again. ",zn="Connection errored out. ",nn="Could not resolve app config. ",E1="Could not get space status. ",P1="Could not get API info. ",Uu="Space metadata could not be loaded. ",C1="Invalid URL. A full URL path is required.",S1="Not authorized to access this space. ",Cv="Invalid credentials. Could not login. ",$1="Login credentials are required to access this space.",k1="File system access is only available in Node.js environments",Sv="Root URL not found in client config",I1="Error uploading file";function $v(e,s,t){return s.startsWith("http://")||s.startsWith("https://")?t?e:s:e+s}async function ky(e,s,t){try{return(await(await fetch(`https://huggingface.co/api/spaces/${e}/jwt`,{headers:{Authorization:`Bearer ${s}`,...t?{Cookie:t}:{}}})).json()).token||!1}catch{return!1}}function A1(e){let s={};return e.forEach(({api_name:t,id:r})=>{t&&(s[t]=r)}),s}async function O1(e){var s;const t=this.options.hf_token?{Authorization:`Bearer ${this.options.hf_token}`}:{};if(t["Content-Type"]="application/json",typeof window<"u"&&window.gradio_config&&location.origin!=="http://localhost:9876"&&!window.gradio_config.dev_mode){const r=window.gradio_config.root,o=window.gradio_config;let n=$v(e,o.root,!1);return o.root=n,{...o,path:r}}else if(e){let r=Av(e,this.deep_link?$y+"?deep_link="+this.deep_link:$y);const o=await this.fetch(r,{headers:t,credentials:"include"});if((o==null?void 0:o.status)===401&&!this.options.auth)throw new Error($1);if((o==null?void 0:o.status)===401&&this.options.auth)throw new Error(Cv);if((o==null?void 0:o.status)===200){let n=await o.json();return n.path=n.path??"",n.root=e,(s=n.dependencies)==null||s.forEach((i,a)=>{i.id===void 0&&(i.id=a)}),n}else if((o==null?void 0:o.status)===401)throw new Error(S1);throw new Error(nn)}throw new Error(nn)}async function F1(){const{http_protocol:e,host:s}=await Ca(this.app_reference,this.options.hf_token);try{if(this.options.auth){const t=await kv(e,s,this.options.auth,this.fetch,this.options.hf_token);t&&this.set_cookies(t)}}catch(t){throw Error(t.message)}}async function kv(e,s,t,r,o){const n=new FormData;n.append("username",t==null?void 0:t[0]),n.append("password",t==null?void 0:t[1]);let i={};o&&(i.Authorization=`Bearer ${o}`);const a=await r(`${e}//${s}/${_1}`,{headers:i,method:"POST",body:n,credentials:"include"});if(a.status===200)return a.headers.get("set-cookie");throw a.status===401?new Error(Cv):new Error(Uu)}function Vc(e){if(e.startsWith("http")){const{protocol:s,host:t,pathname:r}=new URL(e);return{ws_protocol:s==="https:"?"wss":"ws",http_protocol:s,host:t+(r!=="/"?r:"")}}else if(e.startsWith("file:"))return{ws_protocol:"ws",http_protocol:"http:",host:"lite.local"};return{ws_protocol:"wss",http_protocol:"https:",host:new URL(e).host}}const Iv=e=>{let s=[];return e.split(/,(?=\s*[^\s=;]+=[^\s=;]+)/).forEach(r=>{const[o,n]=r.split(";")[0].split("=");o&&n&&s.push(`${o.trim()}=${n.trim()}`)}),s},Vu=/^[a-zA-Z0-9_\-\.]+\/[a-zA-Z0-9_\-\.]+$/,D1=/.*hf\.space\/{0,1}.*$/;async function Ca(e,s){const t={};s&&(t.Authorization=`Bearer ${s}`);const r=e.trim().replace(/\/$/,"");if(Vu.test(r))try{const n=(await(await fetch(`https://huggingface.co/api/spaces/${r}/${m1}`,{headers:t})).json()).host;return{space_id:e,...Vc(n)}}catch{throw new Error(Uu)}if(D1.test(r)){const{ws_protocol:o,http_protocol:n,host:i}=Vc(r);return{space_id:i.split("/")[0].replace(".hf.space",""),ws_protocol:o,http_protocol:n,host:i}}return{space_id:!1,...Vc(r)}}const Av=(...e)=>{try{return e.reduce((s,t)=>(s=s.replace(/\/+$/,""),t=t.replace(/^\/+/,""),new URL(t,s+"/").toString()))}catch{throw new Error(C1)}};function L1(e,s,t){const r={named_endpoints:{},unnamed_endpoints:{}};return Object.keys(e).forEach(o=>{(o==="named_endpoints"||o==="unnamed_endpoints")&&(r[o]={},Object.entries(e[o]).forEach(([n,{parameters:i,returns:a}])=>{var l,c,p,u;const d=((l=s.dependencies.find(y=>y.api_name===n||y.api_name===n.replace("/","")))==null?void 0:l.id)||t[n.replace("/","")]||-1,_=d!==-1?(c=s.dependencies.find(y=>y.id==d))==null?void 0:c.types:{generator:!1,cancel:!1};if(d!==-1&&((u=(p=s.dependencies.find(y=>y.id==d))==null?void 0:p.inputs)==null?void 0:u.length)!==i.length){const y=s.dependencies.find($=>$.id==d).inputs.map($=>{var w;return(w=s.components.find(g=>g.id===$))==null?void 0:w.type});try{y.forEach(($,w)=>{if($==="state"){const g={component:"state",example:null,parameter_default:null,parameter_has_default:!0,parameter_name:null,hidden:!0};i.splice(w,0,g)}})}catch($){console.error($)}}const f=(y,$,w,g)=>({...y,description:B1(y==null?void 0:y.type,w),type:z1(y==null?void 0:y.type,$,w,g)||""});r[o][n]={parameters:i.map(y=>f(y,y==null?void 0:y.component,y==null?void 0:y.serializer,"parameter")),returns:a.map(y=>f(y,y==null?void 0:y.component,y==null?void 0:y.serializer,"return")),type:_}}))}),r}function z1(e,s,t,r){if(s==="Api")return e.type;switch(e==null?void 0:e.type){case"string":return"string";case"boolean":return"boolean";case"number":return"number"}if(t==="JSONSerializable"||t==="StringSerializable")return"any";if(t==="ListStringSerializable")return"string[]";if(s==="Image")return r==="parameter"?"Blob | File | Buffer":"string";if(t==="FileSerializable")return(e==null?void 0:e.type)==="array"?r==="parameter"?"(Blob | File | Buffer)[]":"{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}[]":r==="parameter"?"Blob | File | Buffer":"{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}";if(t==="GallerySerializable")return r==="parameter"?"[(Blob | File | Buffer), (string | null)][]":"[{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}, (string | null))][]"}function B1(e,s){return s==="GallerySerializable"?"array of [file, label] tuples":s==="ListStringSerializable"?"array of strings":s==="FileSerializable"?"array of files or single file":e==null?void 0:e.description}function Wc(e,s){switch(e.msg){case"send_data":return{type:"data"};case"send_hash":return{type:"hash"};case"queue_full":return{type:"update",status:{queue:!0,message:Pv,stage:"error",code:e.code,success:e.success}};case"heartbeat":return{type:"heartbeat"};case"unexpected_error":return{type:"unexpected_error",status:{queue:!0,message:e.message,stage:"error",success:!1}};case"estimation":return{type:"update",status:{queue:!0,stage:s||"pending",code:e.code,size:e.queue_size,position:e.rank,eta:e.rank_eta,success:e.success}};case"progress":return{type:"update",status:{queue:!0,stage:"pending",code:e.code,progress_data:e.progress_data,success:e.success}};case"log":return{type:"log",data:e};case"process_generating":return{type:"generating",status:{queue:!0,message:e.success?null:e.output.error,stage:e.success?"generating":"error",code:e.code,progress_data:e.progress_data,eta:e.average_duration,changed_state_ids:e.success?e.output.changed_state_ids:void 0},data:e.success?e.output:null};case"process_streaming":return{type:"streaming",status:{queue:!0,message:e.output.error,stage:"streaming",time_limit:e.time_limit,code:e.code,progress_data:e.progress_data,eta:e.eta},data:e.output};case"process_completed":return"error"in e.output?{type:"update",status:{queue:!0,title:e.output.title,message:e.output.error,visible:e.output.visible,duration:e.output.duration,stage:"error",code:e.code,success:e.success}}:{type:"complete",status:{queue:!0,message:e.success?void 0:e.output.error,stage:e.success?"complete":"error",code:e.code,progress_data:e.progress_data,changed_state_ids:e.success?e.output.changed_state_ids:void 0},data:e.success?e.output:null};case"process_starts":return{type:"update",status:{queue:!0,stage:"pending",code:e.code,size:e.rank,position:0,success:e.success,eta:e.eta},original_msg:"process_starts"}}return{type:"none",status:{stage:"error",queue:!0}}}const R1=(e=[],s)=>{const t=s?s.parameters:[];if(Array.isArray(e))return s&&t.length>0&&e.length>t.length&&console.warn("Too many arguments provided for the endpoint."),e;const r=[],o=Object.keys(e);return t.forEach((n,i)=>{if(e.hasOwnProperty(n.parameter_name))r[i]=e[n.parameter_name];else if(n.parameter_has_default)r[i]=n.parameter_default;else throw new Error(`No value provided for required parameter: ${n.parameter_name}`)}),o.forEach(n=>{if(!t.some(i=>i.parameter_name===n))throw new Error(`Parameter \`${n}\` is not a valid keyword argument. Please refer to the API for usage.`)}),r.forEach((n,i)=>{if(n===void 0&&!t[i].parameter_has_default)throw new Error(`No value provided for required parameter: ${t[i].parameter_name}`)}),r};async function j1(){if(this.api_info)return this.api_info;const{hf_token:e}=this.options,{config:s}=this,t={"Content-Type":"application/json"};if(e&&(t.Authorization=`Bearer ${e}`),!!s)try{let r,o;if(typeof window<"u"&&window.gradio_api_info)o=window.gradio_api_info;else{if(Tv((s==null?void 0:s.version)||"2.0.0","3.30")<0)r=await this.fetch(T1,{method:"POST",body:JSON.stringify({serialize:!1,config:JSON.stringify(s)}),headers:t,credentials:"include"});else{const n=Av(s.root,this.api_prefix,g1);r=await this.fetch(n,{headers:t,credentials:"include"})}if(!r.ok)throw new Error(zn);o=await r.json()}return"api"in o&&(o=o.api),o.named_endpoints["/predict"]&&!o.unnamed_endpoints[0]&&(o.unnamed_endpoints[0]=o.named_endpoints["/predict"]),L1(o,s,this.api_map)}catch(r){throw new Error("Could not get API info. "+r.message)}}async function N1(e,s,t){var r;const o={};(r=this==null?void 0:this.options)!=null&&r.hf_token&&(o.Authorization=`Bearer ${this.options.hf_token}`);const n=1e3,i=[];let a;for(let l=0;l<s.length;l+=n){const c=s.slice(l,l+n),p=new FormData;c.forEach(d=>{p.append("files",d)});try{const d=t?`${e}${this.api_prefix}/${Sy}?upload_id=${t}`:`${e}${this.api_prefix}/${Sy}`;a=await this.fetch(d,{method:"POST",body:p,headers:o,credentials:"include"})}catch(d){throw new Error(zn+d.message)}if(!a.ok){const d=await a.text();return{error:`HTTP ${a.status}: ${d}`}}const u=await a.json();u&&i.push(...u)}return{files:i}}async function U1(e,s,t,r){let o=(Array.isArray(e)?e:[e]).map(i=>i.blob);const n=o.filter(i=>i.size>(r??1/0));if(n.length)throw new Error(`File size exceeds the maximum allowed size of ${r} bytes: ${n.map(i=>i.name).join(", ")}`);return await Promise.all(await this.upload_files(s,o,t).then(async i=>{if(i.error)throw new Error(i.error);return i.files?i.files.map((a,l)=>new Wu({...e[l],path:a,url:`${s}${this.api_prefix}/file=${a}`})):[]}))}class Wu{constructor({path:s,url:t,orig_name:r,size:o,blob:n,is_stream:i,mime_type:a,alt_text:l,b64:c}){Pt(this,"path"),Pt(this,"url"),Pt(this,"orig_name"),Pt(this,"size"),Pt(this,"blob"),Pt(this,"is_stream"),Pt(this,"mime_type"),Pt(this,"alt_text"),Pt(this,"b64"),Pt(this,"meta",{_type:"gradio.FileData"}),this.path=s,this.url=t,this.orig_name=r,this.size=o,this.blob=t?void 0:n,this.is_stream=i,this.mime_type=a,this.alt_text=l,this.b64=c}}class V1{constructor(s,t){Pt(this,"type"),Pt(this,"command"),Pt(this,"meta"),Pt(this,"fileData"),this.type="command",this.command=s,this.meta=t}}typeof process<"u"&&process.versions&&process.versions.node;function Iy(e,s,t){for(;t.length>1;){const o=t.shift();if(typeof o=="string"||typeof o=="number")e=e[o];else throw new Error("Invalid key type")}const r=t.shift();if(typeof r=="string"||typeof r=="number")e[r]=s;else throw new Error("Invalid key type")}async function uu(e,s=void 0,t=[],r=!1,o=void 0){if(Array.isArray(e)){let n=[];return await Promise.all(e.map(async(i,a)=>{var l;let c=t.slice();c.push(String(a));const p=await uu(e[a],r?((l=o==null?void 0:o.parameters[a])==null?void 0:l.component)||void 0:s,c,!1,o);n=n.concat(p)})),n}else{if(globalThis.Buffer&&e instanceof globalThis.Buffer||e instanceof Blob)return[{path:t,blob:new Blob([e]),type:s}];if(typeof e=="object"&&e!==null){let n=[];for(const i of Object.keys(e)){const a=[...t,i],l=e[i];n=n.concat(await uu(l,void 0,a,!1,o))}return n}}return[]}function W1(e,s){var t,r;let o=(r=(t=s==null?void 0:s.dependencies)==null?void 0:t.find(n=>n.id==e))==null?void 0:r.queue;return o!=null?!o:!s.enable_queue}function G1(e,s){return new Promise((t,r)=>{const o=new MessageChannel;o.port1.onmessage=({data:n})=>{o.port1.close(),t(n)},window.parent.postMessage(e,s,[o.port2])})}function Zo(e,s,t,r,o=!1){if(r==="input"&&!o)throw new Error("Invalid code path. Cannot skip state inputs for input.");if(r==="output"&&o)return e;let n=[],i=0;const a=r==="input"?s.inputs:s.outputs;for(let l=0;l<a.length;l++){const c=a[l],p=t.find(u=>u.id===c);if((p==null?void 0:p.type)==="state"){if(o)if(e.length===a.length){const u=e[i];n.push(u),i++}else n.push(null);else{i++;continue}continue}else{const u=e[i];n.push(u),i++}}return n}async function K1(e,s,t){const r=this;await H1(r,s);const o=await uu(s,void 0,[],!0,t);return(await Promise.all(o.map(async({path:i,blob:a,type:l})=>{if(!a)return{path:i,type:l};const c=await r.upload_files(e,[a]),p=c.files&&c.files[0];return{path:i,file_url:p,type:l,name:typeof File<"u"&&a instanceof File?a==null?void 0:a.name:void 0}}))).forEach(({path:i,file_url:a,type:l,name:c})=>{if(l==="Gallery")Iy(s,a,i);else if(a){const p=new Wu({path:a,orig_name:c});Iy(s,p,i)}}),s}async function H1(e,s){var t,r;if(!(((t=e.config)==null?void 0:t.root)||((r=e.config)==null?void 0:r.root_url)))throw new Error(Sv);await Ov(e,s)}async function Ov(e,s,t=[]){for(const r in s)s[r]instanceof V1?await q1(e,s,r):typeof s[r]=="object"&&s[r]!==null&&await Ov(e,s[r],[...t,r])}async function q1(e,s,t){var r,o;let n=s[t];const i=((r=e.config)==null?void 0:r.root)||((o=e.config)==null?void 0:o.root_url);if(!i)throw new Error(Sv);try{let a,l;if(typeof process<"u"&&process.versions&&process.versions.node){const d=await Gc(()=>import("./__vite-browser-external-BIHI7g3E.js"),[]);l=(await Gc(()=>import("./__vite-browser-external-BIHI7g3E.js"),[])).resolve(process.cwd(),n.meta.path),a=await d.readFile(l)}else throw new Error(k1);const c=new Blob([a],{type:"application/octet-stream"}),p=await e.upload_files(i,[c]),u=p.files&&p.files[0];if(u){const d=new Wu({path:u,orig_name:n.meta.name||""});s[t]=d}}catch(a){console.error(I1,a)}}async function Q1(e,s,t){const r={"Content-Type":"application/json"};this.options.hf_token&&(r.Authorization=`Bearer ${this.options.hf_token}`);try{var o=await this.fetch(e,{method:"POST",body:JSON.stringify(s),headers:{...r,...t},credentials:"include"})}catch{return[{error:zn},500]}let n,i;try{n=await o.json(),i=o.status}catch(a){n={error:`Could not parse server response: ${a}`},i=500}return[n,i]}async function X1(e,s={}){let t=!1,r=!1;if(!this.config)throw new Error("Could not resolve app config");if(typeof e=="number")this.config.dependencies.find(o=>o.id==e);else{const o=e.replace(/^\//,"");this.config.dependencies.find(n=>n.id==this.api_map[o])}return new Promise(async(o,n)=>{const i=this.submit(e,s,null,null,!0);let a;for await(const l of i)l.type==="data"&&(r&&o(a),t=!0,a=l),l.type==="status"&&(l.stage==="error"&&n(l),l.stage==="complete"&&(r=!0,t&&o(a)))})}async function oi(e,s,t){let r=s==="subdomain"?`https://huggingface.co/api/spaces/by-subdomain/${e}`:`https://huggingface.co/api/spaces/${e}`,o,n;try{if(o=await fetch(r),n=o.status,n!==200)throw new Error;o=await o.json()}catch{t({status:"error",load_status:"error",message:E1,detail:"NOT_FOUND"});return}if(!o||n!==200)return;const{runtime:{stage:i},id:a}=o;switch(i){case"STOPPED":case"SLEEPING":t({status:"sleeping",load_status:"pending",message:"Space is asleep. Waking it up...",detail:i}),setTimeout(()=>{oi(e,s,t)},1e3);break;case"PAUSED":t({status:"paused",load_status:"error",message:"This space has been paused by the author. If you would like to try this demo, consider duplicating the space.",detail:i,discussions_enabled:await Ay(a)});break;case"RUNNING":case"RUNNING_BUILDING":t({status:"running",load_status:"complete",message:"Space is running.",detail:i});break;case"BUILDING":t({status:"building",load_status:"pending",message:"Space is building...",detail:i}),setTimeout(()=>{oi(e,s,t)},1e3);break;case"APP_STARTING":t({status:"starting",load_status:"pending",message:"Space is starting...",detail:i}),setTimeout(()=>{oi(e,s,t)},1e3);break;default:t({status:"space_error",load_status:"error",message:"This space is experiencing an issue.",detail:i,discussions_enabled:await Ay(a)});break}}const Fv=async(e,s)=>{let t=0;const r=12,o=5e3;return new Promise(n=>{oi(e,Vu.test(e)?"space_name":"subdomain",i=>{s(i),i.status==="running"||i.status==="error"||i.status==="paused"||i.status==="space_error"?n():(i.status==="sleeping"||i.status==="building")&&(t<r?(t++,setTimeout(()=>{Fv(e,s).then(n)},o)):n())})})},J1=/^(?=[^]*\b[dD]iscussions{0,1}\b)(?=[^]*\b[dD]isabled\b)[^]*$/;async function Ay(e){try{const s=await fetch(`https://huggingface.co/api/spaces/${e}/discussions`,{method:"HEAD"}),t=s.headers.get("x-error-message");return!(!s.ok||t&&J1.test(t))}catch{return!1}}async function Y1(e,s){const t={};s&&(t.Authorization=`Bearer ${s}`);try{const r=await fetch(`https://huggingface.co/api/spaces/${e}/${w1}`,{headers:t});if(r.status!==200)throw new Error("Space hardware could not be obtained.");const{hardware:o}=await r.json();return o.current}catch(r){throw new Error(r.message)}}async function Z1(e,s,t){const r={};t&&(r.Authorization=`Bearer ${t}`);const o={seconds:s};try{const n=await fetch(`https://huggingface.co/api/spaces/${e}/${y1}`,{method:"POST",headers:{"Content-Type":"application/json",...r},body:JSON.stringify(o)});if(n.status!==200)throw new Error("Could not set sleep timeout on duplicated Space. Please visit *ADD HF LINK TO SETTINGS* to set a timeout manually to reduce billing charges.");return await n.json()}catch(n){throw new Error(n.message)}}const Oy=["cpu-basic","cpu-upgrade","cpu-xl","t4-small","t4-medium","a10g-small","a10g-large","a10g-largex2","a10g-largex4","a100-large","zero-a10g","h100","h100x8"];async function eE(e,s){const{hf_token:t,private:r,hardware:o,timeout:n,auth:i}=s;if(o&&!Oy.includes(o))throw new Error(`Invalid hardware type provided. Valid types are: ${Oy.map($=>`"${$}"`).join(",")}.`);const{http_protocol:a,host:l}=await Ca(e,t);let c=null;if(i){const $=await kv(a,l,i,fetch);$&&(c=Iv($))}const p={Authorization:`Bearer ${t}`,"Content-Type":"application/json",...c?{Cookie:c.join("; ")}:{}},u=(await(await fetch("https://huggingface.co/api/whoami-v2",{headers:p})).json()).name,d=e.split("/")[1],_={repository:`${u}/${d}`};r&&(_.private=!0);let f;try{o||(f=await Y1(e,t))}catch($){throw Error(Uu+$.message)}const y=o||f||"cpu-basic";_.hardware=y;try{const $=await fetch(`https://huggingface.co/api/spaces/${e}/duplicate`,{method:"POST",headers:p,body:JSON.stringify(_)});if($.status===409)try{return await du.connect(`${u}/${d}`,s)}catch(g){throw console.error("Failed to connect Client instance:",g),g}else if($.status!==200)throw new Error($.statusText);const w=await $.json();return await Z1(`${u}/${d}`,n||300,t),await du.connect(tE(w.url),s)}catch($){throw new Error($)}}function tE(e){const s=/https:\/\/huggingface.co\/spaces\/([^/]+\/[^/]+)/,t=e.match(s);if(t)return t[1]}class sE extends TransformStream{constructor(s={allowCR:!1}){super({transform:(t,r)=>{for(t=Yo(this,rn)+t;;){const o=t.indexOf(`
`),n=s.allowCR?t.indexOf("\r"):-1;if(n!==-1&&n!==t.length-1&&(o===-1||o-1>n)){r.enqueue(t.slice(0,n)),t=t.slice(n+1);continue}if(o===-1)break;const i=t[o-1]==="\r"?o-1:o;r.enqueue(t.slice(0,i)),t=t.slice(o+1)}h1(this,rn,t)},flush:t=>{if(Yo(this,rn)==="")return;const r=s.allowCR&&Yo(this,rn).endsWith("\r")?Yo(this,rn).slice(0,-1):Yo(this,rn);t.enqueue(r)}}),p1(this,rn,"")}}rn=new WeakMap;function rE(e){let s=new TextDecoderStream,t=new sE({allowCR:!0});return e.pipeThrough(s).pipeThrough(t)}function nE(e){let t=/[:]\s*/.exec(e),r=t&&t.index;if(r)return[e.substring(0,r),e.substring(r+t[0].length)]}function Fy(e,s,t){e.get(s)||e.set(s,t)}async function*oE(e,s){if(!e.body)return;let t=rE(e.body),r,o=t.getReader(),n;for(;;){if(s&&s.aborted)return o.cancel();if(r=await o.read(),r.done)return;if(!r.value){n&&(yield n),n=void 0;continue}let[i,a]=nE(r.value)||[];i&&(i==="data"?(n||(n={}),n[i]=n[i]?n[i]+`
`+a:a):i==="event"?(n||(n={}),n[i]=a):i==="id"?(n||(n={}),n[i]=+a||a):i==="retry"&&(n||(n={}),n[i]=+a||void 0))}}async function iE(e,s){let t=new Request(e,s);Fy(t.headers,"Accept","text/event-stream"),Fy(t.headers,"Content-Type","application/json");let r=await fetch(t);if(!r.ok)throw r;return oE(r,t.signal)}async function aE(){let{event_callbacks:e,unclosed_events:s,pending_stream_messages:t,stream_status:r,config:o,jwt:n}=this;const i=this;if(!o)throw new Error("Could not resolve app config");r.open=!0;let a=null,l=new URLSearchParams({session_hash:this.session_hash}).toString(),c=new URL(`${o.root}${this.api_prefix}/${Ev}?${l}`);if(n&&c.searchParams.set("__sign",n),a=this.stream(c),!a){console.warn("Cannot connect to SSE endpoint: "+c.toString());return}a.onmessage=async function(p){let u=JSON.parse(p.data);if(u.msg==="close_stream"){Pa(r,i.abort_controller);return}const d=u.event_id;if(!d)await Promise.all(Object.keys(e).map(_=>e[_](u)));else if(e[d]&&o){u.msg==="process_completed"&&["sse","sse_v1","sse_v2","sse_v2.1","sse_v3"].includes(o.protocol)&&s.delete(d);let _=e[d];typeof window<"u"&&typeof document<"u"?setTimeout(_,0,u):_(u)}else t[d]||(t[d]=[]),t[d].push(u)},a.onerror=async function(){await Promise.all(Object.keys(e).map(p=>e[p]({msg:"unexpected_error",message:zn})))}}function Pa(e,s){e&&(e.open=!1,s==null||s.abort())}function lE(e,s,t){!e[s]?(e[s]=[],t.data.forEach((o,n)=>{e[s][n]=o})):t.data.forEach((o,n)=>{let i=cE(e[s][n],o);e[s][n]=i,t.data[n]=i})}function cE(e,s){return s.forEach(([t,r,o])=>{e=uE(e,r,t,o)}),e}function uE(e,s,t,r){if(s.length===0){if(t==="replace")return r;if(t==="append")return e+r;throw new Error(`Unsupported action: ${t}`)}let o=e;for(let i=0;i<s.length-1;i++)o=o[s[i]];const n=s[s.length-1];switch(t){case"replace":o[n]=r;break;case"append":o[n]+=r;break;case"add":Array.isArray(o)?o.splice(Number(n),0,r):o[n]=r;break;case"delete":Array.isArray(o)?o.splice(Number(n),1):delete o[n];break;default:throw new Error(`Unknown action: ${t}`)}return e}function dE(e,s={}){const t={close:()=>{console.warn("Method not implemented.")},onerror:null,onmessage:null,onopen:null,readyState:0,url:e.toString(),withCredentials:!1,CONNECTING:0,OPEN:1,CLOSED:2,addEventListener:()=>{throw new Error("Method not implemented.")},dispatchEvent:()=>{throw new Error("Method not implemented.")},removeEventListener:()=>{throw new Error("Method not implemented.")}};return iE(e,s).then(async r=>{t.readyState=t.OPEN;try{for await(const o of r)t.onmessage&&t.onmessage(o);t.readyState=t.CLOSED}catch(o){t.onerror&&t.onerror(o),t.readyState=t.CLOSED}}).catch(r=>{console.error(r),t.onerror&&t.onerror(r),t.readyState=t.CLOSED}),t}function pE(e,s={},t,r,o){var n;try{let i=function(he){(o||Me[he.type])&&p(he)},a=function(){for(W=!0;G.length>0;)G.shift()({value:void 0,done:!0})},l=function(he){W||(G.length>0?G.shift()(he):re.push(he))},c=function(he){l(hE(he)),a()},p=function(he){l({value:he,done:!1})},u=function(){return re.length>0?Promise.resolve(re.shift()):W?Promise.resolve({value:void 0,done:!0}):new Promise(he=>G.push(he))};const{hf_token:d}=this.options,{fetch:_,app_reference:f,config:y,session_hash:$,api_info:w,api_map:g,stream_status:C,pending_stream_messages:T,pending_diff_streams:v,event_callbacks:b,unclosed_events:x,post_data:P,options:A,api_prefix:D}=this,H=this;if(!w)throw new Error("No API found");if(!y)throw new Error("Could not resolve app config");let{fn_index:K,endpoint_info:B,dependency:Y}=mE(w,e,g,y),q=R1(s,B),Q,X,se=y.protocol??"ws",me="",le=()=>me;const R=typeof e=="number"?"/predict":e;let O,N=null,Z=!1,fe={},ie=typeof window<"u"&&typeof document<"u"?new URLSearchParams(window.location.search).toString():"";const Me=((n=A==null?void 0:A.events)==null?void 0:n.reduce((he,Ee)=>(he[Ee]=!0,he),{}))||{};async function Re(){const he={stage:"complete",queue:!1,time:new Date};Z=he,i({...he,type:"status",endpoint:R,fn_index:K});let Ee={},xe={};se==="ws"?(Q&&Q.readyState===0?Q.addEventListener("open",()=>{Q.close()}):Q.close(),Ee={fn_index:K,session_hash:$}):(Pa(C,H.abort_controller),a(),Ee={event_id:N},xe={event_id:N,session_hash:$,fn_index:K});try{if(!y)throw new Error("Could not resolve app config");"event_id"in xe&&await _(`${y.root}${D}/${x1}`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(xe)}),await _(`${y.root}${D}/${v1}`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(Ee)})}catch{console.warn("The `/reset` endpoint could not be called. Subsequent endpoint results may be unreliable.")}}const We=async he=>{await this._resolve_hearbeat(he)};async function pe(he){if(!y)return;let Ee=he.render_id;y.components=[...y.components.filter(Ce=>Ce.props.rendered_in!==Ee),...he.components],y.dependencies=[...y.dependencies.filter(Ce=>Ce.rendered_in!==Ee),...he.dependencies];const xe=y.components.some(Ce=>Ce.type==="state"),ke=y.dependencies.some(Ce=>Ce.targets.some(Fe=>Fe[1]==="unload"));y.connect_heartbeat=xe||ke,await We(y),i({type:"render",data:he,endpoint:R,fn_index:K})}this.handle_blob(y.root,q,B).then(async he=>{var Ee;if(O={data:Zo(he,Y,y.components,"input",!0)||[],event_data:t,fn_index:K,trigger_id:r},W1(K,y))i({type:"status",endpoint:R,stage:"pending",queue:!1,fn_index:K,time:new Date}),P(`${y.root}${D}/run${R.startsWith("/")?R:`/${R}`}${ie?"?"+ie:""}`,{...O,session_hash:$}).then(([Ce,Fe])=>{const Ge=Ce.data;Fe==200?(i({type:"data",endpoint:R,fn_index:K,data:Zo(Ge,Y,y.components,"output",A.with_null_state),time:new Date,event_data:t,trigger_id:r}),Ce.render_config&&pe(Ce.render_config),i({type:"status",endpoint:R,fn_index:K,stage:"complete",eta:Ce.average_duration,queue:!1,time:new Date})):i({type:"status",stage:"error",endpoint:R,fn_index:K,message:Ce.error,queue:!1,time:new Date})}).catch(Ce=>{i({type:"status",stage:"error",message:Ce.message,endpoint:R,fn_index:K,queue:!1,time:new Date})});else if(se=="ws"){const{ws_protocol:Ce,host:Fe}=await Ca(f,d);i({type:"status",stage:"pending",queue:!0,endpoint:R,fn_index:K,time:new Date});let Ge=new URL(`${Ce}://${$v(Fe,y.path,!0)}/queue/join${ie?"?"+ie:""}`);this.jwt&&Ge.searchParams.set("__sign",this.jwt),Q=new WebSocket(Ge),Q.onclose=Ue=>{Ue.wasClean||i({type:"status",stage:"error",broken:!0,message:zn,queue:!0,endpoint:R,fn_index:K,time:new Date})},Q.onmessage=function(Ue){const Ie=JSON.parse(Ue.data),{type:De,status:qe,data:Ye}=Wc(Ie,fe[K]);if(De==="update"&&qe&&!Z)i({type:"status",endpoint:R,fn_index:K,time:new Date,...qe}),qe.stage==="error"&&Q.close();else if(De==="hash"){Q.send(JSON.stringify({fn_index:K,session_hash:$}));return}else De==="data"?Q.send(JSON.stringify({...O,session_hash:$})):De==="complete"?Z=qe:De==="log"?i({type:"log",title:Ye.title,log:Ye.log,level:Ye.level,endpoint:R,duration:Ye.duration,visible:Ye.visible,fn_index:K}):De==="generating"&&i({type:"status",time:new Date,...qe,stage:qe==null?void 0:qe.stage,queue:!0,endpoint:R,fn_index:K});Ye&&(i({type:"data",time:new Date,data:Zo(Ye.data,Y,y.components,"output",A.with_null_state),endpoint:R,fn_index:K,event_data:t,trigger_id:r}),Z&&(i({type:"status",time:new Date,...Z,stage:qe==null?void 0:qe.stage,queue:!0,endpoint:R,fn_index:K}),Q.close()))},Tv(y.version||"2.0.0","3.6")<0&&addEventListener("open",()=>Q.send(JSON.stringify({hash:$})))}else if(se=="sse"){i({type:"status",stage:"pending",queue:!0,endpoint:R,fn_index:K,time:new Date});var ke=new URLSearchParams({fn_index:K.toString(),session_hash:$}).toString();let Ce=new URL(`${y.root}${D}/${Ev}?${ie?ie+"&":""}${ke}`);if(this.jwt&&Ce.searchParams.set("__sign",this.jwt),X=this.stream(Ce),!X)return Promise.reject(new Error("Cannot connect to SSE endpoint: "+Ce.toString()));X.onmessage=async function(Fe){const Ge=JSON.parse(Fe.data),{type:Ue,status:Ie,data:De}=Wc(Ge,fe[K]);if(Ue==="update"&&Ie&&!Z)i({type:"status",endpoint:R,fn_index:K,time:new Date,...Ie}),Ie.stage==="error"&&(X==null||X.close(),a());else if(Ue==="data"){let[qe,Ye]=await P(`${y.root}${D}/queue/data`,{...O,session_hash:$,event_id:N});Ye!==200&&(i({type:"status",stage:"error",message:zn,queue:!0,endpoint:R,fn_index:K,time:new Date}),X==null||X.close(),a())}else Ue==="complete"?Z=Ie:Ue==="log"?i({type:"log",title:De.title,log:De.log,level:De.level,endpoint:R,duration:De.duration,visible:De.visible,fn_index:K}):(Ue==="generating"||Ue==="streaming")&&i({type:"status",time:new Date,...Ie,stage:Ie==null?void 0:Ie.stage,queue:!0,endpoint:R,fn_index:K});De&&(i({type:"data",time:new Date,data:Zo(De.data,Y,y.components,"output",A.with_null_state),endpoint:R,fn_index:K,event_data:t,trigger_id:r}),Z&&(i({type:"status",time:new Date,...Z,stage:Ie==null?void 0:Ie.stage,queue:!0,endpoint:R,fn_index:K}),X==null||X.close(),a()))}}else if(se=="sse_v1"||se=="sse_v2"||se=="sse_v2.1"||se=="sse_v3"){i({type:"status",stage:"pending",queue:!0,endpoint:R,fn_index:K,time:new Date});let Ce="";typeof window<"u"&&typeof document<"u"&&(Ce=(Ee=window==null?void 0:window.location)==null?void 0:Ee.hostname);const Ge=Ce.includes(".dev.")?`https://moon-${Ce.split(".")[1]}.dev.spaces.huggingface.tech`:"https://huggingface.co";(typeof window<"u"&&typeof document<"u"&&window.parent!=window&&window.supports_zerogpu_headers?G1("zerogpu-headers",Ge):Promise.resolve(null)).then(qe=>P(`${y.root}${D}/${f1}?${ie}`,{...O,session_hash:$},qe)).then(async([qe,Ye])=>{if(Ye===503)i({type:"status",stage:"error",message:Pv,queue:!0,endpoint:R,fn_index:K,time:new Date});else if(Ye!==200)i({type:"status",stage:"error",message:zn,queue:!0,endpoint:R,fn_index:K,time:new Date});else{N=qe.event_id,me=N;let ot=async function(Ke){try{const{type:Ae,status:et,data:_t,original_msg:zt}=Wc(Ke,fe[K]);if(Ae=="heartbeat")return;if(Ae==="update"&&et&&!Z)i({type:"status",endpoint:R,fn_index:K,time:new Date,original_msg:zt,...et});else if(Ae==="complete")Z=et;else if(Ae=="unexpected_error")console.error("Unexpected error",et==null?void 0:et.message),i({type:"status",stage:"error",message:(et==null?void 0:et.message)||"An Unexpected Error Occurred!",queue:!0,endpoint:R,fn_index:K,time:new Date});else if(Ae==="log"){i({type:"log",title:_t.title,log:_t.log,level:_t.level,endpoint:R,duration:_t.duration,visible:_t.visible,fn_index:K});return}else(Ae==="generating"||Ae==="streaming")&&(i({type:"status",time:new Date,...et,stage:et==null?void 0:et.stage,queue:!0,endpoint:R,fn_index:K}),_t&&Y.connection!=="stream"&&["sse_v2","sse_v2.1","sse_v3"].includes(se)&&lE(v,N,_t));_t&&(i({type:"data",time:new Date,data:Zo(_t.data,Y,y.components,"output",A.with_null_state),endpoint:R,fn_index:K}),_t.render_config&&await pe(_t.render_config),Z&&(i({type:"status",time:new Date,...Z,stage:et==null?void 0:et.stage,queue:!0,endpoint:R,fn_index:K}),a())),((et==null?void 0:et.stage)==="complete"||(et==null?void 0:et.stage)==="error")&&(b[N]&&delete b[N],N in v&&delete v[N])}catch(Ae){console.error("Unexpected client exception",Ae),i({type:"status",stage:"error",message:"An Unexpected Error Occurred!",queue:!0,endpoint:R,fn_index:K,time:new Date}),["sse_v2","sse_v2.1","sse_v3"].includes(se)&&(Pa(C,H.abort_controller),C.open=!1,a())}};N in T&&(T[N].forEach(Ke=>ot(Ke)),delete T[N]),b[N]=ot,x.add(N),C.open||await this.open_stream()}})}});let W=!1;const re=[],G=[],ye={[Symbol.asyncIterator]:()=>ye,next:u,throw:async he=>(c(he),u()),return:async()=>(a(),u()),cancel:Re,event_id:le};return ye}catch(i){throw console.error("Submit function encountered an error:",i),i}}function hE(e){return{then:(s,t)=>t(e)}}function mE(e,s,t,r){let o,n,i;if(typeof s=="number")o=s,n=e.unnamed_endpoints[o],i=r.dependencies.find(a=>a.id==s);else{const a=s.replace(/^\//,"");o=t[a],n=e.named_endpoints[s.trim()],i=r.dependencies.find(l=>l.id==t[a])}if(typeof o!="number")throw new Error("There is no endpoint matching that name of fn_index matching that number.");return{fn_index:o,endpoint_info:n,dependency:i}}class du{constructor(s,t={events:["data"]}){Pt(this,"app_reference"),Pt(this,"options"),Pt(this,"deep_link",null),Pt(this,"config"),Pt(this,"api_prefix",""),Pt(this,"api_info"),Pt(this,"api_map",{}),Pt(this,"session_hash",Math.random().toString(36).substring(2)),Pt(this,"jwt",!1),Pt(this,"last_status",{}),Pt(this,"cookies",null),Pt(this,"stream_status",{open:!1}),Pt(this,"closed",!1),Pt(this,"pending_stream_messages",{}),Pt(this,"pending_diff_streams",{}),Pt(this,"event_callbacks",{}),Pt(this,"unclosed_events",new Set),Pt(this,"heartbeat_event",null),Pt(this,"abort_controller",null),Pt(this,"stream_instance",null),Pt(this,"current_payload"),Pt(this,"ws_map",{}),Pt(this,"view_api"),Pt(this,"upload_files"),Pt(this,"upload"),Pt(this,"handle_blob"),Pt(this,"post_data"),Pt(this,"submit"),Pt(this,"predict"),Pt(this,"open_stream"),Pt(this,"resolve_config"),Pt(this,"resolve_cookies");var r;this.app_reference=s,this.deep_link=((r=t.query_params)==null?void 0:r.deep_link)||null,t.events||(t.events=["data"]),this.options=t,this.current_payload={},this.view_api=j1.bind(this),this.upload_files=N1.bind(this),this.handle_blob=K1.bind(this),this.post_data=Q1.bind(this),this.submit=pE.bind(this),this.predict=X1.bind(this),this.open_stream=aE.bind(this),this.resolve_config=O1.bind(this),this.resolve_cookies=F1.bind(this),this.upload=U1.bind(this),this.fetch=this.fetch.bind(this),this.handle_space_success=this.handle_space_success.bind(this),this.stream=this.stream.bind(this)}get_url_config(s=null){if(!this.config)throw new Error(nn);s===null&&(s=window.location.href);const t=i=>i.replace(/^\/+|\/+$/g,"");let r=t(new URL(this.config.root).pathname),o=t(new URL(s).pathname),n;return o.startsWith(r)?n=t(o.substring(r.length)):n="",this.get_page_config(n)}get_page_config(s){if(!this.config)throw new Error(nn);let t=this.config;return s in t.page||(s=""),{...t,current_page:s,layout:t.page[s].layout,components:t.components.filter(r=>t.page[s].components.includes(r.id)),dependencies:this.config.dependencies.filter(r=>t.page[s].dependencies.includes(r.id))}}fetch(s,t){const r=new Headers((t==null?void 0:t.headers)||{});if(this&&this.cookies&&r.append("Cookie",this.cookies),this&&this.options.headers)for(const o in this.options.headers)r.append(o,this.options.headers[o]);return fetch(s,{...t,headers:r})}stream(s){const t=new Headers;if(this&&this.cookies&&t.append("Cookie",this.cookies),this&&this.options.headers)for(const r in this.options.headers)t.append(r,this.options.headers[r]);return this&&this.options.hf_token&&t.append("Authorization",`Bearer ${this.options.hf_token}`),this.abort_controller=new AbortController,this.stream_instance=dE(s.toString(),{credentials:"include",headers:t,signal:this.abort_controller.signal}),this.stream_instance}async init(){var s;if((typeof window>"u"||!("WebSocket"in window))&&!window.WebSocket){const t=await Gc(()=>import("./wrapper-CviSselG-Cfp35juQ.js"),__vite__mapDeps([0,1]));window.WebSocket=t.WebSocket}this.options.auth&&await this.resolve_cookies(),await this._resolve_config().then(({config:t})=>this._resolve_hearbeat(t)),this.api_info=await this.view_api(),this.api_map=A1(((s=this.config)==null?void 0:s.dependencies)||[])}async _resolve_hearbeat(s){if(s&&(this.config=s,this.api_prefix=s.api_prefix||"",this.config&&this.config.connect_heartbeat&&this.config.space_id&&this.options.hf_token&&(this.jwt=await ky(this.config.space_id,this.options.hf_token,this.cookies))),s.space_id&&this.options.hf_token&&(this.jwt=await ky(s.space_id,this.options.hf_token)),this.config&&this.config.connect_heartbeat){const t=new URL(`${this.config.root}${this.api_prefix}/${b1}/${this.session_hash}`);this.jwt&&t.searchParams.set("__sign",this.jwt),this.heartbeat_event||(this.heartbeat_event=this.stream(t))}}static async connect(s,t={events:["data"]}){const r=new this(s,t);return await r.init(),r}close(){this.closed=!0,Pa(this.stream_status,this.abort_controller)}set_current_payload(s){this.current_payload=s}static async duplicate(s,t={events:["data"]}){return eE(s,t)}async _resolve_config(){const{http_protocol:s,host:t,space_id:r}=await Ca(this.app_reference,this.options.hf_token),{status_callback:o}=this.options;r&&o&&await Fv(r,o);let n;try{let i=`${s}//${t}`;if(n=await this.resolve_config(i),!n)throw new Error(nn);return this.config_success(n)}catch(i){if(r&&o)oi(r,Vu.test(r)?"space_name":"subdomain",this.handle_space_success);else throw o&&o({status:"error",message:"Could not load this space.",load_status:"error",detail:"NOT_FOUND"}),Error(i)}}async config_success(s){if(this.config=s,this.api_prefix=s.api_prefix||"",typeof window<"u"&&typeof document<"u"&&window.location.protocol==="https:"&&(this.config.root=this.config.root.replace("http://","https://")),this.config.auth_required)return this.prepare_return_obj();try{this.api_info=await this.view_api()}catch(t){console.error(P1+t.message)}return this.prepare_return_obj()}async handle_space_success(s){var t;if(!this)throw new Error(nn);const{status_callback:r}=this.options;if(r&&r(s),s.status==="running")try{if(this.config=await this._resolve_config(),this.api_prefix=((t=this==null?void 0:this.config)==null?void 0:t.api_prefix)||"",!this.config)throw new Error(nn);return await this.config_success(this.config)}catch(o){throw r&&r({status:"error",message:"Could not load this space.",load_status:"error",detail:"NOT_FOUND"}),o}}async component_server(s,t,r){var o;if(!this.config)throw new Error(nn);const n={},{hf_token:i}=this.options,{session_hash:a}=this;i&&(n.Authorization=`Bearer ${this.options.hf_token}`);let l,c=this.config.components.find(u=>u.id===s);(o=c==null?void 0:c.props)!=null&&o.root_url?l=c.props.root_url:l=this.config.root;let p;if("binary"in r){p=new FormData;for(const u in r.data)u!=="binary"&&p.append(u,r.data[u]);p.set("component_id",s.toString()),p.set("fn_name",t),p.set("session_hash",a)}else p=JSON.stringify({data:r,component_id:s,fn_name:t,session_hash:a}),n["Content-Type"]="application/json";i&&(n.Authorization=`Bearer ${i}`);try{const u=await this.fetch(`${l}${this.api_prefix}/${M1}/`,{method:"POST",body:p,headers:n,credentials:"include"});if(!u.ok)throw new Error("Could not connect to component server: "+u.statusText);return await u.json()}catch(u){console.warn(u)}}set_cookies(s){this.cookies=Iv(s).join("; ")}prepare_return_obj(){return{config:this.config,predict:this.predict,submit:this.submit,view_api:this.view_api,component_server:this.component_server}}async connect_ws(s){return new Promise((t,r)=>{let o;try{o=new WebSocket(s)}catch{this.ws_map[s]="failed";return}this.ws_map[s]="pending",o.onopen=()=>{this.ws_map[s]=o,t()},o.onerror=n=>{console.error("WebSocket error:",n),this.close_ws(s),this.ws_map[s]="failed",t()},o.onclose=()=>{this.ws_map[s]="closed"},o.onmessage=n=>{}})}async send_ws_message(s,t){if(!(s in this.ws_map))await this.connect_ws(s);else if(this.ws_map[s]==="pending"||this.ws_map[s]==="closed"||this.ws_map[s]==="failed")return;const r=this.ws_map[s];r instanceof WebSocket?r.send(JSON.stringify(t)):this.post_data(s,t)}async close_ws(s){if(s in this.ws_map){const t=this.ws_map[s];t instanceof WebSocket&&(t.close(),delete this.ws_map[s])}}}l1.allowLocalModels=!1;async function fE(e,s=null){try{const r=await c1("image-segmentation","Xenova/segformer_b2_clothes",{revision:"main",cache_dir:"./model_cache",quantized:!1}),o=await Promise.race([r(e),new Promise((n,i)=>setTimeout(()=>i(new Error("Segmentation timed out after 60s")),6e4))]);if(Array.isArray(o))return s&&s.length>0?o.filter(n=>n.label!==null&&s.includes(n.label)).map(n=>({label:n.label,mask:n.mask})):o.map(n=>({label:n.label,mask:n.mask}));throw new Error("Unexpected segmentation output format")}catch(t){throw console.error("Segmentation error:",t),t}}async function _E(e,s,t=null){const r=await Gu(s),o={},n=t&&(t==null?void 0:t.length)>0?e.filter(a=>t.includes(a.label)):e;for(const a of n){const{label:l,mask:c}=a,p=document.createElement("canvas");p.width=c.width,p.height=c.height;const u=p.getContext("2d");if(!u)throw new Error("Failed to get canvas rendering context");const d=wE(c);u.putImageData(d,0,0),o[l]={canvas:p,width:c.width,height:c.height,data:c.data,imageData:d,colorSpace:"srgb"}}const i=await gE(n,r);return{originalImage:r,processedMasks:o,width:r.width,height:r.height,compositeCanvas:i,filteredSegments:n}}async function gE(e,s){const t=document.createElement("canvas");t.width=s.width,t.height=s.height,t.className="main-composite-canvas";const r=t.getContext("2d");if(!r)throw new Error("Failed to get canvas rendering context");r.drawImage(s,0,0);const o=new Map;return e.forEach((n,i)=>{if(!o.has(n.label)){const g=Math.floor(i*137.5)%360;o.set(n.label,`hsla(${g}, 100%, 50%, 0.5)`)}const a=o.get(n.label),l=document.createElement("canvas");l.width=n.mask.width,l.height=n.mask.height;const c=l.getContext("2d");if(!c)throw new Error("Failed to get canvas rendering context");const p=new ImageData(new Uint8ClampedArray(n.mask.width*n.mask.height*4),n.mask.width,n.mask.height),u=document.createElement("div");u.style.color=a,document.body.appendChild(u);const d=getComputedStyle(u).color;document.body.removeChild(u);const _=d.match(/rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d*\.?\d+))?\)/);if(!_){console.error("Failed to parse color:",a);return}const f=parseInt(_[1],10),y=parseInt(_[2],10),$=parseInt(_[3],10),w=_[4]?parseFloat(_[4])*255:128;for(let g=0;g<n.mask.data.length;g++)n.mask.data[g]>128&&(p.data[g*4]=f,p.data[g*4+1]=y,p.data[g*4+2]=$,p.data[g*4+3]=w);c.putImageData(p,0,0),r.drawImage(l,0,0)}),t}function wE(e){const s=new Uint8ClampedArray(e.width*e.height*4);for(let t=0;t<e.data.length;t++){const r=e.data[t];s[t*4]=r,s[t*4+1]=r,s[t*4+2]=r,s[t*4+3]=255}return new ImageData(s,e.width,e.height)}function Gu(e){return new Promise((s,t)=>{const r=new Image;r.crossOrigin="Anonymous",r.onload=()=>s(r),r.onerror=t,r.src=e})}async function yE(e){const{originalImage:s,processedMasks:t,width:r,height:o}=e;if(!t.Face)throw new Error("No face detected in the image");const n=document.createElement("canvas");n.width=r,n.height=o;const i=n.getContext("2d");if(!i)throw new Error("Failed to get canvas rendering context");i.drawImage(s,0,0);const a=t.Face;return bE(i,a,10),new Promise(l=>{n.toBlob(c=>{if(c===null)throw new Error("Canvas conversion to blob failed");l(c)},"image/jpeg",.95)})}function bE(e,s,t){const r=e.getImageData(0,0,e.canvas.width,e.canvas.height),o=r.data,n=new Set;for(let i=0;i<e.canvas.height;i++)for(let a=0;a<e.canvas.width;a++){const l=Math.floor(a*(s.width/e.canvas.width)),p=Math.floor(i*(s.height/e.canvas.height))*s.width+l;s.data[p]>128&&n.add(`${a},${i}`)}for(let i=0;i<e.canvas.height;i+=t)for(let a=0;a<e.canvas.width;a+=t){let l=!1;for(let c=0;c<t&&i+c<e.canvas.height;c++){for(let p=0;p<t&&a+p<e.canvas.width;p++)if(n.has(`${a+p},${i+c}`)){l=!0;break}if(l)break}if(l){let c=0,p=0,u=0,d=0;for(let _=0;_<t&&i+_<e.canvas.height;_++)for(let f=0;f<t&&a+f<e.canvas.width;f++){const y=((i+_)*e.canvas.width+(a+f))*4;c+=o[y],p+=o[y+1],u+=o[y+2],d++}c=Math.floor(c/d),p=Math.floor(p/d),u=Math.floor(u/d);for(let _=0;_<t&&i+_<e.canvas.height;_++)for(let f=0;f<t&&a+f<e.canvas.width;f++)if(n.has(`${a+f},${i+_}`)){const y=((i+_)*e.canvas.width+(a+f))*4;o[y]=c,o[y+1]=p,o[y+2]=u}}}e.putImageData(r,0,0)}const Dy=async e=>{try{return await(await fetch(e)).blob()}catch(s){throw console.error("Error converting image URL to blob:",s),s}},ME=async(e,s,t,r={})=>{const{modelEndpoint:o="zhengchong/CatVTON",inferenceSteps:n=20,guidanceScale:i=2.5,seed:a=1e4}=r;try{const l=await Dy(e),c=await Dy(s),u=await(await du.connect(o,{hf_token:t})).predict("/submit_function_p2p",[{background:l,layers:[l],composite:l},c,n,i,a]);if(u&&Array.isArray(u.data)&&u.data.length>0){const d=u.data[0];if(d&&typeof d=="object"&&d.url){if(d.url.startsWith("http"))return d.url;{const _="https://zhengchong-catvton.hf.space";return new URL(d.url,_).href}}if(typeof d=="string"){if(d.startsWith("http")||d.startsWith("data:"))return d;try{return`data:image/jpeg;base64,${d}`}catch(_){console.error("Failed to convert string to data URL:",_)}}if(d instanceof Blob)return URL.createObjectURL(d)}throw console.error("Could not extract image URL from result:",u),new Error("Could not process HuggingFace result")}catch(l){throw console.error("HuggingFace processing error:",l),l}};async function vE(e,s){const{originalImage:t,faceMask:r}=s,o=await Gu(e),n=document.createElement("canvas");n.width=o.width,n.height=o.height;const i=n.getContext("2d");if(!i)throw new Error("Failed to get canvas rendering context");i.drawImage(o,0,0);const a=document.createElement("canvas");a.width=t.width,a.height=t.height;const l=a.getContext("2d");if(!l)throw new Error("Failed to get canvas rendering context");l.drawImage(t,0,0);const c=l.getImageData(0,0,a.width,a.height),p=i.getImageData(0,0,n.width,n.height);return xE(p,c,r),i.putImageData(p,0,0),new Promise(u=>{n.toBlob(d=>{if(d===null)throw new Error("Canvas conversion to blob failed");u(d)},"image/jpeg",.95)})}function xE(e,s,t){const r=e.data,o=s.data,n=s.width/e.width,i=s.height/e.height;for(let a=0;a<e.height;a++)for(let l=0;l<e.width;l++){const c=Math.floor(l*n),p=Math.floor(a*i),u=Math.floor(c*(t.width/s.width)),_=Math.floor(p*(t.height/s.height))*t.width+u,f=t.data[_];if(f>128){const y=(a*e.width+l)*4,$=(p*s.width+c)*4,w=f/255;r[y]=Math.round(o[$]*w+r[y]*(1-w)),r[y+1]=Math.round(o[$+1]*w+r[y+1]*(1-w)),r[y+2]=Math.round(o[$+2]*w+r[y+2]*(1-w))}}}const TE=({garment:e})=>{const[s,t]=os.useState(null),[r,o]=os.useState(null),[n,i]=os.useState(null),[a,l]=os.useState(null),[c,p]=os.useState("idle"),[u,d]=os.useState(null),_="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",f=c!=="idle",y=async T=>{if(!(!T.target.files||!T.target.files[0]))try{d(null),o(null),i(null),l(null);const v=T.target.files[0],b=URL.createObjectURL(v);t(b),await $(b)}catch(v){console.error("Upload error:",v),d(v instanceof Error?v.message:"Error uploading image"),p("idle")}},$=async T=>{if(T){p("segmentation"),d(null);try{const v=await fE(T,Mx);if(!v.some(H=>(H==null?void 0:H.label)==="Face"))throw new Error("No face detected in the image");const b=await _E(v,T),P={originalImage:await Gu(T),faceMask:b.processedMasks.Face};l(P),p("faceless");const A=await yE(b),D=URL.createObjectURL(A);o(D),e&&e.url?(p("tryon"),await w(D,e,P)):p("idle")}catch(v){console.error("Processing error:",v),d(v instanceof Error?v.message:"An error occurred during image processing"),p("idle")}}},w=async(T,v,b)=>{if(!T){console.error("Missing faceImageUrl in tryOnGarment");return}if(!v||!v.url){console.error("Missing or invalid garmentItem in tryOnGarment");return}if(!b){console.error("Missing faceData in tryOnGarment");return}d(null);try{const x={modelEndpoint:"zhengchong/CatVTON",inferenceSteps:20,guidanceScale:2.5,seed:Math.floor(Math.random()*1e4)},P=await ME(T,v.url,_,x);if(P&&b){const A=await vE(P,b),D=URL.createObjectURL(A);i(D)}}catch(x){console.error("Try-on error:",x),d(x instanceof Error?x.message:"An error occurred during virtual try-on")}finally{p("idle")}},g=T=>c===T,C=({image:T,placeholderText:v,isLoading:b,alt:x,delay:P})=>st.jsx(Zr.div,{className:"bg-gray-100 rounded-lg aspect-square flex items-center justify-center overflow-hidden",initial:{opacity:0},animate:{opacity:1},transition:{duration:.5,delay:P},children:st.jsx(dx,{mode:"wait",children:b?st.jsx(Zr.div,{className:"w-16 h-16 border-4 border-gray-300 border-t-gray-600 rounded-full",animate:{rotate:360},transition:{duration:1,repeat:Number.POSITIVE_INFINITY,ease:"linear"},exit:{opacity:0}},"loader"):T?st.jsx(Zr.img,{src:T,alt:x,className:"w-full h-full object-contain",initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},transition:{duration:.3}},"image"):st.jsx(Zr.span,{className:"text-gray-400 text-lg",initial:{opacity:0},animate:{opacity:1},children:v},"placeholder")})});return st.jsxs("div",{className:"min-h-screen bg-white flex flex-col items-center px-4 mt-10",children:[st.jsx(Zr.h1,{className:"text-4xl font-bold text-center mb-6",initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:.5},children:"Virtual Try On"}),u&&st.jsx(Zr.div,{className:"w-full max-w-7xl bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:u}),f&&st.jsxs(Zr.div,{className:"w-full max-w-7xl bg-blue-50 border border-blue-200 text-blue-700 px-4 py-3 rounded-md mb-6",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:[c==="segmentation"&&"Analyzing image...",c==="faceless"&&"Processing face...",c==="tryon"&&"Generating try-on result..."]}),st.jsxs("div",{className:"w-full max-w-7xl grid grid-cols-1 md:grid-cols-4 gap-4 mb-8",children:[st.jsx(C,{image:s,placeholderText:"Your Photo",isLoading:!1,alt:"Original Photo",delay:.1}),st.jsx(C,{image:r,placeholderText:"Processed Photo",isLoading:g("segmentation")||g("faceless"),alt:"Processed Photo",delay:.2}),st.jsx(C,{image:e==null?void 0:e.url,placeholderText:"Select Garment",isLoading:!1,alt:"Garment",delay:.3}),st.jsx(C,{image:n,placeholderText:"Result",isLoading:g("tryon"),alt:"Result",delay:.4})]}),st.jsxs(Zr.div,{className:"flex flex-col sm:flex-row gap-4",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.4},children:[st.jsxs("label",{className:`py-3 px-6 rounded-md font-medium transition-colors duration-200 ${f?"bg-gray-300 text-gray-500 cursor-not-allowed":"bg-gray-200 hover:bg-gray-300 text-gray-800 cursor-pointer"}`,children:["Upload your image",st.jsx("input",{type:"file",accept:"image/*",className:"hidden",onChange:y,disabled:f})]}),r&&e&&a&&st.jsx("button",{onClick:()=>w(r,e,a),disabled:f,className:`py-3 px-6 rounded-md font-medium transition-colors duration-200 ${f?"bg-blue-300 text-blue-100 cursor-not-allowed":"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer"}`,children:f?"Processing...":"Try Again"})]})]})},EE=({description:e})=>st.jsxs("div",{className:"mb-8",children:[st.jsx("h2",{className:"text-xl font-bold mb-4",children:Ks("lbl.description")}),st.jsx("div",{className:"border border-gray-200 rounded-[12px] p-4",dangerouslySetInnerHTML:{__html:e}})]}),PE=({author:e,isVerified:s=!1,rating:t,content:r,date:o})=>st.jsxs("div",{className:"border border-gray-200 rounded-[12px] p-6 mb-4",children:[st.jsx("div",{className:"flex justify-between items-start mb-2",children:st.jsxs("div",{children:[st.jsx("div",{className:"mb-2",children:st.jsx(Ly,{rating:t})}),st.jsxs("div",{className:"flex items-center",children:[st.jsx("span",{className:"font-medium mr-2",children:e}),s&&st.jsx("span",{className:"bg-green-500 rounded-full w-4 h-4 flex items-center justify-center",children:st.jsx("span",{className:"text-white text-xs",children:"✓"})}),st.jsxs("p",{className:"text-sm text-gray-500 mx-5",children:[Ks("lbl.postOn")," ",hx(o)]})]})]})}),st.jsx("p",{className:"text-gray-700 my-2",children:r})]}),CE=({productId:e})=>{const{reviews:s,pageable:t,loading:r,error:o,fetchReviews:n}=mx(),[i,a]=os.useState(0),[l,c]=os.useState([]),p=5;os.useEffect(()=>{c([]),a(0),n(0,p,["createdAt,desc"],void 0,void 0,void 0,void 0,e)},[e]),os.useEffect(()=>{s&&s.length>0&&c(i===0?s:d=>{const _=new Set(d.map(y=>y.id)),f=s.filter(y=>!_.has(y.id));return[...d,...f]})},[s,i]);const u=()=>{if(t&&i<t.totalPages-1){const d=i+1;a(d),n(d,p,["createdAt,desc"],void 0,void 0,void 0,void 0,e)}};return r&&i===0?st.jsx("div",{className:"flex justify-center items-center mt-16 mb-8",children:st.jsx("div",{className:"loader",children:Ks("lbl.loading")})}):o?st.jsx("div",{className:"text-red-500",children:o}):st.jsxs("div",{className:"mt-16 mb-8",children:[st.jsx("div",{className:"flex justify-between items-center mb-6",children:st.jsxs("h2",{className:"text-xl font-bold",children:[Ks("lbl.allReviews")," ",st.jsxs("span",{className:"text-gray-500 font-normal",children:["(",(t==null?void 0:t.totalElements)||0,")"]})]})}),l&&l.length>0?st.jsxs(st.Fragment,{children:[l.map(d=>st.jsx(PE,{author:d.userName,isVerified:!0,rating:d.rating,content:d.comment,date:d.createdAt},d.id)),t&&i<t.totalPages-1&&st.jsx("button",{className:"w-full py-3 border border-gray-300 rounded-[12px] text-gray-600 hover:bg-gray-50 transition-colors",onClick:u,disabled:r,children:r?Ks("btn.loading"):Ks("btn.loadMoreReviews")})]}):st.jsx("p",{className:"text-gray-500 text-center py-6",children:Ks("lbl.noReviewsYet")})]})},SE=()=>{const[e,s]=os.useState(!1);return{loading:e,fetchProductImages:async r=>{s(!0);try{return(await lx(r)).data||null}finally{s(!1)}}}},{TIME_OUT_ADD_TO_CART:$E}=gx,UE=()=>{const{id:e}=px(),{fetchProductById:s,loading:t}=cx(),{loading:r,fetchProductImages:o}=SE(),{loading:n,fetchProductColorSizes:i}=ux(),[a,l]=os.useState([]),[c,p]=os.useState([]),[u,d]=os.useState(),[_,f]=os.useState([]),[y,$]=os.useState([]),[w,g]=os.useState(!1),{userInfo:C}=Gf(x=>x.auth),T=Gf(x=>x.auth.isAuthenticated),{addCartItem:v}=_x();os.useEffect(()=>{(async()=>{if(!e)return;const P=await s(e),A=await o(e),D=await i(e);if(D){$(D);const H=D.map(B=>B.color).filter((B,Y,q)=>Y===q.findIndex(Q=>Q.id===B.id)),K=D.map(B=>B.size).filter((B,Y,q)=>Y===q.findIndex(Q=>Q.id===B.id));l(H),p(K)}P&&d(P),A&&f(A)})()},[e]);const b=async(x,P)=>{if(!(C!=null&&C.id)||!T){Nl(Ks("error.loginRequired"));return}if(!x){Nl(Ks("error.quantityRequired"));return}if(P===""){Nl(Ks("error.itemRequired"));return}const A={userId:C==null?void 0:C.id,itemId:P,quantity:x};await v(A)&&(g(!0),setTimeout(()=>{g(!1)},$E))};return t||r||n?st.jsx(fx,{}):st.jsxs("div",{className:"mt-10 px-4 py-8 font-sans",children:[st.jsx(rx,{items:[{label:Ks("breadcrumb.home"),path:"/"},{label:Ks("breadcrumb.detailProduct"),path:"/product"}]}),st.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-4",children:[_&&st.jsx(wx,{images:_}),u&&st.jsx(bx,{product:u,colors:a,productColorSize:y,sizes:c,isAdding:w,handleAddToCart:b})]}),st.jsx(TE,{garment:_[0]}),(u==null?void 0:u.description)&&st.jsx(EE,{description:u.description}),st.jsx(CE,{productId:u==null?void 0:u.id})]})};export{UE as default};
