var gv=Object.defineProperty;var wv=(e,r,t)=>r in e?gv(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var Z=(e,r,t)=>wv(e,typeof r!="symbol"?r+"":r,t);import{r as qt,j as Xe,k as bv,t as Vt,y as yv,u as Cf,i as Al}from"./index-YT-tQ_yZ.js";import{B as Mv}from"./Breadcrumb-CMmgObY6.js";import{R as ub,C as vv,S as xv,Q as Tv,A as Ev,g as Pv,u as Cv,a as Sv}from"./products-p37dBr7V.js";import{f as Sf}from"./string-msUNxrnf.js";import{z as Ys,A as $v,H as Iv}from"./App-Cy2zvDKu.js";import{f as kv}from"./formatDate-CIINGDw_.js";import{u as Av}from"./reviews-DexiZHGg.js";import{L as Fv}from"./Loading-D2jcJrzf.js";import{u as Ov}from"./cart-e_BRE0Xu.js";import{c as Dv}from"./common-Cbvgc8aE.js";const Lv=({images:e})=>{var s;const[r,t]=qt.useState(0);return Xe.jsxs("div",{className:"flex flex-col md:flex-row gap-4",children:[Xe.jsx("div",{className:"flex md:flex-col gap-2",children:e.map((i,n)=>Xe.jsx("img",{src:i.url,className:`w-24 h-24 object-cover cursor-pointer rounded-[12px] ${r===n?"border-2 border-blue-500":""}`,onClick:()=>t(n)},i.id))}),Xe.jsx("div",{className:"flex-1",children:Xe.jsx("img",{src:(s=e[r])==null?void 0:s.url,className:"w-full h-auto rounded-[12px]"})})]})},zv=({currentPrice:e,originalPrice:r,discountPercentage:t,size:s="md"})=>{var o;const{settings:i}=bv(),n=((o=i.find(l=>l.key==="CurrencyCode"))==null?void 0:o.value)||"VND",a={sm:{current:"text-base font-bold",original:"text-sm text-gray-400 line-through",discount:"text-xs text-red-500 bg-red-100 px-1.5 py-0.5 rounded"},md:{current:"text-xl font-bold",original:"text-base text-gray-400 line-through",discount:"text-xs text-red-500 bg-red-100 px-2 py-0.5 rounded"},lg:{current:"text-2xl font-bold",original:"text-xl text-gray-400 line-through",discount:"text-sm text-red-500 bg-red-100 px-2 py-0.5 rounded"}};return Xe.jsxs("div",{className:"flex items-center gap-2",children:[Xe.jsx("span",{className:a[s].current,children:Sf(e,n)}),t!=0&&Xe.jsx("span",{className:a[s].original,children:Sf(r,n)}),t!=0&&Xe.jsxs("span",{className:a[s].discount,children:["-",t,"%"]})]})},Bv=({product:e,colors:r,productColorSize:t,sizes:s,handleAddToCart:i,isAdding:n})=>{const[a,o]=qt.useState(""),[l,c]=qt.useState(""),[p,d]=qt.useState(""),[u,_]=qt.useState(1),[f,v]=qt.useState(e.total||0);qt.useEffect(()=>{if(a&&l){const w=t.find(g=>g.color.id===a&&g.size.id===l);w?(d(w.id),v(w.quantity)):v(0)}else v(e.total||0)},[a,l,t,e.total]);const $=w=>{_(w==="increase"?g=>g<f?g+1:f:g=>g>1?g-1:1)};return Xe.jsxs("div",{className:"flex flex-col",children:[Xe.jsxs("div",{className:"flex items-center justify-between mb-2",children:[Xe.jsx("h1",{className:"text-2xl font-bold",children:e.name}),Xe.jsx("span",{className:"text-xs font-semibold text-blue-800 bg-blue-100 px-4 py-1 rounded-full mt-1 inline-block",children:`${Vt("lbl.quantity")}: ${f}`}),Xe.jsx("span",{className:`text-xs font-semibold ${f>0?"text-green-800 bg-green-100":"text-red-800 bg-red-100"} px-4 py-1 rounded-full`,children:f>0?Vt("lbl.inStock"):Vt("lbl.outOfStock")})]}),Xe.jsx("div",{className:"flex items-center mb-4",children:Xe.jsx(ub,{rating:e.averageRating})}),Xe.jsx("div",{className:"mb-4",children:Xe.jsx(zv,{currentPrice:e.price*(100-e.discountPercent)/100,originalPrice:e.price,discountPercentage:e.discountPercent,size:"lg"})}),Xe.jsx(vv,{colors:r,selectedColor:a,onChange:o}),Xe.jsx(xv,{sizes:s,selectedSize:l,onChange:c}),f>0&&Xe.jsxs("div",{className:"flex items-center gap-4",children:[Xe.jsx(Tv,{quantity:u,onDecrement:()=>$("decrease"),onIncrement:()=>$("increase")}),Xe.jsx(Ev,{isAdding:n,onClick:()=>i(u,p)})]})]})},$f=["Face"],oo=new Map,In=[],Rv=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=oo.get(e);if(s===void 0)oo.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const i=In.indexOf(e);i!==-1&&In.splice(i,1);for(let n=0;n<In.length;n++)if(oo.get(In[n]).priority<=t){In.splice(n,0,e);return}In.push(e)}return}throw new TypeError("not a valid backend")},jv=async e=>{const r=oo.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},Nv=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?In:t;let i;const n=[],a=new Set;for(const l of s){const c=await jv(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&a.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const o=r.filter(l=>a.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?o:Reflect.get(l,c)})]},Vv="1.21.0";let If="warning";const Ps={wasm:{},webgl:{},webgpu:{},versions:{common:Vv},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);If=e}},get logLevel(){return If}};Object.defineProperty(Ps,"logLevel",{enumerable:!0});const Uv=Ps,Wv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);const a=(r==null?void 0:r.format)!==void 0?r.format:"RGB",o=r==null?void 0:r.norm;let l,c;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?c=[0,0,0,0]:typeof o.bias=="number"?c=[o.bias,o.bias,o.bias,o.bias]:(c=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(c[3]=o.bias[3]));const p=n*i;let d=0,u=p,_=p*2,f=-1;a==="RGBA"?(d=0,u=p,_=p*2,f=p*3):a==="RGB"?(d=0,u=p,_=p*2):a==="RBG"&&(d=0,_=p,u=p*2);for(let v=0;v<n;v++)for(let $=0;$<i;$++){const w=(e.data[d++]-c[0])*l[0],g=(e.data[u++]-c[1])*l[1],C=(e.data[_++]-c[2])*l[2],E=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+w+","+g+","+C+","+E+")",s.fillRect($,v,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Gv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let i,n,a;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],a=e.dims[3]):(i=e.dims[3],n=e.dims[2],a=e.dims[1]);const o=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const d=n*i;if(r!==void 0&&(r.format!==void 0&&a===4&&r.format!=="RGBA"||a===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const u=4;let _=0,f=1,v=2,$=3,w=0,g=d,C=d*2,E=-1;o==="RGBA"?(w=0,g=d,C=d*2,E=d*3):o==="RGB"?(w=0,g=d,C=d*2):o==="RBG"&&(w=0,C=d,g=d*2),s=t.createImageData(i,n);for(let x=0;x<n*i;_+=u,f+=u,v+=u,$+=u,x++)s.data[_]=(e.data[w++]-p[0])*c[0],s.data[f]=(e.data[g++]-p[1])*c[1],s.data[v]=(e.data[C++]-p[2])*c[2],s.data[$]=E===-1?255:(e.data[E++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Fl=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,i=r.norm??{mean:255,bias:0};let n,a;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?a=[i.bias,i.bias,i.bias,i.bias]:a=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];const o=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,u=0,_=1,f=2,v=3,$=0,w=c,g=c*2,C=-1;o==="RGB"&&(d=3,u=0,_=1,f=2,v=-1),l==="RGBA"?C=c*3:l==="RBG"?($=0,g=c,w=c*2):l==="BGR"&&(g=0,w=c,$=c*2);for(let x=0;x<c;x++,u+=d,f+=d,_+=d,v+=d)p[$++]=(e[u]+a[0])/n[0],p[w++]=(e[_]+a[1])/n[1],p[g++]=(e[f]+a[2])/n[2],C!==-1&&v!==-1&&(p[C++]=(e[v]+a[3])/n[3]);return l==="RGBA"?new us("float32",p,[1,4,t,s]):new us("float32",p,[1,3,t,s])},Kv=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let a,o=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(o=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=u,o.width=_}else o.tensorFormat="RGBA",o.height=u,o.width=_;d.drawImage(e,0,0),a=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(o=r),o.format="RGBA",o.height=p,o.width=d,r!==void 0){const u=l();u.width=d,u.height=p;const _=c(u);if(_!=null)_.putImageData(e,0,0),a=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else a=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){const u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),a=d.getImageData(0,0,_,u).data,o.height=u,o.width=_,Fl(a,o)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{const u=l(),_=c(u);if(!e||!_)return d();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);const v=_.getImageData(0,0,u.width,u.height);o.height=u.height,o.width=u.width,p(Fl(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return Fl(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")},Hv=(e,r)=>{const{width:t,height:s,download:i,dispose:n}=r,a=[1,s,t,4];return new us({location:"texture",type:"float32",texture:e,dims:a,download:i,dispose:n})},qv=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new us({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},Qv=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new us({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},Xv=(e,r,t)=>new us({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),ri=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),lo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let kf=!1;const Jv=()=>{if(!kf){kf=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(ri.set("int64",BigInt64Array),lo.set(BigInt64Array,"int64")),r&&(ri.set("uint64",BigUint64Array),lo.set(BigUint64Array,"uint64")),s?(ri.set("float16",t),lo.set(t,"float16")):ri.set("float16",Uint16Array)}},Yv=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Zv=(e,r)=>{switch(e.location){case"cpu":return new us(e.type,e.data,r);case"cpu-pinned":return new us({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new us({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new us({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new us({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let us=class{constructor(r,t,s){Jv();let i,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,i=r.type,n=r.dims,r.location){case"cpu-pinned":{const o=ri.get(i);if(!o)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(r.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=r.data;break}case"texture":{if(i!=="float32")throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint64"&&i!=="int8"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if(typeof r=="string")if(i=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{const c=ri.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?o=c.from(t,BigInt):o=c.from(t)}else if(t instanceof c)o=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)o=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${i} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")i="string",o=r;else if(c==="boolean")i="bool",o=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)i="uint8",o=Uint8Array.from(r);else{const c=lo.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);i=c,o=r}if(l===void 0)l=[o.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=o,this.dataLocation="cpu"}const a=Yv(n);if(this.cpuData&&a!==this.cpuData.length&&!((i==="uint4"||i==="int4")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=n,this.size=a}static async fromImage(r,t){return Kv(r,t)}static fromTexture(r,t){return Hv(r,t)}static fromGpuBuffer(r,t){return qv(r,t)}static fromMLTensor(r,t){return Qv(r,t)}static fromPinnedBuffer(r,t,s){return Xv(r,t,s)}toDataURL(r){return Wv(this,r)}toImageData(r){return Gv(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Zv(this,r)}};const ei=us,pb=(e,r)=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||console.timeStamp(`${e}::ORT::${r}`)},mb=(e,r)=>{var i;const t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let a=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(a+=`::${r}`),pb("CPU",a);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Fc=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||mb("BEGIN",e)},Oc=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||mb("END",e)};let ex=class hb{constructor(r){this.handler=r}async run(r,t,s){Fc();const i={};let n={};if(typeof r!="object"||r===null||r instanceof ei||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ei)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(p.indexOf(d)!==-1){const u=t[d];(u===null||u instanceof ei)&&(c=!0,a=!1,i[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(a)for(const c of this.outputNames)i[c]=null;const o=await this.handler.run(r,i,n),l={};for(const c in o)if(Object.hasOwnProperty.call(o,c)){const p=o[c];p instanceof ei?l[c]=p:l[c]=new ei(p.type,p.data,p.dims)}return Oc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){Fc();let n,a={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)a=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[o,l]=await Nv(a),c=await o.createInferenceSessionHandler(n,l);return Oc(),new hb(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const tx=ex,rx=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:tx,TRACE:pb,TRACE_FUNC_BEGIN:Fc,TRACE_FUNC_END:Oc,Tensor:ei,env:Uv,registerBackend:Rv},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Jc=Object.defineProperty,sx=Object.getOwnPropertyDescriptor,nx=Object.getOwnPropertyNames,ix=Object.prototype.hasOwnProperty,ax=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),je=(e,r)=>()=>(e&&(r=e(e=0)),r),ai=(e,r)=>{for(var t in r)Jc(e,t,{get:r[t],enumerable:!0})},ox=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of nx(r))!ix.call(e,i)&&i!==t&&Jc(e,i,{get:()=>r[i],enumerable:!(s=sx(r,i))||s.enumerable});return e},Yi=e=>ox(Jc({},"__esModule",{value:!0}),e),zi,Zs,Fn,Af,fb,_b=je(()=>{zi=new Map,Zs=[],Fn=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=zi.get(e);if(s===void 0)zi.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let i=Zs.indexOf(e);i!==-1&&Zs.splice(i,1);for(let n=0;n<Zs.length;n++)if(zi.get(Zs[n]).priority<=t){Zs.splice(n,0,e);return}Zs.push(e)}return}throw new TypeError("not a valid backend")},Af=async e=>{let r=zi.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},fb=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Zs:t,i,n=[],a=new Set;for(let l of s){let c=await Af(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&a.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let o=r.filter(l=>a.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?o:Reflect.get(l,c)})]}}),lx=je(()=>{_b()}),gb,cx=je(()=>{gb="1.22.0-dev.20250409-89f8206ba4"}),Ol,ds,wb=je(()=>{cx(),Ol="warning",ds={wasm:{},webgl:{},webgpu:{},versions:{common:gb},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ol=e}},get logLevel(){return Ol}},Object.defineProperty(ds,"logLevel",{enumerable:!0})}),tr,dx=je(()=>{wb(),tr=ds}),bb,yb,ux=je(()=>{bb=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);let a=(r==null?void 0:r.format)!==void 0?r.format:"RGB",o=r==null?void 0:r.norm,l,c;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?c=[0,0,0,0]:typeof o.bias=="number"?c=[o.bias,o.bias,o.bias,o.bias]:(c=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(c[3]=o.bias[3]));let p=n*i,d=0,u=p,_=p*2,f=-1;a==="RGBA"?(d=0,u=p,_=p*2,f=p*3):a==="RGB"?(d=0,u=p,_=p*2):a==="RBG"&&(d=0,_=p,u=p*2);for(let v=0;v<n;v++)for(let $=0;$<i;$++){let w=(e.data[d++]-c[0])*l[0],g=(e.data[u++]-c[1])*l[1],C=(e.data[_++]-c[2])*l[2],E=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+w+","+g+","+C+","+E+")",s.fillRect($,v,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},yb=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let i,n,a;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],a=e.dims[3]):(i=e.dims[3],n=e.dims[2],a=e.dims[1]);let o=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let d=n*i;if(r!==void 0&&(r.format!==void 0&&a===4&&r.format!=="RGBA"||a===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,_=0,f=1,v=2,$=3,w=0,g=d,C=d*2,E=-1;o==="RGBA"?(w=0,g=d,C=d*2,E=d*3):o==="RGB"?(w=0,g=d,C=d*2):o==="RBG"&&(w=0,C=d,g=d*2),s=t.createImageData(i,n);for(let x=0;x<n*i;_+=u,f+=u,v+=u,$+=u,x++)s.data[_]=(e.data[w++]-p[0])*c[0],s.data[f]=(e.data[g++]-p[1])*c[1],s.data[v]=(e.data[C++]-p[2])*c[2],s.data[$]=E===-1?255:(e.data[E++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),Ha,Mb,vb,xb,Tb,Eb,px=je(()=>{Yc(),Ha=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,i=r.norm??{mean:255,bias:0},n,a;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?a=[i.bias,i.bias,i.bias,i.bias]:a=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let o=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,u=0,_=1,f=2,v=3,$=0,w=c,g=c*2,C=-1;o==="RGB"&&(d=3,u=0,_=1,f=2,v=-1),l==="RGBA"?C=c*3:l==="RBG"?($=0,g=c,w=c*2):l==="BGR"&&(g=0,w=c,$=c*2);for(let E=0;E<c;E++,u+=d,f+=d,_+=d,v+=d)p[$++]=(e[u]+a[0])/n[0],p[w++]=(e[_]+a[1])/n[1],p[g++]=(e[f]+a[2])/n[2],C!==-1&&v!==-1&&(p[C++]=(e[v]+a[3])/n[3]);return l==="RGBA"?new Zr("float32",p,[1,4,t,s]):new Zr("float32",p,[1,3,t,s])},Mb=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",a,o=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(o=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=u,o.width=_}else o.tensorFormat="RGBA",o.height=u,o.width=_;d.drawImage(e,0,0),a=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(o=r),o.format="RGBA",o.height=p,o.width=d,r!==void 0){let u=l();u.width=d,u.height=p;let _=c(u);if(_!=null)_.putImageData(e,0,0),a=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else a=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),a=d.getImageData(0,0,_,u).data,o.height=u,o.width=_,Ha(a,o)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{let u=l(),_=c(u);if(!e||!_)return d();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);let v=_.getImageData(0,0,u.width,u.height);o.height=u.height,o.width=u.width,p(Ha(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return Ha(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")},vb=(e,r)=>{let{width:t,height:s,download:i,dispose:n}=r,a=[1,s,t,4];return new Zr({location:"texture",type:"float32",texture:e,dims:a,download:i,dispose:n})},xb=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new Zr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},Tb=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new Zr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},Eb=(e,r,t)=>new Zr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),kn,Hi,Dl,Pb,mx=je(()=>{kn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Hi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Dl=!1,Pb=()=>{if(!Dl){Dl=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(kn.set("int64",BigInt64Array),Hi.set(BigInt64Array,"int64")),r&&(kn.set("uint64",BigUint64Array),Hi.set(BigUint64Array,"uint64")),s?(kn.set("float16",t),Hi.set(t,"float16")):kn.set("float16",Uint16Array)}}}),Cb,Sb,hx=je(()=>{Yc(),Cb=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Sb=(e,r)=>{switch(e.location){case"cpu":return new Zr(e.type,e.data,r);case"cpu-pinned":return new Zr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Zr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Zr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Zr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Zr,Yc=je(()=>{ux(),px(),mx(),hx(),Zr=class{constructor(e,r,t){Pb();let s,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=kn.get(s);if(!a)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,o;if(typeof e=="string")if(s=e,o=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");a=r}else{let l=kn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?a=l.from(r,BigInt):a=l.from(r)}else if(r instanceof l)a=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")a=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)a=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(o=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",a=e;else if(l==="boolean")s="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",a=Uint8Array.from(e);else{let l=Hi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,a=e}if(o===void 0)o=[a.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");i=o,this.cpuData=a,this.dataLocation="cpu"}let n=Cb(i);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=i,this.size=n}static async fromImage(e,r){return Mb(e,r)}static fromTexture(e,r){return vb(e,r)}static fromGpuBuffer(e,r){return xb(e,r)}static fromMLTensor(e,r){return Tb(e,r)}static fromPinnedBuffer(e,r,t){return Eb(e,r,t)}toDataURL(e){return bb(this,e)}toImageData(e){return yb(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Sb(this,e)}}}),Es,$b=je(()=>{Yc(),Es=Zr}),Zi,Ll,Cs,ps,Ib=je(()=>{wb(),Zi=(e,r)=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||console.timeStamp(`${e}::ORT::${r}`)},Ll=(e,r)=>{var i;let t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let a=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(a+=`::${r}`),Zi("CPU",a);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Cs=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Ll("BEGIN",e)},ps=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Ll("END",e)}}),kb,fx=je(()=>{_b(),$b(),Ib(),kb=class Ab{constructor(r){this.handler=r}async run(r,t,s){Cs();let i={},n={};if(typeof r!="object"||r===null||r instanceof Es||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Es)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(p.indexOf(d)!==-1){let u=t[d];(u===null||u instanceof Es)&&(c=!0,a=!1,i[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(a)for(let c of this.outputNames)i[c]=null;let o=await this.handler.run(r,i,n),l={};for(let c in o)if(Object.hasOwnProperty.call(o,c)){let p=o[c];p instanceof Es?l[c]=p:l[c]=new Es(p.type,p.data,p.dims)}return ps(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){Cs();let n,a={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)a=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await fb(a),c=await o.createInferenceSessionHandler(n,l);return ps(),new Ab(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),Zc,_x=je(()=>{fx(),Zc=kb}),gx=je(()=>{}),wx=je(()=>{}),bx=je(()=>{}),yx=je(()=>{}),Fb={};ai(Fb,{InferenceSession:()=>Zc,TRACE:()=>Zi,TRACE_FUNC_BEGIN:()=>Cs,TRACE_FUNC_END:()=>ps,Tensor:()=>Es,env:()=>tr,registerBackend:()=>Fn});var Ss=je(()=>{lx(),dx(),_x(),$b(),gx(),wx(),Ib(),bx(),yx()}),ed=je(()=>{}),Ob={};ai(Ob,{default:()=>Db});var zl,Bl,Db,Mx=je(()=>{var e;j0(),zn(),td(),zl="ort-wasm-proxy-worker",Bl=((e=globalThis.self)==null?void 0:e.name)===zl,Bl&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":rd(s.wasm).then(()=>{yd(s).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})})},i=>{postMessage({type:t,err:i})});break;case"init-ep":{let{epName:i,env:n}=s;Md(n,i).then(()=>{postMessage({type:t})},a=>{postMessage({type:t,err:a})});break}case"copy-from":{let{buffer:i}=s,n=wo(i);postMessage({type:t,out:n});break}case"create":{let{model:i,options:n}=s;vd(i,n).then(a=>{postMessage({type:t,out:a})},a=>{postMessage({type:t,err:a})});break}case"release":xd(s),postMessage({type:t});break;case"run":{let{sessionId:i,inputIndices:n,inputs:a,outputIndices:o,options:l}=s;Td(i,n,a,o,new Array(o.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Pd([...a,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":Ed(s),postMessage({type:t});break;default:}}catch(i){postMessage({type:t,err:i})}}),Db=Bl?null:r=>new Worker(r??Yr,{type:"module",name:zl})}),Lb={};ai(Lb,{default:()=>zb});var Rl,jl,zb,Ff,vx=je(()=>{var e,r;jl=(Rl=import.meta.url,async function(t={}){var Qn;var s,i,n=t,a=new Promise((m,T)=>{s=m,i=T}),o=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((Qn=self.name)==null?void 0:Qn.startsWith("em-pthread"));n.mountExternalData=(m,T)=>{m.startsWith("./")&&(m=m.substring(2)),(n.Eb||(n.Eb=new Map)).set(m,T)},n.unmountExternalData=()=>{delete n.Eb};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=m=>async(...T)=>{var k;try{if(n.Fb)throw Error("Session already started");let L=n.Fb={dc:T[0],errors:[]},V=await m(...T);if(n.Fb!==L)throw Error("Session mismatch");(k=n.Jb)==null||k.flush();let ce=L.errors;if(0<ce.length){let Te=await Promise.all(ce);if(Te=Te.filter(Le=>Le),0<Te.length)throw Error(Te.join(`
`))}return V}finally{n.Fb=null}};n.jsepInit=(m,T)=>{if(m==="webgpu"){[n.Jb,n.Ub,n.Yb,n.Kb,n.Xb,n.jb,n.Zb,n.ac,n.Vb,n.Wb,n.$b]=T;let k=n.Jb;n.jsepRegisterBuffer=(L,V,ce,Te)=>k.registerBuffer(L,V,ce,Te),n.jsepGetBuffer=L=>k.getBuffer(L),n.jsepCreateDownloader=(L,V,ce)=>k.createDownloader(L,V,ce),n.jsepOnCreateSession=L=>{k.onCreateSession(L)},n.jsepOnReleaseSession=L=>{k.onReleaseSession(L)},n.jsepOnRunStart=L=>k.onRunStart(L),n.bc=(L,V)=>{k.upload(L,V)}}else if(m==="webnn"){let k=T[0];[n.nc,n.Nb,n.webnnEnsureTensor,n.Ob,n.webnnDownloadTensor]=T.slice(1),n.webnnReleaseTensorId=n.Nb,n.webnnUploadTensor=n.Ob,n.webnnOnRunStart=L=>k.onRunStart(L),n.webnnOnRunEnd=k.onRunEnd.bind(k),n.webnnRegisterMLContext=(L,V)=>{k.registerMLContext(L,V)},n.webnnOnReleaseSession=L=>{k.onReleaseSession(L)},n.webnnCreateMLTensorDownloader=(L,V)=>k.createMLTensorDownloader(L,V),n.webnnRegisterMLTensor=(L,V,ce,Te)=>k.registerMLTensor(L,V,ce,Te),n.webnnCreateMLContext=L=>k.createMLContext(L),n.webnnRegisterMLConstant=(L,V,ce,Te,Le,Ke)=>k.registerMLConstant(L,V,ce,Te,Le,n.Eb,Ke),n.webnnRegisterGraphInput=k.registerGraphInput.bind(k),n.webnnIsGraphInput=k.isGraphInput.bind(k),n.webnnCreateTemporaryTensor=k.createTemporaryTensor.bind(k),n.webnnIsInt64Supported=k.isInt64Supported.bind(k)}};let u=()=>{let m=(T,k,L)=>(...V)=>{let ce=rr,Te=k==null?void 0:k();V=T(...V);let Le=k==null?void 0:k();return Te!==Le&&(T=Le,L(Te),k=L=null),rr!=ce?new Promise((Ke,tt)=>{Xr={resolve:Ke,reject:tt}}):V};(()=>{for(let T of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])n[T]=m(n[T],()=>n[T],k=>n[T]=k)})(),d!==void 0&&(n._OrtRun=d(n._OrtRun),n._OrtRunWithBinding=d(n._OrtRunWithBinding)),u=void 0};n.asyncInit=()=>{u==null||u()};var _,f,v=Object.assign({},n),$=(m,T)=>{throw T},w="";(o||l)&&(l?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),Rl&&(w=Rl),w=w.startsWith("blob:")?"":w.slice(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(f=m=>{var T=new XMLHttpRequest;return T.open("GET",m,!1),T.responseType="arraybuffer",T.send(null),new Uint8Array(T.response)}),_=async m=>{if(j(m))return new Promise((k,L)=>{var V=new XMLHttpRequest;V.open("GET",m,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?k(V.response):L(V.status)},V.onerror=L,V.send(null)});var T=await fetch(m,{credentials:"same-origin"});if(T.ok)return T.arrayBuffer();throw Error(T.status+" : "+T.url)});var g=console.log.bind(console),C=console.error.bind(console),E=g,x=C;Object.assign(n,v),v=null;var b,M,P,A,z,K,Q,B,Y,H,q,X,re,de=n.wasmBinary,ae=!1,j=m=>m.startsWith("file://");function F(){return b.buffer!=A.buffer&&se(),A}function U(){return b.buffer!=A.buffer&&se(),z}function ee(){return b.buffer!=A.buffer&&se(),K}function _e(){return b.buffer!=A.buffer&&se(),Q}function le(){return b.buffer!=A.buffer&&se(),B}function Me(){return b.buffer!=A.buffer&&se(),Y}function ze(){return b.buffer!=A.buffer&&se(),H}function Ue(){return b.buffer!=A.buffer&&se(),re}if(c){let m=function(T){try{var k=T.data,L=k.Bb;if(L==="load"){let V=[];self.onmessage=ce=>V.push(ce),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ce of V)m(ce);self.onmessage=m};for(let ce of k.Rb)n[ce]&&!n[ce].proxy||(n[ce]=(...Te)=>{postMessage({Bb:"callHandler",Qb:ce,args:Te})},ce=="print"&&(E=n[ce]),ce=="printErr"&&(x=n[ce]));b=k.kc,se(),me(k.lc)}else if(L==="run"){R(k.Ab),Wn(k.Ab,0,0,1,0,0),ts(),xe(k.Ab),W||(Pi(),W=!0);try{te(k.fc,k.Hb)}catch(V){if(V!="unwind")throw V}}else k.target!=="setimmediate"&&(L==="checkMailbox"?W&&Re():L&&(x(`worker: received unknown command ${L}`),x(k)))}catch(V){throw Gn(),V}};var me,W=!1;x=function(...T){T=T.join(" "),console.error(T)},self.alert=function(...T){postMessage({Bb:"alert",text:T.join(" "),ic:_n()})},self.onunhandledrejection=T=>{throw T.reason||T},self.onmessage=m}function se(){var m=b.buffer;n.HEAP8=A=new Int8Array(m),n.HEAP16=K=new Int16Array(m),n.HEAPU8=z=new Uint8Array(m),n.HEAPU16=Q=new Uint16Array(m),n.HEAP32=B=new Int32Array(m),n.HEAPU32=Y=new Uint32Array(m),n.HEAPF32=H=new Float32Array(m),n.HEAPF64=re=new Float64Array(m),n.HEAP64=q=new BigInt64Array(m),n.HEAPU64=X=new BigUint64Array(m)}function G(){c?startWorker(n):ut.Ca()}c||(b=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),se());var be,we=0,Se=null;function Pe(){if(--we==0&&Se){var m=Se;Se=null,m()}}function $e(m){throw x(m="Aborted("+m+")"),ae=!0,m=new WebAssembly.RuntimeError(m+". Build with -sASSERTIONS for more info."),i(m),m}function Fe(){return{a:{L:qe,Aa:He,b:Oe,$:vt,A:st,pa:Rt,X:Zt,Z:zr,qa:rs,na:ms,ga:ss,ma:$s,J:Ur,Y:Is,V:qr,oa:hs,W:ks,va:Fs,E:ot,Q:ns,O:nn,D:on,u:ln,r:cn,P:Os,z:N,R:J,ja:oe,T:Qe,aa:Ze,M:gt,F:Dt,ia:xe,sa:Ft,t:gr,Ba:vr,w:xr,o:hr,l:ls,c:as,n:ta,j:Ws,v:na,p:ia,f:aa,s:oa,m:la,e:li,k:ca,i:da,g:ci,d:ua,da:di,ea:ma,fa:pi,ba:mi,ca:hn,N:hi,xa:fa,ua:ga,h:fi,C:wa,G:_i,ta:_a,x:Bs,ra:ba,U:bo,q:ha,y:ya,K:yo,S:Ma,za:va,ya:xa,ka:bi,la:yi,_:$t,B:Vn,I:Mi,ha:vi,H:Ti,a:b,wa:ke}}}var Be={829644:(m,T,k,L,V)=>{if(n===void 0||!n.Eb)return 1;if((m=ct(Number(m>>>0))).startsWith("./")&&(m=m.substring(2)),!(m=n.Eb.get(m)))return 2;if(T=Number(T>>>0),k=Number(k>>>0),L=Number(L>>>0),T+k>m.byteLength)return 3;try{let ce=m.subarray(T,T+k);switch(V){case 0:U().set(ce,L>>>0);break;case 1:n.mc?n.mc(L,ce):n.bc(L,ce);break;default:return 4}return 0}catch{return 4}},830468:(m,T,k)=>{n.Ob(m,U().subarray(T>>>0,T+k>>>0))},830532:()=>n.nc(),830574:m=>{n.Nb(m)},830611:()=>{n.Vb()},830642:()=>{n.Wb()},830671:()=>{n.$b()},830696:m=>n.Ub(m),830729:m=>n.Yb(m),830761:(m,T,k)=>{n.Kb(Number(m),Number(T),Number(k),!0)},830824:(m,T,k)=>{n.Kb(Number(m),Number(T),Number(k))},830881:()=>typeof wasmOffsetConverter<"u",830938:m=>{n.jb("Abs",m,void 0)},830989:m=>{n.jb("Neg",m,void 0)},831040:m=>{n.jb("Floor",m,void 0)},831093:m=>{n.jb("Ceil",m,void 0)},831145:m=>{n.jb("Reciprocal",m,void 0)},831203:m=>{n.jb("Sqrt",m,void 0)},831255:m=>{n.jb("Exp",m,void 0)},831306:m=>{n.jb("Erf",m,void 0)},831357:m=>{n.jb("Sigmoid",m,void 0)},831412:(m,T,k)=>{n.jb("HardSigmoid",m,{alpha:T,beta:k})},831491:m=>{n.jb("Log",m,void 0)},831542:m=>{n.jb("Sin",m,void 0)},831593:m=>{n.jb("Cos",m,void 0)},831644:m=>{n.jb("Tan",m,void 0)},831695:m=>{n.jb("Asin",m,void 0)},831747:m=>{n.jb("Acos",m,void 0)},831799:m=>{n.jb("Atan",m,void 0)},831851:m=>{n.jb("Sinh",m,void 0)},831903:m=>{n.jb("Cosh",m,void 0)},831955:m=>{n.jb("Asinh",m,void 0)},832008:m=>{n.jb("Acosh",m,void 0)},832061:m=>{n.jb("Atanh",m,void 0)},832114:m=>{n.jb("Tanh",m,void 0)},832166:m=>{n.jb("Not",m,void 0)},832217:(m,T,k)=>{n.jb("Clip",m,{min:T,max:k})},832286:m=>{n.jb("Clip",m,void 0)},832338:(m,T)=>{n.jb("Elu",m,{alpha:T})},832396:m=>{n.jb("Gelu",m,void 0)},832448:m=>{n.jb("Relu",m,void 0)},832500:(m,T)=>{n.jb("LeakyRelu",m,{alpha:T})},832564:(m,T)=>{n.jb("ThresholdedRelu",m,{alpha:T})},832634:(m,T)=>{n.jb("Cast",m,{to:T})},832692:m=>{n.jb("Add",m,void 0)},832743:m=>{n.jb("Sub",m,void 0)},832794:m=>{n.jb("Mul",m,void 0)},832845:m=>{n.jb("Div",m,void 0)},832896:m=>{n.jb("Pow",m,void 0)},832947:m=>{n.jb("Equal",m,void 0)},833e3:m=>{n.jb("Greater",m,void 0)},833055:m=>{n.jb("GreaterOrEqual",m,void 0)},833117:m=>{n.jb("Less",m,void 0)},833169:m=>{n.jb("LessOrEqual",m,void 0)},833228:(m,T,k,L,V)=>{n.jb("ReduceMean",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833403:(m,T,k,L,V)=>{n.jb("ReduceMax",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833577:(m,T,k,L,V)=>{n.jb("ReduceMin",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833751:(m,T,k,L,V)=>{n.jb("ReduceProd",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833926:(m,T,k,L,V)=>{n.jb("ReduceSum",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834100:(m,T,k,L,V)=>{n.jb("ReduceL1",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834273:(m,T,k,L,V)=>{n.jb("ReduceL2",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834446:(m,T,k,L,V)=>{n.jb("ReduceLogSum",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834623:(m,T,k,L,V)=>{n.jb("ReduceSumSquare",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834803:(m,T,k,L,V)=>{n.jb("ReduceLogSumExp",m,{keepDims:!!T,noopWithEmptyAxes:!!k,axes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834983:m=>{n.jb("Where",m,void 0)},835036:(m,T,k)=>{n.jb("Transpose",m,{perm:T?Array.from(le().subarray(Number(T)>>>0,Number(k)>>>0)):[]})},835160:(m,T,k,L)=>{n.jb("DepthToSpace",m,{blocksize:T,mode:ct(k),format:L?"NHWC":"NCHW"})},835293:(m,T,k,L)=>{n.jb("DepthToSpace",m,{blocksize:T,mode:ct(k),format:L?"NHWC":"NCHW"})},835426:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr,Ls)=>{n.jb("ConvTranspose",m,{format:Ke?"NHWC":"NCHW",autoPad:T,dilations:[k],group:L,kernelShape:[V],pads:[ce,Te],strides:[Le],wIsConst:()=>!!F()[tt>>>0],outputPadding:Mt?Array.from(le().subarray(Number(Mt)>>>0,Number(kt)>>>0)):[],outputShape:Kt?Array.from(le().subarray(Number(Kt)>>>0,Number(Tr)>>>0)):[],activation:ct(Ls)})},835859:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("ConvTranspose",m,{format:Le?"NHWC":"NCHW",autoPad:T,dilations:Array.from(le().subarray(Number(k)>>>0,2+(Number(k)>>>0)>>>0)),group:L,kernelShape:Array.from(le().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(le().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(le().subarray(Number(Te)>>>0,2+(Number(Te)>>>0)>>>0)),wIsConst:()=>!!F()[Ke>>>0],outputPadding:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],outputShape:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[],activation:ct(Tr)})},836520:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr,Ls)=>{n.jb("ConvTranspose",m,{format:Ke?"NHWC":"NCHW",autoPad:T,dilations:[k],group:L,kernelShape:[V],pads:[ce,Te],strides:[Le],wIsConst:()=>!!F()[tt>>>0],outputPadding:Mt?Array.from(le().subarray(Number(Mt)>>>0,Number(kt)>>>0)):[],outputShape:Kt?Array.from(le().subarray(Number(Kt)>>>0,Number(Tr)>>>0)):[],activation:ct(Ls)})},836953:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("ConvTranspose",m,{format:Le?"NHWC":"NCHW",autoPad:T,dilations:Array.from(le().subarray(Number(k)>>>0,2+(Number(k)>>>0)>>>0)),group:L,kernelShape:Array.from(le().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(le().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(le().subarray(Number(Te)>>>0,2+(Number(Te)>>>0)>>>0)),wIsConst:()=>!!F()[Ke>>>0],outputPadding:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],outputShape:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[],activation:ct(Tr)})},837614:(m,T)=>{n.jb("GlobalAveragePool",m,{format:T?"NHWC":"NCHW"})},837705:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("AveragePool",m,{format:Tr?"NHWC":"NCHW",auto_pad:T,ceil_mode:k,count_include_pad:L,storage_order:V,dilations:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[],kernel_shape:Le?Array.from(le().subarray(Number(Le)>>>0,Number(Ke)>>>0)):[],pads:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],strides:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[]})},838184:(m,T)=>{n.jb("GlobalAveragePool",m,{format:T?"NHWC":"NCHW"})},838275:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("AveragePool",m,{format:Tr?"NHWC":"NCHW",auto_pad:T,ceil_mode:k,count_include_pad:L,storage_order:V,dilations:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[],kernel_shape:Le?Array.from(le().subarray(Number(Le)>>>0,Number(Ke)>>>0)):[],pads:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],strides:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[]})},838754:(m,T)=>{n.jb("GlobalMaxPool",m,{format:T?"NHWC":"NCHW"})},838841:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("MaxPool",m,{format:Tr?"NHWC":"NCHW",auto_pad:T,ceil_mode:k,count_include_pad:L,storage_order:V,dilations:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[],kernel_shape:Le?Array.from(le().subarray(Number(Le)>>>0,Number(Ke)>>>0)):[],pads:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],strides:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[]})},839316:(m,T)=>{n.jb("GlobalMaxPool",m,{format:T?"NHWC":"NCHW"})},839403:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr)=>{n.jb("MaxPool",m,{format:Tr?"NHWC":"NCHW",auto_pad:T,ceil_mode:k,count_include_pad:L,storage_order:V,dilations:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[],kernel_shape:Le?Array.from(le().subarray(Number(Le)>>>0,Number(Ke)>>>0)):[],pads:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],strides:kt?Array.from(le().subarray(Number(kt)>>>0,Number(Kt)>>>0)):[]})},839878:(m,T,k,L,V)=>{n.jb("Gemm",m,{alpha:T,beta:k,transA:L,transB:V})},839982:m=>{n.jb("MatMul",m,void 0)},840036:(m,T,k,L)=>{n.jb("ArgMax",m,{keepDims:!!T,selectLastIndex:!!k,axis:L})},840144:(m,T,k,L)=>{n.jb("ArgMin",m,{keepDims:!!T,selectLastIndex:!!k,axis:L})},840252:(m,T)=>{n.jb("Softmax",m,{axis:T})},840315:(m,T)=>{n.jb("Concat",m,{axis:T})},840375:(m,T,k,L,V)=>{n.jb("Split",m,{axis:T,numOutputs:k,splitSizes:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},840531:m=>{n.jb("Expand",m,void 0)},840585:(m,T)=>{n.jb("Gather",m,{axis:Number(T)})},840656:(m,T)=>{n.jb("GatherElements",m,{axis:Number(T)})},840735:(m,T)=>{n.jb("GatherND",m,{batch_dims:Number(T)})},840814:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt)=>{n.jb("Resize",m,{antialias:T,axes:k?Array.from(le().subarray(Number(k)>>>0,Number(L)>>>0)):[],coordinateTransformMode:ct(V),cubicCoeffA:ce,excludeOutside:Te,extrapolationValue:Le,keepAspectRatioPolicy:ct(Ke),mode:ct(tt),nearestMode:ct(Mt)})},841176:(m,T,k,L,V,ce,Te)=>{n.jb("Slice",m,{starts:T?Array.from(le().subarray(Number(T)>>>0,Number(k)>>>0)):[],ends:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[],axes:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[]})},841440:m=>{n.jb("Tile",m,void 0)},841492:(m,T,k)=>{n.jb("InstanceNormalization",m,{epsilon:T,format:k?"NHWC":"NCHW"})},841606:(m,T,k)=>{n.jb("InstanceNormalization",m,{epsilon:T,format:k?"NHWC":"NCHW"})},841720:m=>{n.jb("Range",m,void 0)},841773:(m,T)=>{n.jb("Einsum",m,{equation:ct(T)})},841854:(m,T,k,L,V)=>{n.jb("Pad",m,{mode:T,value:k,pads:L?Array.from(le().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},841997:(m,T,k,L,V,ce)=>{n.jb("BatchNormalization",m,{epsilon:T,momentum:k,spatial:!!V,trainingMode:!!L,format:ce?"NHWC":"NCHW"})},842166:(m,T,k,L,V,ce)=>{n.jb("BatchNormalization",m,{epsilon:T,momentum:k,spatial:!!V,trainingMode:!!L,format:ce?"NHWC":"NCHW"})},842335:(m,T,k)=>{n.jb("CumSum",m,{exclusive:Number(T),reverse:Number(k)})},842432:(m,T,k)=>{n.jb("DequantizeLinear",m,{axis:T,blockSize:k})},842522:(m,T,k,L,V)=>{n.jb("GridSample",m,{align_corners:T,mode:ct(k),padding_mode:ct(L),format:V?"NHWC":"NCHW"})},842692:(m,T,k,L,V)=>{n.jb("GridSample",m,{align_corners:T,mode:ct(k),padding_mode:ct(L),format:V?"NHWC":"NCHW"})},842862:(m,T)=>{n.jb("ScatterND",m,{reduction:ct(T)})},842947:(m,T,k,L,V,ce,Te,Le,Ke)=>{n.jb("Attention",m,{numHeads:T,isUnidirectional:k,maskFilterValue:L,scale:V,doRotary:ce,qkvHiddenSizes:Te?Array.from(le().subarray(Number(Le)>>>0,Number(Le)+Te>>>0)):[],pastPresentShareBuffer:!!Ke})},843219:m=>{n.jb("BiasAdd",m,void 0)},843274:m=>{n.jb("BiasSplitGelu",m,void 0)},843335:m=>{n.jb("FastGelu",m,void 0)},843391:(m,T,k,L,V,ce,Te,Le,Ke,tt,Mt,kt,Kt,Tr,Ls,Ea)=>{n.jb("Conv",m,{format:kt?"NHWC":"NCHW",auto_pad:T,dilations:k?Array.from(le().subarray(Number(k)>>>0,Number(L)>>>0)):[],group:V,kernel_shape:ce?Array.from(le().subarray(Number(ce)>>>0,Number(Te)>>>0)):[],pads:Le?Array.from(le().subarray(Number(Le)>>>0,Number(Ke)>>>0)):[],strides:tt?Array.from(le().subarray(Number(tt)>>>0,Number(Mt)>>>0)):[],w_is_const:()=>!!F()[Number(Kt)>>>0],activation:ct(Tr),activation_params:Ls?Array.from(ze().subarray(Number(Ls)>>>0,Number(Ea)>>>0)):[]})},843975:m=>{n.jb("Gelu",m,void 0)},844027:(m,T,k,L,V,ce,Te,Le,Ke)=>{n.jb("GroupQueryAttention",m,{numHeads:T,kvNumHeads:k,scale:L,softcap:V,doRotary:ce,rotaryInterleaved:Te,smoothSoftmax:Le,localWindowSize:Ke})},844244:(m,T,k,L)=>{n.jb("LayerNormalization",m,{axis:T,epsilon:k,simplified:!!L})},844355:(m,T,k,L)=>{n.jb("LayerNormalization",m,{axis:T,epsilon:k,simplified:!!L})},844466:(m,T,k,L,V,ce)=>{n.jb("MatMulNBits",m,{k:T,n:k,accuracyLevel:L,bits:V,blockSize:ce})},844593:(m,T,k,L,V,ce)=>{n.jb("MultiHeadAttention",m,{numHeads:T,isUnidirectional:k,maskFilterValue:L,scale:V,doRotary:ce})},844752:(m,T)=>{n.jb("QuickGelu",m,{alpha:T})},844816:(m,T,k,L,V)=>{n.jb("RotaryEmbedding",m,{interleaved:!!T,numHeads:k,rotaryEmbeddingDim:L,scale:V})},844955:(m,T,k)=>{n.jb("SkipLayerNormalization",m,{epsilon:T,simplified:!!k})},845057:(m,T,k)=>{n.jb("SkipLayerNormalization",m,{epsilon:T,simplified:!!k})},845159:(m,T,k,L)=>{n.jb("GatherBlockQuantized",m,{gatherAxis:T,quantizeAxis:k,blockSize:L})},845280:m=>{n.Zb(m)},845314:(m,T)=>n.ac(Number(m),Number(T),n.Fb.dc,n.Fb.errors)};function He(m,T,k){return Rr(async()=>{await n.Xb(Number(m),Number(T),Number(k))})}function qe(){return typeof wasmOffsetConverter<"u"}class Ie{constructor(T){Z(this,"name","ExitStatus");this.message=`Program terminated with exit(${T})`,this.status=T}}var Ve=m=>{m.terminate(),m.onmessage=()=>{}},et=[],nt=m=>{Wt.length==0&&(ie(),D(Wt[0]));var T=Wt.pop();if(!T)return 6;Bt.push(T),lr[m.Ab]=T,T.Ab=m.Ab;var k={Bb:"run",fc:m.ec,Hb:m.Hb,Ab:m.Ab};return T.postMessage(k,m.Mb),0},lt=0,Ge=(m,T,...k)=>{for(var L=2*k.length,V=yn(),ce=Hn(8*L),Te=ce>>>3,Le=0;Le<k.length;Le++){var Ke=k[Le];typeof Ke=="bigint"?(q[Te+2*Le]=1n,q[Te+2*Le+1]=Ke):(q[Te+2*Le]=0n,Ue()[Te+2*Le+1>>>0]=Ke)}return m=Ci(m,0,L,ce,T),bn(V),m};function ke(m){if(c)return Ge(0,1,m);if(P=m,!(0<lt)){for(var T of Bt)Ve(T);for(T of Wt)Ve(T);Wt=[],Bt=[],lr={},ae=!0}$(0,new Ie(m))}function mt(m){if(c)return Ge(1,0,m);$t(m)}var $t=m=>{if(P=m,c)throw mt(m),"unwind";ke(m)},Wt=[],Bt=[],yr=[],lr={},yt=m=>{var T=m.Ab;delete lr[T],Wt.push(m),Bt.splice(Bt.indexOf(m),1),m.Ab=0,Si(T)};function ts(){yr.forEach(m=>m())}var D=m=>new Promise(T=>{m.onmessage=V=>{var ce=(V=V.data).Bb;if(V.Gb&&V.Gb!=_n()){var Te=lr[V.Gb];Te?Te.postMessage(V,V.Mb):x(`Internal error! Worker sent a message "${ce}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else ce==="checkMailbox"?Re():ce==="spawnThread"?nt(V):ce==="cleanupThread"?yt(lr[V.hc]):ce==="loaded"?(m.loaded=!0,T(m)):ce==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?m.postMessage(V):ce==="callHandler"?n[V.Qb](...V.args):ce&&x(`worker sent an unknown command ${ce}`)},m.onerror=V=>{throw x(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var k,L=[];for(k of[])n.propertyIsEnumerable(k)&&L.push(k);m.postMessage({Bb:"load",Rb:L,kc:b,lc:M})});function ie(){var m=new Worker((()=>{let T=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new T("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});Wt.push(m)}var R=m=>{se();var T=Me()[m+52>>>2>>>0];m=Me()[m+56>>>2>>>0],Kn(T,T-m),bn(T)},te=(m,T)=>{lt=0,m=ki(m,T),0<lt?P=m:wn(m)};class fe{constructor(T){this.Ib=T-24}}function Oe(m,T,k){var L=new fe(m>>>=0);throw T>>>=0,k>>>=0,Me()[L.Ib+16>>>2>>>0]=0,Me()[L.Ib+4>>>2>>>0]=T,Me()[L.Ib+8>>>2>>>0]=k,m}function ve(m,T,k,L){return c?Ge(2,1,m,T,k,L):vt(m,T,k,L)}function vt(m,T,k,L){if(m>>>=0,k>>>=0,L>>>=0,p===void 0)return 6;var V=[];return c&&V.length===0?ve(m,T>>>=0,k,L):(m={ec:k,Ab:m,Hb:L,Mb:V},c?(m.Bb="spawnThread",postMessage(m,V),0):nt(m))}var Ot=typeof TextDecoder<"u"?new TextDecoder:void 0,ht=(m,T=0,k=NaN)=>{var L=(T>>>=0)+k;for(k=T;m[k]&&!(k>=L);)++k;if(16<k-T&&m.buffer&&Ot)return Ot.decode(m.buffer instanceof ArrayBuffer?m.subarray(T,k):m.slice(T,k));for(L="";T<k;){var V=m[T++];if(128&V){var ce=63&m[T++];if((224&V)==192)L+=String.fromCharCode((31&V)<<6|ce);else{var Te=63&m[T++];65536>(V=(240&V)==224?(15&V)<<12|ce<<6|Te:(7&V)<<18|ce<<12|Te<<6|63&m[T++])?L+=String.fromCharCode(V):(V-=65536,L+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else L+=String.fromCharCode(V)}return L},ct=(m,T)=>(m>>>=0)?ht(U(),m,T):"";function st(m,T,k){return c?Ge(3,1,m,T,k):0}function Rt(m,T){if(c)return Ge(4,1,m,T)}var Xt=m=>{for(var T=0,k=0;k<m.length;++k){var L=m.charCodeAt(k);127>=L?T++:2047>=L?T+=2:55296<=L&&57343>=L?(T+=4,++k):T+=3}return T},Mr=(m,T,k)=>{var L=U();if(T>>>=0,0<k){var V=T;k=T+k-1;for(var ce=0;ce<m.length;++ce){var Te=m.charCodeAt(ce);if(55296<=Te&&57343>=Te&&(Te=65536+((1023&Te)<<10)|1023&m.charCodeAt(++ce)),127>=Te){if(T>=k)break;L[T++>>>0]=Te}else{if(2047>=Te){if(T+1>=k)break;L[T++>>>0]=192|Te>>6}else{if(65535>=Te){if(T+2>=k)break;L[T++>>>0]=224|Te>>12}else{if(T+3>=k)break;L[T++>>>0]=240|Te>>18,L[T++>>>0]=128|Te>>12&63}L[T++>>>0]=128|Te>>6&63}L[T++>>>0]=128|63&Te}}L[T>>>0]=0,m=T-V}else m=0;return m};function Zt(m,T){if(c)return Ge(5,1,m,T)}function zr(m,T,k){if(c)return Ge(6,1,m,T,k)}function rs(m,T,k){return c?Ge(7,1,m,T,k):0}function ms(m,T){if(c)return Ge(8,1,m,T)}function ss(m,T,k){if(c)return Ge(9,1,m,T,k)}function $s(m,T,k,L){if(c)return Ge(10,1,m,T,k,L)}function Ur(m,T,k,L){if(c)return Ge(11,1,m,T,k,L)}function Is(m,T,k,L){if(c)return Ge(12,1,m,T,k,L)}function qr(m){if(c)return Ge(13,1,m)}function hs(m,T){if(c)return Ge(14,1,m,T)}function ks(m,T,k){if(c)return Ge(15,1,m,T,k)}var As,cr,Fs=()=>$e(""),Cr=m=>{for(var T="";U()[m>>>0];)T+=As[U()[m++>>>0]];return T},fs={},jr={};function Ae(m,T,k={}){return function(L,V,ce={}){var Te=V.name;if(!L)throw new cr(`type "${Te}" must have a positive integer typeid pointer`);if(jr.hasOwnProperty(L)){if(ce.Sb)return;throw new cr(`Cannot register type '${Te}' twice`)}jr[L]=V,fs.hasOwnProperty(L)&&(V=fs[L],delete fs[L],V.forEach(Le=>Le()))}(m,T,k)}var Ye=(m,T,k)=>{switch(T){case 1:return k?L=>F()[L>>>0]:L=>U()[L>>>0];case 2:return k?L=>ee()[L>>>1>>>0]:L=>_e()[L>>>1>>>0];case 4:return k?L=>le()[L>>>2>>>0]:L=>Me()[L>>>2>>>0];case 8:return k?L=>q[L>>>3]:L=>X[L>>>3];default:throw new TypeError(`invalid integer width (${T}): ${m}`)}};function ot(m,T,k){k>>>=0,Ae(m>>>=0,{name:T=Cr(T>>>0),fromWireType:L=>L,toWireType:function(L,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(L=typeof V)=="object"||L==="array"||L==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:jt,readValueFromPointer:Ye(T,k,T.indexOf("u")==-1),Db:null})}var jt=8;function ns(m,T,k,L){Ae(m>>>=0,{name:T=Cr(T>>>0),fromWireType:function(V){return!!V},toWireType:function(V,ce){return ce?k:L},Cb:jt,readValueFromPointer:function(V){return this.fromWireType(U()[V>>>0])},Db:null})}var is=[],pr=[];function as(m){9<(m>>>=0)&&--pr[m+1]==0&&(pr[m]=void 0,is.push(m))}var mr=m=>{if(!m)throw new cr("Cannot use deleted val. handle = "+m);return pr[m]},_r=m=>{switch(m){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let T=is.pop()||pr.length;return pr[T]=m,pr[T+1]=1,T}};function os(m){return this.fromWireType(Me()[m>>>2>>>0])}var _s={name:"emscripten::val",fromWireType:m=>{var T=mr(m);return as(m),T},toWireType:(m,T)=>_r(T),Cb:jt,readValueFromPointer:os,Db:null};function nn(m){return Ae(m>>>0,_s)}var an=(m,T)=>{switch(T){case 4:return function(k){return this.fromWireType(ze()[k>>>2>>>0])};case 8:return function(k){return this.fromWireType(Ue()[k>>>3>>>0])};default:throw new TypeError(`invalid float width (${T}): ${m}`)}};function on(m,T,k){k>>>=0,Ae(m>>>=0,{name:T=Cr(T>>>0),fromWireType:L=>L,toWireType:(L,V)=>V,Cb:jt,readValueFromPointer:an(T,k),Db:null})}function ln(m,T,k,L,V){if(m>>>=0,k>>>=0,T=Cr(T>>>0),V===-1&&(V=4294967295),V=Le=>Le,L===0){var ce=32-8*k;V=Le=>Le<<ce>>>ce}var Te=T.includes("unsigned")?function(Le,Ke){return Ke>>>0}:function(Le,Ke){return Ke};Ae(m,{name:T,fromWireType:V,toWireType:Te,Cb:jt,readValueFromPointer:Ye(T,k,L!==0),Db:null})}function cn(m,T,k){function L(ce){var Te=Me()[ce>>>2>>>0];return ce=Me()[ce+4>>>2>>>0],new V(F().buffer,ce,Te)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][T];Ae(m>>>=0,{name:k=Cr(k>>>0),fromWireType:L,Cb:jt,readValueFromPointer:L},{Sb:!0})}function Os(m,T){Ae(m>>>=0,{name:T=Cr(T>>>0),fromWireType:function(k){for(var L,V=Me()[k>>>2>>>0],ce=k+4,Te=ce,Le=0;Le<=V;++Le){var Ke=ce+Le;Le!=V&&U()[Ke>>>0]!=0||(Te=ct(Te,Ke-Te),L===void 0?L=Te:(L+="\0",L+=Te),Te=Ke+1)}return Kr(k),L},toWireType:function(k,L){L instanceof ArrayBuffer&&(L=new Uint8Array(L));var V=typeof L=="string";if(!(V||L instanceof Uint8Array||L instanceof Uint8ClampedArray||L instanceof Int8Array))throw new cr("Cannot pass non-string to std::string");var ce=V?Xt(L):L.length,Te=gn(4+ce+1),Le=Te+4;if(Me()[Te>>>2>>>0]=ce,V)Mr(L,Le,ce+1);else if(V)for(V=0;V<ce;++V){var Ke=L.charCodeAt(V);if(255<Ke)throw Kr(Te),new cr("String has UTF-16 code units that do not fit in 8 bits");U()[Le+V>>>0]=Ke}else for(V=0;V<ce;++V)U()[Le+V>>>0]=L[V];return k!==null&&k.push(Kr,Te),Te},Cb:jt,readValueFromPointer:os,Db(k){Kr(k)}})}var Us=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,dn=(m,T)=>{for(var k=m>>1,L=k+T/2;!(k>=L)&&_e()[k>>>0];)++k;if(32<(k<<=1)-m&&Us)return Us.decode(U().slice(m,k));for(k="",L=0;!(L>=T/2);++L){var V=ee()[m+2*L>>>1>>>0];if(V==0)break;k+=String.fromCharCode(V)}return k},un=(m,T,k)=>{if(k??(k=2147483647),2>k)return 0;var L=T;k=(k-=2)<2*m.length?k/2:m.length;for(var V=0;V<k;++V){var ce=m.charCodeAt(V);ee()[T>>>1>>>0]=ce,T+=2}return ee()[T>>>1>>>0]=0,T-L},pn=m=>2*m.length,Ds=(m,T)=>{for(var k=0,L="";!(k>=T/4);){var V=le()[m+4*k>>>2>>>0];if(V==0)break;++k,65536<=V?(V-=65536,L+=String.fromCharCode(55296|V>>10,56320|1023&V)):L+=String.fromCharCode(V)}return L},pe=(m,T,k)=>{if(T>>>=0,k??(k=2147483647),4>k)return 0;var L=T;k=L+k-4;for(var V=0;V<m.length;++V){var ce=m.charCodeAt(V);if(55296<=ce&&57343>=ce&&(ce=65536+((1023&ce)<<10)|1023&m.charCodeAt(++V)),le()[T>>>2>>>0]=ce,(T+=4)+4>k)break}return le()[T>>>2>>>0]=0,T-L},I=m=>{for(var T=0,k=0;k<m.length;++k){var L=m.charCodeAt(k);55296<=L&&57343>=L&&++k,T+=4}return T};function N(m,T,k){if(m>>>=0,T>>>=0,k=Cr(k>>>=0),T===2)var L=dn,V=un,ce=pn,Te=Le=>_e()[Le>>>1>>>0];else T===4&&(L=Ds,V=pe,ce=I,Te=Le=>Me()[Le>>>2>>>0]);Ae(m,{name:k,fromWireType:Le=>{for(var Ke,tt=Me()[Le>>>2>>>0],Mt=Le+4,kt=0;kt<=tt;++kt){var Kt=Le+4+kt*T;kt!=tt&&Te(Kt)!=0||(Mt=L(Mt,Kt-Mt),Ke===void 0?Ke=Mt:(Ke+="\0",Ke+=Mt),Mt=Kt+T)}return Kr(Le),Ke},toWireType:(Le,Ke)=>{if(typeof Ke!="string")throw new cr(`Cannot pass non-string to C++ string type ${k}`);var tt=ce(Ke),Mt=gn(4+tt+T);return Me()[Mt>>>2>>>0]=tt/T,V(Ke,Mt+4,tt+T),Le!==null&&Le.push(Kr,Mt),Mt},Cb:jt,readValueFromPointer:os,Db(Le){Kr(Le)}})}function J(m,T){Ae(m>>>=0,{Tb:!0,name:T=Cr(T>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function oe(m){Wn(m>>>0,!l,1,!o,131072,!1),ts()}var ue=m=>{if(!ae)try{if(m(),!(0<lt))try{c?wn(P):$t(P)}catch(T){T instanceof Ie||T=="unwind"||$(0,T)}}catch(T){T instanceof Ie||T=="unwind"||$(0,T)}};function xe(m){m>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(le(),m>>>2,m).value.then(Re),m+=128,Atomics.store(le(),m>>>2,1))}var Re=()=>{var m=_n();m&&(xe(m),ue(Ii))};function Qe(m,T){(m>>>=0)==T>>>0?setTimeout(Re):c?postMessage({Gb:m,Bb:"checkMailbox"}):(m=lr[m])&&m.postMessage({Bb:"checkMailbox"})}var We=[];function Ze(m,T,k,L,V){for(T>>>=0,L/=2,We.length=L,k=V>>>0>>>3,V=0;V<L;V++)We[V]=q[k+2*V]?q[k+2*V+1]:Ue()[k+2*V+1>>>0];return(T?Be[T]:Ta[m])(...We)}var gt=()=>{lt=0};function Dt(m){m>>>=0,c?postMessage({Bb:"cleanupThread",hc:m}):yt(lr[m])}function Ft(m){}var er=(m,T)=>{var k=jr[m];if(k===void 0)throw m=Un(m),k=Cr(m),Kr(m),new cr(`${T} has unknown type ${k}`);return k},Gt=(m,T,k)=>{var L=[];return m=m.toWireType(L,k),L.length&&(Me()[T>>>2>>>0]=_r(L)),m};function gr(m,T,k){return T>>>=0,k>>>=0,m=mr(m>>>0),T=er(T,"emval::as"),Gt(T,k,m)}function vr(m,T){return T>>>=0,m=mr(m>>>0),(T=er(T,"emval::as")).toWireType(null,m)}var Sr=m=>{try{m()}catch(T){$e(T)}},$r=0,rr=null,gs=0,Qt=[],wr={},Br={},Qr=0,Xr=null,Fr=[];function Rr(m){return function(T){if(!ae){if($r===0){var k=!1,L=!1;T((V=0)=>{if(!ae&&(gs=V,k=!0,L)){$r=2,Sr(()=>Fi(rr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var ce=function(){var Ke=le()[rr+8>>>2>>>0];return Ke=ut[Br[Ke]],--lt,Ke()}()}catch(Ke){ce=Ke,V=!0}var Te=!1;if(!rr){var Le=Xr;Le&&(Xr=null,(V?Le.reject:Le.resolve)(ce),Te=!0)}if(V&&!Te)throw ce}}),L=!0,k||($r=1,rr=function(){var V=gn(65548),ce=V+12;Me()[V>>>2>>>0]=ce,Me()[V+4>>>2>>>0]=ce+65536,ce=Qt[0];var Te=wr[ce];return Te===void 0&&(Te=Qr++,wr[ce]=Te,Br[Te]=ce),ce=Te,le()[V+8>>>2>>>0]=ce,V}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),Sr(()=>Ai(rr)))}else $r===2?($r=0,Sr(Oi),Kr(rr),rr=null,Fr.forEach(ue)):$e(`invalid state: ${$r}`);return gs}}(T=>{m().then(T)})}function xr(m){return m>>>=0,Rr(async()=>{var T=await mr(m);return _r(T)})}var sr=[];function hr(m,T,k,L){return k>>>=0,L>>>=0,(m=sr[m>>>0])(null,T=mr(T>>>0),k,L)}var fr={},Or=m=>{var T=fr[m];return T===void 0?Cr(m):T};function ls(m,T,k,L,V){return k>>>=0,L>>>=0,V>>>=0,(m=sr[m>>>0])(T=mr(T>>>0),T[k=Or(k)],L,V)}var mn=()=>typeof globalThis=="object"?globalThis:Function("return this")();function ta(m){return(m>>>=0)==0?_r(mn()):(m=Or(m),_r(mn()[m]))}var ra=m=>{var T=sr.length;return sr.push(m),T},sa=(m,T)=>{for(var k=Array(m),L=0;L<m;++L)k[L]=er(Me()[T+4*L>>>2>>>0],"parameter "+L);return k},oi=(m,T)=>Object.defineProperty(T,"name",{value:m});function Ws(m,T,k){var L=(T=sa(m,T>>>0)).shift();m--;var V=`return function (obj, func, destructorsRef, args) {
`,ce=0,Te=[];k===0&&Te.push("obj");for(var Le=["retType"],Ke=[L],tt=0;tt<m;++tt)Te.push("arg"+tt),Le.push("argType"+tt),Ke.push(T[tt]),V+=`  var arg${tt} = argType${tt}.readValueFromPointer(args${ce?"+"+ce:""});
`,ce+=T[tt].Cb;return V+=`  var rv = ${k===1?"new func":"func.call"}(${Te.join(", ")});
`,L.Tb||(Le.push("emval_returnValue"),Ke.push(Gt),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Le.push(V+`};
`),m=function(Mt){var kt=Function;if(!(kt instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof kt} which is not a function`);var Kt=oi(kt.name||"unknownFunctionName",function(){});return Kt.prototype=kt.prototype,Kt=new Kt,(Mt=kt.apply(Kt,Mt))instanceof Object?Mt:Kt}(Le)(...Ke),k=`methodCaller<(${T.map(Mt=>Mt.name).join(", ")}) => ${L.name}>`,ra(oi(k,m))}function na(m){return m=Or(m>>>0),_r(n[m])}function ia(m,T){return T>>>=0,m=mr(m>>>0),T=mr(T),_r(m[T])}function aa(m){9<(m>>>=0)&&(pr[m+1]+=1)}function oa(){return _r([])}function la(m){m=mr(m>>>0);for(var T=Array(m.length),k=0;k<m.length;k++)T[k]=m[k];return _r(T)}function li(m){return _r(Or(m>>>0))}function ca(){return _r({})}function da(m){for(var T=mr(m>>>=0);T.length;){var k=T.pop();T.pop()(k)}as(m)}function ci(m,T,k){T>>>=0,k>>>=0,m=mr(m>>>0),T=mr(T),k=mr(k),m[T]=k}function ua(m,T){return T>>>=0,m=(m=er(m>>>0,"_emval_take_value")).readValueFromPointer(T),_r(m)}function di(m,T){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),T>>>=0,m=new Date(1e3*m),le()[T>>>2>>>0]=m.getUTCSeconds(),le()[T+4>>>2>>>0]=m.getUTCMinutes(),le()[T+8>>>2>>>0]=m.getUTCHours(),le()[T+12>>>2>>>0]=m.getUTCDate(),le()[T+16>>>2>>>0]=m.getUTCMonth(),le()[T+20>>>2>>>0]=m.getUTCFullYear()-1900,le()[T+24>>>2>>>0]=m.getUTCDay(),m=(m.getTime()-Date.UTC(m.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,le()[T+28>>>2>>>0]=m}var ui=m=>m%4==0&&(m%100!=0||m%400==0),Rn=[0,31,60,91,121,152,182,213,244,274,305,335],pa=[0,31,59,90,120,151,181,212,243,273,304,334];function ma(m,T){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),T>>>=0,m=new Date(1e3*m),le()[T>>>2>>>0]=m.getSeconds(),le()[T+4>>>2>>>0]=m.getMinutes(),le()[T+8>>>2>>>0]=m.getHours(),le()[T+12>>>2>>>0]=m.getDate(),le()[T+16>>>2>>>0]=m.getMonth(),le()[T+20>>>2>>>0]=m.getFullYear()-1900,le()[T+24>>>2>>>0]=m.getDay();var k=(ui(m.getFullYear())?Rn:pa)[m.getMonth()]+m.getDate()-1|0;le()[T+28>>>2>>>0]=k,le()[T+36>>>2>>>0]=-60*m.getTimezoneOffset(),k=new Date(m.getFullYear(),6,1).getTimezoneOffset();var L=new Date(m.getFullYear(),0,1).getTimezoneOffset();m=0|(k!=L&&m.getTimezoneOffset()==Math.min(L,k)),le()[T+32>>>2>>>0]=m}function pi(m){m>>>=0;var T=new Date(le()[m+20>>>2>>>0]+1900,le()[m+16>>>2>>>0],le()[m+12>>>2>>>0],le()[m+8>>>2>>>0],le()[m+4>>>2>>>0],le()[m>>>2>>>0],0),k=le()[m+32>>>2>>>0],L=T.getTimezoneOffset(),V=new Date(T.getFullYear(),6,1).getTimezoneOffset(),ce=new Date(T.getFullYear(),0,1).getTimezoneOffset(),Te=Math.min(ce,V);return 0>k?le()[m+32>>>2>>>0]=+(V!=ce&&Te==L):0<k!=(Te==L)&&(V=Math.max(ce,V),T.setTime(T.getTime()+6e4*((0<k?Te:V)-L))),le()[m+24>>>2>>>0]=T.getDay(),k=(ui(T.getFullYear())?Rn:pa)[T.getMonth()]+T.getDate()-1|0,le()[m+28>>>2>>>0]=k,le()[m>>>2>>>0]=T.getSeconds(),le()[m+4>>>2>>>0]=T.getMinutes(),le()[m+8>>>2>>>0]=T.getHours(),le()[m+12>>>2>>>0]=T.getDate(),le()[m+16>>>2>>>0]=T.getMonth(),le()[m+20>>>2>>>0]=T.getYear(),m=T.getTime(),BigInt(isNaN(m)?-1:m/1e3)}function mi(m,T,k,L,V,ce,Te){return c?Ge(16,1,m,T,k,L,V,ce,Te):-52}function hn(m,T,k,L,V,ce){if(c)return Ge(17,1,m,T,k,L,V,ce)}var Gs={},ha=()=>performance.timeOrigin+performance.now();function hi(m,T){if(c)return Ge(18,1,m,T);if(Gs[m]&&(clearTimeout(Gs[m].id),delete Gs[m]),!T)return 0;var k=setTimeout(()=>{delete Gs[m],ue(()=>$i(m,performance.timeOrigin+performance.now()))},T);return Gs[m]={id:k,qc:T},0}function fa(m,T,k,L){m>>>=0,T>>>=0,k>>>=0,L>>>=0;var V=new Date().getFullYear(),ce=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var Te=Math.max(ce,V);Me()[m>>>2>>>0]=60*Te,le()[T>>>2>>>0]=+(ce!=V),m=(T=Le=>{var Ke=Math.abs(Le);return`UTC${0<=Le?"-":"+"}${String(Math.floor(Ke/60)).padStart(2,"0")}${String(Ke%60).padStart(2,"0")}`})(ce),T=T(V),V<ce?(Mr(m,k,17),Mr(T,L,17)):(Mr(m,L,17),Mr(T,k,17))}var _a=()=>Date.now();function ga(m,T,k){return 0<=m&&3>=m?(m===0?m=Date.now():m=performance.timeOrigin+performance.now(),q[k>>>0>>>3]=BigInt(Math.round(1e6*m)),0):28}var jn=[],fn=(m,T)=>{jn.length=0;for(var k;k=U()[m++>>>0];){var L=k!=105;T+=(L&=k!=112)&&T%8?4:0,jn.push(k==112?Me()[T>>>2>>>0]:k==106?q[T>>>3]:k==105?le()[T>>>2>>>0]:Ue()[T>>>3>>>0]),T+=L?8:4}return jn};function fi(m,T,k){return m>>>=0,T=fn(T>>>0,k>>>0),Be[m](...T)}function wa(m,T,k){return m>>>=0,T=fn(T>>>0,k>>>0),Be[m](...T)}var _i=()=>{};function Bs(m,T){return x(ct(m>>>0,T>>>0))}var ba=()=>{throw lt+=1,"unwind"};function bo(){return 4294901760}var ya=()=>navigator.hardwareConcurrency;function yo(){return $e("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Ma(m){m>>>=0;var T=U().length;if(m<=T||4294901760<m)return!1;for(var k=1;4>=k;k*=2){var L=T*(1+.2/k);L=Math.min(L,m+100663296);e:{L=(Math.min(4294901760,65536*Math.ceil(Math.max(m,L)/65536))-b.buffer.byteLength+65535)/65536|0;try{b.grow(L),se();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var Ks=()=>($e("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Hs={},gi=m=>{m.forEach(T=>{Ks()})};function va(){var m=Error().stack.toString().split(`
`);return m[0]=="Error"&&m.shift(),gi(m),Hs.Lb=Ks(),Hs.cc=m,Hs.Lb}function xa(m,T,k){if(m>>>=0,T>>>=0,Hs.Lb==m)var L=Hs.cc;else(L=Error().stack.toString().split(`
`))[0]=="Error"&&L.shift(),gi(L);for(var V=3;L[V]&&Ks()!=m;)++V;for(m=0;m<k&&L[m+V];++m)le()[T+4*m>>>2>>>0]=Ks();return m}var Nn,qs={},wi=()=>{if(!Nn){var m,T={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(m in qs)qs[m]===void 0?delete T[m]:T[m]=qs[m];var k=[];for(m in T)k.push(`${m}=${T[m]}`);Nn=k}return Nn};function bi(m,T){if(c)return Ge(19,1,m,T);m>>>=0,T>>>=0;var k=0;return wi().forEach((L,V)=>{var ce=T+k;for(V=Me()[m+4*V>>>2>>>0]=ce,ce=0;ce<L.length;++ce)F()[V++>>>0]=L.charCodeAt(ce);F()[V>>>0]=0,k+=L.length+1}),0}function yi(m,T){if(c)return Ge(20,1,m,T);m>>>=0,T>>>=0;var k=wi();Me()[m>>>2>>>0]=k.length;var L=0;return k.forEach(V=>L+=V.length+1),Me()[T>>>2>>>0]=L,0}function Vn(m){return c?Ge(21,1,m):52}function Mi(m,T,k,L){return c?Ge(22,1,m,T,k,L):52}function vi(m,T,k,L){return c?Ge(23,1,m,T,k,L):70}var xi=[null,[],[]];function Ti(m,T,k,L){if(c)return Ge(24,1,m,T,k,L);T>>>=0,k>>>=0,L>>>=0;for(var V=0,ce=0;ce<k;ce++){var Te=Me()[T>>>2>>>0],Le=Me()[T+4>>>2>>>0];T+=8;for(var Ke=0;Ke<Le;Ke++){var tt=U()[Te+Ke>>>0],Mt=xi[m];tt===0||tt===10?((m===1?E:x)(ht(Mt)),Mt.length=0):Mt.push(tt)}V+=Le}return Me()[L>>>2>>>0]=V,0}c||function(){for(var m=n.numThreads-1;m--;)ie();et.unshift(()=>{we++,function(T){c?T():Promise.all(Wt.map(D)).then(T)}(()=>Pe())})}();for(var Ei=Array(256),Qs=0;256>Qs;++Qs)Ei[Qs]=String.fromCharCode(Qs);As=Ei,cr=n.BindingError=class extends Error{constructor(m){super(m),this.name="BindingError"}},n.InternalError=class extends Error{constructor(m){super(m),this.name="InternalError"}},pr.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>pr.length/2-5-is.length;var ut,Ta=[ke,mt,ve,st,Rt,Zt,zr,rs,ms,ss,$s,Ur,Is,qr,hs,ks,mi,hn,hi,bi,yi,Vn,Mi,vi,Ti];(async function(){function m(L,V){return ut=L.exports,ut=function(){var ce=ut,Te={};for(let[Le,Ke]of Object.entries(ce))Te[Le]=typeof Ke=="function"?(...tt)=>{Qt.push(Le);try{return Ke(...tt)}finally{ae||(Qt.pop(),rr&&$r===1&&Qt.length===0&&($r=0,lt+=1,Sr(qn),typeof Fibers<"u"&&Fibers.rc()))}}:Ke;return Te}(),ut=function(){var ce=ut,Te=Ke=>tt=>Ke(tt)>>>0,Le=Ke=>()=>Ke()>>>0;return(ce=Object.assign({},ce)).Da=Te(ce.Da),ce.fb=Le(ce.fb),ce.hb=Te(ce.hb),ce.tb=Te(ce.tb),ce.ub=Le(ce.ub),ce.__cxa_get_exception_ptr=Te(ce.__cxa_get_exception_ptr),ce}(),yr.push(ut.ib),M=V,Pe(),ut}we++;var T=Fe();if(n.instantiateWasm)return new Promise(L=>{n.instantiateWasm(T,(V,ce)=>{m(V,ce),L(V.exports)})});if(c)return new Promise(L=>{me=V=>{var ce=new WebAssembly.Instance(V,Fe());L(m(ce,V))}});be??(be=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",w):w+"ort-wasm-simd-threaded.jsep.wasm":new URL("/ecommerce-customer/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var k=await async function(L){var V=be;if(!de&&typeof WebAssembly.instantiateStreaming=="function"&&!j(V))try{var ce=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ce,L)}catch(Te){x(`wasm streaming compile failed: ${Te}`),x("falling back to ArrayBuffer instantiation")}return async function(Te,Le){try{var Ke=await async function(tt){if(!de)try{var Mt=await _(tt);return new Uint8Array(Mt)}catch{}if(tt==be&&de)tt=new Uint8Array(de);else{if(!f)throw"both async and sync fetching of the wasm failed";tt=f(tt)}return tt}(Te);return await WebAssembly.instantiate(Ke,Le)}catch(tt){x(`failed to asynchronously prepare wasm: ${tt}`),$e(tt)}}(V,L)}(T);return m(k.instance,k.module)}catch(L){return i(L),Promise.reject(L)}})();var Un=m=>(Un=ut.Da)(m),Pi=()=>(Pi=ut.Ea)();n._OrtInit=(m,T)=>(n._OrtInit=ut.Fa)(m,T),n._OrtGetLastError=(m,T)=>(n._OrtGetLastError=ut.Ga)(m,T),n._OrtCreateSessionOptions=(m,T,k,L,V,ce,Te,Le,Ke,tt)=>(n._OrtCreateSessionOptions=ut.Ha)(m,T,k,L,V,ce,Te,Le,Ke,tt),n._OrtAppendExecutionProvider=(m,T,k,L,V)=>(n._OrtAppendExecutionProvider=ut.Ia)(m,T,k,L,V),n._OrtAddFreeDimensionOverride=(m,T,k)=>(n._OrtAddFreeDimensionOverride=ut.Ja)(m,T,k),n._OrtAddSessionConfigEntry=(m,T,k)=>(n._OrtAddSessionConfigEntry=ut.Ka)(m,T,k),n._OrtReleaseSessionOptions=m=>(n._OrtReleaseSessionOptions=ut.La)(m),n._OrtCreateSession=(m,T,k)=>(n._OrtCreateSession=ut.Ma)(m,T,k),n._OrtReleaseSession=m=>(n._OrtReleaseSession=ut.Na)(m),n._OrtGetInputOutputCount=(m,T,k)=>(n._OrtGetInputOutputCount=ut.Oa)(m,T,k),n._OrtGetInputOutputMetadata=(m,T,k,L)=>(n._OrtGetInputOutputMetadata=ut.Pa)(m,T,k,L),n._OrtFree=m=>(n._OrtFree=ut.Qa)(m),n._OrtCreateTensor=(m,T,k,L,V,ce)=>(n._OrtCreateTensor=ut.Ra)(m,T,k,L,V,ce),n._OrtGetTensorData=(m,T,k,L,V)=>(n._OrtGetTensorData=ut.Sa)(m,T,k,L,V),n._OrtReleaseTensor=m=>(n._OrtReleaseTensor=ut.Ta)(m),n._OrtCreateRunOptions=(m,T,k,L)=>(n._OrtCreateRunOptions=ut.Ua)(m,T,k,L),n._OrtAddRunConfigEntry=(m,T,k)=>(n._OrtAddRunConfigEntry=ut.Va)(m,T,k),n._OrtReleaseRunOptions=m=>(n._OrtReleaseRunOptions=ut.Wa)(m),n._OrtCreateBinding=m=>(n._OrtCreateBinding=ut.Xa)(m),n._OrtBindInput=(m,T,k)=>(n._OrtBindInput=ut.Ya)(m,T,k),n._OrtBindOutput=(m,T,k,L)=>(n._OrtBindOutput=ut.Za)(m,T,k,L),n._OrtClearBoundOutputs=m=>(n._OrtClearBoundOutputs=ut._a)(m),n._OrtReleaseBinding=m=>(n._OrtReleaseBinding=ut.$a)(m),n._OrtRunWithBinding=(m,T,k,L,V)=>(n._OrtRunWithBinding=ut.ab)(m,T,k,L,V),n._OrtRun=(m,T,k,L,V,ce,Te,Le)=>(n._OrtRun=ut.bb)(m,T,k,L,V,ce,Te,Le),n._OrtEndProfiling=m=>(n._OrtEndProfiling=ut.cb)(m),n._JsepOutput=(m,T,k)=>(n._JsepOutput=ut.db)(m,T,k),n._JsepGetNodeName=m=>(n._JsepGetNodeName=ut.eb)(m);var _n=()=>(_n=ut.fb)(),Kr=n._free=m=>(Kr=n._free=ut.gb)(m),gn=n._malloc=m=>(gn=n._malloc=ut.hb)(m),Wn=(m,T,k,L,V,ce)=>(Wn=ut.kb)(m,T,k,L,V,ce),Gn=()=>(Gn=ut.lb)(),Ci=(m,T,k,L,V)=>(Ci=ut.mb)(m,T,k,L,V),Si=m=>(Si=ut.nb)(m),wn=m=>(wn=ut.ob)(m),$i=(m,T)=>($i=ut.pb)(m,T),Ii=()=>(Ii=ut.qb)(),Kn=(m,T)=>(Kn=ut.rb)(m,T),bn=m=>(bn=ut.sb)(m),Hn=m=>(Hn=ut.tb)(m),yn=()=>(yn=ut.ub)(),ki=n.dynCall_ii=(m,T)=>(ki=n.dynCall_ii=ut.vb)(m,T),Ai=m=>(Ai=ut.wb)(m),qn=()=>(qn=ut.xb)(),Fi=m=>(Fi=ut.yb)(m),Oi=()=>(Oi=ut.zb)();return n.stackSave=()=>yn(),n.stackRestore=m=>bn(m),n.stackAlloc=m=>Hn(m),n.setValue=function(m,T,k="i8"){switch(k.endsWith("*")&&(k="*"),k){case"i1":case"i8":F()[m>>>0]=T;break;case"i16":ee()[m>>>1>>>0]=T;break;case"i32":le()[m>>>2>>>0]=T;break;case"i64":q[m>>>3]=BigInt(T);break;case"float":ze()[m>>>2>>>0]=T;break;case"double":Ue()[m>>>3>>>0]=T;break;case"*":Me()[m>>>2>>>0]=T;break;default:$e(`invalid type for setValue: ${k}`)}},n.getValue=function(m,T="i8"){switch(T.endsWith("*")&&(T="*"),T){case"i1":case"i8":return F()[m>>>0];case"i16":return ee()[m>>>1>>>0];case"i32":return le()[m>>>2>>>0];case"i64":return q[m>>>3];case"float":return ze()[m>>>2>>>0];case"double":return Ue()[m>>>3>>>0];case"*":return Me()[m>>>2>>>0];default:$e(`invalid type for getValue: ${T}`)}},n.UTF8ToString=ct,n.stringToUTF8=Mr,n.lengthBytesUTF8=Xt,function m(){if(0<we)Se=m;else if(c)s(n),G();else{for(;0<et.length;)et.shift()(n);0<we?Se=m:(n.calledRun=!0,ae||(G(),s(n)))}}(),n.PTR_SIZE=4,a}),zb=jl,Ff=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),Ff&&jl()}),Nl,Dc,Of,Yr,Bb,qa,Df,Lf,Vl,zf,Ul,Rb,Wl,jb,td=je(()=>{ed(),Nl=typeof location>"u"?void 0:location.origin,Dc=import.meta.url>"file:"&&import.meta.url<"file;",Of=()=>{{if(Dc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Nl).href}return import.meta.url}},Yr=Of(),Bb=()=>{if(Yr&&!Yr.startsWith("blob:"))return Yr.substring(0,Yr.lastIndexOf("/")+1)},qa=(e,r)=>{try{let t=r??Yr;return(t?new URL(e,t):new URL(e)).origin===Nl}catch{return!1}},Df=(e,r)=>{let t=r??Yr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Lf=(e,r)=>`${r??"./"}${e}`,Vl=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},zf=async e=>(await import(e)).default,Ul=(Mx(),Yi(Ob)).default,Rb=async()=>{if(!Yr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(qa(Yr))return[void 0,Ul()];let e=await Vl(Yr);return[e,Ul(e)]},Wl=(vx(),Yi(Lb)).default,jb=async(e,r,t)=>{if(!e&&!r&&Wl&&Yr&&qa(Yr))return[void 0,Wl];{let s="ort-wasm-simd-threaded.jsep.mjs",i=e??Df(s,r),n=t&&i&&!qa(i,r),a=n?await Vl(i):i??Lf(s,r);return[n?a:void 0,await zf(a)]}}}),Gl,Qa,Bi,Kl,Bf,Rf,jf,rd,Yt,zn=je(()=>{td(),Qa=!1,Bi=!1,Kl=!1,Bf=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Rf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},jf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},rd=async e=>{if(Qa)return Promise.resolve();if(Bi)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Kl)throw new Error("previous call to 'initializeWebAssembly()' failed.");Bi=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!jf())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!Rf())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=Bf();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let i=e.wasmPaths,n=typeof i=="string"?i:void 0,a=i==null?void 0:i.mjs,o=(a==null?void 0:a.href)??a,l=i==null?void 0:i.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[d,u]=await jb(o,n,t>1),_=!1,f=[];if(r>0&&f.push(new Promise(v=>{setTimeout(()=>{_=!0,v()},r)})),f.push(new Promise((v,$)=>{let w={numThreads:t};if(p)w.wasmBinary=p;else if(c||n)w.locateFile=g=>c??n+g;else if(o&&o.indexOf("blob:")!==0)w.locateFile=g=>new URL(g,o).href;else if(d){let g=Bb();g&&(w.locateFile=C=>g+C)}u(w).then(g=>{Bi=!1,Qa=!0,Gl=g,v(),d&&URL.revokeObjectURL(d)},g=>{Bi=!1,Kl=!0,$(g)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Yt=()=>{if(Qa&&Gl)return Gl;throw new Error("WebAssembly is not initialized yet.")}}),Ts,po,Ht,sd=je(()=>{zn(),Ts=(e,r)=>{let t=Yt(),s=t.lengthBytesUTF8(e)+1,i=t._malloc(s);return t.stringToUTF8(e,i,s),r.push(i),i},po=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([i,n])=>{let a=r?r+i:i;if(typeof n=="object")po(n,a+".",t,s);else if(typeof n=="string"||typeof n=="number")s(a,n.toString());else if(typeof n=="boolean")s(a,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},Ht=e=>{let r=Yt(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let n=Number(r.getValue(i,s===4?"i32":"i64")),a=r.getValue(i+s,"*"),o=a?r.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(t)}}}),Nb,xx=je(()=>{zn(),sd(),Nb=e=>{let r=Yt(),t=0,s=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Ts(e.tag,s)),t=r._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,n),t===0&&Ht("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&po(e.extra,"",new WeakSet,(a,o)=>{let l=Ts(a,s),c=Ts(o,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&Ht(`Can't set a run config entry: ${a} - ${o}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(a=>r._free(a)),n}}}),Nf,Vf,Uf,Ri,Wf,Vb,Tx=je(()=>{zn(),sd(),Nf=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Vf=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Uf=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Ri=(e,r,t,s)=>{let i=Ts(r,s),n=Ts(t,s);Yt()._OrtAddSessionConfigEntry(e,i,n)!==0&&Ht(`Can't set a session config entry: ${r} - ${t}.`)},Wf=async(e,r,t)=>{for(let s of r){let i=typeof s=="string"?s:s.name,n=[];switch(i){case"webnn":if(i="WEBNN",typeof s!="string"){let p=s==null?void 0:s.deviceType;p&&Ri(e,"deviceType",p,t)}break;case"webgpu":if(i="JS",typeof s!="string"){let p=s;if(p!=null&&p.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);Ri(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let a=Ts(i,t),o=n.length,l=0,c=0;if(o>0){l=Yt()._malloc(o*Yt().PTR_SIZE),t.push(l),c=Yt()._malloc(o*Yt().PTR_SIZE),t.push(c);for(let p=0;p<o;p++)Yt().setValue(l+p*Yt().PTR_SIZE,n[p][0],"*"),Yt().setValue(c+p*Yt().PTR_SIZE,n[p][1],"*")}await Yt()._OrtAppendExecutionProvider(e,a,l,c,o)!==0&&Ht(`Can't append execution provider: ${i}.`)}},Vb=async e=>{let r=Yt(),t=0,s=[],i=e||{};Uf(i);try{let n=Nf(i.graphOptimizationLevel??"all"),a=Vf(i.executionMode??"sequential"),o=typeof i.logId=="string"?Ts(i.logId,s):0,l=i.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=i.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof i.optimizedModelFilePath=="string"?Ts(i.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,o,l,c,p),t===0&&Ht("Can't create session options."),i.executionProviders&&await Wf(t,i.executionProviders,s),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);Ri(t,"enableGraphCapture",i.enableGraphCapture.toString(),s)}if(i.freeDimensionOverrides)for(let[d,u]of Object.entries(i.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let _=Ts(d,s);r._OrtAddFreeDimensionOverride(t,_,u)!==0&&Ht(`Can't set a free dimension override: ${d} - ${u}.`)}return i.extra!==void 0&&po(i.extra,"",new WeakSet,(d,u)=>{Ri(t,d,u,s)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&Ht("Can't release session options."),s.forEach(a=>r._free(a)),n}}}),ti,Ns,An,nd,mo,id,ad,Lc,_t=je(()=>{ti=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ns=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},An=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((i,n)=>i*n,1);return t>0?Math.ceil(s*t):void 0},nd=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},mo=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},id=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ad=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Lc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),od,Ub=je(()=>{ed(),od=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(o){if(o instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw o}let a=0;for(;;){let{done:o,value:l}=await i.read();if(o)break;let c=l.byteLength;new Uint8Array(n,a,c).set(l),a+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Gf,Kf,Hf,qf,ld,Qf,At,Vs=je(()=>{_t(),Gf=["V","I","W","E","F"],Kf=(e,r)=>{console.log(`[${Gf[e]},${new Date().toISOString()}]${r}`)},ld=(e,r)=>{Hf=e,qf=r},Qf=(e,r)=>{let t=mo(e),s=mo(Hf);t>=s&&Kf(t,typeof r=="function"?r():r)},At=(...e)=>{qf&&Qf(...e)}}),Xf,ni,ye,ho,Wb,Gb,Kb,Tt=je(()=>{Xf=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},ni=class{static calcShape(e,r,t=!1){let s=e.length,i=r.length;if(s===0)return r;if(i===0)return e;let n=Math.max(e.length,r.length),a=new Array(n);if(t){if(s<2||i<2)return;let o=Xf.calcMatMulShape([e[s-2],e[s-1]],[r[i-2],r[i-1]]);if(o===void 0)return;[a[n-2],a[n-1]]=o}for(let o=t?3:1;o<=n;o++){let l=s-o<0?1:e[s-o],c=i-o<0?1:r[i-o];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)a[n-o]=Math.max(l,c);else{if(p>1)return;a[n-o]=0}}return a}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==r[s-i])return!1;return!0}},ye=class co{static size(r){return co.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let i=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){i[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");i[n]=1,t/=r[n],n--}for(n--;n>=0;n--)i[n]=r[n];return i}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return co.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return co.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let i=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(r[n])}return i}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=s[i+1]*r[i+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((i,n)=>i+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,i)=>s===t[i])}},ho=class qi{static adjustPoolAttributes(r,t,s,i,n,a){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let o=0;o<t.length-2;o++)o>=s.length?s.push(t[o+2]):s[o]=t[o+2];for(let o=0;o<s.length;o++)if(o<i.length){if(i[o]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let o=0;o<s.length;o++)if(o<n.length){if(n[o]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let o=0;o<s.length*2;o++)if(o<a.length){if(a[o]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let o=0;o<s.length;o++){if(s[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[o]>=s[o]||a[o+s.length]>=s[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,i,n,a,o){if(o){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)qi.adjustPadAndReturnShape(r[l+(a?1:2)],t[l],s[l],i[l],n,l,l+r.length-2,o)}}static computePoolOutputShape(r,t,s,i,n,a,o){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return qi.computeShapeHelper(r,t,l,s,i,n,a,o),l}static computeConvOutputShape(r,t,s,i,n,a,o){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return qi.computeShapeHelper(!1,r,l,s,i,n,a,o),l}static computeShapeHelper(r,t,s,i,n,a,o,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(qi.adjustPadAndReturnShape(t[c+2],i[c],n[c],a[c],o,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,i,n,a,o,l){let c=s*(i-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[a]=0,n[o]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+i-r;return n[a]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[o]=p-n[a],Math.floor((r+p-i)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[a]+n[o]-c)/t+1)}},Wb=class{static getShapeOfGemmResult(e,r,t,s,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,a,o;r?(n=e[1],a=e[0]):(n=e[0],a=e[1]);let l=-1;if(s?(o=t[0],l=1):(o=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(n<=0||o<=0||a<=0)throw new Error("invalid shape specified");if(i&&!ni.isValidBroadcast(i,[n,o]))throw new Error("gemm: invalid bias shape for broadcast");return[n,o,a]}},Gb=-34028234663852886e22,Kb=34028234663852886e22}),cd,Hb=je(()=>{_t(),cd=(e,r)=>new(nd(r))(e)}),zc,Hl,Jf,ql,Yf,Ql,Xl,Jl,Zf,qb,Ex=je(()=>{Vs(),zc=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),i=new Int32Array(t);for(let n=0;n<t;n++){let a=s[n];if(a>2147483647n||a<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${n}: ${a}`);i[n]=Number(a)}return r?new Uint8Array(i.buffer):i},Hl=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),i=BigInt64Array.from(s,BigInt);return r?new Uint8Array(i.buffer):i},Jf=1,ql=()=>Jf++,Yf=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Ql=(e,r)=>{let t=Yf.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,i)=>s*i)*t/8):0},Xl=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:i,shape:n,shouldConvertInt64toInt32:a=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=i,this.tensorShape=n,this.shouldConvertInt64toInt32=a}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Ql(this.dataType,this.tensorShape)}destroy(){At("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=Hl(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,i)=>s===t[i])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},Jl=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let i=r,n=this.tensorManager.getMLContext(e),a=i==="int64"&&!n.opSupportLimits().input.dataTypes.includes("int64");if(a&&(i="int32",At("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,i,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==Ql(i,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,i,t,o,!0,!0,a),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=zc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else At("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){var r,t,s;if(this.activeUpload){let i=(r=this.wrapper)!=null&&r.isInt64ToInt32Converted?Hl(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(i):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(i);return}else return i.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,e):this.wrapper.read((s=this.wrapper)==null?void 0:s.shouldConvertInt64toInt32)}},Zf=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=ql();return this.tensorTrackersById.set(e,new Jl(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,i){At("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${i}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,i)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){At("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let i=this.getMLContext(e),n=ql(),a=new Xl({sessionId:e,context:i,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new Jl(this,a)),this.externalTensors.add(a),n}async getCachedTensor(e,r,t,s,i,n,a=!1){let o=this.getMLContext(e);for(let[c,p]of this.freeTensors.entries())if(p.canReuseTensor(o,r,t)){At("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let d=this.freeTensors.splice(c,1)[0];return d.sessionId=e,d}At("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await o.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:i,readable:n});return new Xl({sessionId:e,context:o,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:a})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},qb=(...e)=>new Zf(...e)}),Xa,e_,Qb,Px=je(()=>{_t(),zn(),Hb(),Ex(),Vs(),Xa=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),e_=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((i,n)=>i===s[n]&&e[i]===r[i])},Qb=class{constructor(e){this.tensorManager=qb(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,ld(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){At("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){At("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)At("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>e_(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(i=>i.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){At("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,i){let n=Xa.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,i)}async createTemporaryTensor(e,r,t){At("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=Xa.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let i=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,i,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(i):this.temporarySessionTensorIds.set(e,[i]),i}uploadTensor(e,r){if(!Yt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");At("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return cd(t,r)}}registerMLTensor(e,r,t,s){let i=Xa.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,i,s);return At("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${i}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,i,n,a=!1){if(!n)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let l=n.get(o);if(!l)throw new Error(`File with name ${o} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(r,r+t).buffer,p;switch(i.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":a?(p=zc(new Uint8Array(c),!1),i.dataType="int32"):p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return At("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}} ${a?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(i,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){var r;return!!((r=this.mlContextBySessionId.get(e))!=null&&r.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),dd=je(()=>{}),Yl,Ja,Ya,t_,r_,Zl,Bc,s_,Xb,Cx=je(()=>{Vs(),dd(),Yl=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ja=[],Ya=e=>Math.ceil(Number(e)/16)*16,t_=e=>{for(let r=0;r<Ja.length;r++){let t=Ja[r];if(e<=t)return t}return Math.ceil(e/16)*16},r_=1,Zl=()=>r_++,Bc=async(e,r,t,s)=>{let i=Ya(t),n=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(r,0,n,0,i),e.flush(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(o,0,t)),l}else return new Uint8Array(o.slice(0,t))}finally{n.destroy()}},s_=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of Yl)Ja.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,i=r.byteLength,n=Ya(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,i)),o.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(o,0,a.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),o.destroy(),At("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Ya(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,i)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return At("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=Zl();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),At("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),At("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=t_(e),s,i=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||n){let o=(i?this.freeBuffers:this.freeUniformBuffers).get(t);o?o.length>0?s=o.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let a={id:Zl(),type:0,buffer:s};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),At("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return At("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Bc(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=Yl.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(At("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Xb=(...e)=>new s_(...e)}),n_,Ut,ur=je(()=>{n_=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ut=e=>new n_(e)}),ii,Za,Ar,Vr,dt,or,Rc,si,rn,at,ji,Ce,rt,Jb,ud,i_,Yb,Et=je(()=>{_t(),Tt(),ii=64,Za=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Ar=(e,r=1)=>{let t=Za(e,r);return typeof t=="string"?t:t[0]},Vr=(e,r=1)=>{let t=Za(e,r);return typeof t=="string"?t:t[1]},dt=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ye.computeStrides(t)})}),r},or=e=>e%4===0?4:e%2===0?2:1,Rc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,si=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,rn=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,at=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,ji=(e,r,t,s,i)=>{let n=typeof t=="number",a=n?t:t.length,o=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,c=Za(r,i),p=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],u={indices:l,value:p,storage:d,tensor:r},_=j=>typeof j=="string"?j:`${j}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},v=n?"uniforms.":"",$=`${v}${e}_shape`,w=`${v}${e}_strides`,g="";for(let j=0;j<a-1;j++)g+=`
    let dim${j} = current / ${at(w,j,a)};
    let rest${j} = current % ${at(w,j,a)};
    indices[${j}] = dim${j};
    current = rest${j};
    `;g+=`indices[${a-1}] = current;`;let C=a<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${g}
    return indices;
  }`,E=j=>(f.offsetToIndices=!0,a<2?j:`o2i_${e}(${j})`),x=[];if(a>=2)for(let j=a-1;j>=0;j--)x.push(`${at(w,j,a)} * (indices[${j}])`);let b=a<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${x.join("+")};
  }`,M=j=>(f.indicesToOffset=!0,a<2?j:`i2o_${e}(${j})`),P=(...j)=>a===0?"0u":`${u.indices}(${j.map(_).join(",")})`,A=(j,F)=>a<2?`${j}`:`${at(j,F,a)}`,z=(j,F,U)=>a<2?`${j}=${U};`:`${at(j,F,a)}=${U};`,K={},Q=(j,F)=>{f.broadcastedIndicesToOffset=!0;let U=`${F.name}broadcastedIndicesTo${e}Offset`;if(U in K)return`${U}(${j})`;let ee=[];for(let _e=a-1;_e>=0;_e--){let le=F.indicesGet("outputIndices",_e+F.rank-a);ee.push(`${A(w,_e)} * (${le} % ${A($,_e)})`)}return K[U]=`fn ${U}(outputIndices: ${F.type.indices}) -> u32 {
             return ${ee.length>0?ee.join("+"):"0u"};
           }`,`${U}(${j})`},B=(j,F)=>(()=>{if(u.storage===u.value)return`${e}[${j}]=${F};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${j}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${j}]=vec2<u32>(u32(${F}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),Y=j=>(()=>{if(u.storage===u.value)return`${e}[${j}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${j}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${j}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${j}] & 0xFFu), bool(${e}[${j}] & 0xFF00u), bool(${e}[${j}] & 0xFF0000u), bool(${e}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),H=a<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${p} {
    return ${Y(`i2o_${e}(indices)`)};
  }`,q=a<2?"":(()=>{let j=o.map(U=>`d${U}: u32`).join(", "),F=o.map(U=>`d${U}`).join(", ");return`
  fn get_${e}(${j}) -> ${p} {
    return get_${e}ByIndices(${P(F)});
  }`})(),X=(...j)=>{if(j.length!==a)throw new Error(`indices length must be ${a}`);let F=j.map(_).join(",");return a===0?Y("0u"):a===1?Y(F[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${F})`)},re=j=>a<2?Y(j):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${j})`),de=a<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${p}) {
    ${B(`i2o_${e}(indices)`,"value")}
  }`,ae=a<2?"":(()=>{let j=o.map(U=>`d${U}: u32`).join(", "),F=o.map(U=>`d${U}`).join(", ");return`
  fn set_${e}(${j}, value: ${p}) {
    set_${e}ByIndices(${P(F)}, value);
  }`})();return{impl:()=>{let j=[],F=!1;return f.offsetToIndices&&(j.push(C),F=!0),f.indicesToOffset&&(j.push(b),F=!0),f.broadcastedIndicesToOffset&&(Object.values(K).forEach(U=>j.push(U)),F=!0),f.set&&(j.push(ae),F=!0),f.setByIndices&&(j.push(de),F=!0),f.get&&(j.push(q),F=!0),f.getByIndices&&(j.push(H),F=!0),!n&&F&&j.unshift(`const ${$} = ${u.indices}(${t.join(",")});`,`const ${w} = ${u.indices}(${ye.computeStrides(t).join(",")});`),j.join(`
`)},type:u,offsetToIndices:E,indicesToOffset:M,broadcastedIndicesToOffset:Q,indices:P,indicesGet:A,indicesSet:z,set:(...j)=>{if(j.length!==a+1)throw new Error(`indices length must be ${a}`);let F=j[a];if(typeof F!="string")throw new Error("value must be string");let U=j.slice(0,a).map(_).join(",");return a===0?B("0u",F):a===1?B(U[0],F):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${U}, ${F})`)},setByOffset:B,setByIndices:(j,F)=>a<2?B(j,F):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${j}, ${F});`),get:X,getByOffset:Y,getByIndices:re,usage:s,name:e,strides:w,shape:$,rank:a}},Ce=(e,r,t,s=1)=>ji(e,r,t,"input",s),rt=(e,r,t,s=1)=>ji(e,r,t,"output",s),Jb=(e,r,t)=>ji(e,r,t,"atomicOutput",1),ud=(e,r,t,s=1)=>ji(e,r,t,"internal",s),i_=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=ii){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let i=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},Yb=(e,r)=>new i_(e,r)}),a_,ec,o_,l_,c_,d_,es,Zb,ey,sn=je(()=>{_t(),Tt(),ur(),Et(),a_=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},ec=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),o_=(e,r)=>ye.sortBasedOnPerm(e,ec(e.length,r)),l_=(e,r,t,s)=>{let i=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)i+=`a[${e[n]}]=i[${n}];`;return i+="return a;}"},c_=(e,r)=>{let t=[],s=[];for(let i=0;i<e.length;++i)e[i]!==1&&t.push(e[i]),e[r[i]]!==1&&s.push(r[i]);return{newShape:t,newPerm:s}},d_=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},es=(e,r)=>{let t=e.dataType,s=e.dims.length,i=ec(s,r),n=o_(e.dims,i),a=e.dims,o=n,l=s<2||d_(i,e.dims),c;if(l)return c=f=>{let v=Ce("input",t,a,4),$=rt("output",t,o,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(v,$)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:p,newPerm:d}=c_(e.dims,i),u=ye.areEqual(d,[2,3,1]),_=ye.areEqual(d,[3,1,2]);if(p.length===2||u||_){a=u?[p[0],p[1]*p[2]]:_?[p[0]*p[1],p[2]]:p,o=[a[1],a[0]];let f=16;return c=v=>{let $=Ce("a",t,a.length),w=rt("output",t,o.length);return`
  ${v.registerUniform("output_size","u32").declareVariables($,w)}
  var<workgroup> tile : array<array<${w.type.value}, ${f+1}>, ${f}>;
  ${v.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${$.getByIndices(`${$.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${w.setByIndices(`${w.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let v=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(o[1]/f),y:Math.ceil(o[0]/f)},programUniforms:[{type:12,data:v},...dt(a,o)]}},getShaderSource:c}}return c=f=>{let v=Ce("a",t,a.length),$=rt("output",t,o.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(v,$)}

  ${l_(i,s,v,$)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${$.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${$.setByOffset("global_idx",v.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...dt(a,o)]}},getShaderSource:c}},Zb=(e,r)=>{a_(e.inputs,r.perm),e.compute(es(e.inputs[0],r.perm))},ey=e=>Ut({perm:e.perm})}),u_,p_,m_,h_,f_,__,g_,w_,b_,y_,bs,ty,ry,sy,ny,iy,ay,oy,ly,cy,dy,Sx=je(()=>{_t(),Tt(),Et(),pd(),sn(),u_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},p_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},m_={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},h_={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},f_=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},__=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let i=r.map(n=>e[n]);return[t,i]},g_=(e,r)=>{let t=e.length+r.length,s=[],i=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[i++]):s.push(1);return s},w_=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},b_=(e,r)=>{let t=[];if(!w_(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},y_=(e,r,t,s,i,n,a)=>{let o=t[0].dims,l=ye.size(n),c=ye.size(a),p=Ce("_A",t[0].dataType,o),d=rt("output",i,n),u=64;l===1&&(u=256);let _=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,f=v=>`
        ${v.registerUniform("reduceSize","u32").declareVariables(p,d)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${v.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${m_[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${u_[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${p_[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${h_[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${u}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},bs=(e,r,t,s)=>{let i=e.inputs.length===1?t:jc(e.inputs,t),n=i.axes;n.length===0&&!i.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((_,f)=>f));let a=ye.normalizeAxes(n,e.inputs[0].dims.length),o=a,l=e.inputs[0],c=b_(o,e.inputs[0].dims.length);c.length>0&&(l=e.compute(es(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],o=f_(o.length,l.dims.length));let[p,d]=__(l.dims,o),u=p;i.keepDims&&(u=g_(p,a)),e.compute(y_(r,i.cacheKey,[l],s,e.inputs[0].dataType,u,d),{inputs:[l]})},ty=(e,r)=>{bs(e,"ReduceMeanShared",r,"mean")},ry=(e,r)=>{bs(e,"ReduceL1Shared",r,"l1")},sy=(e,r)=>{bs(e,"ReduceL2Shared",r,"l2")},ny=(e,r)=>{bs(e,"ReduceLogSumExpShared",r,"logSumExp")},iy=(e,r)=>{bs(e,"ReduceMaxShared",r,"max")},ay=(e,r)=>{bs(e,"ReduceMinShared",r,"min")},oy=(e,r)=>{bs(e,"ReduceProdShared",r,"prod")},ly=(e,r)=>{bs(e,"ReduceSumShared",r,"sum")},cy=(e,r)=>{bs(e,"ReduceSumSquareShared",r,"sumSquare")},dy=(e,r)=>{bs(e,"ReduceLogSumShared",r,"logSum")}}),ys,M_,fo,jc,Ms,v_,x_,T_,E_,P_,C_,S_,$_,I_,k_,vs,uy,py,my,hy,fy,_y,gy,wy,by,yy,pd=je(()=>{_t(),Tt(),ur(),Et(),Sx(),ys=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},M_=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],fo=(e,r,t,s,i,n,a=!1,o=!1)=>{let l=[],c=t[0].dims,p=c.length,d=ye.normalizeAxes(i,p),u=!o&&d.length===0;c.forEach((v,$)=>{u||d.indexOf($)>=0?a&&l.push(1):l.push(v)});let _=l.length,f=ye.size(l);return{name:e,shaderCache:r,getShaderSource:v=>{let $=[],w=Ce("_A",t[0].dataType,p),g=rt("output",n,_),C=s(w,g,d),E=C[2];for(let x=0,b=0;x<p;x++)u||d.indexOf(x)>=0?(a&&b++,E=`for(var j${x}: u32 = 0; j${x} < ${c[x]}; j${x}++) {
                  ${C[2].includes("last_index")?`let last_index = j${x};`:""}
                  ${w.indicesSet("input_indices",x,`j${x}`)}
                  ${E}
                }`):($.push(`${w.indicesSet("input_indices",x,g.indicesGet("output_indices",b))};`),b++);return`

        ${v.registerUniform("output_size","u32").declareVariables(w,g)}

        ${v.mainStart()}
          ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${w.type.indices};
          let output_indices = ${g.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${C[0]}       // init ops for reduce max/min
          ${C[1]}
          ${E}
          ${C[3]}
          ${C.length===4?g.setByOffset("global_idx","value"):C.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...dt(c,l)]})}},jc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Ut({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Ms=(e,r,t,s)=>{let i=e.inputs,n=i.length===1?t:jc(i,t);e.compute(fo(r,{hint:n.cacheKey,inputDependencies:["rank"]},[i[0]],n.noopWithEmptyAxes&&n.axes.length===0?M_:s,n.axes,i[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},v_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},x_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},T_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},E_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},P_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceMax",r,(t,s,i)=>{let n=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&n.push(t.indicesSet("input_indices",a,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},C_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceMean",r,(t,s,i)=>{let n=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(n*=e.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},S_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceMin",r,(t,s,i)=>{let n=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&n.push(`input_indices[${a}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},$_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},I_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},k_=(e,r)=>{ys(e.inputs),Ms(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},vs=(e,r,t)=>{if(r.length===0)return t;let s=1,i=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:i*=e[n];return i<32&&s>1024},uy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?C_(e,r):ty(e,r)},py=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?x_(e,r):ry(e,r)},my=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?T_(e,r):sy(e,r)},hy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?E_(e,r):ny(e,r)},fy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?P_(e,r):iy(e,r)},_y=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?S_(e,r):ay(e,r)},gy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?$_(e,r):oy(e,r)},wy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?I_(e,r):ly(e,r)},by=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?k_(e,r):cy(e,r)},yy=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?v_(e,r):dy(e,r)}}),tc,My,vy,Nc,$x=je(()=>{_t(),ur(),pd(),tc=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},My=(e,r)=>{tc(e.inputs);let t=(s,i,n)=>{let a=[];for(let o=0;o<s.rank;o++)(n.indexOf(o)>=0||n.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(fo("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},vy=(e,r)=>{tc(e.inputs);let t=(s,i,n)=>{let a=[];for(let o=0;o<s.rank;o++)(n.indexOf(o)>=0||n.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(fo("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Nc=e=>Ut(e)}),A_,eo,F_,O_,D_,ea,L_,xy,md=je(()=>{_t(),Tt(),dd(),Et(),A_=(e,r)=>{let t=e[0],s=e[1],i=e[2],n=e[3],a=e[4],o=e[5];if(a&&o)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=i.dims[0]/3,u=d,_=u;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let C of r.qkvHiddenSizes)if(C%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],u=r.qkvHiddenSizes[1],_=r.qkvHiddenSizes[2]}let f=c;if(d!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==d+u+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let v=0;if(a){if(u!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(a.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(a.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==u/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(v=a.dims[3])}let $=f+v,w=-1,g=0;if(n)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==r.numHeads||o.dims[2]!==c||o.dims[3]!==$)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:v,kvSequenceLength:f,totalSequenceLength:$,maxSequenceLength:w,inputHiddenSize:p,hiddenSize:d,vHiddenSize:_,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(_/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},eo=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,F_=(e,r,t,s,i,n,a,o)=>{let l=or(a?1:n),c=64,p=n/l;p<c&&(c=32);let d=Math.ceil(n/l/c),u=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:i},{type:12,data:p},{type:12,data:d}],_=Ar(e.dataType,l),f=Vr(1,l),v=["type"];a&&v.push("type"),o&&v.push("type");let $=w=>{let g=rt("x",e.dataType,e.dims,l),C=[g],E=a?Ce("seq_lens",a.dataType,a.dims):void 0;E&&C.push(E);let x=o?Ce("total_sequence_length_input",o.dataType,o.dims):void 0;x&&C.push(x);let b=Vr(e.dataType),M=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${w.registerUniforms(M).declareVariables(...C)}
  ${w.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${eo(E,x,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${g.type.value}(${b}(1.0) / ${b}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${a?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${g.type.value}(${b}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${_};${l}`,inputDependencies:v},getShaderSource:$,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:i,z:r*t},programUniforms:u})}},O_=(e,r,t,s,i,n,a,o,l)=>{let c=a+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],d=e>1&&s,u=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=d?[n.batchSize,u,c,n.headSize]:void 0,f=n.nReps?n.nReps:1,v=n.scale===0?1/Math.sqrt(n.headSize):n.scale,$=or(n.headSize),w=n.headSize/$,g=12,C={x:Math.ceil(c/g),y:Math.ceil(n.sequenceLength/g),z:n.batchSize*n.numHeads},E=[{type:12,data:n.sequenceLength},{type:12,data:w},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:v},{type:12,data:a},{type:12,data:n.kvSequenceLength},{type:12,data:f}],x=d&&s&&ye.size(s.dims)>0,b=["type","type"];x&&b.push("type"),i&&b.push("type"),o&&b.push("type"),l&&b.push("type");let M=[{dims:p,dataType:r.dataType,gpuDataType:0}];d&&M.push({dims:_,dataType:r.dataType,gpuDataType:0});let P=A=>{let z=Ce("q",r.dataType,r.dims,$),K=Ce("key",t.dataType,t.dims,$),Q=[z,K];if(x){let de=Ce("past_key",s.dataType,s.dims,$);Q.push(de)}i&&Q.push(Ce("attention_bias",i.dataType,i.dims));let B=o?Ce("seq_lens",o.dataType,o.dims):void 0;B&&Q.push(B);let Y=l?Ce("total_sequence_length_input",l.dataType,l.dims):void 0;Y&&Q.push(Y);let H=rt("output",r.dataType,p),q=[H];d&&q.push(rt("present_key",r.dataType,_,$));let X=Vr(1,$),re=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${z.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${z.type.storage}, ${g*g}>;
  ${A.registerUniforms(re).declareVariables(...Q,...q)}
  ${A.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${eo(B,Y,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${x&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${X}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${x&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${X}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch($){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${$}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${$};${i!==void 0};${s!==void 0};${e}`,inputDependencies:b},getRunData:()=>({outputs:M,dispatchGroup:C,programUniforms:E}),getShaderSource:P}},D_=(e,r,t,s,i,n,a=void 0,o=void 0)=>{let l=n+i.kvSequenceLength,c=i.nReps?i.nReps:1,p=i.vHiddenSize*c,d=e>1&&s,u=i.kvNumHeads?i.kvNumHeads:i.numHeads,_=d?[i.batchSize,u,l,i.headSize]:void 0,f=[i.batchSize,i.sequenceLength,p],v=12,$={x:Math.ceil(i.vHeadSize/v),y:Math.ceil(i.sequenceLength/v),z:i.batchSize*i.numHeads},w=[{type:12,data:i.sequenceLength},{type:12,data:l},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:i.kvSequenceLength},{type:12,data:c}],g=d&&s&&ye.size(s.dims)>0,C=["type","type"];g&&C.push("type"),a&&C.push("type"),o&&C.push("type");let E=[{dims:f,dataType:r.dataType,gpuDataType:0}];d&&E.push({dims:_,dataType:r.dataType,gpuDataType:0});let x=b=>{let M=Ce("probs",r.dataType,r.dims),P=Ce("v",t.dataType,t.dims),A=[M,P];g&&A.push(Ce("past_value",s.dataType,s.dims));let z=a?Ce("seq_lens",a.dataType,a.dims):void 0;a&&A.push(z);let K=o?Ce("total_sequence_length_input",o.dataType,o.dims):void 0;o&&A.push(K);let Q=[rt("output",r.dataType,f)];d&&Q.push(rt("present_value",r.dataType,_));let B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${v}u;
  var<workgroup> tileQ: array<${M.type.value}, ${v*v}>;
  var<workgroup> tileV: array<${M.type.value}, ${v*v}>;
  ${b.registerUniforms(B).declareVariables(...A,...Q)}
  ${b.mainStart([v,v,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${eo(z,K,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${g&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${M.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${g&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:C},getRunData:()=>({outputs:E,dispatchGroup:$,programUniforms:w}),getShaderSource:x}},ea=(e,r,t,s,i,n,a,o,l,c,p=void 0,d=void 0)=>{let u=Math.min(e.outputCount,1+(a?1:0)+(o?1:0)),_=u>1?c.pastSequenceLength:0,f=_+c.kvSequenceLength,v=l&&ye.size(l.dims)>0?l:void 0,$=[r,t];u>1&&a&&ye.size(a.dims)>0&&$.push(a),v&&$.push(v),p&&$.push(p),d&&$.push(d);let w=e.compute(O_(u,r,t,a,v,c,_,p,d),{inputs:$,outputs:u>1?[-1,1]:[-1]})[0];e.compute(F_(w,c.batchSize,c.numHeads,_,c.sequenceLength,f,p,d),{inputs:p&&d?[w,p,d]:[w],outputs:[]});let g=[w,s];u>1&&o&&ye.size(o.dims)>0&&g.push(o),p&&g.push(p),d&&g.push(d),e.compute(D_(u,w,s,o,c,_,p,d),{inputs:g,outputs:u>1?[0,2]:[0]})},L_=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,i=r.inputHiddenSize,n=r.headSize,a=12,o={x:Math.ceil(r.headSize/a),y:Math.ceil(r.sequenceLength/a),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:i},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=d=>{let u=rt("output_q",l[0].dataType,t),_=rt("output_k",l[0].dataType,t),f=rt("output_v",l[0].dataType,t),v=Ce("input",l[0].dataType,l[0].dims),$=Ce("weight",l[1].dataType,l[1].dims),w=Ce("bias",l[2].dataType,l[2].dims),g=v.type.storage,C=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${a}u;
  var<workgroup> tileInput: array<${g}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${g}, ${a*a}>;
  var<workgroup> tileWeightK: array<${g}, ${a*a}>;
  var<workgroup> tileWeightV: array<${g}, ${a*a}>;
  ${d.registerUniforms(C).declareVariables(v,$,w,u,_,f)}
  ${d.mainStart([a,a,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${g}(0);
    var valueK = ${g}(0);
    var valueV = ${g}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},xy=(e,r)=>{let t=A_(e.inputs,r),[s,i,n]=L_(e,t);return ea(e,s,i,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),z_,B_,R_,Ty,Ix=je(()=>{Ss(),_t(),Tt(),ur(),Et(),z_=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,i,n)=>{let a=i.length;if(a!==s.length)throw new Error(`${n}: num dimensions != ${a}`);i.forEach((o,l)=>{if(o!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},B_=(e,r)=>{let{epsilon:t,spatial:s,format:i}=r,n=e[0].dims,a=s?or(n[n.length-1]):1,o=i==="NHWC"&&n.length>1?a:1,l=ye.size(n)/a,c=s,p=c?n.length:n,d=Ce("x",e[0].dataType,e[0].dims,a),u=Ce("scale",e[1].dataType,e[1].dims,o),_=Ce("bias",e[2].dataType,e[2].dims,o),f=Ce("inputMean",e[3].dataType,e[3].dims,o),v=Ce("inputVar",e[4].dataType,e[4].dims,o),$=rt("y",e[0].dataType,p,a),w=()=>{let C="";if(s)C=`let cOffset = ${n.length===1?"0u":i==="NHWC"?`outputIndices[${n.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")C=`
            ${$.indicesSet("outputIndices","0","0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;else{C=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let E=1;E<u.rank;E++)C+=`cIndices[${E}] = outputIndices[${E}];`;C+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return C},g=C=>`
  const epsilon = ${t};
  ${C.registerUniform("outputSize","u32").declareVariables(d,u,_,f,v,$)}
  ${C.mainStart()}
  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${a}`)};
    ${w()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${v.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${a}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:g,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...dt(n)]:[{type:12,data:l}]})}},R_=e=>Ut(e),Ty=(e,r)=>{let{inputs:t,outputCount:s}=e,i=R_({...r,outputCount:s});if(tr.webgpu.validateInputContent&&z_(t,i),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(B_(t,i))}}),j_,N_,Ey,kx=je(()=>{Tt(),Et(),j_=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},N_=e=>{let r=e[0].dims,t=e[0].dims[2],s=ye.size(r)/4,i=e[0].dataType,n=Ce("input",i,r,4),a=Ce("bias",i,[t],4),o=Ce("residual",i,r,4),l=rt("output",i,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,a,o,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${a.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Ey=e=>{j_(e.inputs),e.compute(N_(e.inputs))}}),V_,zt,Py,Cy,Sy,$y,Iy,ky,Ay,Fy,Oy,U_,Dy,Ly,zy,By,Qi,Ry,uo,jy,Ny,Vy,Uy,Wy,Gy,Ky,Hy,qy,Qy,Xy,Jy,Yy,Zy,eM,tM,rc,rM,Vc,Uc,sM,nM,iM,W_,G_,aM,hd=je(()=>{_t(),Tt(),ur(),Et(),V_=(e,r,t,s,i,n,a)=>{let o=Math.ceil(r/4),l="";typeof i=="string"?l=`${i}(a)`:l=i("a");let c=Ce("inputData",t,[o],4),p=rt("outputData",s,[o],4),d=[{name:"vec_size",type:"u32"}];return a&&d.push(...a),`
      ${e.registerUniforms(d).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},zt=(e,r,t,s,i,n=e.dataType,a,o)=>{let l=[{type:12,data:Math.ceil(ye.size(e.dims)/4)}];return a&&l.push(...a),{name:r,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:c=>V_(c,ye.size(e.dims),e.dataType,n,t,s,o),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(ye.size(c[0].dims)/64/4)},programUniforms:l})}},Py=e=>{e.compute(zt(e.inputs[0],"Abs","abs"))},Cy=e=>{e.compute(zt(e.inputs[0],"Acos","acos"))},Sy=e=>{e.compute(zt(e.inputs[0],"Acosh","acosh"))},$y=e=>{e.compute(zt(e.inputs[0],"Asin","asin"))},Iy=e=>{e.compute(zt(e.inputs[0],"Asinh","asinh"))},ky=e=>{e.compute(zt(e.inputs[0],"Atan","atan"))},Ay=e=>{e.compute(zt(e.inputs[0],"Atanh","atanh"))},Fy=e=>Ut(e),Oy=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(zt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},U_=e=>{let r,t,s=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Ut({min:r,max:t})},Dy=(e,r)=>{let t=r||U_(e.inputs),s=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},Ly=e=>{e.compute(zt(e.inputs[0],"Ceil","ceil"))},zy=e=>{e.compute(zt(e.inputs[0],"Cos","cos"))},By=e=>{e.compute(zt(e.inputs[0],"Cosh","cosh"))},Qi=e=>Ut(e),Ry=(e,r)=>{let t=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},uo=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,jy=e=>{let r=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,uo(r)))},Ny=e=>{e.compute(zt(e.inputs[0],"Exp","exp"))},Vy=e=>{e.compute(zt(e.inputs[0],"Floor","floor"))},Uy=e=>{let r=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,uo(r)))},Wy=(e,r)=>{let t=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Gy=e=>{e.compute(zt(e.inputs[0],"Not",r=>`!${r}`))},Ky=e=>{e.compute(zt(e.inputs[0],"Neg",r=>`-${r}`))},Hy=e=>{e.compute(zt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},qy=e=>{let r=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},Qy=e=>{e.compute(zt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},Xy=e=>Ut(e),Jy=(e,r)=>{let t=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Yy=e=>{e.compute(zt(e.inputs[0],"Sin","sin"))},Zy=e=>{e.compute(zt(e.inputs[0],"Sinh","sinh"))},eM=e=>{e.compute(zt(e.inputs[0],"Sqrt","sqrt"))},tM=e=>{e.compute(zt(e.inputs[0],"Tan","tan"))},rc=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,rM=e=>{e.compute(zt(e.inputs[0],"Tanh",rc))},Vc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${rc("v")};
}
`,Uc=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,sM=e=>{let r=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"FastGelu",Uc,Vc(r),void 0,e.inputs[0].dataType))},nM=(e,r)=>{let t=Vr(e.inputs[0].dataType);return e.compute(zt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},iM=e=>{e.compute(zt(e.inputs[0],"Log","log"))},W_=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,G_=e=>`quick_gelu_impl(${e})`,aM=(e,r)=>{let t=Vr(e.inputs[0].dataType);e.compute(zt(e.inputs[0],"QuickGelu",G_,W_(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),K_,H_,oM,Ax=je(()=>{Tt(),Et(),hd(),K_=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},H_=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Ce("input",e[0].dataType,e[0].dims,4),s=Ce("bias",e[0].dataType,[e[0].dims[2]],4),i=rt("output",e[0].dataType,r,4),n=ye.size(r)/4,a=Ar(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${o.declareVariables(t,s,i)}

  ${uo(a)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},oM=e=>{K_(e.inputs),e.compute(H_(e.inputs))}}),q_,Q_,xs,lM,cM,dM,uM,pM,mM,hM,fM,_M,gM,Fx=je(()=>{_t(),Tt(),Et(),q_=(e,r,t,s,i,n,a,o,l,c,p,d)=>{let u,_;typeof o=="string"?u=_=(g,C)=>`${o}((${g}),(${C}))`:typeof o=="function"?u=_=o:(u=o.scalar,_=o.vector);let f=rt("outputData",p,s.length,4),v=Ce("aData",l,r.length,4),$=Ce("bData",c,t.length,4),w;if(i)if(n){let g=ye.size(r)===1,C=ye.size(t)===1,E=r.length>0&&r[r.length-1]%4===0,x=t.length>0&&t[t.length-1]%4===0;g||C?w=f.setByOffset("global_idx",_(g?`${v.type.value}(${v.getByOffset("0")}.x)`:v.getByOffset("global_idx"),C?`${$.type.value}(${$.getByOffset("0")}.x)`:$.getByOffset("global_idx"))):w=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${v.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${$.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(a||E?v.getByOffset("offsetA / 4u"):`${v.type.value}(${v.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||x?$.getByOffset("offsetB / 4u"):`${$.type.value}(${$.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else w=f.setByOffset("global_idx",_(v.getByOffset("global_idx"),$.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let g=(C,E,x="")=>{let b=`aData[indexA${E}][componentA${E}]`,M=`bData[indexB${E}][componentB${E}]`;return`
            let outputIndices${E} = ${f.offsetToIndices(`global_idx * 4u + ${E}u`)};
            let offsetA${E} = ${v.broadcastedIndicesToOffset(`outputIndices${E}`,f)};
            let offsetB${E} = ${$.broadcastedIndicesToOffset(`outputIndices${E}`,f)};
            let indexA${E} = offsetA${E} / 4u;
            let indexB${E} = offsetB${E} / 4u;
            let componentA${E} = offsetA${E} % 4u;
            let componentB${E} = offsetB${E} % 4u;
            ${C}[${E}] = ${x}(${u(b,M)});
          `};p===9?w=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(v,$,f)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},Q_=(e,r,t,s,i,n,a=t.dataType)=>{let o=t.dims.map(v=>Number(v)??1),l=s.dims.map(v=>Number(v)??1),c=!ye.areEqual(o,l),p=o,d=ye.size(o),u=!1,_=!1,f=[c];if(c){let v=ni.calcShape(o,l,!1);if(!v)throw new Error("Can't perform binary op on the given tensors");p=v.slice(),d=ye.size(p);let $=ye.size(o)===1,w=ye.size(l)===1,g=o.length>0&&o[o.length-1]%4===0,C=l.length>0&&l[l.length-1]%4===0;f.push($),f.push(w),f.push(g),f.push(C);let E=1;for(let x=1;x<p.length;x++){let b=o[o.length-x],M=l[l.length-x];if(b===M)E*=b;else break}E%4===0?(_=!0,u=!0):($||w||g||C)&&(u=!0)}else u=!0;return f.push(u),{name:e,shaderCache:{hint:r+f.map(v=>v.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:v=>q_(v,o,l,p,u,c,_,i,t.dataType,s.dataType,a,n),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ye.size(p)/4)},...dt(o,l,p)]})}},xs=(e,r,t,s,i,n)=>{e.compute(Q_(r,i??"",e.inputs[0],e.inputs[1],t,s,n))},lM=e=>{xs(e,"Add",(r,t)=>`${r}+${t}`)},cM=e=>{xs(e,"Div",(r,t)=>`${r}/${t}`)},dM=e=>{xs(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},uM=e=>{xs(e,"Mul",(r,t)=>`${r}*${t}`)},pM=e=>{let r=Ce("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;xs(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},mM=e=>{xs(e,"Sub",(r,t)=>`${r}-${t}`)},hM=e=>{xs(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},fM=e=>{xs(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},_M=e=>{xs(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},gM=e=>{xs(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),X_,J_,Y_,Z_,wM,bM,Ox=je(()=>{_t(),Tt(),ur(),Et(),X_=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],i=s.dataType,n=s.dims.length;e.forEach((a,o)=>{if(o!==t){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==n)throw new Error("input tensors should have the same shape");a.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},J_=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Y_=(e,r)=>{let t=e.length,s=[];for(let i=0;i<t;++i){let n=r.setByOffset("global_idx",e[i].getByIndices("indices"));t===1?s.push(n):i===0?s.push(`if (inputIndex == ${i}u) { ${n} }`):i===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${i}) { ${n} }`)}return s.join(`
`)},Z_=(e,r,t,s)=>{let i=ye.size(t),n=new Array(e.length),a=new Array(e.length),o=0,l=[],c=[],p=[{type:12,data:i}];for(let v=0;v<e.length;++v)o+=e[v].dims[r],n[v]=o,c.push(e[v].dims.length),a[v]=Ce(`input${v}`,s,c[v]),l.push("rank"),p.push({type:12,data:n[v]});for(let v=0;v<e.length;++v)p.push(...dt(e[v].dims));p.push(...dt(t));let d=rt("output",s,t.length),u=d.indicesGet("indices",r),_=Array.from(Array(n.length).keys()).map(v=>`uniforms.sizeInConcatAxis${v}`).join(","),f=v=>`

  ${(()=>{v.registerUniform("outputSize","u32");for(let $=0;$<e.length;$++)v.registerUniform(`sizeInConcatAxis${$}`,"u32");return v.declareVariables(...a,d)})()}

  ${J_(n.length,_)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${_});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Y_(a,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:f}},wM=(e,r)=>{let t=e.inputs,s=t[0].dims,i=ye.normalizeAxis(r.axis,s.length);X_(t,i);let n=s.slice();n[i]=t.reduce((o,l)=>o+(l.dims.length>i?l.dims[i]:0),0);let a=t.filter(o=>ye.size(o.dims)>0);e.compute(Z_(a,i,n,t[0].dataType),{inputs:a})},bM=e=>Ut({axis:e.axis})}),On,Dn,Ln,fd,Bn=je(()=>{_t(),Tt(),On=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Dn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Ln=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},fd=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[Gb,Kb];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Lr,yM,_d=je(()=>{Lr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},yM=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),MM,Dx=je(()=>{MM=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Ji,gd,wd=je(()=>{_t(),Tt(),Et(),Bn(),Ji=(e,r,t,s,i)=>{let n=s-t;return`
      ${Array.from({length:t}).map((a,o)=>`
      if (${at(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(e,o,at(i,o+n,s))}
      } else {
        ${r.indicesSet(e,o,0)}
      }`).join("")}
`},gd=(e,r,t,s,i=!1,n)=>{let a=e[0].dims,o=e[1].dims,l=a[a.length-2],c=o[o.length-1],p=a[a.length-1],d=or(c),u=or(p),_=or(l),f=ye.size(t)/d/_,v=e.length>2,$=s?s.slice(0,-2):t.slice(0,-2),w=[ye.size($),l,c],g=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:p}];Dn(r,g),g.push(...dt($,a,o)),v&&g.push(...dt(e[2].dims)),g.push(...dt(w));let C=E=>{let x=ud("batch_dims",e[0].dataType,$.length),b=Ce("a",e[0].dataType,a.length,u),M=Ce("b",e[1].dataType,o.length,d),P=rt("output",e[0].dataType,w.length,d),A=Ar(P.type.tensor),z=On(r,P.type.value,A),K=[b,M],Q="";if(v){let H=i?d:1;K.push(Ce("bias",e[2].dataType,e[2].dims.length,H)),Q=`${i?`value += bias[col / ${H}];`:`value += ${P.type.value}(bias[row + i]);`}`}let B=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ln(r,B);let Y=()=>{let H=`var a_data: ${b.type.value};`;for(let q=0;q<u;q++)H+=`
              let b_data${q} = b[(b_offset + (k + ${q}) * uniforms.N + col) / ${d}];`;for(let q=0;q<_;q++){H+=`a_data = a[(a_offset + (row + ${q}) * uniforms.K + k) / ${u}];`;for(let X=0;X<u;X++)H+=`
            values[${q}] = fma(${M.type.value}(a_data${u===1?"":`[${X}]`}), b_data${X}, values[${q}]);
`}return H};return`
  ${E.registerUniforms(B).registerInternalVariables(x).declareVariables(...K,P)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${x.offsetToIndices("batch")};`}

    var a_indices: ${b.type.indices};
    ${Ji("a_indices",b,b.rank-2,x.rank,"batch_indices")}
    ${b.indicesSet("a_indices",b.rank-2,0)}
    ${b.indicesSet("a_indices",b.rank-1,0)}
    let a_offset = ${b.indicesToOffset("a_indices")};

    var b_indices: ${M.type.indices};
    ${Ji("b_indices",M,M.rank-2,x.rank,"batch_indices")}
    ${M.indicesSet("b_indices",M.rank-2,0)}
    ${M.indicesSet("b_indices",M.rank-1,0)}
    let b_offset = ${M.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${Y()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${Q}
      ${z}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${u};${_};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:C}}}),eg,tg,Wc,sc,rg,Gc,sg,_o,bd=je(()=>{_t(),Tt(),Et(),Bn(),wd(),_d(),eg=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,tg=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Wc=(e,r,t="f32",s,i=!1,n=32,a=!1,o=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=i?l:n,d=i?n:l,u=p/r[0],_=n/r[1];if(!((i&&u===4&&e[1]===4||!i&&(u===3||u===4))&&p%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${t}>, ${p/u}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${a?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${a?`${Math.ceil(o/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${eg(i,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${tg(i,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},sc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,rg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Gc=(e,r,t="f32",s,i=!1,n=32,a=!1,o=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],d=i?c:n,u=i?n:c;if(!(u%r[1]===0&&d%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let _=u/r[1],f=d/r[0],v=n/r[1],$=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${sc(i,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${v};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${sc(i,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${rg(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${a?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${a?`${Math.ceil(o/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${$}
  }
`},sg=(e,r,t,s,i=!1)=>{let[n,a,o,l]=s,c=Ar(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Lr(e,c)} {
      var value = ${Lr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${a.type.indices};
        ${Ji("aIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Lr(e,c)} {
      var value = ${Lr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${o.type.indices};
        ${Ji("bIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("bIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("bIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Lr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${i?"bias[colIn]":`${Lr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},_o=(e,r,t,s,i=!1,n)=>{let a=e[0].dims,o=e[1].dims,l=a.slice(0,-2),c=o.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),d=ye.size(p),u=a[a.length-2],_=a[a.length-1],f=o[o.length-1],v=_%4===0&&f%4===0,$=u<=8?[4,1,1]:[4,4,1],w=[8,8,1],g=[Math.ceil(f/w[0]/$[0]),Math.ceil(u/w[1]/$[1]),Math.ceil(d/w[2]/$[2])],C=v?4:1,E=[...l,u,_/C],x=E.length,b=[...c,_,f/C],M=b.length,P=[d,u,f/C],A=[{type:6,data:u},{type:6,data:f},{type:6,data:_}];Dn(r,A),A.push(...dt(p,E,b));let z=["rank","rank"],K=e.length>2;K&&(A.push(...dt(e[2].dims)),z.push("rank")),A.push(...dt(P));let Q=B=>{let Y=p.length,H=ud("batchDims",e[0].dataType,Y,1),q=Ar(e[0].dataType),X=Ce("a",e[0].dataType,x,C),re=Ce("b",e[1].dataType,M,C),de=rt("result",e[0].dataType,P.length,C),ae=[X,re];if(K){let _e=i?C:1;ae.push(Ce("bias",e[2].dataType,e[2].dims.length,_e))}let j=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ln(r,j);let F=Ar(de.type.tensor),U=On(r,de.type.value,F),ee=sg(C,K,U,[H,X,re,de],i);return`
  ${B.registerUniforms(j).registerInternalVariables(H).declareVariables(...ae,de)}
  ${ee}
  ${v?Wc($,w,q,H):Gc($,w,q,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${$};${r.activation};${v};${i}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:g[0],y:g[1],z:g[2]},programUniforms:A}),getShaderSource:Q}}}),ng,vM,Lx=je(()=>{_t(),Vs(),Et(),Bn(),_d(),Dx(),bd(),ng=(e,r,t,s,i=!1,n,a=4,o=4,l=4,c="f32")=>{let p=A=>{switch(A){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=A=>{switch(A){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${A} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",v=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",$=e?"row":"col",w=e?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${$} / outWidth;
    let outCol = ${$} % outWidth;

    let WRow = ${w} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${w} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${w} % inChannels;
    var resData = ${Lr(a,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${v}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(a)}
    }
    return resData;`,C=e?r&&s?`
    let col = colIn * ${a};
    ${g}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${Lr(a,c)}(0.0);`:s&&t?`
    let col = colIn * ${a};
    ${g}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${Lr(a,c)}(0.0);`,E=e?s&&t?d(o):`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(o)}
    }
    return ${Lr(o,c)}(0.0);`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(o)}
    }
    return ${Lr(o,c)}(0.0);`,x=Lr(l,c),b=Lr(e?a:o,c),M=Lr(e?o:a,c),P=On(n,x,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {
      ${e?C:E}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${M} {
      ${e?E:C}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${x}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${yM(i)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},vM=(e,r,t,s,i,n,a,o,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],d=t[0],u=c?t[2]:t[3],_=c?t[1]:t[2],f=c?t[3]:t[1],v=c&&(p%4===0||p%3===0)&&f%4===0,$=c?f:u*_,w=c?u*_:f,g=[8,8,1],C=s<=8?[4,1,1]:[4,4,1],E=[Math.ceil($/g[0]/C[0]),Math.ceil(w/g[1]/C[1]),Math.ceil(d/g[2]/C[2])];At("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let x=v?c&&p%4!==0?3:4:1,b=g[1]*C[1],M=g[0]*C[0],P=Math.max(g[0]*x,g[1]),A=s%b===0,z=i%M===0,K=n%P===0,Q=v?[x,4,4]:[1,1,1],B=[{type:6,data:s},{type:6,data:i},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Dn(r,B),B.push(...dt(e[0].dims,e[1].dims));let Y=["rank","rank"];a&&(B.push(...dt(e[2].dims)),Y.push("rank")),B.push(...dt(t));let H=q=>{let X=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ln(r,X);let re=v?4:1,de=Ar(e[0].dataType),ae=`
      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${de}>`:de}) {
        result[flatIndex] = ${v?`vec4<${de}>`:de}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${de}>`:de}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);
      }`,j=Ce("x",e[0].dataType,e[0].dims.length,x===3?1:x),F=Ce("w",e[1].dataType,e[1].dims.length,re),U=[j,F],ee=rt("result",e[0].dataType,t.length,re);if(a){let _e=Ce("bias",e[2].dataType,e[2].dims.length,re);U.push(_e),ae+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${de}>`:de} {
          return bias[coords.${c?"w":"y"}${v?"/ 4":""}];
        }`}return`
        ${MM("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${q.registerUniforms(X).declareVariables(...U,ee)}
        ${ae}
        ${ng(c,A,z,K,a,r,Q[0],Q[1],Q[2],de)}
        ${v?Wc(C,g,de,void 0,!c,P):Gc(C,g,de,void 0,!c,P,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${x};${v};${A};${z};${K};${b};${M};${P}`,inputDependencies:Y},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:B}),getShaderSource:H}}}),ig,nc,Ni,ag,ic,og,xM,TM,zx=je(()=>{_t(),Vs(),Tt(),Et(),Bn(),_d(),ig=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},nc=e=>typeof e=="number"?[e,e,e]:e,Ni=(e,r)=>r<=1?e:e+(e-1)*(r-1),ag=(e,r,t,s=1)=>{let i=Ni(r,s);return Math.floor((e[0]*(t-1)-t+i)/2)},ic=(e,r,t,s,i)=>{i==null&&(i=ag(e,r[0],s[0]));let n=[0,0,0,t];for(let a=0;a<3;a++)e[a]+2*i>=r[a]&&(n[a]=Math.trunc((e[a]-r[a]+2*i)/s[a]+1));return n},og=(e,r,t,s,i,n,a,o,l,c)=>{let p,d,u,_;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=ic([r,t,s,1],[o,l,c],1,[i,n,a],e);d=f[0],u=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((v,$,w)=>v===w[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=ic([r,t,s,1],[o,l,c],1,[i,n,a],e[0]);d=f[0],u=f[1],_=f[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/i),u=Math.ceil(t/n),_=Math.ceil(s/a);let f=(d-1)*i+o-r,v=(u-1)*n+l-t,$=(_-1)*a+c-s,w=Math.floor(f/2),g=f-w,C=Math.floor(v/2),E=v-C,x=Math.floor($/2),b=$-x;p={top:C,bottom:E,left:x,right:b,front:w,back:g}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:u,outWidth:_}},xM=(e,r,t,s,i,n=!1,a="channelsLast")=>{let o,l,c,p,d;if(a==="channelsLast")[o,l,c,p,d]=e;else if(a==="channelsFirst")[o,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${a}`);let[u,,_,f,v]=r,[$,w,g]=nc(t),[C,E,x]=nc(s),b=Ni(_,C),M=Ni(f,E),P=Ni(v,x),{padInfo:A,outDepth:z,outHeight:K,outWidth:Q}=og(i,l,c,p,$,w,g,b,M,P),B=n?u*d:u,Y=[0,0,0,0,0];return a==="channelsFirst"?Y=[o,B,z,K,Q]:a==="channelsLast"&&(Y=[o,z,K,Q,B]),{batchSize:o,dataFormat:a,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:z,outHeight:K,outWidth:Q,outChannels:B,padInfo:A,strideDepth:$,strideHeight:w,strideWidth:g,filterDepth:_,filterHeight:f,filterWidth:v,effectiveFilterDepth:b,effectiveFilterHeight:M,effectiveFilterWidth:P,dilationDepth:C,dilationHeight:E,dilationWidth:x,inShape:e,outShape:Y,filterShape:r}},TM=(e,r,t,s,i,n)=>{let a=n==="channelsLast";a?e[0].dims[3]:e[0].dims[1];let o=[64,1,1],l={x:t.map(($,w)=>w)},c=[Math.ceil(ig(l.x.map($=>t[$]))/o[0]),1,1];At("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,d=ye.size(t),u=[{type:12,data:d},{type:12,data:s},{type:12,data:i},{type:12,data:r.strides},{type:12,data:r.dilations}];Dn(r,u),u.push(...dt(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(u.push(...dt(e[2].dims)),_.push("rank")),u.push(...dt(t));let v=$=>{let w=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Ln(r,w);let g=1,C=Ar(e[0].dataType),E=Ce("x",e[0].dataType,e[0].dims.length,p),x=Ce("W",e[1].dataType,e[1].dims.length,g),b=[E,x],M=rt("result",e[0].dataType,t.length,g),P="";if(f){let K=Ce("bias",e[2].dataType,e[2].dims.length,g);b.push(K),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${C} {
          return bias[${a?at("coords",4,5):at("coords",1,5)}];
        }`}let A=Lr(p,C),z=On(r,A,C);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${E.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${x.getByIndices("aIndices")};
            }
          ${$.registerUniforms(w).declareVariables(...b,M)}
          ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${M.offsetToIndices("global_idx")};
              let batch = ${at("coords",0,E.rank)};
              let d2 = ${a?at("coords",E.rank-1,E.rank):at("coords",1,E.rank)};
              let xFRCCorner = vec3<u32>(${a?at("coords",1,E.rank):at("coords",2,E.rank)},
              ${a?at("coords",2,E.rank):at("coords",3,E.rank)},
              ${a?at("coords",3,E.rank):at("coords",4,E.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${a?at("uniforms.x_shape",1,E.rank):at("uniforms.x_shape",2,E.rank)};
              let xShapeZ = ${a?at("uniforms.x_shape",2,E.rank):at("uniforms.x_shape",3,E.rank)};
              let xShapeW = ${a?at("uniforms.x_shape",3,E.rank):at("uniforms.x_shape",4,E.rank)};
              let xShapeU = ${a?at("uniforms.x_shape",4,E.rank):at("uniforms.x_shape",1,E.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${a?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${a?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${a?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${a?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${z}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${a};${p};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:u}),getShaderSource:v}}}),EM,PM,Bx=je(()=>{_t(),Tt(),Et(),Bn(),EM=(e,r,t,s)=>{let i=e.length>2,n=i?"value += b[output_channel];":"",a=e[0].dims,o=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,d=l&&p>=4?or(c):1,u=ye.size(t)/d,_=[{type:12,data:u},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];Dn(r,_),_.push(...dt(a,[o[0],o[1],o[2],o[3]/d]));let f=i?["rank","rank","rank"]:["rank","rank"];_.push(...dt([t[0],t[1],t[2],t[3]/d]));let v=$=>{let w=rt("output",e[0].dataType,t.length,d),g=Ar(w.type.tensor),C=On(r,w.type.value,g),E=Ce("x",e[0].dataType,a.length),x=Ce("w",e[1].dataType,o.length,d),b=[E,x];i&&b.push(Ce("b",e[2].dataType,e[2].dims,d));let M=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Ln(r,M);let P=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${E.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${x.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${E.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${x.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${$.registerUniforms(M).declareVariables(...b,w)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${w.type.value} = ${w.type.value}(0);
    ${P}
    ${n}
    ${C}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:v}},PM=(e,r,t,s)=>{let i=e.length>2,n=or(t[3]),a=or(t[2]),o=ye.size(t)/n/a,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],d=[{type:12,data:o},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];Dn(r,d),d.push(...dt(l,c,p));let u=(a-1)*r.strides[1]+c[1],_=f=>{let v=rt("output",e[0].dataType,p.length,n),$=Ar(v.type.tensor),w=On(r,v.type.value,$),g=Ce("x",e[0].dataType,l.length,n),C=Ce("w",e[1].dataType,c.length,n),E=[g,C];i&&E.push(Ce("b",e[2].dataType,e[2].dims,n));let x=i?"value += b[output_channel];":"",b=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ln(r,b),`
  ${f.registerUniforms(b).declareVariables(...E,v)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${a}u;
    let col = (index1 % width1) * ${a}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${g.type.value}, ${u}>;
    var values: array<${v.type.value}, ${a}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${g.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${g.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${C.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${a}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${a}u; i++) {
      var value = values[i];
      ${x}
      ${w}
      ${v.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${a};${u};${c[0]};${c[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:_}}}),lg,to,cg,ro,Kc,ac,dg,ug,Hc,Rx=je(()=>{Tt(),Lx(),zx(),bd(),Bx(),Bn(),wd(),sn(),lg=(e,r,t,s,i,n)=>{let a=e[0],o=e.slice(n?1:2,n?3:4),l=o.length,c=r[0],p=r.slice(2).map((u,_)=>u+(u-1)*(t[_]-1)),d=o.map((u,_)=>u+s[_]+s[_+l]).map((u,_)=>Math.floor((u-p[_]+i[_])/i[_]));return d.splice(0,0,a),d.splice(n?3:1,0,c),d},to=[2,3,1,0],cg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(r.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(r.strides.length!==i)throw new Error(`strides should be ${i}D`);if(r.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ro=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();ho.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:t,pads:s}),i},Kc=e=>{let r=fd(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,n=e.group,a=e.kernel_shape,o=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:i,group:n,kernelShape:a,pads:o,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},ac=(e,r,t,s)=>{let i=t.format==="NHWC",n=lg(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,i);if(t.group!==1){let b=[r[0]];if(i){let M=e.kernelCustomData.wT??e.compute(es(r[1],to),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=M),b.push(M)}else b.push(r[1]);r.length===3&&b.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(PM(b,t,n,s),{inputs:b}):e.compute(EM(b,t,n,s),{inputs:b});return}let a=r.length===3,o=r[0].dims[i?1:2],l=r[0].dims[i?2:3],c=r[0].dims[i?3:1],p=r[1].dims[2],d=r[1].dims[3],u=n[i?1:2],_=n[i?2:3],f=n[i?3:1],v=i&&p===o&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(v||p===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let b=n[0],M,P,A,z=[];if(i){let B=e.kernelCustomData.wT??e.compute(es(r[1],to),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B),v){let Y=o*l*c;M=r[0].reshape([1,b,Y]),P=B.reshape([1,Y,f]),A=[1,b,f]}else M=r[0].reshape([b,o*l,c]),P=B.reshape([1,c,f]),A=[b,u*_,f];z.push(M),z.push(P)}else M=r[0].reshape([b,c,o*l]),P=r[1].reshape([1,f,c]),A=[b,f,u*_],z.push(P),z.push(M);a&&z.push(r[2]);let K=A[2],Q=z[0].dims[z[0].dims.length-1];K<8&&Q<8?e.compute(gd(z,t,n,A,i,s),{inputs:z}):e.compute(_o(z,t,n,A,i,s),{inputs:z});return}let $=!0,w=e.kernelCustomData.wT??e.compute(es(r[1],to),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=w);let g=[r[0],w];a&&g.push(r[2]);let C=i?u*_:f,E=i?f:u*_,x=p*d*c;e.compute(vM(g,t,n,C,E,x,a,$,s),{inputs:g})},dg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),a=[1].concat(r.dilations),o=[1].concat(r.kernelShape),l=ro({...r,pads:i,strides:n,dilations:a,kernelShape:o},s);ac(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},ug=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",i=ro(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,a=xM(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(TM(r,i,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],s))},Hc=(e,r)=>{if(cg(e.inputs,r),e.inputs[0].dims.length===3)dg(e,r);else if(e.inputs[0].dims.length===5)ug(e,e.inputs,r);else{let t=ro(r,e.inputs);ac(e,e.inputs,t)}}}),CM,jx=je(()=>{_t(),Vs(),Tt(),Et(),CM=(e,r,t)=>{let s=e.length>2,i=r.outputShape,n=r.format==="NHWC",a=r.group,o=e[1].dims,l=o[2]/a,c=o[3],p=n?or(l):1,d=n&&c===1&&l>=4,u=d?Math.floor(l/4)*4:Math.floor(l/p)*p,_=l-u,f=n?or(c):1,v=n?c===1?p:f:1,$=ye.size(i)/f,w=[Math.ceil($/64),1,1];At("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${w}`);let g=["rank","rank"],C=[r.strides[0],r.strides[1]],E=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],x=[r.dilations[0],r.dilations[1]],b=[E[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),E[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],M=[b[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),b[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],P=[{type:12,data:$},{type:12,data:C},{type:12,data:E},{type:12,data:x},{type:12,data:b},{type:6,data:M},{type:12,data:u},{type:12,data:l},{type:12,data:c},...dt(e[0].dims,e[1].dims)];s&&(P.push(...dt(e[2].dims)),g.push("rank")),P.push(...dt(i));let A=z=>{let K=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:E.length},{name:"dilations",type:"u32",length:E.length},{name:"effective_filter_dims",type:"u32",length:b.length},{name:"pads",type:"i32",length:M.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Q=Ar(e[0].dataType),B=n?1:2,Y=n?2:3,H=n?3:1,q=Ce("W",e[1].dataType,e[1].dims.length,v),X=Ce("Dy",e[0].dataType,e[0].dims.length,p),re=[X,q];s&&re.push(Ce("bias",e[2].dataType,[i[H]].length,f));let de=rt("result",e[0].dataType,i.length,f),ae=()=>{let U="";if(d)p===4?U+=`
        let xValue = ${X.getByOffset("x_offset")};
        let wValue = ${q.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?U+=`
          dotProd = dotProd + dot(vec4<${Q}>(${X.getByOffset("x_offset")}, ${X.getByOffset("x_offset + 1u")}), vec4<${Q}>(${q.getByOffset("w_offset")}, ${q.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(U+=`
          dotProd = dotProd + dot(vec4<${Q}>(${X.getByOffset("x_offset")}, ${X.getByOffset("x_offset + 1u")}, ${X.getByOffset("x_offset + 2u")}, ${X.getByOffset("x_offset + 3u")}), vec4<${Q}>(${q.getByOffset("w_offset")}, ${q.getByOffset("w_offset + 1u")}, ${q.getByOffset("w_offset + 2u")}, ${q.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(U+=`
                  let xValue = ${n?X.getByOffset(`${X.indicesToOffset(`${X.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):X.get("batch","inputChannel","idyR","idyC")};
        `,p===1)U+=`
          let w_offset = ${q.indicesToOffset(`${q.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${q.getByOffset(`w_offset / ${v}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let ee=0;ee<p;ee++)U+=`
            let wValue${ee} = ${q.getByOffset(`${q.indicesToOffset(`${q.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${ee}, wOutChannel)`)} / ${v}`)};
            dotProd = dotProd + xValue[${ee}] * wValue${ee};`;return U},j=()=>{if(_===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let U="";if(p===1){U+="dotProd = dotProd";for(let ee=0;ee<_;ee++)U+=`
            + ${X.getByOffset(`x_offset + ${ee}`)} * ${q.getByOffset(`w_offset + ${ee}`)}`;U+=";"}else if(p===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);U+=`
          let xValue = ${X.getByOffset("x_offset")};
          let wValue = ${q.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return U},F=`
            let outputIndices = ${de.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${de.indicesGet("outputIndices",0)};
            let d1 = ${de.indicesGet("outputIndices",H)};
            let r = ${de.indicesGet("outputIndices",B)};
            let c = ${de.indicesGet("outputIndices",Y)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${de.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${Q}(dyRCorner) + ${Q}(wR)) / ${Q}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${Q}(uniforms.Dy_shape[${B}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${Q}(dyCCorner) + ${Q}(wC)) / ${Q}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${Q}(uniforms.Dy_shape[${Y}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${X.indicesToOffset(`${X.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${q.indicesToOffset(`${q.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${v};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:p}) {
                  ${ae()}
                  inputChannel = inputChannel + ${d?4:p};
                }
                ${j()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${de.setByOffset("global_idx","value")};
          `;return`
    ${z.registerUniforms(K).declareVariables(...re,de)}
      ${z.mainStart()}
      ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${v}${f}${d}${_}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:w[0],y:w[1],z:w[2]},outputs:[{dims:t?t(i):i,dataType:e[0].dataType}],programUniforms:P}),getShaderSource:A}}}),pg,mg,hg,oc,SM,fg,lc,_g,$M,Nx=je(()=>{jx(),Bn(),sn(),pg=(e,r,t,s,i,n)=>(e-1)*r+t+(s-1)*i+1-n,mg=(e,r,t,s,i)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[i]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[i]=n)},hg=(e,r,t,s,i,n,a,o,l,c)=>{let p=e.length-2,d=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let u=e[0],_=r[o?3:1]*i;for(let f=0,v=e.length-p-(o?1:0);f<p;++f,++v){let $=e[v],w=d?$*a[f]:c[f],g=pg($,a[f],n[f],r[v],t[f],w);mg(g,s,n,f,f+p),d&&c.push(a[f]*($-1)+l[f]+(r[v]-1)*t[f]+1-n[f]-n[f+p])}c.splice(0,0,u),c.splice(o?3:1,0,_)},oc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,u)=>d*u,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let i=e.pads.slice(),n=e.outputShape.slice(),a=e.outputPadding.slice(),o=r[0].dims,l=e.dilations.slice();if(l.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}hg(o,t,l,e.autoPad,e.group,i,c,s,a,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:i,outputPadding:a,outputShape:n,dilations:l,strides:c}),p},SM=e=>{let r=fd(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,n=e.group,a=e.kernelShape,o=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:i,group:n,kernelShape:a,outputPadding:p,outputShape:d,pads:o,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},fg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((a,o)=>a+o,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((a,o)=>a+o,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((a,o)=>a+o,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((a,o)=>a+o,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lc=(e,r,t,s)=>{let i=e.kernelCustomData.wT??e.compute(es(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let n=[r[0],i];r.length===3&&n.push(r[2]),e.compute(CM(n,t,s),{inputs:n})},_g=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=r.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let a=r.strides;(a.length===0||a[0]===0)&&(a=[1]);let o=r.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],a=[1].concat(a),n=[1].concat(n),i=[1].concat(i);let l=r.outputPadding;l=[0].concat(l);let c=oc({...r,pads:o,strides:a,dilations:n,kernelShape:i,outputPadding:l},s);lc(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},$M=(e,r)=>{if(fg(e.inputs,r),e.inputs[0].dims.length===3)_g(e,r);else{let t=oc(r,e.inputs);lc(e,e.inputs,t)}}}),gg,IM,kM,Vx=je(()=>{_t(),Tt(),ur(),Et(),gg=(e,r,t,s)=>{let i=ye.size(r),n=r.length,a=Ce("input",e,n),o=rt("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=ye.normalizeAxis(l,n),p=d=>{let u=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=at("uniforms.input_shape","uniforms.axis",n),f=s.reverse?u+(s.exclusive?" + 1":""):"0",v=s.reverse?_:u+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,o)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${v};
                  for (var i : i32 = first; i < last; i++) {
                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${a.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:c},...dt(r,r)]}),getShaderSource:p}},IM=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,i=e.inputs[1];e.compute(gg(s,t,i,r),{inputs:[0]})},kM=e=>{let r=e.exclusive===1,t=e.reverse===1;return Ut({exclusive:r,reverse:t})}}),wg,bg,yg,AM,FM,Ux=je(()=>{_t(),Tt(),ur(),Et(),wg=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},bg=(e,r,t,s)=>{let i=[];i.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)i.push(t.indicesSet("a",e[n],`i[${n}]`));return i.push("return a;}"),i.join(`
`)},yg=(e,r)=>{let t,s,i,n,a,o,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,i,n]=e.dims,a=p?[t,s,i,c,c,n/c**2]:[t,s,i,n/c**2,c,c],o=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,i,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=p?[t,c,c,n/c**2,s,i]:[t,n/c**2,c,c,s,i],o=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(a),u=d.dims.length,_=e.dataType,f=Ce("a",_,u),v=rt("output",_,u),$=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(f,v)}

  ${bg(o,u,f,v)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${v.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${v.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:w=>{let g=l?[t,s*c,i*c,n/c**2]:[t,n/c**2,s*c,i*c],C=ye.size(g),E=d.dims,x=ye.sortBasedOnPerm(E,o);return{outputs:[{dims:g,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...dt(E,x)]}},getShaderSource:$}},AM=(e,r)=>{wg(e.inputs),e.compute(yg(e.inputs[0],r))},FM=e=>Ut({blocksize:e.blocksize,mode:e.mode,format:e.format})}),so,Vi,cc,Mg,vg,xg,Tg,dc,Eg,OM,DM,Wx=je(()=>{_t(),Tt(),ur(),Et(),so="[a-zA-Z]|\\.\\.\\.",Vi="("+so+")+",cc="^"+Vi+"$",Mg="("+Vi+",)*"+Vi,vg="^"+Mg+"$",xg=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Tg=class{constructor(e,r){var i;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(vg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,a)=>{let o=e[a].dims.slice();if(!n.match(RegExp(cc)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,o,a);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,a])=>a.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(Vi)))throw new Error("Invalid RHS");(i=s.match(RegExp(so,"g")))==null||i.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(n);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let i=t.length,n=!1,a=[],o=0;if(!e.match(RegExp(cc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(so,"g")),c=new xg(s);return l==null||l.forEach((p,d)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let u=i-l.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(o,o+u),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<a.length;_++){let f=String.fromCharCode(48+_);c.addSymbol(f,d+_),this.addSymbol(f,t[o++],s)}}else c.addSymbol(p,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[o++],s)}),c}},dc=e=>e+"_max",Eg=(e,r,t,s)=>{let i=e.map(c=>c.length).map((c,p)=>Ce(`input${p}`,r,c)),n=ye.size(s),a=rt("output",r,s.length),o=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],d="var prod = 1.0;",u="var sum = 0.0;",_="sum += prod;",f=[],v=[],$=[],w=[],g=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((E,x)=>{var b;if(t.rhs.symbolToIndices.has(x)){let M=(b=t.rhs.symbolToIndices.get(x))==null?void 0:b[0];M!==void 0&&t.lhs.forEach((P,A)=>{if(E.inputIndices.includes(A)){let z=P.symbolToIndices.get(x);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(K=>{p.push(`${i[A].indicesSet(`input${A}Indices`,K,a.indicesGet("outputIndices",M))}`)})}})}else t.lhs.forEach((M,P)=>{if(E.inputIndices.includes(P)){let A=M.symbolToIndices.get(x);if(A===void 0)throw new Error("Invalid symbol error");A.forEach(z=>{f.push(`${i[P].indicesSet(`input${P}Indices`,z,`${x}`)}`)}),w.push(`prod *= ${i[P].getByIndices(`input${P}Indices`)};`)}}),v.push(`for(var ${x}: u32 = 0; ${x} < uniforms.${dc(x)}; ${x}++) {`),$.push("}")});let C=g?[...p,`let sum = ${i.map((E,x)=>E.getByIndices(`input${x}Indices`)).join(" * ")};`]:[...p,u,...v,...f,d,...w,_,...$];return`
            ${c.registerUniforms(o.map(E=>({name:`${dc(E)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((E,x)=>`var input${x}Indices: ${i[x].type.indices};`).join(`
`)}
            ${C.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=o.filter(d=>t.symbolToInfo.has(d)).map(d=>{var u;return{type:12,data:((u=t.symbolToInfo.get(d))==null?void 0:u.dimValue)||0}});c.push({type:12,data:n});let p=e.map((d,u)=>[...dt(d)]).reduce((d,u)=>d.concat(u),c);return p.push(...dt(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},OM=(e,r)=>{let t=new Tg(e.inputs,r.equation),s=t.outputDims,i=e.inputs.map((n,a)=>n.dims);e.compute(Eg(i,e.inputs[0].dataType,t,s))},DM=e=>{let r=e.equation.replace(/\s+/g,"");return Ut({equation:r})}}),Pg,uc,Cg,Sg,LM,Gx=je(()=>{_t(),Tt(),Et(),Pg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,i=r.length<t.length?0:r.length-t.length;for(;s<t.length&&i<r.length;++s,++i)if(t[s]!==r[i]&&t[s]!==1&&r[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},uc=(e,r)=>{let t=e.length-r.length,s=[];for(let i=0;i<t;++i)s.push(e[i]);for(let i=0;i<r.length;++i)s.push(r[i]===1?e[i+t]:r[i]);return s},Cg=(e,r)=>e.length>r.length?uc(e,r):uc(r,e),Sg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Cg(r,t),i=e[0].dataType,n=i===9||ye.size(r)===1,a=i===9||r.length>0&&r[r.length-1]%4===0?4:1,o=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ye.size(s)/o),c=d=>{let u=Ce("input",i,r.length,a),_=rt("output",i,s.length,o),f;if(i===9){let v=($,w,g="")=>`
          let outputIndices${w} = ${_.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${u.broadcastedIndicesToOffset(`outputIndices${w}`,_)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${$}[${w}] = ${g}(${u.getByOffset(`index${w}`)}[component${w}]);
        `;f=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${v("data",0,"u32")}
        ${v("data",1,"u32")}
        ${v("data",2,"u32")}
        ${v("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${u.getByOffset(`inputOffset / ${a}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(u,_)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...dt(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},LM=e=>{Pg(e.inputs),e.compute(Sg(e.inputs),{inputs:[0]})}}),$g,zM,Kx=je(()=>{_t(),Tt(),Et(),hd(),$g=e=>{let r=e[0].dataType,t=ye.size(e[0].dims),s=ye.size(e[1].dims),i=s%4===0,n=a=>{let o=Ce("x",r,[1],4),l=Ce("bias",r,[1],4),c=rt("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,u=i?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(p).declareVariables(o,l,c)}

    ${Vc(Vr(r))}

    ${a.mainStart(ii)}
      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Uc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/ii/4)}})}},zM=e=>{e.inputs.length<2||ye.size(e.inputs[1].dims)===0?sM(e):e.compute($g(e.inputs))}}),Ig,kg,BM,RM,Hx=je(()=>{_t(),Tt(),ur(),Et(),Ig=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},kg=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=ye.normalizeAxis(r.axis,i),a=t.slice(0);a.splice(n,1,...s);let o=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(ye.size(a)/l),p=[{type:12,data:c},{type:6,data:o},{type:12,data:n},...dt(e[0].dims,e[1].dims,a)],d=u=>{let _=Ce("data",e[0].dataType,e[0].dims.length,l),f=Ce("inputIndices",e[1].dataType,e[1].dims.length),v=rt("output",e[0].dataType,a.length,l),$=g=>{let C=s.length,E=`var indicesIndices${g}  = ${f.type.indices}(0);`;for(let x=0;x<C;x++)E+=`${C>1?`indicesIndices${g}[${x}]`:`indicesIndices${g}`} = ${a.length>1?`outputIndices${g}[uniforms.axis + ${x}]`:`outputIndices${g}`};`;E+=`
          var idx${g} = ${f.getByIndices(`indicesIndices${g}`)};
          if (idx${g} < 0) {
            idx${g} = idx${g} + uniforms.axisDimLimit;
          }
          var dataIndices${g} : ${_.type.indices};
        `;for(let x=0,b=0;x<i;x++)x===n?(E+=`${i>1?`dataIndices${g}[${x}]`:`dataIndices${g}`} = u32(idx${g});`,b+=C):(E+=`${i>1?`dataIndices${g}[${x}]`:`dataIndices${g}`} = ${a.length>1?`outputIndices${g}[${b}]`:`outputIndices${g}`};`,b++);return E},w;if(e[0].dataType===9){let g=(C,E,x="")=>`
          let outputIndices${E} = ${v.offsetToIndices(`outputOffset + ${E}u`)};
          ${$(E)};
          let offset${E} = ${_.indicesToOffset(`dataIndices${E}`)};
          let index${E} = offset${E} / 4u;
          let component${E} = offset${E} % 4u;
          ${C}[${E}] = ${x}(${_.getByOffset(`index${E}`)}[component${E}]);
        `;w=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${g("value",0,"u32")}
        ${g("value",1,"u32")}
        ${g("value",2,"u32")}
        ${g("value",3,"u32")}
        ${v.setByOffset("global_idx","value")}
      `}else w=`
      let outputIndices = ${v.offsetToIndices("global_idx")};
      ${$("")};
      let value = ${_.getByIndices("dataIndices")};
      ${v.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,v)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${w}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:d}},BM=e=>Ut({axis:e.axis}),RM=(e,r)=>{let t=e.inputs;Ig(t),e.compute(kg(e.inputs,r))}}),Ag,jM,NM,qx=je(()=>{_t(),Tt(),Et(),Ag=(e,r,t,s,i,n,a,o,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:i},{type:12,data:t},{type:12,data:a},{type:12,data:o},{type:12,data:l}],p=[n];c.push(...dt(r.dims,p));let d=u=>{let _=Ce("indices_data",r.dataType,r.dims.length),f=rt("input_slice_offsets_data",12,1,1),v=[_,f],$=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms($).declareVariables(...v)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},jM=(e,r)=>{let t=e.inputs,s=t[0].dims,i=t[0].dataType,n=t[1].dims,a=n[n.length-1],o=ye.sizeToDimension(n,n.length-1),l=ye.sizeFromDimension(s,r.batchDims+a),c=ye.sizeToDimension(s,r.batchDims),p=ye.sizeFromDimension(s,r.batchDims),d=o/c,u=new Array(a),_=l;for(let E=0;E<a;++E)u[a-1-E]=_,_*=s[r.batchDims+a-1-E];let f=Ag(e,t[1],u,r.batchDims,s,o,d,p,a),v=r.batchDims+a;if(v>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let $=n.slice(0,-1).concat(s.slice(v)),w=ye.size($),g=[{type:12,data:w},{type:12,data:l},...dt(t[0].dims,f.dims,$)],C=E=>{let x=Ce("data",t[0].dataType,t[0].dims.length),b=Ce("slice_offsets",12,f.dims.length),M=rt("output",t[0].dataType,$.length);return`
          ${E.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(x,b,M)}
            ${E.mainStart()}
            ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:$,dataType:i}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:g}),getShaderSource:C},{inputs:[t[0],f]})},NM=e=>({batchDims:e.batch_dims,cacheKey:""})}),Fg,Og,VM,UM,Qx=je(()=>{_t(),Tt(),ur(),Et(),Fg=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ye.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,i=e[0],n=e[2],a=e.length===4?e[3]:void 0;if(n.dims.length!==i.dims.length||!i.dims.map((o,l)=>l===t?Math.ceil(o/s)===n.dims[l]:o===n.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==n.dims.length||!a.dims.map((o,l)=>o===n.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Og=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=ye.normalizeAxis(r.gatherAxis,i),a=ye.normalizeAxis(r.quantizeAxis,i),o=t.slice(0);o.splice(n,1,...s);let l=ye.size(o),c=e[2].dataType,p=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:a},{type:12,data:n},{type:12,data:r.blockSize},...dt(...e.map((_,f)=>_.dims),o)],u=_=>{let f=Ce("data",e[0].dataType,e[0].dims.length),v=Ce("inputIndices",e[1].dataType,e[1].dims.length),$=Ce("scales",e[2].dataType,e[2].dims.length),w=e.length>3?Ce("zeroPoint",e[3].dataType,e[3].dims.length):void 0,g=rt("output",c,o.length),C=[f,v,$];w&&C.push(w);let E=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(E).declareVariables(...C,g)}
        ${_.mainStart()}
        let output_indices = ${g.offsetToIndices("global_idx")};
        var indices_indices = ${v.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${g.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${v.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${g.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${g.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${v.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {
          let index = ${g.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${$.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${$.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${$.getByIndices("scale_indices")};
        ${w?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${w.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${w.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Vr(c)}(quantized_data - zero_point) * scale;
        ${g.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:o,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:u}},VM=(e,r)=>{let t=e.inputs;Fg(t,r),e.compute(Og(e.inputs,r))},UM=e=>Ut({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Dg,Lg,WM,GM,Xx=je(()=>{_t(),Tt(),ur(),Et(),Dg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Lg=(e,r)=>{let t=e[0].dims,s=e[0].dataType,i=t.length,n=e[1].dims,a=e[1].dataType,o=ye.normalizeAxis(r.axis,i),l=t[o],c=n.slice(0),p=ye.size(c),d=Ce("input",s,i),u=Ce("indicesInput",a,n.length),_=rt("output",s,c.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:o}];return f.push(...dt(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:v=>`
      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,u,_)}
      ${v.mainStart()}
      ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},WM=e=>Ut({axis:e.axis}),GM=(e,r)=>{let t=e.inputs;Dg(t),e.compute(Lg(e.inputs,r))}}),zg,Bg,KM,HM,Jx=je(()=>{_t(),Tt(),Et(),zg=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Bg=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[i,n,a]=Wb.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),o=[i,n];if(!o)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(i/l),d=!0,u=ye.size(o),_=[{type:12,data:d?c:u},{type:12,data:i},{type:12,data:n},{type:12,data:a},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(_.push(...dt(e[2].dims)),f.push("rank")),_.push(...dt(o));let v=w=>{let g="";r.transA&&r.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let C=r.alpha===1?"":"value *= uniforms.alpha;",E=Ce("a",e[0].dataType,e[0].dims),x=Ce("b",e[1].dataType,e[1].dims),b=E.type.value,M=null,P=[E,x];e.length===3&&(M=Ce("c",e[2].dataType,e[2].dims.length),P.push(M));let A=rt("output",e[0].dataType,o.length);P.push(A);let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${w.registerUniforms(z).declareVariables(...P)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${b}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${C}
    ${M!=null?`let cOffset = ${M.broadcastedIndicesToOffset("vec2(m, n)",A)}; value += ${b}(uniforms.beta) * ${M.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},$=w=>{let g=Ce("a",e[0].dataType,e[0].dims),C=Ce("b",e[1].dataType,e[1].dims),E=null,x=[g,C];e.length===3&&(E=Ce("c",e[2].dataType,e[2].dims.length),x.push(E));let b=rt("output",e[0].dataType,o.length);x.push(b);let M=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",A="";r.transA&&r.transB?(A=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(A=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(A=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(A=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let z=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${w.registerUniforms(M).declareVariables(...x)}
  var<workgroup> tile_a: array<array<${g.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${C.type.storage}, ${l}>, ${l}>;
  ${w.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${b.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${A}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${z}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${E!=null?`let cOffset = ${E.broadcastedIndicesToOffset("vec2(m, n)",b)}; value += ${b.type.value}(uniforms.beta) * ${E.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:_}),getShaderSource:$}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:v}},KM=e=>{let r=e.transA,t=e.transB,s=e.alpha,i=e.beta;return{transA:r,transB:t,alpha:s,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},HM=(e,r)=>{zg(e.inputs),e.compute(Bg(e.inputs,r))}}),zs,Rs,Pn,Cn,Rg,jg,Ng,Vg,Ug,Wg,Gg,Kg,qM,QM,Yx=je(()=>{_t(),Tt(),ur(),Et(),[zs,Rs,Pn,Cn]=[0,1,2,3],Rg=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},jg=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,Ng=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Vg=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Ug=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Wg=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${zs}] = batch;
     indices[${Rs}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Pn}] = u32(r);
            indices[${Cn}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${Pn}] = u32(clamp(r, 0, H - 1));
          indices[${Cn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Pn}] = gs_reflect(r, border[1], border[3]);
          indices[${Cn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,Gg=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${zs}], indices[${Rs}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${zs}], indices[${Rs}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${zs}], indices[${Rs}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${zs}], indices[${Rs}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${zs}], indices[${Rs}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${zs}], indices[${Rs}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Kg=(e,r)=>{let t=Ce("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=Ce("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[zs,Rs,Pn,Cn]=[0,3,1,2]);let a=rt("output",e[0].dataType,n.length),o=t.type.value,l=ye.size(n),c=[{type:12,data:l},...dt(e[0].dims,s,n)],p=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,i,a)}
  ${jg}
  ${Ng(o)}
  ${Vg(r)}
  ${Ug(r)}
  ${Wg(t,o,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Pn}]);
      let W_in = i32(uniforms.x_shape[${Cn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${a.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${zs}], indices[${Pn}], indices[${Cn}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${Gg(a,o,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let u=ye.size(n);return{outputs:[{dims:n,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}},getShaderSource:p}},qM=(e,r)=>{Rg(e.inputs),e.compute(Kg(e.inputs,r))},QM=e=>Ut({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Gr,Hg,XM,pc,qg,Xi,JM,YM=je(()=>{_t(),Tt(),ur(),dd(),md(),Et(),sn(),Gr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,Hg=(e,r)=>{let t=e[0],s=Gr(e,1),i=Gr(e,2),n=Gr(e,3),a=Gr(e,4),o=Gr(e,5),l=Gr(e,6),c=Gr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],d=t.dims[1],u=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],_=d,f=0,v=0,$=Math.floor(u/r.numHeads);if(l&&c&&ye.size(l.dims)&&ye.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==$)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==$)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],v=l.dims[2]}else if(l&&ye.size(l.dims)||c&&ye.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w;if(s&&ye.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');w=2,_=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==$)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');w=5,_=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==$)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');w=0,_=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}if(n&&ye.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let g=f+_,C=0;if(a&&ye.size(a.dims)>0){C=8;let M=a.dims;throw M.length===1?M[0]===p?C=1:M[0]===3*p+2&&(C=3):M.length===2&&M[0]===p&&M[1]===g&&(C=5),C===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let E=!1,x=u;if(i&&ye.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(_!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');x=i.dims[2]}else{if(_!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');x=i.dims[1]*i.dims[3],E=!0}}let b=!1;if(a&&ye.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(o&&ye.size(o.dims)>0){if(o.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==p||o.dims[1]!==r.numHeads||o.dims[2]!==d||o.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:g,maxSequenceLength:v,inputHiddenSize:0,hiddenSize:u,vHiddenSize:x,headSize:$,vHeadSize:Math.floor(x/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:C,scale:r.scale,broadcastResPosBias:b,passPastInKv:E,qkvFormat:w}},XM=e=>Ut({...e}),pc=Ut({perm:[0,2,1,3]}),qg=(e,r,t,s,i,n,a)=>{let o=[s,i,n],l=ye.size(o),c=[{type:12,data:l},{type:12,data:a},{type:12,data:n}],p=d=>{let u=rt("qkv_with_bias",r.dataType,o),_=Ce("qkv",r.dataType,o),f=Ce("bias",t.dataType,o),v=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(v).declareVariables(_,f,u)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},Xi=(e,r,t,s,i,n,a,o)=>{let l=n;if(a&&ye.size(a.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=qg(e,n,a,r,s,t*i,o),l=l.reshape([r,s,t,i]),t===1||s===1?l:e.compute(es(l,pc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,i])),t===1||s===1?l:e.compute(es(l,pc.perm),{inputs:[l],outputs:[-1]})[0]},JM=(e,r)=>{let t=Hg(e.inputs,r),s=e.inputs[0],i=Gr(e.inputs,1),n=Gr(e.inputs,2),a=Gr(e.inputs,3),o=Gr(e.inputs,4),l=Gr(e.inputs,5),c=Gr(e.inputs,6),p=Gr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let d=i&&n&&i.dims.length===4&&n.dims.length===4,u=Xi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,a,0);if(d)return ea(e,u,i,n,o,void 0,c,p,l,t);if(!i||!n)throw new Error("key and value must be provided");let _=Xi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,i,a,t.hiddenSize),f=Xi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,a,2*t.hiddenSize);ea(e,u,_,f,o,void 0,c,p,l,t)}}),Qg,Xg,Jg,Yg,qc,ZM,e0,t0=je(()=>{_t(),Tt(),ur(),Et(),Qg=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Xg=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>t.push(Number(i))),s=t.length),Ut({numOutputs:s,axis:r.axis,splitSizes:t})},Jg=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${at("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Yg=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let i=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(i):s===0?t.push(`if (output_number == ${s}u) { ${i} }`):s===r-1?t.push(`else { ${i} }`):t.push(`else if (output_number == ${s}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},qc=(e,r)=>{let t=e[0].dims,s=ye.size(t),i=e[0].dataType,n=ye.normalizeAxis(r.axis,t.length),a=new Array(r.numOutputs),o=Ce("input",i,t.length),l=new Array(r.numOutputs),c=[],p=[],d=0,u=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){d+=r.splitSizes[f],l[f]=d;let v=t.slice();v[n]=r.splitSizes[f],p.push(v),a[f]=rt(`output${f}`,i,v.length),c.push({dims:p[f],dataType:e[0].dataType})}u.push({type:12,data:l},...dt(t,...p));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...a)}
  ${Jg(l.length)}
  ${Yg(a)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${at("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${o.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},ZM=(e,r)=>{Qg(e.inputs);let t=e.inputs.length===1?r:Xg(e.inputs,r);e.compute(qc(e.inputs,t),{inputs:[0]})},e0=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ut({axis:r,numOutputs:s,splitSizes:t})}}),Zg,go,r0,s0=je(()=>{_t(),Tt(),ur(),Et(),Zg=(e,r)=>{let[t,s,i,n]=e,{numHeads:a,rotaryEmbeddingDim:o}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ye.areEqual(s.dims,[])&&!ye.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!ye.areEqual(i.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=i.dims[0],d=ye.sizeFromDimension(t.dims,1)/c,u=o===0?i.dims[1]*2:d/a;if(o>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(u/2!==i.dims[1]&&o/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},go=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:i,scale:n}=r,a=e[0].dims[0],o=ye.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=o/l,p=e[2].dims[1],d=i===0?p*2:c/s,u=new Array(a,l,c/d,d-p),_=ye.computeStrides(u),f=[{type:1,data:n},{type:12,data:u},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[o,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[o,d,l*d,1]}):[],...dt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],v=$=>{let w=Ce("input",e[0].dataType,e[0].dims.length),g=Ce("position_ids",e[1].dataType,e[1].dims.length),C=Ce("cos_cache",e[2].dataType,e[2].dims.length),E=Ce("sin_cache",e[3].dataType,e[3].dims.length),x=rt("output",e[0].dataType,e[0].dims.length);return $.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${$.declareVariables(w,g,C,E,x)}

        ${$.mainStart(ii)}
          let half_rotary_emb_dim = uniforms.${C.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${g.broadcastedIndicesToOffset("bsnh.xy",rt("",g.type.tensor,2))};
            let position_id =
                u32(${g.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${w.getByOffset("i")} * ${C.get("position_id","bsnh[3]")} -
                ${w.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};
            ${x.setByOffset("i","re")}
            let im = ${w.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} +
                ${w.getByOffset("j")} * ${C.get("position_id","bsnh[3]")};
            ${x.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${x.setByOffset("k",w.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ut({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:v,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(u)/ii)},programUniforms:f})}},r0=(e,r)=>{Zg(e.inputs,r),e.compute(go(e.inputs,r))}}),ew,tw,mc,rw,n0,Zx=je(()=>{ur(),_t(),md(),YM(),t0(),sn(),s0(),Et(),ew=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],i=e[2],n=e[3],a=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let o=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?o?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,u=0,_=!s||s.dims.length===0,f=Math.floor(_?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);_&&(p=f*r.numHeads);let v=n&&n.dims.length!==0,$=a&&a.dims.length!==0;if(v&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(v&&$){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(a.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=n.dims[2]}else if(v||$)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let w=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');w=3}let g=0,C=!1,E=r.kvNumHeads?f*r.kvNumHeads:p;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(d!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');E=i.dims[2]}else{if(d!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');E=i.dims[1]*i.dims[3],C=!0}}let x=e.length>4?e[5]:void 0;if(x&&x.dims.length!==1&&x.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:u,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:E,headSize:f,vHeadSize:Math.floor(E/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:C,qkvFormat:w}},tw=Ut({perm:[0,2,1,3]}),mc=(e,r,t)=>{let s=r,i=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,i,t.headSize]),s=e.compute(es(s,tw.perm),{inputs:[s],outputs:[-1]})[0]),s},rw=(e,r,t,s)=>{let i=7,n=["type","type"],a=[e*r],o=e*r,l=[{type:12,data:o},{type:12,data:r},{type:12,data:e}],c=p=>{let d=Ce("seq_lens",t.dataType,t.dims),u=Ce("total_seq_lens",s.dataType,s.dims),_=rt("pos_ids",i,a),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(f).declareVariables(d,u,_)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${u.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:l}),getShaderSource:c}},n0=(e,r)=>{var E;let t=ew(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((E=e.inputs[1])==null?void 0:E.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,a=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,o=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Ut({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[u,_,f]=!i&&!n?e.compute(qc([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,i,n],v,$;if(r.doRotary){let x=e.compute(rw(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],b=e.inputs[7],M=e.inputs[8],P=Ut({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),A=[u,x,b,M],z=[-1];v=e.compute(go(A,P),{inputs:A,outputs:z})[0],A.splice(0,1,_);let K=Ut({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});$=e.compute(go(A,K),{inputs:A,outputs:z})[0]}let w=Xi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?v:u,void 0,0),g=mc(e,r.doRotary?$:_,t),C=mc(e,f,t);ea(e,w,g,C,void 0,void 0,a,o,void 0,t,l,c)}}),hc,sw,nw,i0,eT=je(()=>{_t(),Tt(),sn(),Et(),hc=(e,r,t,s,i,n,a,o)=>{let l=or(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,d=i*a,u=64;d===1&&(u=256);let _=[i,a,n/l],f=[i,a,2],v=["rank","type","type"],$=[];$.push(...dt(_,f));let w=g=>{let C=Ce("x",r.dataType,3,l),E=Ce("scale",t.dataType,t.dims),x=Ce("bias",s.dataType,s.dims),b=rt("output",1,3,2),M=[C,E,x,b];return`
  var<workgroup> workgroup_shared : array<${p}, ${u}>;
  const workgroup_size = ${u}u;
  ${g.declareVariables(...M)}
  ${g.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${C.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${rn("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${rn("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o};${u}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:d},programUniforms:$}),getShaderSource:w},{inputs:[r,t,s],outputs:[-1]})[0]},sw=(e,r,t)=>{let s=r[0].dims,i=s,n=2,a=s[0],o=s[1],l=ye.sizeFromDimension(s,n),c=or(l),p=ye.size(i)/c,d=hc(e,r[0],r[1],r[2],a,l,o,t.epsilon),u=[a,o,l/c],_=[a,o],f=["type","none"],v=$=>{let w=Ce("x",r[0].dataType,u.length,c),g=Ce("scale_shift",1,_.length,2),C=rt("output",r[0].dataType,u.length,c),E=[w,g,C];return`
  ${$.registerUniform("output_size","u32").declareVariables(...E)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${C.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${g.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${w.getByOffset("global_idx")} * ${C.type.value}(scale_shift.x) + ${C.type.value}(scale_shift.y);
      ${C.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...dt(u,_,u)]}),getShaderSource:v},{inputs:[r[0],d]})},nw=(e,r,t)=>{let s=r[0].dims,i=s,n=s[0],a=s[s.length-1],o=ye.sizeFromDimension(s,1)/a,l=or(a),c=ye.size(i)/l,p=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],d=["type","type"],u=!1,_=[0,s.length-1];for(let w=0;w<s.length-2;w++)u=u||s[w+1]!==1,_.push(w+1);u=u&&s[s.length-1]!==1;let f=u?e.compute(es(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(w,g)=>s[_[g]])),v=hc(e,f,r[1],r[2],n,o,a,t.epsilon),$=w=>{let g=Ar(r[0].dataType),C=l===1?"vec2f":`mat${l}x2f`,E=M=>{let P=M===0?"x":"y",A=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${g}(${A}(scale.${P}))`;case 2:return`vec2<${g}>(${A}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${g}>(${A}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${l}`)}},x=Ce("input",r[0].dataType,r[0].dims,l),b=rt("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${C}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${b.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${w.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${E(0)}, ${E(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:$},{inputs:[r[0],v]})},i0=(e,r)=>{r.format==="NHWC"?nw(e,e.inputs,r):sw(e,e.inputs,r)}}),iw,aw,a0,tT=je(()=>{_t(),Tt(),Et(),iw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},aw=(e,r,t)=>{let s=r.simplified,i=e[0].dims,n=e[1],a=!s&&e[2],o=i,l=ye.normalizeAxis(r.axis,i.length),c=ye.sizeToDimension(i,l),p=ye.sizeFromDimension(i,l),d=ye.size(n.dims),u=a?ye.size(a.dims):0;if(d!==p||a&&u!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${u}`);let _=[];for(let x=0;x<i.length;++x)x<l?_.push(i[x]):_.push(1);let f=or(p),v=["type","type"],$=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:r.epsilon}];a&&v.push("type");let w=t>1,g=t>2,C=x=>{let b=Ar(e[0].dataType),M=[Ce("x",e[0].dataType,e[0].dims,f),Ce("scale",n.dataType,n.dims,f)];a&&M.push(Ce("bias",a.dataType,a.dims,f)),M.push(rt("output",e[0].dataType,o,f)),w&&M.push(rt("mean_data_output",1,_)),g&&M.push(rt("inv_std_output",1,_));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${x.registerUniforms(P).declareVariables(...M)}
  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Rc("f32",f)};
    var mean_square_vector = ${Rc("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${si(b,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${rn("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${rn("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${si(b,f,"x[j + offset]")};
      let f32scale = ${si(b,f,"scale[j]")};
      output[j + offset] = ${M[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${a?`+ ${si(b,f,"bias[j]")}`:""}
      );
    }

    ${w?"mean_data_output[global_idx] = mean":""};
    ${g?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},E=[{dims:o,dataType:e[0].dataType}];return w&&E.push({dims:_,dataType:1}),g&&E.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:v},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:$}),getShaderSource:C}},a0=(e,r)=>{iw(e.inputs),e.compute(aw(e.inputs,r,e.outputCount))}}),ow,o0,rT=je(()=>{Tt(),wd(),bd(),ow=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},o0=e=>{ow(e.inputs);let r=ni.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(gd(e.inputs,{activation:""},r));else{let i=r[r.length-2],n=ye.size(e.inputs[0].dims.slice(0,-2)),a=ye.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&i===1&&a===1){let o=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],p=[o,l];e.compute(_o(p,{activation:""},r,c),{inputs:p})}else e.compute(_o(e.inputs,{activation:""},r))}}}),lw,cw,dw,l0,c0,sT=je(()=>{_t(),Tt(),ur(),Et(),lw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,a=e[1];if(!ye.areEqual(a.dims,[r.n,i,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(ye.size(o)!==r.n*i)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*i:r.n*Math.floor((i+1)/2);if(ye.size(l)!==c)throw new Error("zeroPoints input size error.")}},cw=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,a=r.n,o=t.slice(0,s-2),l=ye.size(o),c=e[1].dims[2]/4,p=e[0].dataType,d=or(r.k),u=or(c),_=or(a),f=o.concat([i,a]),v=i>1&&a/_%2===0?2:1,$=ye.size(f)/_/v,w=64,g=[],C=[l,i,n/d],E=ye.convertShape(e[1].dims).slice();E.splice(-1,1,c/u),g.push(...dt(C)),g.push(...dt(E)),g.push(...dt(e[2].dims)),e.length===4&&g.push(...dt(ye.convertShape(e[3].dims)));let x=[l,i,a/_];g.push(...dt(x));let b=M=>{let P=C.length,A=Ce("a",e[0].dataType,P,d),z=Ce("b",12,E.length,u),K=Ce("scales",e[2].dataType,e[2].dims.length),Q=[A,z,K],B=e.length===4?Ce("zero_points",12,e[3].dims.length):void 0;B&&Q.push(B);let Y=x.length,H=rt("output",e[0].dataType,Y,_),q=Ar(e[0].dataType),X=(()=>{switch(d){case 1:return`array<${q}, 8>`;case 2:return`mat4x2<${q}>`;case 4:return`mat2x4<${q}>`;default:throw new Error(`${d}-component is not supported.`)}})(),re=()=>{let j=`
          // reuse a data
            var input_offset = ${A.indicesToOffset(`${A.type.indices}(batch, row, word_offset)`)};
            var a_data: ${X};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${A.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<_*v;F++)j+=`
            b_value = ${u===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${X}(${Array.from({length:4},(U,ee)=>`${q}(b_value_lower[${ee}]), ${q}(b_value_upper[${ee}])`).join(", ")});
            b_dequantized_values = ${d===1?`${X}(${Array.from({length:8},(U,ee)=>`(b_quantized_values[${ee}] - ${B?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${X}(${Array(8).fill(`${B?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${v} + ${Math.floor(F/_)}]${_>1?`[${F%_}]`:""} += ${Array.from({length:8/d},(U,ee)=>`${d===1?`a_data[${ee}] * b_dequantized_values[${ee}]`:`dot(a_data[${ee}], b_dequantized_values[${ee}])`}`).join(" + ")};
          `;return j},de=()=>{let j=`
            var col_index = col * ${_};
            ${B?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${q}(8);`}
            `;for(let F=0;F<_*v;F++)j+=`
            let scale${F} = ${K.getByOffset("col_index * nBlocksPerCol + block")};
            ${B?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${B.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${q}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return j},ae=()=>{let j=`col_index = col * ${_};`;for(let F=0;F<_*v;F++)j+=`
            let b${F}_data = ${z.getByIndices(`${z.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return j+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${X};
            var b_dequantized_values: ${X};`,j};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${v*w}>;
        ${M.declareVariables(...Q,H)}
        ${M.mainStart([w,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${w}) * ${v}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${w}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${de()}
            for (var word: u32 = 0; word < ${c}; word += ${u}) {
              ${ae()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${re()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${v}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${w}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${v};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${u};${_};${v};${w}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:$},programUniforms:g}),getShaderSource:b}},dw=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,a=r.n,o=t.slice(0,s-2),l=ye.size(o),c=e[1].dims[2]/4,p=e[0].dataType,d=or(r.k),u=or(c),_=o.concat([i,a]),f=128,v=a%8===0?8:a%4===0?4:1,$=f/v,w=$*u*8,g=w/d,C=w/r.blockSize,E=ye.size(_)/v,x=[],b=[l,i,n/d],M=ye.convertShape(e[1].dims).slice();M.splice(-1,1,c/u),x.push(...dt(b)),x.push(...dt(M)),x.push(...dt(e[2].dims)),e.length===4&&x.push(...dt(ye.convertShape(e[3].dims)));let P=[l,i,a];x.push(...dt(P));let A=z=>{let K=b.length,Q=Ce("a",e[0].dataType,K,d),B=Ce("b",12,M.length,u),Y=Ce("scales",e[2].dataType,e[2].dims.length),H=[Q,B,Y],q=e.length===4?Ce("zero_points",12,e[3].dims.length):void 0;q&&H.push(q);let X=P.length,re=rt("output",e[0].dataType,X),de=Ar(e[0].dataType),ae=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${de}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${de}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${de}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${de}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Q.type.value}, ${g}>;
        var<workgroup> inter_results: array<array<${re.type.value}, ${$}>, ${v}>;
        ${z.declareVariables(...H,re)}
        ${z.mainStart([$,v,1])}
          let output_indices = ${re.offsetToIndices(`workgroup_index * ${v}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${C} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${g};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${g}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Q.getByIndices(`${Q.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Q.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${C} + local_id.x;
            ${q?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${q.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${de}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${de}(8);`}
            let scale = ${Y.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${B.getByIndices(`${B.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${ae()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${de}>(${Array.from({length:4},(j,F)=>`${de}(b_value_lower[${F}]), ${de}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${de}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(j,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${v}) {
            var output_value: ${re.type.value} = ${re.type.value}(0);
            for (var b = 0u; b < ${$}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${re.setByIndices(`${re.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${u};${$};${v}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:E},programUniforms:x}),getShaderSource:A}},l0=(e,r)=>{lw(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(dw(e.inputs,r)):e.compute(cw(e.inputs,r))},c0=e=>Ut(e)}),uw,pw,mw,hw,fw,_w,gw,ww,d0,nT=je(()=>{_t(),Tt(),Et(),uw=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},pw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
            k = i32(${e.indicesGet("indices",i)}) - ${at("uniforms.pads",i,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${at("uniforms.x_shape",i,r)})) {
              break;
            }
            offset += k * i32(${at("uniforms.x_strides",i,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},mw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${at("uniforms.pads",i,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${at("uniforms.x_shape",i,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${at("uniforms.x_shape",i,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${at("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},hw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${at("uniforms.pads",i,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${at("uniforms.x_shape",i,r)})) {
                  k = i32(${at("uniforms.x_shape",i,r)}) - 1;
                }
                offset += k * i32(${at("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},fw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${at("uniforms.pads",i,t)};
                if (k < 0)  {
                  k += i32(${at("uniforms.x_shape",i,r)}]);
                }
                if (k >= i32(${at("uniforms.x_shape",i,r)})) {
                  k -= i32(${at("uniforms.x_shape",i,r)});
                }
                offset += k * i32(${at("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},_w=(e,r,t)=>{switch(t.mode){case 0:return pw(e,r,t.pads.length);case 1:return mw(e,r,t.pads.length);case 2:return hw(e,r,t.pads.length);case 3:return fw(e,r,t.pads.length);default:throw new Error("Invalid mode")}},gw=(e,r)=>{let t=ye.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,i=ye.size(t),n=[{type:12,data:i},{type:6,data:r.pads}],a=e.length>=3&&e[2].data;r.mode===0&&n.push({type:a?e[2].dataType:1,data:r.value}),n.push(...dt(e[0].dims,t));let o=["rank"],l=c=>{let p=rt("output",e[0].dataType,t.length),d=Ce("x",e[0].dataType,s.length),u=d.type.value,_=_w(p,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:a?u:"f32"}),`
            ${c.registerUniforms(f).declareVariables(d,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${a}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(t)/64)},programUniforms:n}),getShaderSource:l}},ww=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,n=new Int32Array(2*i).fill(0);if(e.length>=4){let o=e[3].getBigInt64Array();for(let l=0;l<o.length;l++)n[Number(o[l])]=Number(t[l]),n[Number(o[l])+i]=Number(t[l+o.length])}else t.forEach((o,l)=>n[Number(l)]=Number(o));let a=[];return n.forEach(o=>a.push(o)),{mode:r.mode,value:s,pads:a}}else return r},d0=(e,r)=>{uw(e.inputs);let t=ww(e.inputs,r);e.compute(gw(e.inputs,t),{inputs:[0]})}}),Ui,fc,_c,gc,wc,bw,yw,bc,yc,u0,p0,Mc,m0,h0,vc,f0,_0,g0,w0,iT=je(()=>{Ss(),_t(),Tt(),Et(),Ui=e=>{if(tr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},fc=(e,r,t)=>{let s=r.format==="NHWC",i=e.dims.slice();s&&i.splice(1,0,i.pop());let n=Object.hasOwnProperty.call(r,"dilations"),a=r.kernelShape.slice(),o=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();ho.adjustPoolAttributes(t,i,a,o,l,c);let p=ho.computePoolOutputShape(t,i,o,l,a,c,r.autoPad),d=Object.assign({},r);n?Object.assign(d,{kernelShape:a,strides:o,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:a,strides:o,pads:c,cacheKey:r.cacheKey});let u=p.slice();return u.push(u.splice(1,1)[0]),[d,s?u:p]},_c=(e,r)=>{let t=r.format==="NHWC",s=ye.size(e),i=ye.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let o=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],d=!!(c+p);n.push({type:12,data:o},{type:12,data:l},{type:12,data:c},{type:12,data:p}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(r.kernelShape.length===2){let _=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],v=r.pads[r.pads.length/2-2],$=r.pads[r.pads.length-2];u=!!(v+$),n.push({type:12,data:_},{type:12,data:f},{type:12,data:v},{type:12,data:$}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,a,!0,d,u]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=ye.computeStrides(r.kernelShape);n.push({type:12,data:o},{type:12,data:r.pads},{type:12,data:r.strides}),a.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[n,a,!!l,!1,!1]}},gc=(e,r,t,s,i,n,a,o,l,c,p,d)=>{let u=i.format==="NHWC",_=r.type.value,f=rt("output",r.type.tensor,s);if(i.kernelShape.length<=2){let v="",$="",w="",g=t-(u?2:1);if(p?v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,i.kernelShape.length===2){let C=t-(u?3:2);d?$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,w=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${o});
              var pad = 0;
              ${$}
              ${v}
              ${w}
              ${a}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=i.kernelShape.length,$=i.pads.length,w="";return c?w=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:w=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${v}>;

              var value = ${_}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${v-1}u; j++) {
                  offsets[j] = offset / ${at("uniforms.kernelStrides","j",v)};
                  offset -= offsets[j] * ${at("uniforms.kernelStrides","j",v)};
                }
                offsets[${v-1}] = offset;

                isPad = false;
                for (var j = ${t-v}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${at("uniforms.strides",`j - ${t-v}u`,v)}
                    + offsets[j - ${t-v}u] - ${at("uniforms.pads","j - 2u",$)};
                  ${w}
              }
              ${a}

              output[global_idx] = value;
            }`}},wc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,bw=e=>`${wc(e)};${e.countIncludePad}`,yw=e=>`${wc(e)};${e.storageOrder};${e.dilations}`,bc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),yc=(e,r,t,s)=>{let[i,n]=fc(r,s,t),a=Ce("x",r.dataType,r.dims.length),o=a.type.value,l="value += x_val;",c="";i.countIncludePad?c+=`value /= ${o}(uniforms.kernelSize);`:c+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[p,d,u,_,f]=_c(n,i);p.push(...dt(r.dims,n));let v=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(n)/64)},programUniforms:p}),getShaderSource:$=>gc($,a,r.dims.length,n.length,i,l,c,0,d,u,_,f)}},u0=e=>{let r=e.count_include_pad!==0,t=bc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:bw(s)}},p0=(e,r)=>{Ui(e.inputs),e.compute(yc("AveragePool",e.inputs[0],!1,r))},Mc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},m0=e=>{let r=e.format;return{format:r,...Mc,cacheKey:r}},h0=(e,r)=>{Ui(e.inputs),e.compute(yc("GlobalAveragePool",e.inputs[0],!0,r))},vc=(e,r,t,s)=>{let[i,n]=fc(r,s,t),a=`
      value = max(x_val, value);
    `,o="",l=Ce("x",r.dataType,r.dims.length),c=["rank"],[p,d,u,_,f]=_c(n,i);return p.push(...dt(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(n)/64)},programUniforms:p}),getShaderSource:v=>gc(v,l,r.dims.length,n.length,i,a,o,r.dataType===10?-65504:-1e5,d,u,_,f)}},f0=(e,r)=>{Ui(e.inputs),e.compute(vc("MaxPool",e.inputs[0],!1,r))},_0=e=>{let r=e.storage_order,t=e.dilations,s=bc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:r,dilations:t,...s,cacheKey:""};return{...i,cacheKey:yw(i)}},g0=e=>{let r=e.format;return{format:r,...Mc,cacheKey:r}},w0=(e,r)=>{Ui(e.inputs),e.compute(vc("GlobalMaxPool",e.inputs[0],!0,r))}}),Mw,vw,b0,y0,aT=je(()=>{_t(),Tt(),ur(),Et(),Mw=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,n)=>n===r.axis||i===e[0].dims[n]).reduce((i,n)=>i&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},vw=(e,r)=>{let t=ye.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,i=s===3,n=e[0].dims,a=e[1].dataType,o=ye.size(n),l=s===3||s===2,c=l?[Math.ceil(ye.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,d=e.length>2?e[2]:void 0,u=d?l?[Math.ceil(ye.size(d.dims)/4)]:d.dims:void 0,_=p.length===0||p.length===1&&p[0]===1,f=_===!1&&p.length===1,v=or(o),$=_&&(!l||v===4),w=$?v:1,g=$&&!l?v:1,C=Ce("input",l?12:s,c.length,g),E=Ce("scale",a,p.length),x=d?Ce("zero_point",l?12:s,u.length):void 0,b=rt("output",a,n.length,w),M=[C,E];x&&M.push(x);let P=[c,p];d&&P.push(u);let A=[{type:12,data:o/w},{type:12,data:t},{type:12,data:r.blockSize},...dt(...P,n)],z=K=>{let Q=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${K.registerUniforms(Q).declareVariables(...M,b)}
      ${K.mainStart()}
          ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${b.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${C.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${w===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${C.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${E.getByOffset("0")}`:f?`
            let scale_index = ${b.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${E.getByOffset("scale_index")};`:`
            var scale_indices: ${E.type.indices} = output_indices;
            let index = ${E.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${E.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${E.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${x?_?l?`
                let zero_point_input = ${x.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${x.getByOffset("0")}`:f?l?`
                let zero_point_index = ${b.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${x.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${b.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${x.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${E.indicesToOffset("scale_indices")};
                let zero_point_input = ${x.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${x.getByIndices("scale_indices")};`:`let zero_point_value = ${l?i?"i32":"u32":C.type.value}(0);`};
      // Compute and write output
      ${b.setByOffset("global_idx",`${b.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:x?["rank","rank","rank"]:["rank","rank"]},getShaderSource:z,getRunData:()=>({outputs:[{dims:n,dataType:a}],dispatchGroup:{x:Math.ceil(o/w/64),y:1,z:1},programUniforms:A})}},b0=(e,r)=>{Mw(e.inputs,r),e.compute(vw(e.inputs,r))},y0=e=>Ut({axis:e.axis,blockSize:e.blockSize})}),xw,Tw,M0,oT=je(()=>{Ss(),_t(),Et(),xw=(e,r,t)=>{let s=e===r,i=e<r&&t<0,n=e>r&&t>0;if(s||i||n)throw new Error("Range these inputs' contents are invalid.")},Tw=(e,r,t,s)=>{let i=Math.abs(Math.ceil((r-e)/t)),n=[i],a=i,o=[{type:12,data:a},{type:s,data:e},{type:s,data:t},...dt(n)],l=c=>{let p=rt("output",s,n.length),d=p.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(u).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},M0=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),tr.webgpu.validateInputContent&&xw(r,t,s),e.compute(Tw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Ew,xc,Tc,Pw,v0,x0,lT=je(()=>{_t(),Tt(),ur(),Et(),Ew=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${i}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${i}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${i}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${i}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},xc=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,Tc=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Ew(e.reduction,"output[data_offset + i]","value",r)}
      }`,Pw=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t,n=1,a=Math.ceil(ye.size(s)/n),o=s[s.length-1],l=ye.sizeFromDimension(t,o),c=ye.sizeFromDimension(s,0)/o,p=[{type:12,data:a},{type:12,data:o},{type:12,data:l},...dt(e[1].dims,e[2].dims,i)],d=u=>{let _=Ce("indices",e[1].dataType,e[1].dims.length),f=Ce("updates",e[2].dataType,e[2].dims.length,n),v=r.reduction!=="none"&&r.reduction!==""?Jb("output",e[0].dataType,i.length):rt("output",e[0].dataType,i.length,n);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,v)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${xc(t.length,!1)}
      }
      ${Tc(r,v.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${xc(t.length,!0)}
  }
  ${Tc(r,v.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p}),getShaderSource:d}},v0=e=>Ut({reduction:e.reduction}),x0=(e,r)=>{e.compute(Pw(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Cw,Sw,$w,Ec,Iw,kw,Aw,Fw,Ow,Dw,Lw,zw,Pc,Bw,Rw,jw,Nw,Vw,T0,E0,cT=je(()=>{_t(),Tt(),ur(),Et(),Cw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Sw=(e,r,t)=>{r.every(i=>i>=0&&i<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((i,n)=>s[i]=e[n]),s},$w=(e,r,t,s,i,n)=>{let[a,o,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(p=>n.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&e[o].dims.length===1&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Cw(s,r),r.axes.length>0&&Sw(s,r.axes,c).forEach((p,d)=>s[d]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>i.push(Number(p))),i.length!==0&&i.length!==c&&t>=18&&i.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof i<"u"&&s.length>0&&i.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},Ec=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,Iw=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Ec("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ec("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",kw=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Aw=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),i=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,a)=>{s[n]=i[a],s[a+t]=i[r.length+a]}),s):i},Fw=(e,r,t,s)=>{let i=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>i.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,a)=>i[n]=t[a])}else t.forEach(n=>i.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((n,a)=>Math.round(n*r[a]))}return i},Ow=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let i=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>i[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),i.forEach((n,a)=>i[a]=Math.round(n*r[a]))),i},Dw=(e,r,t,s,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${at("uniforms.scales","i",s)};
        var roi_low = ${at("uniforms.roi","i",i)};
        var roi_hi = ${at("uniforms.roi",`i + ${r.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${at("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${at("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Lw=(e,r,t,s,i,n,a)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${at("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${at("uniforms.roi","i",n)};
          var roi_hi = ${at("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${at("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${at("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${a} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,zw=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${at("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Pc=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",Bw=(e,r,t,s,i)=>{let[n,a,o,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(row, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",o,`max(0, min(col, ${t[o]} - 1))`)};
      ${Pc(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${a}];
      var col:${c} = originalIndices[${o}];
      ${s?`if (row < 0 || row > (${t[a]} - 1) || col < 0 || col > (${t[o]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${t[a]} - 1));
      col = max(0, min(col, ${t[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Rw=(e,r,t,s,i,n,a,o,l,c)=>{let p=t.length===2,[d,u]=p?[0,1]:[2,3],_=e.type.value,f=v=>{let $=v===d?"row":"col";return`
      fn ${$}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${_} {
        var output_index = ${r.indicesGet("output_indices",v)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[v]},
        ${s[v]}, ${t[v]}, ${n[v]}, ${n[v]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${t[v]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${_} = originalIdx + ${_}(i);
          if (${$} < 0 || ${$} >= ${t[v]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${l};`:`${$} = max(0, min(${$}, ${t[v]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",v,`u32(${$})`)};
          data[i + 1] = ${v===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(d)};
    ${f(u)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};
    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;
    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},jw=(e,r,t,s,i)=>{let[n,a,o,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",o,`max(0, min(height, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Pc(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${o}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[a]} - 1) || height < 0 || height > (${t[o]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${t[a]} - 1));
      height = max(0, min(height, ${t[o]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Nw=(e,r,t,s,i,n)=>{let a=e.dims,o=Aw(n,r.axes,a.length),l=Fw(a,s,i,r.axes),c=s.slice();s.length===0&&(c=a.map((g,C)=>g===0?1:l[C]/g),r.keepAspectRatioPolicy!=="stretch"&&(l=Ow(a,c,r)));let p=rt("output",e.dataType,l.length),d=Ce("input",e.dataType,a.length),u=ye.size(l),_=a.length===l.length&&a.every((g,C)=>g===l[C]),f=r.coordinateTransformMode==="tf_crop_and_resize",v=r.extrapolationValue,$=d.type.value,w=g=>`
      ${_?"":`
      ${Iw(r.coordinateTransformMode,$)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${zw(d,a)};
              ${kw(r.nearestMode,t,$)};
              ${Lw(d,p,a,l,c.length,o.length,f)};
              `;case"linear":return`
              ${Dw(p,a,l,c.length,o.length)};
              ${(()=>{if(a.length===2||a.length===4)return`${Bw(d,p,a,f,v)}`;if(a.length===3||a.length===5)return`${jw(d,p,a,f,v)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(a.length===2||a.length===4)return`${Rw(d,p,a,l,c,o,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${g.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",o.length).declareVariables(d,p)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${i.length>0?i:""}|${o.length>0?o:""}|${_}|${r.mode==="nearest"?a.length:a}`,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:c},{type:1,data:o},...dt(a,l)]})}},Vw=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},T0=(e,r)=>{let t=[],s=[],i=[],n=Vw(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");$w(e.inputs,r,n,t,s,i),e.compute(Nw(e.inputs[0],r,n,t,s,i),{inputs:[0]})},E0=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,i=e.cubicCoeffA,n=e.excludeOutside!==0,a=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Ut({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:i,excludeOutside:n,extrapolationValue:a,keepAspectRatioPolicy:o,mode:l,nearestMode:c})}}),Uw,Ww,P0,dT=je(()=>{_t(),Tt(),Et(),Uw=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Ww=(e,r,t,s)=>{let i=r.simplified,n=e[0].dims,a=ye.size(n),o=n,l=a,c=n.slice(-1)[0],p=s?n.slice(0,-1).concat(1):[],d=!i&&e.length>3,u=e.length>4,_=s&&t>1,f=s&&t>2,v=t>3,$=64,w=or(c),g=[{type:12,data:l},{type:12,data:w},{type:12,data:c},{type:1,data:r.epsilon}],C=x=>{let b=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],M=[Ce("x",e[0].dataType,e[0].dims,w),Ce("skip",e[1].dataType,e[1].dims,w),Ce("gamma",e[2].dataType,e[2].dims,w)];d&&M.push(Ce("beta",e[3].dataType,e[3].dims,w)),u&&M.push(Ce("bias",e[4].dataType,e[4].dims,w)),M.push(rt("output",e[0].dataType,o,w)),_&&M.push(rt("mean_output",1,p)),f&&M.push(rt("inv_std_output",1,p)),v&&M.push(rt("input_skip_bias_sum",e[0].dataType,o,w));let P=Ar(e[0].dataType),A=Ar(1,w);return`

      ${x.registerUniforms(b).declareVariables(...M)}
      var<workgroup> sum_shared : array<${A}, ${$}>;
      var<workgroup> sum_squared_shared : array<${A}, ${$}>;

      ${x.mainStart([$,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${$};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${$};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${$-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${si(P,w,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${$};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${rn("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${rn("square_sum",w)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},E=[{dims:o,dataType:e[0].dataType}];return t>1&&E.push({dims:p,dataType:1}),t>2&&E.push({dims:p,dataType:1}),t>3&&E.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${_};${f};${v}`,inputDependencies:e.map((x,b)=>"type")},getShaderSource:C,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:g})}},P0=(e,r)=>{Uw(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(Ww(e.inputs,r,e.outputCount,!1),{outputs:t})}}),Gw,Wi,Kw,Cc,Hw,qw,C0,S0,uT=je(()=>{_t(),Tt(),ur(),Et(),Gw=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},Wi=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Kw=(e,r)=>{if(e.length>1){let t=Wi(e,1),s=Wi(e,2),i=Wi(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Ut({starts:t,ends:s,axes:i})}else return r},Cc=(e,r,t,s,i)=>{let n=e;return e<0&&(n+=t[s[r]]),i[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},Hw=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${at("uniforms.input_shape","i",t.length)};
            let steps_i = ${at("uniforms.steps","i",t.length)};
            let signs_i = ${at("uniforms.signs","i",t.length)};
            let starts_i = ${at("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,qw=(e,r)=>{let t=e[0].dims,s=ye.size(t),i=r.axes.length>0?ye.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=Wi(e,4);n.forEach(w=>w!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(i.length).fill(1));let a=r.starts.map((w,g)=>Cc(w,g,t,i,n)),o=r.ends.map((w,g)=>Cc(w,g,t,i,n));if(i.length!==a.length||i.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==t.length)for(let w=0;w<t.length;++w)i.includes(w)||(a.splice(w,0,0),o.splice(w,0,t[w]),n.splice(w,0,1));let l=n.map(w=>Math.sign(w));n.forEach((w,g,C)=>{if(w<0){let E=(o[g]-a[g])/w,x=a[g],b=x+E*n[g];a[g]=b,o[g]=x,C[g]=-w}});let c=t.slice(0);i.forEach((w,g)=>{c[w]=Math.ceil((o[w]-a[w])/n[w])});let p={dims:c,dataType:e[0].dataType},d=rt("output",e[0].dataType,c.length),u=Ce("input",e[0].dataType,e[0].dims.length),_=ye.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],v=[{type:12,data:_},{type:12,data:a},{type:6,data:l},{type:12,data:n},...dt(e[0].dims,c)],$=w=>`
      ${w.registerUniforms(f).declareVariables(u,d)}
        ${Hw(u,d,t)}
        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:v})}},C0=(e,r)=>{Gw(e.inputs,r);let t=Kw(e.inputs,r);e.compute(qw(e.inputs,t),{inputs:[0]})},S0=e=>{let r=e.starts,t=e.ends,s=e.axes;return Ut({starts:r,ends:t,axes:s})}}),Qw,Xw,$0,I0,pT=je(()=>{_t(),Tt(),ur(),sn(),Et(),Qw=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Xw=(e,r)=>{let t=e.inputs[0],s=t.dims,i=ye.size(s),n=s.length,a=ye.normalizeAxis(r.axis,n),o=a<s.length-1,l,c=[];o?(c=Array.from({length:n},(M,P)=>P),c[a]=n-1,c[n-1]=a,l=e.compute(es(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,d=p[n-1],u=i/d,_=or(d),f=d/_,v=64;u===1&&(v=256);let $=(M,P)=>P===4?`max(max(${M}.x, ${M}.y), max(${M}.z, ${M}.w))`:P===2?`max(${M}.x, ${M}.y)`:P===3?`max(max(${M}.x, ${M}.y), ${M}.z)`:M,w=Ce("x",l.dataType,l.dims,_),g=rt("result",l.dataType,l.dims,_),C=w.type.value,E=Ar(l.dataType)==="f32"?`var threadMax = ${C}(-3.402823e+38f);`:`var threadMax = ${C}(-65504.0h);`,x=M=>`
      var<workgroup> rowMaxShared : ${C};
      var<workgroup> rowSumShared : ${C};
      var<workgroup> threadShared : array<${C}, ${v}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${C} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${C}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${M.registerUniform("packedCols","i32").declareVariables(w,g)}
      ${M.mainStart(v)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${v};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${E}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${C}(${$("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${C}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${C}(${rn("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,b=e.compute({name:"Softmax",shaderCache:{hint:`${_};${v}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:f}]}),getShaderSource:x},{inputs:[l],outputs:[o?-1:0]})[0];o&&e.compute(es(b,c),{inputs:[b]})},$0=(e,r)=>{Qw(e.inputs),Xw(e,r)},I0=e=>Ut({axis:e.axis})}),Sc,Jw,Yw,Zw,k0,mT=je(()=>{_t(),Tt(),Et(),Sc=e=>Array.from(e.getBigInt64Array(),Number),Jw=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Sc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Yw=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Zw=(e,r)=>{let t=e[0].dims,s=r??Sc(e[1]),i=Yw(t,s),n=ye.size(i),a=e[0].dataType,o=Ce("input",a,t.length),l=rt("output",a,i.length),c=p=>`
      const inputShape = ${o.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(o,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${o.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${o.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...dt(e[0].dims,i)]}),getShaderSource:c}},k0=e=>{Jw(e.inputs),e.compute(Zw(e.inputs),{inputs:[0]})}}),eb,tb,A0,hT=je(()=>{_t(),Tt(),Et(),eb=(e,r,t,s,i)=>{let n=rt("output_data",i,t.length,4),a=Ce("a_data",r[1].dataType,r[1].dims.length,4),o=Ce("b_data",r[2].dataType,r[2].dims.length,4),l=Ce("c_data",r[0].dataType,r[0].dims.length,4),c,p=(d,u,_)=>`select(${u}, ${d}, ${_})`;if(!s)c=n.setByOffset("global_idx",p(a.getByOffset("global_idx"),o.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(u,_,f="")=>{let v=`a_data[index_a${_}][component_a${_}]`,$=`b_data[index_b${_}][component_b${_}]`,w=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${n.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_b${_} = ${o.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${u}[${_}] = ${f}(${p(v,$,w)});
          `};i===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,a,o,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},tb=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,i=e[1].dataType,n=!(ye.areEqual(r,t)&&ye.areEqual(t,s)),a=r,o=ye.size(r);if(n){let c=ni.calcShape(ni.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");a=c,o=ye.size(a)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>eb(c,e,a,n,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...dt(s,r,t,a)]})}},A0=e=>{e.compute(tb(e.inputs))}}),F0,fT=je(()=>{$x(),md(),Ix(),kx(),Ax(),Fx(),Ox(),Rx(),Nx(),Vx(),Ux(),Wx(),Gx(),Kx(),Hx(),qx(),Qx(),Xx(),Jx(),Yx(),Zx(),eT(),tT(),rT(),sT(),YM(),nT(),iT(),aT(),oT(),lT(),pd(),cT(),s0(),dT(),uT(),pT(),t0(),mT(),sn(),hd(),hT(),F0=new Map([["Abs",[Py]],["Acos",[Cy]],["Acosh",[Sy]],["Add",[lM]],["ArgMax",[vy,Nc]],["ArgMin",[My,Nc]],["Asin",[$y]],["Asinh",[Iy]],["Atan",[ky]],["Atanh",[Ay]],["Attention",[xy]],["AveragePool",[p0,u0]],["BatchNormalization",[Ty]],["BiasAdd",[Ey]],["BiasSplitGelu",[oM]],["Cast",[Oy,Fy]],["Ceil",[Ly]],["Clip",[Dy]],["Concat",[wM,bM]],["Conv",[Hc,Kc]],["ConvTranspose",[$M,SM]],["Cos",[zy]],["Cosh",[By]],["CumSum",[IM,kM]],["DepthToSpace",[AM,FM]],["DequantizeLinear",[b0,y0]],["Div",[cM]],["Einsum",[OM,DM]],["Elu",[Ry,Qi]],["Equal",[dM]],["Erf",[jy]],["Exp",[Ny]],["Expand",[LM]],["FastGelu",[zM]],["Floor",[Vy]],["FusedConv",[Hc,Kc]],["Gather",[RM,BM]],["GatherElements",[GM,WM]],["GatherBlockQuantized",[VM,UM]],["GatherND",[jM,NM]],["Gelu",[Uy]],["Gemm",[HM,KM]],["GlobalAveragePool",[h0,m0]],["GlobalMaxPool",[w0,g0]],["Greater",[hM]],["GreaterOrEqual",[_M]],["GridSample",[qM,QM]],["GroupQueryAttention",[n0]],["HardSigmoid",[Jy,Xy]],["InstanceNormalization",[i0]],["LayerNormalization",[a0]],["LeakyRelu",[Wy,Qi]],["Less",[fM]],["LessOrEqual",[gM]],["Log",[iM]],["MatMul",[o0]],["MatMulNBits",[l0,c0]],["MaxPool",[f0,_0]],["Mul",[uM]],["MultiHeadAttention",[JM,XM]],["Neg",[Ky]],["Not",[Gy]],["Pad",[d0]],["Pow",[pM]],["QuickGelu",[aM,Qi]],["Range",[M0]],["Reciprocal",[Hy]],["ReduceMin",[_y]],["ReduceMean",[uy]],["ReduceMax",[fy]],["ReduceSum",[wy]],["ReduceProd",[gy]],["ReduceL1",[py]],["ReduceL2",[my]],["ReduceLogSum",[yy]],["ReduceLogSumExp",[hy]],["ReduceSumSquare",[by]],["Relu",[qy]],["Resize",[T0,E0]],["RotaryEmbedding",[r0]],["ScatterND",[x0,v0]],["Sigmoid",[Qy]],["Sin",[Yy]],["Sinh",[Zy]],["Slice",[C0,S0]],["SkipLayerNormalization",[P0]],["Split",[ZM,e0]],["Sqrt",[eM]],["Softmax",[$0,I0]],["Sub",[mM]],["Tan",[tM]],["Tanh",[rM]],["ThresholdedRelu",[nM,Qi]],["Tile",[k0]],["Transpose",[Zb,ey]],["Where",[A0]]])}),O0,_T=je(()=>{Ss(),Vs(),Et(),O0=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,i){Cs(e.programInfo.name);let n=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let c of r)o.push({binding:o.length,resource:{buffer:c.buffer}});for(let c of t)o.push({binding:o.length,resource:{buffer:c.buffer}});i&&o.push({binding:o.length,resource:i});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ps(e.programInfo.name)}dispose(){}build(e,r){Cs(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let i=Yb(r,this.backend.device.limits),n=e.getShaderSource(i),a=`${s.join(`
`)}
${i.additionalImplementations}
${n}`,o=t.createShaderModule({code:a,label:e.name});At("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return ps(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=i&&t<=i&&s<=i)return[r,t,s];let n=r*t*s,a=Math.ceil(Math.sqrt(n));if(a>i){if(a=Math.ceil(Math.cbrt(n)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}}),D0={};ai(D0,{WebGpuBackend:()=>L0});var rb,sb,nb,L0,gT=je(()=>{Ss(),_t(),Vs(),Hb(),Cx(),fT(),_T(),rb=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let i=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${i}`);break}case"rank":{let n=e[s].dims.length;t.push(`${i};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${i};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},sb=(e,r,t)=>{var i,n;let s=e.name;return(i=e.shaderCache)!=null&&i.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${rb(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},nb=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},L0=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},i=n=>r.features.has(n)&&t.push(n)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new nb(r.info||await r.requestAdapterInfo()),this.gpuDataManager=Xb(this),this.programManager=new O0(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ld(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Cs(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let i=0;i<r.length/2;i++){let n=t[i],a=n.kernelId,o=this.kernels.get(a),l=o.kernelType,c=o.kernelName,p=n.programName,d=n.inputTensorViews,u=n.outputTensorViews,_=r[i*2],f=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let v=Number(_-this.queryTimeBase),$=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(v)||!Number.isSafeInteger($))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(w=>({dims:w.dims,dataType:Ns(w.dataType)})),outputsMetadata:u.map(w=>({dims:w.dims,dataType:Ns(w.dataType)})),kernelId:a,kernelType:l,kernelName:c,programName:p,startTime:v,endTime:$});else{let w="";d.forEach((C,E)=>{w+=`input[${E}]: [${C.dims}] | ${Ns(C.dataType)}, `});let g="";u.forEach((C,E)=>{g+=`output[${E}]: [${C.dims}] | ${Ns(C.dataType)}, `}),console.log(`[profiling] kernel "${a}|${l}|${c}|${p}" ${w}${g}execution time: ${$-v} ns`)}Zi("GPU",`${p}::${_}::${f}`)}e.unmap(),this.pendingQueries.delete(e)}),ps()}run(e,r,t,s,i,n){Cs(e.name);let a=[];for(let g=0;g<r.length;++g){let C=r[g].data;if(C===0)continue;let E=this.gpuDataManager.get(C);if(!E)throw new Error(`no GPU data for input: ${C}`);a.push(E)}let{outputs:o,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?o.map((g,C)=>C):t;if(p.length!==o.length)throw new Error(`Output size ${p.length} must be equal to ${o.length}.`);let d=[],u=[];for(let g=0;g<o.length;++g){if(!Number.isInteger(p[g])||p[g]<-3||p[g]>=n)throw new Error(`Invalid output index: ${p[g]}`);if(p[g]===-3)continue;let C=p[g]===-1,E=p[g]===-2,x=C||E?i(o[g].dataType,o[g].dims):s(p[g],o[g].dataType,o[g].dims);if(d.push(x),x.data===0)continue;let b=this.gpuDataManager.get(x.data);if(!b)throw new Error(`no GPU data for output: ${x.data}`);if(C&&this.temporaryData.push(b),E){let M=this.kernelPersistentData.get(this.currentKernelId);M||(M=[],this.kernelPersistentData.set(this.currentKernelId,M)),M.push(b)}u.push(b)}if(a.length!==r.length||u.length!==d.length){if(u.length===0)return ps(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(c){let g=0,C=[];c.forEach(M=>{let P=typeof M.data=="number"?[M.data]:M.data;if(P.length===0)return;let A=M.type===10?2:4,z,K;M.type===10?(K=P.length>4?16:P.length>2?8:P.length*A,z=P.length>4?16:A*P.length):(K=P.length<=2?P.length*A:16,z=16),g=Math.ceil(g/K)*K,C.push(g);let Q=M.type===10?8:4;g+=P.length>4?Math.ceil(P.length/Q)*z:P.length*A});let E=16;g=Math.ceil(g/E)*E;let x=new ArrayBuffer(g);c.forEach((M,P)=>{let A=C[P],z=typeof M.data=="number"?[M.data]:M.data;if(M.type===6)new Int32Array(x,A,z.length).set(z);else if(M.type===12)new Uint32Array(x,A,z.length).set(z);else if(M.type===10)new Uint16Array(x,A,z.length).set(z);else if(M.type===1)new Float32Array(x,A,z.length).set(z);else throw new Error(`Unsupported uniform type: ${Ns(M.type)}`)});let b=this.gpuDataManager.create(g,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(b.buffer,0,x,0,g),this.gpuDataManager.release(b.id),_={offset:0,size:g,buffer:b.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),v=f[1]===1&&f[2]===1,$=sb(e,r,v),w=this.programManager.getArtifact($);if(w||(w=this.programManager.build(e,f),this.programManager.setArtifact($,w),At("info",()=>`[artifact] key: ${$}, programName: ${e.name}`)),c&&w.uniformVariablesInfo){if(c.length!==w.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${w.uniformVariablesInfo.length}, got ${c.length} in program "${w.programInfo.name}".`);for(let g=0;g<c.length;g++){let C=c[g],E=C.type,x=typeof C.data=="number"?1:C.data.length,[b,M]=w.uniformVariablesInfo[g];if(E!==b||x!==M)throw new Error(`Uniform variable ${g} mismatch: expect type ${b} with size ${M}, got type ${E} with size ${x} in program "${w.programInfo.name}".`)}}if(At("info",()=>`[ProgramManager] run "${e.name}" (key=${$}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let g={kernelId:this.currentKernelId,programName:w.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(g),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(g)}return this.programManager.run(w,a,u,f,_),ps(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let i=F0.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let i=s.kernelType,n=s.kernelName,a=s.kernelEntry,o=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),At("info",()=>`[WebGPU] Start to run kernel "[${i}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(r,o[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let n=i.get(r),a=this.gpuDataManager.registerExternalBuffer(t,s,n);return i.set(r,[a,t]),a}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Bc(this,e,r);return cd(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){At("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){At("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){At("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let i=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(n.computePipeline),i.setBindGroup(0,n.bindGroup),i.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),z0={};ai(z0,{init:()=>B0});var no,ib,B0,wT=je(()=>{_t(),Vs(),Tt(),Px(),no=class R0{constructor(r,t,s,i){this.module=r,this.dataType=t,this.data=s,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ye.size(r)!==ye.size(this.dims))throw new Error("Invalid new shape");return new R0(this.module,this.dataType,this.data,r)}},ib=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,i=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*i++,n));let a=Number(e.getValue(s*i++,n));this.outputCount=Number(e.getValue(s*i++,n)),this.customDataOffset=Number(e.getValue(s*i++,"*")),this.customDataSize=Number(e.getValue(s*i++,n));let o=[];for(let l=0;l<a;l++){let c=Number(e.getValue(s*i++,n)),p=Number(e.getValue(s*i++,"*")),d=Number(e.getValue(s*i++,n)),u=[];for(let _=0;_<d;_++)u.push(Number(e.getValue(s*i++,n)));o.push(new no(e,c,p,u))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var a;let t=((a=r==null?void 0:r.inputs)==null?void 0:a.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,s=(r==null?void 0:r.outputs)??[],i=(o,l,c)=>new no(this.module,l,this.output(o,c),c),n=(o,l)=>{let c=An(o,l);if(!c)throw new Error(`Unsupported data type: ${o}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new no(this.module,o,p,l)};return this.backend.run(e,t,s,i,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,i);for(let a=0;a<r.length;a++)this.module.setValue(n+s*(a+1),r[a],i);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},B0=async(e,r,t,s)=>{let i=r.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=(gT(),Yi(D0)).WebGpuBackend,a=new n;await a.initialize(t,s),i("webgpu",[a,o=>a.alloc(Number(o)),o=>a.free(o),(o,l,c,p=!1)=>{if(p)At("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(o)}, dst=${Number(l)}, size=${Number(c)}`),a.memcpy(Number(o),Number(l));else{At("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(o)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let d=r.HEAPU8.subarray(Number(o>>>0),Number(o>>>0)+Number(c));a.upload(Number(l),d)}},async(o,l,c)=>{At("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${l}, size=${c}`),await a.download(Number(o),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(o,l,c)=>a.createKernel(o,Number(l),c,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),o=>a.releaseKernel(o),(o,l,c,p)=>{At("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${o}, contextDataOffset=${l}`);let d=new ib(r,a,Number(l));return a.computeKernel(Number(o),d,p)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else{let n=new Qb(t);i("webnn",[n,()=>n.reserveTensorId(),a=>n.releaseTensorId(a),async(a,o,l,c,p)=>n.ensureTensor(a,o,l,c,p),(a,o)=>{n.uploadTensor(a,o)},async(a,o)=>n.downloadTensor(a,o)])}}}),ab,yd,Md,en,ob,$c,wo,vd,xd,Ic,Td,Ed,Pd,j0=je(()=>{xx(),Tx(),_t(),zn(),sd(),Ub(),ab=(e,r)=>{Yt()._OrtInit(e,r)!==0&&Ht("Can't initialize onnxruntime.")},yd=async e=>{ab(e.wasm.numThreads,mo(e.logLevel))},Md=async(e,r)=>{var t,s;(s=(t=Yt()).asyncInit)==null||s.call(t);{let i=(wT(),Yi(z0)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=e.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let o=e.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:o}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await i("webgpu",Yt(),e,n)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await i("webnn",Yt(),e)}}},en=new Map,ob=e=>{let r=Yt(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,i,i+s)!==0&&Ht("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(i,n)),Number(r.getValue(i+s,n))]}finally{r.stackRestore(t)}},$c=(e,r)=>{let t=Yt(),s=t.stackSave(),i=0;try{let n=t.PTR_SIZE,a=t.stackAlloc(2*n);t._OrtGetInputOutputMetadata(e,r,a,a+n)!==0&&Ht("Can't get session input/output metadata.");let o=Number(t.getValue(a,"*"));i=Number(t.getValue(a+n,"*"));let l=t.HEAP32[i/4];if(l===0)return[o,0];let c=t.HEAPU32[i/4+1],p=[];for(let d=0;d<c;d++){let u=Number(t.getValue(i+8+d*n,"*"));p.push(u!==0?t.UTF8ToString(u):Number(t.getValue(i+8+(d+c)*n,"*")))}return[o,l,p]}finally{t.stackRestore(s),i!==0&&t._OrtFree(i)}},wo=e=>{let r=Yt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},vd=async(e,r)=>{var d,u,_,f;let t,s,i=Yt();Array.isArray(e)?[t,s]=e:e.buffer===i.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=wo(e);let n=0,a=0,o=0,l=[],c=[],p=[];try{if([a,l]=await Vb(r),(r==null?void 0:r.externalData)&&i.mountExternalData){let P=[];for(let A of r.externalData){let z=typeof A=="string"?A:A.path;P.push(od(typeof A=="string"?A:A.data).then(K=>{i.mountExternalData(z,K)}))}await Promise.all(P)}for(let P of(r==null?void 0:r.executionProviders)??[])if((typeof P=="string"?P:P.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof P!="string"){let A=P,z=A==null?void 0:A.context,K=A==null?void 0:A.gpuDevice,Q=A==null?void 0:A.deviceType,B=A==null?void 0:A.powerPreference;z?i.currentContext=z:K?i.currentContext=await i.webnnCreateMLContext(K):i.currentContext=await i.webnnCreateMLContext({deviceType:Q,powerPreference:B})}else i.currentContext=await i.webnnCreateMLContext();break}n=await i._OrtCreateSession(t,s,a),(d=i.webgpuOnCreateSession)==null||d.call(i,n),n===0&&Ht("Can't create a session."),(u=i.jsepOnCreateSession)==null||u.call(i),i.currentContext&&(i.webnnRegisterMLContext(n,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[v,$]=ob(n),w=!!(r!=null&&r.enableGraphCapture),g=[],C=[],E=[],x=[],b=[];for(let P=0;P<v;P++){let[A,z,K]=$c(n,P);A===0&&Ht("Can't get an input name."),c.push(A);let Q=i.UTF8ToString(A);g.push(Q),E.push(z===0?{name:Q,isTensor:!1}:{name:Q,isTensor:!0,type:Ns(z),shape:K})}for(let P=0;P<$;P++){let[A,z,K]=$c(n,P+v);A===0&&Ht("Can't get an output name."),p.push(A);let Q=i.UTF8ToString(A);C.push(Q),x.push(z===0?{name:Q,isTensor:!1}:{name:Q,isTensor:!0,type:Ns(z),shape:K});{if(w&&(r==null?void 0:r.preferredOutputLocation)===void 0){b.push("gpu-buffer");continue}let B=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((_=r==null?void 0:r.preferredOutputLocation)==null?void 0:_[Q])??"cpu";if(B!=="cpu"&&B!=="cpu-pinned"&&B!=="gpu-buffer"&&B!=="ml-tensor")throw new Error(`Not supported preferred output location: ${B}.`);if(w&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);b.push(B)}}let M=null;return b.some(P=>P==="gpu-buffer"||P==="ml-tensor")&&(o=i._OrtCreateBinding(n),o===0&&Ht("Can't create IO binding."),M={handle:o,outputPreferredLocations:b,outputPreferredLocationsEncoded:b.map(P=>Lc(P))}),en.set(n,[n,c,p,M,w,!1]),[n,g,C,E,x]}catch(v){throw c.forEach($=>i._OrtFree($)),p.forEach($=>i._OrtFree($)),o!==0&&i._OrtReleaseBinding(o)!==0&&Ht("Can't release IO binding."),n!==0&&i._OrtReleaseSession(n)!==0&&Ht("Can't release session."),v}finally{i._free(t),a!==0&&i._OrtReleaseSessionOptions(a)!==0&&Ht("Can't release session options."),l.forEach(v=>i._free(v)),(f=i.unmountExternalData)==null||f.call(i)}},xd=e=>{var l,c,p;let r=Yt(),t=en.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,i,n,a,o]=t;a&&(o&&r._OrtClearBoundOutputs(a.handle)!==0&&Ht("Can't clear bound outputs."),r._OrtReleaseBinding(a.handle)!==0&&Ht("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),(c=r.webnnOnReleaseSession)==null||c.call(r,e),(p=r.webgpuOnReleaseSession)==null||p.call(r,e),i.forEach(d=>r._OrtFree(d)),n.forEach(d=>r._OrtFree(d)),r._OrtReleaseSession(s)!==0&&Ht("Can't release session."),en.delete(e)},Ic=async(e,r,t,s,i,n,a=!1)=>{if(!e){r.push(0);return}let o=Yt(),l=o.PTR_SIZE,c=e[0],p=e[1],d=e[3],u=d,_,f;if(c==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let w=e[2].gpuBuffer;f=An(ti(c),p);{let g=o.jsepRegisterBuffer;if(!g)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=g(s,n,w,f)}}else if(d==="ml-tensor"){let w=e[2].mlTensor;f=An(ti(c),p);let g=o.webnnRegisterMLTensor;if(!g)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=g(s,w,ti(c),p)}else{let w=e[2];if(Array.isArray(w)){f=l*w.length,_=o._malloc(f),t.push(_);for(let g=0;g<w.length;g++){if(typeof w[g]!="string")throw new TypeError(`tensor data at index ${g} is not a string`);o.setValue(_+g*l,Ts(w[g],t),"*")}}else{let g=o.webnnIsGraphInput;if(c!=="string"&&g){let C=o.UTF8ToString(i);if(g(s,C)){let E=ti(c);f=An(E,p),u="ml-tensor";let x=o.webnnCreateTemporaryTensor,b=o.webnnUploadTensor;if(!x||!b)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let M=await x(s,E,p);b(M,new Uint8Array(w.buffer,w.byteOffset,w.byteLength)),_=M}else f=w.byteLength,_=o._malloc(f),t.push(_),o.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),_)}else f=w.byteLength,_=o._malloc(f),t.push(_),o.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,f),_)}}let v=o.stackSave(),$=o.stackAlloc(4*p.length);try{p.forEach((g,C)=>o.setValue($+C*l,g,l===4?"i32":"i64"));let w=o._OrtCreateTensor(ti(c),_,f,$,p.length,Lc(u));w===0&&Ht(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(w)}finally{o.stackRestore(v)}},Td=async(e,r,t,s,i,n)=>{var K,Q,B,Y;let a=Yt(),o=a.PTR_SIZE,l=en.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],d=l[2],u=l[3],_=l[4],f=l[5],v=r.length,$=s.length,w=0,g=[],C=[],E=[],x=[],b=a.stackSave(),M=a.stackAlloc(v*o),P=a.stackAlloc(v*o),A=a.stackAlloc($*o),z=a.stackAlloc($*o);try{[w,g]=Nb(n);for(let X=0;X<v;X++)await Ic(t[X],C,x,e,p[r[X]],r[X],_);for(let X=0;X<$;X++)await Ic(i[X],E,x,e,d[s[X]],v+s[X],_);for(let X=0;X<v;X++)a.setValue(M+X*o,C[X],"*"),a.setValue(P+X*o,p[r[X]],"*");for(let X=0;X<$;X++)a.setValue(A+X*o,E[X],"*"),a.setValue(z+X*o,d[s[X]],"*");if(u&&!f){let{handle:X,outputPreferredLocations:re,outputPreferredLocationsEncoded:de}=u;if(p.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model's input count (${p.length}).`);for(let ae=0;ae<v;ae++){let j=r[ae];await a._OrtBindInput(X,p[j],C[ae])!==0&&Ht(`Can't bind input[${ae}] for session=${e}.`)}for(let ae=0;ae<$;ae++){let j=s[ae];(K=i[ae])!=null&&K[3]?a._OrtBindOutput(X,d[j],E[ae],0)!==0&&Ht(`Can't bind pre-allocated output[${ae}] for session=${e}.`):a._OrtBindOutput(X,d[j],0,de[j])!==0&&Ht(`Can't bind output[${ae}] to ${re[ae]} for session=${e}.`)}en.set(e,[c,p,d,u,_,!0])}(Q=a.jsepOnRunStart)==null||Q.call(a,c),(B=a.webnnOnRunStart)==null||B.call(a,c);let H;u?H=await a._OrtRunWithBinding(c,u.handle,$,A,w):H=await a._OrtRun(c,P,M,v,z,$,A,w),H!==0&&Ht("failed to call OrtRun().");let q=[];for(let X=0;X<$;X++){let re=Number(a.getValue(A+X*o,"*"));if(re===E[X]){q.push(i[X]);continue}let de=a.stackSave(),ae=a.stackAlloc(4*o),j=!1,F,U=0;try{a._OrtGetTensorData(re,ae,ae+o,ae+2*o,ae+3*o)!==0&&Ht(`Can't access output tensor data on index ${X}.`);let ee=o===4?"i32":"i64",_e=Number(a.getValue(ae,ee));U=a.getValue(ae+o,"*");let le=a.getValue(ae+o*2,"*"),Me=Number(a.getValue(ae+o*3,ee)),ze=[];for(let W=0;W<Me;W++)ze.push(Number(a.getValue(le+W*o,ee)));a._OrtFree(le)!==0&&Ht("Can't free memory for tensor dims.");let Ue=ze.reduce((W,se)=>W*se,1);F=Ns(_e);let me=u==null?void 0:u.outputPreferredLocations[s[X]];if(F==="string"){if(me==="gpu-buffer"||me==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let W=[];for(let se=0;se<Ue;se++){let G=a.getValue(U+se*o,"*"),be=a.getValue(U+(se+1)*o,"*"),we=se===Ue-1?void 0:be-G;W.push(a.UTF8ToString(G,we))}q.push([F,ze,W,"cpu"])}else if(me==="gpu-buffer"&&Ue>0){let W=a.jsepGetBuffer;if(!W)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let se=W(U),G=An(_e,Ue);if(G===void 0||!id(F))throw new Error(`Unsupported data type: ${F}`);j=!0,q.push([F,ze,{gpuBuffer:se,download:a.jsepCreateDownloader(se,G,F),dispose:()=>{a._OrtReleaseTensor(re)!==0&&Ht("Can't release tensor.")}},"gpu-buffer"])}else if(me==="ml-tensor"&&Ue>0){let W=a.webnnEnsureTensor,se=a.webnnIsInt64Supported;if(!W||!se)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(An(_e,Ue)===void 0||!ad(F))throw new Error(`Unsupported data type: ${F}`);if(F==="int64"&&!se(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let G=await W(e,U,_e,ze,!1);j=!0,q.push([F,ze,{mlTensor:G,download:a.webnnCreateMLTensorDownloader(U,F),dispose:()=>{a.webnnReleaseTensorId(U),a._OrtReleaseTensor(re)}},"ml-tensor"])}else{let W=nd(F),se=new W(Ue);new Uint8Array(se.buffer,se.byteOffset,se.byteLength).set(a.HEAPU8.subarray(U,U+se.byteLength)),q.push([F,ze,se,"cpu"])}}finally{a.stackRestore(de),F==="string"&&U&&a._free(U),j||a._OrtReleaseTensor(re),(Y=a.webnnOnRunEnd)==null||Y.call(a,c)}}return u&&!_&&(a._OrtClearBoundOutputs(u.handle)!==0&&Ht("Can't clear bound outputs."),en.set(e,[c,p,d,u,_,!1])),q}finally{a.stackRestore(b),C.forEach(H=>a._OrtReleaseTensor(H)),E.forEach(H=>a._OrtReleaseTensor(H)),x.forEach(H=>a._free(H)),w!==0&&a._OrtReleaseRunOptions(w),g.forEach(H=>a._free(H))}},Ed=e=>{let r=Yt(),t=en.get(e);if(!t)throw new Error("invalid session id");let s=t[0],i=r._OrtEndProfiling(s);i===0&&Ht("Can't get an profile file name."),r._OrtFree(i)},Pd=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),tn,Hr,Zn,Gi,Ki,io,kc,ao,Sn,$n,lb,N0,V0,U0,W0,G0,K0,H0,q0=je(()=>{Ss(),j0(),zn(),td(),tn=()=>!!tr.wasm.proxy&&typeof document<"u",Zn=!1,Gi=!1,Ki=!1,ao=new Map,Sn=(e,r)=>{let t=ao.get(e);t?t.push(r):ao.set(e,[r])},$n=()=>{if(Zn||!Gi||Ki||!Hr)throw new Error("worker not ready")},lb=e=>{switch(e.data.type){case"init-wasm":Zn=!1,e.data.err?(Ki=!0,kc[1](e.data.err)):(Gi=!0,kc[0]()),io&&(URL.revokeObjectURL(io),io=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ao.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},N0=async()=>{if(!Gi){if(Zn)throw new Error("multiple calls to 'initWasm()' detected.");if(Ki)throw new Error("previous call to 'initWasm()' failed.");if(Zn=!0,tn())return new Promise((e,r)=>{Hr==null||Hr.terminate(),Rb().then(([t,s])=>{try{Hr=s,Hr.onerror=n=>r(n),Hr.onmessage=lb,kc=[e,r];let i={type:"init-wasm",in:tr};!i.in.wasm.wasmPaths&&(t||Dc)&&(i.in.wasm.wasmPaths={wasm:new URL("/ecommerce-customer/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),Hr.postMessage(i),io=t}catch(i){r(i)}},r)});try{await rd(tr.wasm),await yd(tr),Gi=!0}catch(e){throw Ki=!0,e}finally{Zn=!1}}},V0=async e=>{if(tn())return $n(),new Promise((r,t)=>{Sn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:tr}};Hr.postMessage(s)});await Md(tr,e)},U0=async e=>tn()?($n(),new Promise((r,t)=>{Sn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};Hr.postMessage(s,[e.buffer])})):wo(e),W0=async(e,r)=>{if(tn()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return $n(),new Promise((t,s)=>{Sn("create",[t,s]);let i={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),Hr.postMessage(i,n)})}else return vd(e,r)},G0=async e=>{if(tn())return $n(),new Promise((r,t)=>{Sn("release",[r,t]);let s={type:"release",in:e};Hr.postMessage(s)});xd(e)},K0=async(e,r,t,s,i,n)=>{if(tn()){if(t.some(a=>a[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(a=>a))throw new Error("pre-allocated output tensor is not supported for proxy.");return $n(),new Promise((a,o)=>{Sn("run",[a,o]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};Hr.postMessage(c,Pd(l))})}else return Td(e,r,t,s,i,n)},H0=async e=>{if(tn())return $n(),new Promise((r,t)=>{Sn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};Hr.postMessage(s)});Ed(e)}}),Ac,cb,Q0,bT=je(()=>{Ss(),q0(),_t(),ed(),Ub(),Ac=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},cb=e=>{switch(e[3]){case"cpu":return new Es(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!id(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:i}=e[2];return Es.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:i})}case"ml-tensor":{let r=e[0];if(!ad(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:i}=e[2];return Es.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Q0=class{async fetchModelAndCopyToWasmMemory(e){return U0(await od(e))}async loadModel(e,r){Cs();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await W0(t,r),ps()}async dispose(){return G0(this.sessionId)}async run(e,r,t){Cs();let s=[],i=[];Object.entries(e).forEach(d=>{let u=d[0],_=d[1],f=this.inputNames.indexOf(u);if(f===-1)throw new Error(`invalid input '${u}'`);s.push(_),i.push(f)});let n=[],a=[];Object.entries(r).forEach(d=>{let u=d[0],_=d[1],f=this.outputNames.indexOf(u);if(f===-1)throw new Error(`invalid output '${u}'`);n.push(_),a.push(f)});let o=s.map((d,u)=>Ac(d,()=>`input "${this.inputNames[i[u]]}"`)),l=n.map((d,u)=>d?Ac(d,()=>`output "${this.outputNames[a[u]]}"`):null),c=await K0(this.sessionId,i,o,a,l,t),p={};for(let d=0;d<c.length;d++)p[this.outputNames[a[d]]]=n[d]??cb(c[d]);return ps(),p}startProfiling(){}endProfiling(){H0(this.sessionId)}}}),X0={};ai(X0,{OnnxruntimeWebAssemblyBackend:()=>Xc,initializeFlags:()=>Qc,wasmBackend:()=>J0});var Qc,Xc,J0,yT=je(()=>{Ss(),q0(),bT(),Qc=()=>{(typeof tr.wasm.initTimeout!="number"||tr.wasm.initTimeout<0)&&(tr.wasm.initTimeout=0);let e=tr.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),tr.wasm.simd=!1),typeof tr.wasm.proxy!="boolean"&&(tr.wasm.proxy=!1),typeof tr.wasm.trace!="boolean"&&(tr.wasm.trace=!1),typeof tr.wasm.numThreads!="number"||!Number.isInteger(tr.wasm.numThreads)||tr.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)tr.wasm.numThreads=1;else{let r=typeof navigator>"u"?ax("node:os").cpus().length:navigator.hardwareConcurrency;tr.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},Xc=class{async init(e){Qc(),await N0(),await V0(e)}async createInferenceSessionHandler(e,r){let t=new Q0;return await t.loadModel(e,r),t}},J0=new Xc});Ss();Ss();Ss();var MT="1.22.0-dev.20250409-89f8206ba4",vT=Fb;{let e=(yT(),Yi(X0)).wasmBackend;Fn("webgpu",e,5),Fn("webnn",e,5),Fn("cpu",e,10),Fn("wasm",e,10)}Object.defineProperty(tr.versions,"web",{value:MT,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return Zc},get TRACE(){return Zi},get TRACE_FUNC_BEGIN(){return Cs},get TRACE_FUNC_END(){return ps},get Tensor(){return Es},default:vT,get env(){return tr},get registerBackend(){return Fn}},Symbol.toStringTag,{value:"Module"}));var js={},TT={"onnxruntime-common":e=>{e.exports=rx},"onnxruntime-web":e=>{e.exports=xT},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>Be,Interpreter:()=>He,Template:()=>ts,parse:()=>U,tokenize:()=>d});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),i=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endset:s.EndSet,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,break:s.Break,continue:s.Continue,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),n=class{constructor(D,ie){this.value=D,this.type=ie}};function a(D){return/\w/.test(D)}function o(D){return/[0-9]/.test(D)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],c=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(D,ie={}){return D.endsWith(`
`)&&(D=D.slice(0,-1)),D=D.replace(/{#.*?#}/gs,"{##}"),ie.lstrip_blocks&&(D=D.replace(/^[ \t]*({[#%])/gm,"$1")),ie.trim_blocks&&(D=D.replace(/([#%]})\n/g,"$1")),D.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function d(D,ie={}){var ve,vt,Ot;const R=[],te=p(D,ie);let fe=0;const Oe=ht=>{let ct="";for(;ht(te[fe]);){if(te[fe]==="\\"){if(++fe,fe>=te.length)throw new SyntaxError("Unexpected end of input");const st=te[fe++],Rt=c.get(st);if(Rt===void 0)throw new SyntaxError(`Unexpected escaped character: ${st}`);ct+=Rt;continue}if(ct+=te[fe++],fe>=te.length)throw new SyntaxError("Unexpected end of input")}return ct};e:for(;fe<te.length;){const ht=(ve=R.at(-1))==null?void 0:ve.type;if(ht===void 0||ht===s.CloseStatement||ht===s.CloseExpression){let st="";for(;fe<te.length&&!(te[fe]==="{"&&(te[fe+1]==="%"||te[fe+1]==="{"));)st+=te[fe++];if(st.length>0){R.push(new n(st,s.Text));continue}}Oe(st=>/\s/.test(st));const ct=te[fe];if(ct==="-"||ct==="+"){const st=(vt=R.at(-1))==null?void 0:vt.type;if(st===s.Text||st===void 0)throw new SyntaxError(`Unexpected character: ${ct}`);switch(st){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++fe;const Rt=Oe(o);R.push(new n(`${ct}${Rt}`,Rt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[st,Rt]of l)if(te.slice(fe,fe+st.length)===st){R.push(new n(st,Rt)),fe+=st.length;continue e}if(ct==="'"||ct==='"'){++fe;const st=Oe(Rt=>Rt!==ct);R.push(new n(st,s.StringLiteral)),++fe;continue}if(o(ct)){const st=Oe(o);R.push(new n(st,s.NumericLiteral));continue}if(a(ct)){const st=Oe(a),Rt=Object.hasOwn(i,st)?i[st]:s.Identifier;Rt===s.In&&((Ot=R.at(-1))==null?void 0:Ot.type)===s.Not?(R.pop(),R.push(new n("not in",s.NotIn))):R.push(new n(st,Rt));continue}throw new SyntaxError(`Unexpected character: ${ct}`)}return R}var u=class{constructor(){Z(this,"type","Statement")}},_=class extends u{constructor(ie){super();Z(this,"type","Program");this.body=ie}},f=class extends u{constructor(ie,R,te){super();Z(this,"type","If");this.test=ie,this.body=R,this.alternate=te}},v=class extends u{constructor(ie,R,te,fe){super();Z(this,"type","For");this.loopvar=ie,this.iterable=R,this.body=te,this.defaultBlock=fe}},$=class extends u{constructor(){super(...arguments);Z(this,"type","Break")}},w=class extends u{constructor(){super(...arguments);Z(this,"type","Continue")}},g=class extends u{constructor(ie,R,te){super();Z(this,"type","Set");this.assignee=ie,this.value=R,this.body=te}},C=class extends u{constructor(ie,R,te){super();Z(this,"type","Macro");this.name=ie,this.args=R,this.body=te}},E=class extends u{constructor(){super(...arguments);Z(this,"type","Expression")}},x=class extends E{constructor(ie,R,te){super();Z(this,"type","MemberExpression");this.object=ie,this.property=R,this.computed=te}},b=class extends E{constructor(ie,R){super();Z(this,"type","CallExpression");this.callee=ie,this.args=R}},M=class extends E{constructor(ie){super();Z(this,"type","Identifier");this.value=ie}},P=class extends E{constructor(ie){super();Z(this,"type","Literal");this.value=ie}},A=class extends P{constructor(){super(...arguments);Z(this,"type","NumericLiteral")}},z=class extends P{constructor(){super(...arguments);Z(this,"type","StringLiteral")}},K=class extends P{constructor(){super(...arguments);Z(this,"type","BooleanLiteral")}},Q=class extends P{constructor(){super(...arguments);Z(this,"type","NullLiteral")}},B=class extends P{constructor(){super(...arguments);Z(this,"type","ArrayLiteral")}},Y=class extends P{constructor(){super(...arguments);Z(this,"type","TupleLiteral")}},H=class extends P{constructor(){super(...arguments);Z(this,"type","ObjectLiteral")}},q=class extends E{constructor(ie,R,te){super();Z(this,"type","BinaryExpression");this.operator=ie,this.left=R,this.right=te}},X=class extends E{constructor(ie,R){super();Z(this,"type","FilterExpression");this.operand=ie,this.filter=R}},re=class extends E{constructor(ie,R){super();Z(this,"type","SelectExpression");this.iterable=ie,this.test=R}},de=class extends E{constructor(ie,R,te){super();Z(this,"type","TestExpression");this.operand=ie,this.negate=R,this.test=te}},ae=class extends E{constructor(ie,R){super();Z(this,"type","UnaryExpression");this.operator=ie,this.argument=R}},j=class extends E{constructor(ie=void 0,R=void 0,te=void 0){super();Z(this,"type","SliceExpression");this.start=ie,this.stop=R,this.step=te}},F=class extends E{constructor(ie,R){super();Z(this,"type","KeywordArgumentExpression");this.key=ie,this.value=R}};function U(D){const ie=new _([]);let R=0;function te(Ae,Ye){const ot=D[R++];if(!ot||ot.type!==Ae)throw new Error(`Parser Error: ${Ye}. ${ot.type} !== ${Ae}.`);return ot}function fe(){switch(D[R].type){case s.Text:return vt();case s.OpenStatement:return Ot();case s.OpenExpression:return ht();default:throw new SyntaxError(`Unexpected token type: ${D[R].type}`)}}function Oe(...Ae){return R+Ae.length<=D.length&&Ae.some((Ye,ot)=>Ye!==D[R+ot].type)}function ve(...Ae){return R+Ae.length<=D.length&&Ae.every((Ye,ot)=>Ye===D[R+ot].type)}function vt(){return new z(te(s.Text,"Expected text token").value)}function Ot(){te(s.OpenStatement,"Expected opening statement token");let Ae;switch(D[R].type){case s.Set:++R,Ae=ct(),te(s.CloseStatement,"Expected closing statement token");break;case s.If:++R,Ae=st(),te(s.OpenStatement,"Expected {% token"),te(s.EndIf,"Expected endif token"),te(s.CloseStatement,"Expected %} token");break;case s.Macro:++R,Ae=Rt(),te(s.OpenStatement,"Expected {% token"),te(s.EndMacro,"Expected endmacro token"),te(s.CloseStatement,"Expected %} token");break;case s.For:++R,Ae=Mr(),te(s.OpenStatement,"Expected {% token"),te(s.EndFor,"Expected endfor token"),te(s.CloseStatement,"Expected %} token");break;case s.Break:++R,te(s.CloseStatement,"Expected closing statement token"),Ae=new $;break;case s.Continue:++R,te(s.CloseStatement,"Expected closing statement token"),Ae=new w;break;default:throw new SyntaxError(`Unknown statement type: ${D[R].type}`)}return Ae}function ht(){te(s.OpenExpression,"Expected opening expression token");const Ae=Zt();return te(s.CloseExpression,"Expected closing expression token"),Ae}function ct(){var Ye,ot;const Ae=Zt();if(ve(s.Equals)){++R;const jt=Zt();return new g(Ae,jt,[])}else{const jt=[];for(te(s.CloseStatement,"Expected %} token");!(((Ye=D[R])==null?void 0:Ye.type)===s.OpenStatement&&((ot=D[R+1])==null?void 0:ot.type)===s.EndSet);){const ns=fe();jt.push(ns)}return te(s.OpenStatement,"Expected {% token"),te(s.EndSet,"Expected endset token"),new g(Ae,null,jt)}}function st(){var jt,ns,is,pr,as,mr,_r,os;const Ae=Zt();te(s.CloseStatement,"Expected closing statement token");const Ye=[],ot=[];for(;!(((jt=D[R])==null?void 0:jt.type)===s.OpenStatement&&(((ns=D[R+1])==null?void 0:ns.type)===s.ElseIf||((is=D[R+1])==null?void 0:is.type)===s.Else||((pr=D[R+1])==null?void 0:pr.type)===s.EndIf));)Ye.push(fe());if(((as=D[R])==null?void 0:as.type)===s.OpenStatement&&((mr=D[R+1])==null?void 0:mr.type)!==s.EndIf)if(++R,ve(s.ElseIf))te(s.ElseIf,"Expected elseif token"),ot.push(st());else for(te(s.Else,"Expected else token"),te(s.CloseStatement,"Expected closing statement token");!(((_r=D[R])==null?void 0:_r.type)===s.OpenStatement&&((os=D[R+1])==null?void 0:os.type)===s.EndIf);)ot.push(fe());return new f(Ae,Ye,ot)}function Rt(){const Ae=jr();if(Ae.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Ye=hs();te(s.CloseStatement,"Expected closing statement token");const ot=[];for(;Oe(s.OpenStatement,s.EndMacro);)ot.push(fe());return new C(Ae,Ye,ot)}function Xt(Ae=!1){const Ye=Ae?jr:Zt,ot=[Ye()],jt=ve(s.Comma);for(;jt&&(++R,ot.push(Ye()),!!ve(s.Comma)););return jt?new Y(ot):ot[0]}function Mr(){const Ae=Xt(!0);if(!(Ae instanceof M||Ae instanceof Y))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Ae.type} instead`);te(s.In,"Expected `in` keyword following loop variable");const Ye=Zt();te(s.CloseStatement,"Expected closing statement token");const ot=[];for(;Oe(s.OpenStatement,s.EndFor)&&Oe(s.OpenStatement,s.Else);)ot.push(fe());const jt=[];if(ve(s.OpenStatement,s.Else))for(++R,++R,te(s.CloseStatement,"Expected closing statement token");Oe(s.OpenStatement,s.EndFor);)jt.push(fe());return new v(Ae,Ye,ot,jt)}function Zt(){return zr()}function zr(){const Ae=rs();if(ve(s.If)){++R;const Ye=rs();if(ve(s.Else)){++R;const ot=rs();return new f(Ye,[Ae],[ot])}else return new re(Ae,Ye)}return Ae}function rs(){let Ae=ms();for(;ve(s.Or);){const Ye=D[R];++R;const ot=ms();Ae=new q(Ye,Ae,ot)}return Ae}function ms(){let Ae=ss();for(;ve(s.And);){const Ye=D[R];++R;const ot=ss();Ae=new q(Ye,Ae,ot)}return Ae}function ss(){let Ae;for(;ve(s.Not);){const Ye=D[R];++R;const ot=ss();Ae=new ae(Ye,ot)}return Ae??$s()}function $s(){let Ae=Ur();for(;ve(s.ComparisonBinaryOperator)||ve(s.In)||ve(s.NotIn);){const Ye=D[R];++R;const ot=Ur();Ae=new q(Ye,Ae,ot)}return Ae}function Ur(){let Ae=Fs();for(;ve(s.AdditiveBinaryOperator);){const Ye=D[R];++R;const ot=Fs();Ae=new q(Ye,Ae,ot)}return Ae}function Is(){const Ae=cr(jr());return ve(s.OpenParen)?qr(Ae):Ae}function qr(Ae){let Ye=new b(Ae,hs());return Ye=cr(Ye),ve(s.OpenParen)&&(Ye=qr(Ye)),Ye}function hs(){te(s.OpenParen,"Expected opening parenthesis for arguments list");const Ae=ks();return te(s.CloseParen,"Expected closing parenthesis for arguments list"),Ae}function ks(){const Ae=[];for(;!ve(s.CloseParen);){let Ye=Zt();if(ve(s.Equals)){if(++R,!(Ye instanceof M))throw new SyntaxError("Expected identifier for keyword argument");const ot=Zt();Ye=new F(Ye,ot)}Ae.push(Ye),ve(s.Comma)&&++R}return Ae}function As(){const Ae=[];let Ye=!1;for(;!ve(s.CloseSquareBracket);)ve(s.Colon)?(Ae.push(void 0),++R,Ye=!0):(Ae.push(Zt()),ve(s.Colon)&&(++R,Ye=!0));if(Ae.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Ye){if(Ae.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new j(...Ae)}return Ae[0]}function cr(Ae){for(;ve(s.Dot)||ve(s.OpenSquareBracket);){const Ye=D[R];++R;let ot;const jt=Ye.type!==s.Dot;if(jt)ot=As(),te(s.CloseSquareBracket,"Expected closing square bracket");else if(ot=jr(),ot.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Ae=new x(Ae,ot,jt)}return Ae}function Fs(){let Ae=Cr();for(;ve(s.MultiplicativeBinaryOperator);){const Ye=D[R];++R;const ot=Cr();Ae=new q(Ye,Ae,ot)}return Ae}function Cr(){let Ae=fs();for(;ve(s.Is);){++R;const Ye=ve(s.Not);Ye&&++R;let ot=jr();if(ot instanceof K?ot=new M(ot.value.toString()):ot instanceof Q&&(ot=new M("none")),!(ot instanceof M))throw new SyntaxError("Expected identifier for the test");Ae=new de(Ae,Ye,ot)}return Ae}function fs(){let Ae=Is();for(;ve(s.Pipe);){++R;let Ye=jr();if(!(Ye instanceof M))throw new SyntaxError("Expected identifier for the filter");ve(s.OpenParen)&&(Ye=qr(Ye)),Ae=new X(Ae,Ye)}return Ae}function jr(){const Ae=D[R];switch(Ae.type){case s.NumericLiteral:return++R,new A(Number(Ae.value));case s.StringLiteral:return++R,new z(Ae.value);case s.BooleanLiteral:return++R,new K(Ae.value.toLowerCase()==="true");case s.NullLiteral:return++R,new Q(null);case s.Identifier:return++R,new M(Ae.value);case s.OpenParen:{++R;const Ye=Xt();if(D[R].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${D[R].type} instead`);return++R,Ye}case s.OpenSquareBracket:{++R;const Ye=[];for(;!ve(s.CloseSquareBracket);)Ye.push(Zt()),ve(s.Comma)&&++R;return++R,new B(Ye)}case s.OpenCurlyBracket:{++R;const Ye=new Map;for(;!ve(s.CloseCurlyBracket);){const ot=Zt();te(s.Colon,"Expected colon between key and value in object literal");const jt=Zt();Ye.set(ot,jt),ve(s.Comma)&&++R}return++R,new H(Ye)}default:throw new SyntaxError(`Unexpected token: ${Ae.type}`)}}for(;R<D.length;)ie.body.push(fe());return ie}function ee(D,ie,R=1){ie===void 0&&(ie=D,D=0);const te=[];for(let fe=D;fe<ie;fe+=R)te.push(fe);return te}function _e(D,ie,R,te=1){const fe=Math.sign(te);fe>=0?(ie=(ie??(ie=0))<0?Math.max(D.length+ie,0):Math.min(ie,D.length),R=(R??(R=D.length))<0?Math.max(D.length+R,0):Math.min(R,D.length)):(ie=(ie??(ie=D.length-1))<0?Math.max(D.length+ie,-1):Math.min(ie,D.length-1),R=(R??(R=-1))<-1?Math.max(D.length+R,-1):Math.min(R,D.length-1));const Oe=[];for(let ve=ie;fe*ve<fe*R;ve+=te)Oe.push(D[ve]);return Oe}function le(D){return D.replace(/\b\w/g,ie=>ie.toUpperCase())}var Me=class extends Error{},ze=class extends Error{},Ue=class{constructor(D=void 0){Z(this,"type","RuntimeValue");Z(this,"value");Z(this,"builtins",new Map);this.value=D}__bool__(){return new se(!!this.value)}},me=class extends Ue{constructor(){super(...arguments);Z(this,"type","NumericValue")}},W=class extends Ue{constructor(){super(...arguments);Z(this,"type","StringValue");Z(this,"builtins",new Map([["upper",new Pe(()=>new W(this.value.toUpperCase()))],["lower",new Pe(()=>new W(this.value.toLowerCase()))],["strip",new Pe(()=>new W(this.value.trim()))],["title",new Pe(()=>new W(le(this.value)))],["length",new me(this.value.length)],["rstrip",new Pe(()=>new W(this.value.trimEnd()))],["lstrip",new Pe(()=>new W(this.value.trimStart()))],["startswith",new Pe(ie=>{if(ie.length===0)throw new Error("startswith() requires at least one argument");const R=ie[0];if(!(R instanceof W))throw new Error("startswith() argument must be a string");return new se(this.value.startsWith(R.value))})],["endswith",new Pe(ie=>{if(ie.length===0)throw new Error("endswith() requires at least one argument");const R=ie[0];if(!(R instanceof W))throw new Error("endswith() argument must be a string");return new se(this.value.endsWith(R.value))})],["split",new Pe(ie=>{const R=ie[0]??new $e;if(!(R instanceof W||R instanceof $e))throw new Error("sep argument must be a string or null");const te=ie[1]??new me(-1);if(!(te instanceof me))throw new Error("maxsplit argument must be a number");let fe=[];if(R instanceof $e){const Oe=this.value.trimStart();for(const{0:ve,index:vt}of Oe.matchAll(/\S+/g)){if(te.value!==-1&&fe.length>=te.value&&vt!==void 0){fe.push(ve+Oe.slice(vt+ve.length));break}fe.push(ve)}}else{if(R.value==="")throw new Error("empty separator");fe=this.value.split(R.value),te.value!==-1&&fe.length>te.value&&fe.push(fe.splice(te.value).join(R.value))}return new we(fe.map(Oe=>new W(Oe)))})]]))}},se=class extends Ue{constructor(){super(...arguments);Z(this,"type","BooleanValue")}},G=class extends Ue{constructor(){super(...arguments);Z(this,"type","ObjectValue");Z(this,"builtins",new Map([["get",new Pe(([ie,R])=>{if(!(ie instanceof W))throw new Error(`Object key must be a string: got ${ie.type}`);return this.value.get(ie.value)??R??new $e})],["items",new Pe(()=>new we(Array.from(this.value.entries()).map(([ie,R])=>new we([new W(ie),R]))))]]))}__bool__(){return new se(this.value.size>0)}},be=class extends G{constructor(){super(...arguments);Z(this,"type","KeywordArgumentsValue")}},we=class extends Ue{constructor(){super(...arguments);Z(this,"type","ArrayValue");Z(this,"builtins",new Map([["length",new me(this.value.length)]]))}__bool__(){return new se(this.value.length>0)}},Se=class extends we{constructor(){super(...arguments);Z(this,"type","TupleValue")}},Pe=class extends Ue{constructor(){super(...arguments);Z(this,"type","FunctionValue")}},$e=class extends Ue{constructor(){super(...arguments);Z(this,"type","NullValue")}},Fe=class extends Ue{constructor(){super(...arguments);Z(this,"type","UndefinedValue")}},Be=class{constructor(D){Z(this,"variables",new Map([["namespace",new Pe(D=>{if(D.length===0)return new G(new Map);if(D.length!==1||!(D[0]instanceof G))throw new Error("`namespace` expects either zero arguments or a single object argument");return D[0]})]]));Z(this,"tests",new Map([["boolean",D=>D.type==="BooleanValue"],["callable",D=>D instanceof Pe],["odd",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${D.type}`);return D.value%2!==0}],["even",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${D.type}`);return D.value%2===0}],["false",D=>D.type==="BooleanValue"&&!D.value],["true",D=>D.type==="BooleanValue"&&D.value],["none",D=>D.type==="NullValue"],["string",D=>D.type==="StringValue"],["number",D=>D.type==="NumericValue"],["integer",D=>D.type==="NumericValue"&&Number.isInteger(D.value)],["iterable",D=>D.type==="ArrayValue"||D.type==="StringValue"],["mapping",D=>D.type==="ObjectValue"],["lower",D=>{const ie=D.value;return D.type==="StringValue"&&ie===ie.toLowerCase()}],["upper",D=>{const ie=D.value;return D.type==="StringValue"&&ie===ie.toUpperCase()}],["none",D=>D.type==="NullValue"],["defined",D=>D.type!=="UndefinedValue"],["undefined",D=>D.type==="UndefinedValue"],["equalto",(D,ie)=>D.value===ie.value],["eq",(D,ie)=>D.value===ie.value]]));this.parent=D}set(D,ie){return this.declareVariable(D,qe(ie))}declareVariable(D,ie){if(this.variables.has(D))throw new SyntaxError(`Variable already declared: ${D}`);return this.variables.set(D,ie),ie}setVariable(D,ie){return this.variables.set(D,ie),ie}resolve(D){if(this.variables.has(D))return this;if(this.parent)return this.parent.resolve(D);throw new Error(`Unknown variable: ${D}`)}lookupVariable(D){try{return this.resolve(D).variables.get(D)??new Fe}catch{return new Fe}}},He=class{constructor(D){Z(this,"global");this.global=D??new Be}run(D){return this.evaluate(D,this.global)}evaluateBinaryExpression(D,ie){const R=this.evaluate(D.left,ie);switch(D.operator.value){case"and":return R.__bool__().value?this.evaluate(D.right,ie):R;case"or":return R.__bool__().value?R:this.evaluate(D.right,ie)}const te=this.evaluate(D.right,ie);switch(D.operator.value){case"==":return new se(R.value==te.value);case"!=":return new se(R.value!=te.value)}if(R instanceof Fe||te instanceof Fe)throw new Error("Cannot perform operation on undefined values");if(R instanceof $e||te instanceof $e)throw new Error("Cannot perform operation on null values");if(R instanceof me&&te instanceof me)switch(D.operator.value){case"+":return new me(R.value+te.value);case"-":return new me(R.value-te.value);case"*":return new me(R.value*te.value);case"/":return new me(R.value/te.value);case"%":return new me(R.value%te.value);case"<":return new se(R.value<te.value);case">":return new se(R.value>te.value);case">=":return new se(R.value>=te.value);case"<=":return new se(R.value<=te.value)}else if(R instanceof we&&te instanceof we)switch(D.operator.value){case"+":return new we(R.value.concat(te.value))}else if(te instanceof we){const fe=te.value.find(Oe=>Oe.value===R.value)!==void 0;switch(D.operator.value){case"in":return new se(fe);case"not in":return new se(!fe)}}if(R instanceof W||te instanceof W)switch(D.operator.value){case"+":return new W(R.value.toString()+te.value.toString())}if(R instanceof W&&te instanceof W)switch(D.operator.value){case"in":return new se(te.value.includes(R.value));case"not in":return new se(!te.value.includes(R.value))}if(R instanceof W&&te instanceof G)switch(D.operator.value){case"in":return new se(te.value.has(R.value));case"not in":return new se(!te.value.has(R.value))}throw new SyntaxError(`Unknown operator "${D.operator.value}" between ${R.type} and ${te.type}`)}evaluateArguments(D,ie){const R=[],te=new Map;for(const fe of D)if(fe.type==="KeywordArgumentExpression"){const Oe=fe;te.set(Oe.key.value,this.evaluate(Oe.value,ie))}else{if(te.size>0)throw new Error("Positional arguments must come before keyword arguments");R.push(this.evaluate(fe,ie))}return[R,te]}evaluateFilterExpression(D,ie){const R=this.evaluate(D.operand,ie);if(D.filter.type==="Identifier"){const te=D.filter;if(te.value==="tojson")return new W(Ie(R));if(R instanceof we)switch(te.value){case"list":return R;case"first":return R.value[0];case"last":return R.value[R.value.length-1];case"length":return new me(R.value.length);case"reverse":return new we(R.value.reverse());case"sort":return new we(R.value.sort((fe,Oe)=>{if(fe.type!==Oe.type)throw new Error(`Cannot compare different types: ${fe.type} and ${Oe.type}`);switch(fe.type){case"NumericValue":return fe.value-Oe.value;case"StringValue":return fe.value.localeCompare(Oe.value);default:throw new Error(`Cannot compare type: ${fe.type}`)}}));case"join":return new W(R.value.map(fe=>fe.value).join(""));case"string":return new W(Ie(R));default:throw new Error(`Unknown ArrayValue filter: ${te.value}`)}else if(R instanceof W)switch(te.value){case"length":return new me(R.value.length);case"upper":return new W(R.value.toUpperCase());case"lower":return new W(R.value.toLowerCase());case"title":return new W(le(R.value));case"capitalize":return new W(R.value.charAt(0).toUpperCase()+R.value.slice(1));case"trim":return new W(R.value.trim());case"indent":return new W(R.value.split(`
`).map((fe,Oe)=>Oe===0||fe.length===0?fe:"    "+fe).join(`
`));case"join":case"string":return R;default:throw new Error(`Unknown StringValue filter: ${te.value}`)}else if(R instanceof me)switch(te.value){case"abs":return new me(Math.abs(R.value));default:throw new Error(`Unknown NumericValue filter: ${te.value}`)}else if(R instanceof G)switch(te.value){case"items":return new we(Array.from(R.value.entries()).map(([fe,Oe])=>new we([new W(fe),Oe])));case"length":return new me(R.value.size);default:throw new Error(`Unknown ObjectValue filter: ${te.value}`)}throw new Error(`Cannot apply filter "${te.value}" to type: ${R.type}`)}else if(D.filter.type==="CallExpression"){const te=D.filter;if(te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${te.callee.type}`);const fe=te.callee.value;if(fe==="tojson"){const[,Oe]=this.evaluateArguments(te.args,ie),ve=Oe.get("indent")??new $e;if(!(ve instanceof me||ve instanceof $e))throw new Error("If set, indent must be a number");return new W(Ie(R,ve.value))}else if(fe==="join"){let Oe;if(R instanceof W)Oe=Array.from(R.value);else if(R instanceof we)Oe=R.value.map(ht=>ht.value);else throw new Error(`Cannot apply filter "${fe}" to type: ${R.type}`);const[ve,vt]=this.evaluateArguments(te.args,ie),Ot=ve.at(0)??vt.get("separator")??new W("");if(!(Ot instanceof W))throw new Error("separator must be a string");return new W(Oe.join(Ot.value))}if(R instanceof we){switch(fe){case"selectattr":case"rejectattr":{const Oe=fe==="selectattr";if(R.value.some(st=>!(st instanceof G)))throw new Error(`\`${fe}\` can only be applied to array of objects`);if(te.args.some(st=>st.type!=="StringLiteral"))throw new Error(`arguments of \`${fe}\` must be strings`);const[ve,vt,Ot]=te.args.map(st=>this.evaluate(st,ie));let ht;if(vt){const st=ie.tests.get(vt.value);if(!st)throw new Error(`Unknown test: ${vt.value}`);ht=st}else ht=(...st)=>st[0].__bool__().value;const ct=R.value.filter(st=>{const Rt=st.value.get(ve.value),Xt=Rt?ht(Rt,Ot):!1;return Oe?Xt:!Xt});return new we(ct)}case"map":{const[,Oe]=this.evaluateArguments(te.args,ie);if(Oe.has("attribute")){const ve=Oe.get("attribute");if(!(ve instanceof W))throw new Error("attribute must be a string");const vt=Oe.get("default"),Ot=R.value.map(ht=>{if(!(ht instanceof G))throw new Error("items in map must be an object");return ht.value.get(ve.value)??vt??new Fe});return new we(Ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${fe}`)}else if(R instanceof W){switch(fe){case"indent":{const[Oe,ve]=this.evaluateArguments(te.args,ie),vt=Oe.at(0)??ve.get("width")??new me(4);if(!(vt instanceof me))throw new Error("width must be a number");const Ot=Oe.at(1)??ve.get("first")??new se(!1),ht=Oe.at(2)??ve.get("blank")??new se(!1),ct=R.value.split(`
`),st=" ".repeat(vt.value),Rt=ct.map((Xt,Mr)=>!Ot.value&&Mr===0||!ht.value&&Xt.length===0?Xt:st+Xt);return new W(Rt.join(`
`))}}throw new Error(`Unknown StringValue filter: ${fe}`)}else throw new Error(`Cannot apply filter "${fe}" to type: ${R.type}`)}throw new Error(`Unknown filter: ${D.filter.type}`)}evaluateTestExpression(D,ie){const R=this.evaluate(D.operand,ie),te=ie.tests.get(D.test.value);if(!te)throw new Error(`Unknown test: ${D.test.value}`);const fe=te(R);return new se(D.negate?!fe:fe)}evaluateUnaryExpression(D,ie){const R=this.evaluate(D.argument,ie);switch(D.operator.value){case"not":return new se(!R.value);default:throw new SyntaxError(`Unknown operator: ${D.operator.value}`)}}evalProgram(D,ie){return this.evaluateBlock(D.body,ie)}evaluateBlock(D,ie){let R="";for(const te of D){const fe=this.evaluate(te,ie);fe.type!=="NullValue"&&fe.type!=="UndefinedValue"&&(R+=fe.value)}return new W(R)}evaluateIdentifier(D,ie){return ie.lookupVariable(D.value)}evaluateCallExpression(D,ie){const[R,te]=this.evaluateArguments(D.args,ie);te.size>0&&R.push(new be(te));const fe=this.evaluate(D.callee,ie);if(fe.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${fe.type}`);return fe.value(R,ie)}evaluateSliceExpression(D,ie,R){if(!(D instanceof we||D instanceof W))throw new Error("Slice object must be an array or string");const te=this.evaluate(ie.start,R),fe=this.evaluate(ie.stop,R),Oe=this.evaluate(ie.step,R);if(!(te instanceof me||te instanceof Fe))throw new Error("Slice start must be numeric or undefined");if(!(fe instanceof me||fe instanceof Fe))throw new Error("Slice stop must be numeric or undefined");if(!(Oe instanceof me||Oe instanceof Fe))throw new Error("Slice step must be numeric or undefined");return D instanceof we?new we(_e(D.value,te.value,fe.value,Oe.value)):new W(_e(Array.from(D.value),te.value,fe.value,Oe.value).join(""))}evaluateMemberExpression(D,ie){const R=this.evaluate(D.object,ie);let te;if(D.computed){if(D.property.type==="SliceExpression")return this.evaluateSliceExpression(R,D.property,ie);te=this.evaluate(D.property,ie)}else te=new W(D.property.value);let fe;if(R instanceof G){if(!(te instanceof W))throw new Error(`Cannot access property with non-string: got ${te.type}`);fe=R.value.get(te.value)??R.builtins.get(te.value)}else if(R instanceof we||R instanceof W)if(te instanceof me)fe=R.value.at(te.value),R instanceof W&&(fe=new W(R.value.at(te.value)));else if(te instanceof W)fe=R.builtins.get(te.value);else throw new Error(`Cannot access property with non-string/non-number: got ${te.type}`);else{if(!(te instanceof W))throw new Error(`Cannot access property with non-string: got ${te.type}`);fe=R.builtins.get(te.value)}return fe instanceof Ue?fe:new Fe}evaluateSet(D,ie){const R=D.value?this.evaluate(D.value,ie):this.evaluateBlock(D.body,ie);if(D.assignee.type==="Identifier"){const te=D.assignee.value;ie.setVariable(te,R)}else if(D.assignee.type==="MemberExpression"){const te=D.assignee,fe=this.evaluate(te.object,ie);if(!(fe instanceof G))throw new Error("Cannot assign to member of non-object");if(te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");fe.value.set(te.property.value,R)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(D.assignee)}`);return new $e}evaluateIf(D,ie){const R=this.evaluate(D.test,ie);return this.evaluateBlock(R.__bool__().value?D.body:D.alternate,ie)}evaluateFor(D,ie){const R=new Be(ie);let te,fe;if(D.iterable.type==="SelectExpression"){const ht=D.iterable;fe=this.evaluate(ht.iterable,R),te=ht.test}else fe=this.evaluate(D.iterable,R);if(!(fe instanceof we))throw new Error(`Expected iterable type in for loop: got ${fe.type}`);const Oe=[],ve=[];for(let ht=0;ht<fe.value.length;++ht){const ct=new Be(R),st=fe.value[ht];let Rt;if(D.loopvar.type==="Identifier")Rt=Xt=>Xt.setVariable(D.loopvar.value,st);else if(D.loopvar.type==="TupleLiteral"){const Xt=D.loopvar;if(st.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${st.type}`);const Mr=st;if(Xt.value.length!==Mr.value.length)throw new Error(`Too ${Xt.value.length>Mr.value.length?"few":"many"} items to unpack`);Rt=Zt=>{for(let zr=0;zr<Xt.value.length;++zr){if(Xt.value[zr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Xt.value[zr].type}`);Zt.setVariable(Xt.value[zr].value,Mr.value[zr])}}}else throw new Error(`Invalid loop variable(s): ${D.loopvar.type}`);te&&(Rt(ct),!this.evaluate(te,ct).__bool__().value)||(Oe.push(st),ve.push(Rt))}let vt="",Ot=!0;for(let ht=0;ht<Oe.length;++ht){const ct=new Map([["index",new me(ht+1)],["index0",new me(ht)],["revindex",new me(Oe.length-ht)],["revindex0",new me(Oe.length-ht-1)],["first",new se(ht===0)],["last",new se(ht===Oe.length-1)],["length",new me(Oe.length)],["previtem",ht>0?Oe[ht-1]:new Fe],["nextitem",ht<Oe.length-1?Oe[ht+1]:new Fe]]);R.setVariable("loop",new G(ct)),ve[ht](R);try{const st=this.evaluateBlock(D.body,R);vt+=st.value}catch(st){if(st instanceof ze)continue;if(st instanceof Me)break;throw st}Ot=!1}if(Ot){const ht=this.evaluateBlock(D.defaultBlock,R);vt+=ht.value}return new W(vt)}evaluateMacro(D,ie){return ie.setVariable(D.name.value,new Pe((R,te)=>{var ve;const fe=new Be(te);R=R.slice();let Oe;((ve=R.at(-1))==null?void 0:ve.type)==="KeywordArgumentsValue"&&(Oe=R.pop());for(let vt=0;vt<D.args.length;++vt){const Ot=D.args[vt],ht=R[vt];if(Ot.type==="Identifier"){const ct=Ot;if(!ht)throw new Error(`Missing positional argument: ${ct.value}`);fe.setVariable(ct.value,ht)}else if(Ot.type==="KeywordArgumentExpression"){const ct=Ot,st=ht??(Oe==null?void 0:Oe.value.get(ct.key.value))??this.evaluate(ct.value,fe);fe.setVariable(ct.key.value,st)}else throw new Error(`Unknown argument type: ${Ot.type}`)}return this.evaluateBlock(D.body,fe)})),new $e}evaluate(D,ie){if(D===void 0)return new Fe;switch(D.type){case"Program":return this.evalProgram(D,ie);case"Set":return this.evaluateSet(D,ie);case"If":return this.evaluateIf(D,ie);case"For":return this.evaluateFor(D,ie);case"Macro":return this.evaluateMacro(D,ie);case"Break":throw new Me;case"Continue":throw new ze;case"NumericLiteral":return new me(Number(D.value));case"StringLiteral":return new W(D.value);case"BooleanLiteral":return new se(D.value);case"NullLiteral":return new $e(D.value);case"ArrayLiteral":return new we(D.value.map(R=>this.evaluate(R,ie)));case"TupleLiteral":return new Se(D.value.map(R=>this.evaluate(R,ie)));case"ObjectLiteral":{const R=new Map;for(const[te,fe]of D.value){const Oe=this.evaluate(te,ie);if(!(Oe instanceof W))throw new Error(`Object keys must be strings: got ${Oe.type}`);R.set(Oe.value,this.evaluate(fe,ie))}return new G(R)}case"Identifier":return this.evaluateIdentifier(D,ie);case"CallExpression":return this.evaluateCallExpression(D,ie);case"MemberExpression":return this.evaluateMemberExpression(D,ie);case"UnaryExpression":return this.evaluateUnaryExpression(D,ie);case"BinaryExpression":return this.evaluateBinaryExpression(D,ie);case"FilterExpression":return this.evaluateFilterExpression(D,ie);case"TestExpression":return this.evaluateTestExpression(D,ie);default:throw new SyntaxError(`Unknown node type: ${D.type}`)}}};function qe(D){switch(typeof D){case"number":return new me(D);case"string":return new W(D);case"boolean":return new se(D);case"undefined":return new Fe;case"object":return D===null?new $e:Array.isArray(D)?new we(D.map(qe)):new G(new Map(Object.entries(D).map(([ie,R])=>[ie,qe(R)])));case"function":return new Pe((ie,R)=>{const te=D(...ie.map(fe=>fe.value))??null;return qe(te)});default:throw new Error(`Cannot convert to runtime value: ${D}`)}}function Ie(D,ie,R){const te=R??0;switch(D.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(D.value);case"ArrayValue":case"ObjectValue":{const fe=ie?" ".repeat(ie):"",Oe=`
`+fe.repeat(te),ve=Oe+fe;if(D.type==="ArrayValue"){const vt=D.value.map(Ot=>Ie(Ot,ie,te+1));return ie?`[${ve}${vt.join(`,${ve}`)}${Oe}]`:`[${vt.join(", ")}]`}else{const vt=Array.from(D.value.entries()).map(([Ot,ht])=>{const ct=`"${Ot}": ${Ie(ht,ie,te+1)}`;return ie?`${ve}${ct}`:ct});return ie?`{${vt.join(",")}${Oe}}`:`{${vt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${D.type}`)}}var Ve=`
`,et="{%- ",nt=" -%}",lt={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function Ge(D,ie="	"){const R=typeof ie=="number"?" ".repeat(ie):ie;return mt(D.body,0,R).replace(/\n$/,"")}function ke(...D){return et+D.join(" ")+nt}function mt(D,ie,R){return D.map(te=>$t(te,ie,R)).join(Ve)}function $t(D,ie,R){const te=R.repeat(ie);switch(D.type){case"Program":return mt(D.body,ie,R);case"If":return Wt(D,ie,R);case"For":return Bt(D,ie,R);case"Set":return yr(D,ie,R);case"Macro":return lr(D,ie,R);case"Break":return te+ke("break");case"Continue":return te+ke("continue");default:return te+"{{- "+yt(D)+" -}}"}}function Wt(D,ie,R){const te=R.repeat(ie),fe=[];let Oe=D;for(;Oe&&(fe.push({test:Oe.test,body:Oe.body}),Oe.alternate.length===1&&Oe.alternate[0].type==="If");)Oe=Oe.alternate[0];let ve=te+ke("if",yt(fe[0].test))+Ve+mt(fe[0].body,ie+1,R);for(let vt=1;vt<fe.length;vt++)ve+=Ve+te+ke("elif",yt(fe[vt].test))+Ve+mt(fe[vt].body,ie+1,R);return Oe&&Oe.alternate.length>0&&(ve+=Ve+te+ke("else")+Ve+mt(Oe.alternate,ie+1,R)),ve+=Ve+te+ke("endif"),ve}function Bt(D,ie,R){const te=R.repeat(ie);let fe="";if(D.iterable.type==="SelectExpression"){const ve=D.iterable;fe=`${yt(ve.iterable)} if ${yt(ve.test)}`}else fe=yt(D.iterable);let Oe=te+ke("for",yt(D.loopvar),"in",fe)+Ve+mt(D.body,ie+1,R);return D.defaultBlock.length>0&&(Oe+=Ve+te+ke("else")+Ve+mt(D.defaultBlock,ie+1,R)),Oe+=Ve+te+ke("endfor"),Oe}function yr(D,ie,R){const te=R.repeat(ie),fe=yt(D.assignee),Oe=D.value?yt(D.value):"",ve=te+ke("set",`${fe}${D.value?" = "+Oe:""}`);return D.body.length===0?ve:ve+Ve+mt(D.body,ie+1,R)+Ve+te+ke("endset")}function lr(D,ie,R){const te=R.repeat(ie),fe=D.args.map(yt).join(", ");return te+ke("macro",`${D.name.value}(${fe})`)+Ve+mt(D.body,ie+1,R)+Ve+te+ke("endmacro")}function yt(D,ie=-1){switch(D.type){case"Identifier":return D.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${D.value}`;case"StringLiteral":return JSON.stringify(D.value);case"BinaryExpression":{const R=D,te=lt[R.operator.type]??0,fe=yt(R.left,te),Oe=yt(R.right,te+1),ve=`${fe} ${R.operator.value} ${Oe}`;return te<ie?`(${ve})`:ve}case"UnaryExpression":{const R=D;return R.operator.value+(R.operator.value==="not"?" ":"")+yt(R.argument,1/0)}case"LogicalNegationExpression":return`not ${yt(D.argument,1/0)}`;case"CallExpression":{const R=D,te=R.args.map(fe=>yt(fe,-1)).join(", ");return`${yt(R.callee,-1)}(${te})`}case"MemberExpression":{const R=D;let te=yt(R.object,-1);R.object.type!=="Identifier"&&(te=`(${te})`);let fe=yt(R.property,-1);return!R.computed&&R.property.type!=="Identifier"&&(fe=`(${fe})`),R.computed?`${te}[${fe}]`:`${te}.${fe}`}case"FilterExpression":{const R=D,te=yt(R.operand,1/0);return R.filter.type==="CallExpression"?`${te} | ${yt(R.filter,-1)}`:`${te} | ${R.filter.value}`}case"SelectExpression":{const R=D;return`${yt(R.iterable,-1)} | select(${yt(R.test,-1)})`}case"TestExpression":{const R=D;return`${yt(R.operand,-1)} is${R.negate?" not":""} ${R.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const R=D.value.map(fe=>yt(fe,-1)),te=D.type==="ArrayLiteral"?"[]":"()";return`${te[0]}${R.join(", ")}${te[1]}`}case"ObjectLiteral":return`{ ${Array.from(D.value.entries()).map(([te,fe])=>`${yt(te,-1)}: ${yt(fe,-1)}`).join(", ")} }`;case"SliceExpression":{const R=D,te=R.start?yt(R.start,-1):"",fe=R.stop?yt(R.stop,-1):"",Oe=R.step?`:${yt(R.step,-1)}`:"";return`${te}:${fe}${Oe}`}case"KeywordArgumentExpression":{const R=D;return`${R.key.value}=${yt(R.value,-1)}`}case"If":{const R=D,te=yt(R.test,-1),fe=yt(R.body[0],0),Oe=yt(R.alternate[0],-1);return`${fe} if ${te} else ${Oe}`}default:throw new Error(`Unknown expression type: ${D.type}`)}}var ts=class{constructor(D){Z(this,"parsed");const ie=d(D,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=U(ie)}render(D){const ie=new Be;if(ie.set("false",!1),ie.set("true",!0),ie.set("raise_exception",fe=>{throw new Error(fe)}),ie.set("range",ee),D)for(const[fe,Oe]of Object.entries(D))ie.set(fe,Oe);return new He(ie).run(this.parsed).value}format(D){return Ge(this.parsed,(D==null?void 0:D.indent)||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>o.Tensor,createInferenceSession:()=>$,deviceToExecutionProviders:()=>f,isONNXProxy:()=>C,isONNXTensor:()=>w});var i=t("./src/env.js"),n=t("?2ce3"),a=t("onnxruntime-web"),o=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,d;const u=Symbol.for("onnxruntime");if(u in globalThis)d=globalThis[u];else if(i.apis.IS_NODE_ENV){switch(d=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else d=a,i.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),i.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const _=d.InferenceSession;function f(E=null){if(!E)return p;switch(E){case"auto":return c;case"gpu":return c.filter(x=>["webgpu","cuda","dml","webnn-gpu"].includes(x))}if(c.includes(E))return[l[E]??E];throw new Error(`Unsupported device: "${E}". Should be one of: ${c.join(", ")}.`)}let v=null;async function $(E,x,b){v&&await v;const M=_.create(E,x);v??(v=M);const P=await M;return P.config=b,P}function w(E){return E instanceof d.Tensor}const g=d==null?void 0:d.env;g!=null&&g.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!g.wasm.wasmPaths&&(g.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${i.env.version}/dist/`),g.wasm.proxy=!1),g!=null&&g.webgpu&&(g.webgpu.powerPreference="high-performance");function C(){var E;return(E=g==null?void 0:g.wasm)==null?void 0:E.proxy}i.env.backends.onnx=g},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>a,validate_audio_inputs:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class a extends i.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p){const d=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(d)}}function o(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>E,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>C,post_process_object_detection:()=>u,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>_});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var a=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(x,b,M=0,P=null){const A=x/b;let z=(0,n.bankers_round)(A)*b;return P!==null&&z>P&&(z=Math.floor(A)*b),z<M&&(z=Math.ceil(A)*b),z}function p([x,b],M){return[Math.max(Math.floor(x/M),1)*M,Math.max(Math.floor(b/M),1)*M]}function d([x,b,M,P]){return[x-M/2,b-P/2,x+M/2,b+P/2]}function u(x,b=.5,M=null,P=!1){const A=x.logits,z=x.pred_boxes,[K,Q,B]=A.dims;if(M!==null&&M.length!==K)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Y=[];for(let H=0;H<K;++H){let q=M!==null?M[H]:null,X={boxes:[],classes:[],scores:[]},re=A[H],de=z[H];for(let ae=0;ae<Q;++ae){let j=re[ae],F=[],U;if(P){U=j.sigmoid().data;for(let ee=0;ee<U.length;++ee)U[ee]>b&&F.push(ee)}else{let ee=(0,n.max)(j.data)[1];if(ee===B-1||(U=(0,n.softmax)(j.data),U[ee]<b))continue;F.push(ee)}for(const ee of F){let _e=de[ae].data;_e=d(_e),q!==null&&(_e=_e.map((le,Me)=>le*q[(Me+1)%2])),X.boxes.push(_e),X.classes.push(ee),X.scores.push(U[ee])}}Y.push(X)}return Y}function _(x,b=null){const M=x.logits,P=M.dims[0];if(b!==null&&b.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const A=[];for(let z=0;z<P;++z){const K=b!==null?b[z]:null;let Q=M[z];K!==null&&(Q=(0,i.interpolate)(Q,K,"bilinear",!1));const[B,Y]=K??Q.dims.slice(-2),H=new i.Tensor("int32",new Int32Array(B*Y),[B,Y]),q=Q[0].data,X=H.data;for(let ae=1;ae<Q.dims[0];++ae){const j=Q[ae].data;for(let F=0;F<j.length;++F)j[F]>q[F]&&(q[F]=j[F],X[F]=ae)}const re=new Array(Q.dims[0]);for(let ae=0;ae<X.length;++ae){const j=X[ae];re[j]=j}const de=re.filter(ae=>ae!==void 0);A.push({segmentation:H,labels:de})}return A}function f(x,b,M,P){const A=[],z=[],K=[];for(let Q=0;Q<x.dims[0];++Q){const B=x[Q],Y=b[Q],H=(0,n.max)(B.data)[1];if(H===P)continue;const X=(0,n.softmax)(B.data)[H];X>M&&(A.push(Y),z.push(X),K.push(H))}return[A,z,K]}function v(x,b,M,P=.5,A=.8){const z=[];let K=0,Q=0;const B=b[M].data;for(let H=0;H<x.length;++H)x[H]===M&&(z.push(H),++K),B[H]>=P&&++Q;let Y=K>0&&Q>0;return Y&&(Y=K/Q>A),[Y,z]}function $(x,b,M,P,A,z=null,K=null){const[Q,B]=K??x[0].dims,Y=new i.Tensor("int32",new Int32Array(Q*B),[Q,B]),H=[];if(K!==null)for(let ae=0;ae<x.length;++ae)x[ae]=(0,i.interpolate)(x[ae],K,"bilinear",!1);const q=new Int32Array(x[0].data.length),X=new Float32Array(x[0].data.length);for(let ae=0;ae<x.length;++ae){let j=b[ae];const F=x[ae].data;for(let U=0;U<F.length;++U)F[U]*=j,F[U]>X[U]&&(q[U]=ae,X[U]=F[U])}let re=0;const de=Y.data;for(let ae=0;ae<M.length;++ae){const j=M[ae],[F,U]=v(q,x,ae,P,A);if(F){++re;for(const ee of U)de[ee]=re;H.push({id:re,label_id:j,score:b[ae]})}}return[Y,H]}function w(x,b,M=28,P=56*56,A=14*14*4*1280){if(x<M||b<M)throw new Error(`height:${x} or width:${b} must be larger than factor:${M}`);if(Math.max(x,b)/Math.min(x,b)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(x,b)/Math.min(x,b)}`);let z=Math.round(x/M)*M,K=Math.round(b/M)*M;if(z*K>A){const Q=Math.sqrt(x*b/A);z=Math.floor(x/Q/M)*M,K=Math.floor(b/Q/M)*M}else if(z*K<P){const Q=Math.sqrt(P/(x*b));z=Math.ceil(x*Q/M)*M,K=Math.ceil(b*Q/M)*M}return[z,K]}function g(x,b=.5,M=.5,P=.8,A=null,z=null){A===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),A=new Set);const K=x.class_queries_logits??x.logits,B=(x.masks_queries_logits??x.pred_masks).sigmoid();let[Y,H,q]=K.dims;if(q-=1,z!==null&&z.length!==Y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let X=[];for(let re=0;re<Y;++re){let de=z!==null?z[re]:null,ae=K[re],j=B[re],[F,U,ee]=f(ae,j,b,q);if(ee.length===0){let[Me,ze]=de??j.dims.slice(-2),Ue=new i.Tensor("int32",new Int32Array(Me*ze).fill(-1),[Me,ze]);X.push({segmentation:Ue,segments_info:[]});continue}let[_e,le]=$(F,U,ee,M,P,A,de);X.push({segmentation:_e,segments_info:le})}return X}function C(x,b=.5,M=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class E extends s.Callable{constructor(b){super(),this.image_mean=b.image_mean??b.mean,this.image_std=b.image_std??b.std,this.resample=b.resample??2,this.do_rescale=b.do_rescale??!0,this.rescale_factor=b.rescale_factor??1/255,this.do_normalize=b.do_normalize,this.do_thumbnail=b.do_thumbnail,this.size=b.size??b.image_size,this.do_resize=b.do_resize??this.size!==void 0,this.size_divisibility=b.size_divisibility??b.size_divisor,this.do_center_crop=b.do_center_crop,this.crop_size=b.crop_size,this.do_convert_rgb=b.do_convert_rgb??!0,this.do_crop_margin=b.do_crop_margin,this.pad_size=b.pad_size,this.do_pad=b.do_pad,this.min_pixels=b.min_pixels,this.max_pixels=b.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=b.do_flip_channel_order??!1,this.config=b}async thumbnail(b,M,P=2){const A=b.height,z=b.width,K=M.height,Q=M.width;let B=Math.min(A,K),Y=Math.min(z,Q);return B===A&&Y===z?b:(A>z?Y=Math.floor(z*B/A):z>A&&(B=Math.floor(A*Y/z)),await b.resize(Y,B,{resample:P}))}async crop_margin(b,M=200){const P=b.clone().grayscale(),A=(0,n.min)(P.data)[0],K=(0,n.max)(P.data)[0]-A;if(K===0)return b;const Q=M/255;let B=P.width,Y=P.height,H=0,q=0;const X=P.data;for(let re=0;re<P.height;++re){const de=re*P.width;for(let ae=0;ae<P.width;++ae)(X[de+ae]-A)/K<Q&&(B=Math.min(B,ae),Y=Math.min(Y,re),H=Math.max(H,ae),q=Math.max(q,re))}return b=await b.crop([B,Y,H,q]),b}pad_image(b,M,P,{mode:A="constant",center:z=!1,constant_values:K=0}={}){const[Q,B,Y]=M;let H,q;if(typeof P=="number"?(H=P,q=P):P==="square"?H=q=Math.max(Q,B):(H=P.width,q=P.height),H!==B||q!==Q){const X=new Float32Array(H*q*Y);if(Array.isArray(K))for(let ae=0;ae<X.length;++ae)X[ae]=K[ae%Y];else K!==0&&X.fill(K);const[re,de]=z?[Math.floor((H-B)/2),Math.floor((q-Q)/2)]:[0,0];for(let ae=0;ae<Q;++ae){const j=(ae+de)*H,F=ae*B;for(let U=0;U<B;++U){const ee=(j+U+re)*Y,_e=(F+U)*Y;for(let le=0;le<Y;++le)X[ee+le]=b[_e+le]}}if(A==="symmetric"){if(z)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ae=Q-1,j=B-1;for(let F=0;F<q;++F){const U=F*H,ee=(0,a.calculateReflectOffset)(F,ae)*B;for(let _e=0;_e<H;++_e){if(F<Q&&_e<B)continue;const le=(U+_e)*Y,Me=(ee+(0,a.calculateReflectOffset)(_e,j))*Y;for(let ze=0;ze<Y;++ze)X[le+ze]=b[Me+ze]}}}b=X,M=[q,H,Y]}return[b,M]}rescale(b){for(let M=0;M<b.length;++M)b[M]=this.rescale_factor*b[M]}get_resize_output_image_size(b,M){const[P,A]=b.size;let z,K;if(this.do_thumbnail){const{height:Q,width:B}=M;z=Math.min(Q,B)}else Number.isInteger(M)?(z=M,K=this.config.max_size??z):M!==void 0&&(z=M.shortest_edge,K=M.longest_edge);if(z!==void 0||K!==void 0){const Q=z===void 0?1:Math.max(z/P,z/A),B=P*Q,Y=A*Q,H=K===void 0?1:Math.min(K/B,K/Y);let q=Math.floor(Number((B*H).toFixed(2))),X=Math.floor(Number((Y*H).toFixed(2)));return this.size_divisibility!==void 0&&([q,X]=p([q,X],this.size_divisibility)),[q,X]}else if(M!==void 0&&M.width!==void 0&&M.height!==void 0){let Q=M.width,B=M.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Y=B/A,H=Q/P;Math.abs(1-H)<Math.abs(1-Y)?Y=H:H=Y,B=c(Y*A,this.config.ensure_multiple_of),Q=c(H*P,this.config.ensure_multiple_of)}return[Q,B]}else{if(this.size_divisibility!==void 0)return p([P,A],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const Q=this.config.patch_size*this.config.merge_size;return w(A,P,Q,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(M)}`)}}async resize(b){const[M,P]=this.get_resize_output_image_size(b,this.size);return await b.resize(M,P,{resample:this.resample})}async preprocess(b,{do_normalize:M=null,do_pad:P=null,do_convert_rgb:A=null,do_convert_grayscale:z=null,do_flip_channel_order:K=null}={}){this.do_crop_margin&&(b=await this.crop_margin(b));const[Q,B]=b.size;if(A??this.do_convert_rgb?b=b.rgb():z&&(b=b.grayscale()),this.do_resize&&(b=await this.resize(b)),this.do_thumbnail&&(b=await this.thumbnail(b,this.size,this.resample)),this.do_center_crop){let re,de;Number.isInteger(this.crop_size)?(re=this.crop_size,de=this.crop_size):(re=this.crop_size.width,de=this.crop_size.height),b=await b.center_crop(re,de)}const Y=[b.height,b.width];let H=Float32Array.from(b.data),q=[b.height,b.width,b.channels];if(this.do_rescale&&this.rescale(H),M??this.do_normalize){let re=this.image_mean;Array.isArray(this.image_mean)||(re=new Array(b.channels).fill(re));let de=this.image_std;if(Array.isArray(this.image_std)||(de=new Array(b.channels).fill(re)),re.length!==b.channels||de.length!==b.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${re.length}) and \`image_std\` (${de.length}) must match the number of channels in the image (${b.channels}).`);for(let ae=0;ae<H.length;ae+=b.channels)for(let j=0;j<b.channels;++j)H[ae+j]=(H[ae+j]-re[j])/de[j]}if(P??this.do_pad){if(this.pad_size)[H,q]=this.pad_image(H,[b.height,b.width,b.channels],this.pad_size);else if(this.size_divisibility){const[re,de]=p([q[1],q[0]],this.size_divisibility);[H,q]=this.pad_image(H,q,{width:re,height:de})}}if(K??this.do_flip_channel_order){if(q[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let re=0;re<H.length;re+=3){const de=H[re];H[re]=H[re+2],H[re+2]=de}}const X=new i.Tensor("float32",H,q).permute(2,0,1);return{original_size:[B,Q],reshaped_input_size:Y,pixel_values:X}}async _call(b,...M){Array.isArray(b)||(b=[b]);const P=await Promise.all(b.map(z=>this.preprocess(z)));return{pixel_values:(0,i.stack)(P.map(z=>z.pixel_values),0),original_sizes:P.map(z=>z.original_size),reshaped_input_sizes:P.map(z=>z.reshaped_input_size)}}static async from_pretrained(b,M){const P=await(0,o.getModelJSON)(b,l.IMAGE_PROCESSOR_NAME,!0,M);return new this(P)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class a extends i.Callable{constructor(l,c){super(),this.config=l,this.components=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c){const[p,d]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(u=>u in this).map(async u=>{const _=await this[u].from_pretrained(l,c);return[u.replace(/_class$/,""),_]})).then(Object.fromEntries)]);return new this(p,d)}}Z(a,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Z(a,"uses_processor_config",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>c,PretrainedConfig:()=>l,getKeyValueShapes:()=>o});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js");async function n(p,d){return await(0,i.getModelJSON)(p,"config.json",!0,d)}function a(p){const d={};let u={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":u=a(p.text_config);break;case"moondream1":u=a(p.phi_config);break;case"musicgen":u=a(p.decoder);break;case"multi_modality":u=a(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":d.num_heads="n_head",d.num_layers="n_layer",d.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":d.num_heads="num_attention_heads",d.num_layers="num_hidden_layers",d.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":d.num_heads="num_key_value_heads",d.num_layers="num_hidden_layers",d.hidden_size="hidden_size",d.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":d.num_heads="num_key_value_heads",d.num_layers="num_hidden_layers",d.dim_kv="head_dim";break;case"openelm":d.num_heads="num_kv_heads",d.num_layers="num_transformer_layers",d.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":d.num_heads="num_heads",d.num_layers="num_layers",d.hidden_size="hidden_size";break;case"bloom":d.num_heads="n_head",d.num_layers="n_layer",d.hidden_size="hidden_size";break;case"mpt":d.num_heads="n_heads",d.num_layers="n_layers",d.hidden_size="d_model";break;case"exaone":d.num_heads="num_key_value_heads",d.num_layers="num_layers",d.dim_kv="head_dim",d.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":d.num_decoder_layers="num_decoder_layers",d.num_decoder_heads="num_heads",d.decoder_dim_kv="d_kv",d.num_encoder_layers="num_layers",d.num_encoder_heads="num_heads",d.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":d.num_decoder_layers="decoder_layers",d.num_decoder_heads="decoder_attention_heads",d.decoder_hidden_size="d_model",d.num_encoder_layers="encoder_layers",d.num_encoder_heads="encoder_attention_heads",d.encoder_hidden_size="d_model";break;case"speecht5":d.num_decoder_layers="decoder_layers",d.num_decoder_heads="decoder_attention_heads",d.decoder_hidden_size="hidden_size",d.num_encoder_layers="encoder_layers",d.num_encoder_heads="encoder_attention_heads",d.encoder_hidden_size="hidden_size";break;case"trocr":d.num_encoder_layers=d.num_decoder_layers="decoder_layers",d.num_encoder_heads=d.num_decoder_heads="decoder_attention_heads",d.encoder_hidden_size=d.decoder_hidden_size="d_model";break;case"musicgen_decoder":d.num_encoder_layers=d.num_decoder_layers="num_hidden_layers",d.num_encoder_heads=d.num_decoder_heads="num_attention_heads",d.encoder_hidden_size=d.decoder_hidden_size="hidden_size";break;case"moonshine":d.num_decoder_layers="decoder_num_hidden_layers",d.num_decoder_heads="decoder_num_key_value_heads",d.num_encoder_layers="encoder_num_hidden_layers",d.num_encoder_heads="encoder_num_key_value_heads",d.encoder_hidden_size=d.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const f=a(p.decoder),v="num_decoder_layers"in f,$=(0,s.pick)(p,["model_type","is_encoder_decoder"]);return v?($.num_decoder_layers=f.num_decoder_layers,$.num_decoder_heads=f.num_decoder_heads,$.decoder_hidden_size=f.decoder_hidden_size,$.num_encoder_layers=f.num_encoder_layers,$.num_encoder_heads=f.num_encoder_heads,$.encoder_hidden_size=f.encoder_hidden_size):($.num_layers=f.num_layers,$.num_heads=f.num_heads,$.hidden_size=f.hidden_size),$}const _={...u,...(0,s.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const f in d)_[f]=p[d[f]];return _}function o(p,{prefix:d="past_key_values",batch_size:u=1}={}){const _={},f=p.normalized_config;if(f.is_encoder_decoder&&"num_encoder_heads"in f&&"num_decoder_heads"in f){const v=f.encoder_dim_kv??f.encoder_hidden_size/f.num_encoder_heads,$=f.decoder_dim_kv??f.decoder_hidden_size/f.num_decoder_heads,w=[u,f.num_encoder_heads,0,v],g=[u,f.num_decoder_heads,0,$];for(let C=0;C<f.num_decoder_layers;++C)_[`${d}.${C}.encoder.key`]=w,_[`${d}.${C}.encoder.value`]=w,_[`${d}.${C}.decoder.key`]=g,_[`${d}.${C}.decoder.value`]=g}else{const v=f.num_heads,$=f.num_layers,w=f.dim_kv??f.hidden_size/(f.num_attention_heads??v);if(f.model_type==="falcon"){const g=[u*v,0,w];for(let C=0;C<$;++C)_[`${d}.${C}.key`]=g,_[`${d}.${C}.value`]=g}else if(f.multi_query){const g=[u*v,0,2*w];for(let C=0;C<$;++C)_[`${d}.${C}.key_value`]=g}else if(f.model_type==="bloom"){const g=[u*v,w,0],C=[u*v,0,w];for(let E=0;E<$;++E)_[`${d}.${E}.key`]=g,_[`${d}.${E}.value`]=C}else if(f.model_type==="openelm")for(let g=0;g<$;++g){const C=[u,v[g],0,w];_[`${d}.${g}.key`]=C,_[`${d}.${g}.value`]=C}else{const g=[u,v,0,w];for(let C=0;C<$;++C)_[`${d}.${C}.key`]=g,_[`${d}.${C}.value`]=g}}return _}class l{constructor(d){Z(this,"model_type",null);Z(this,"is_encoder_decoder",!1);Z(this,"max_position_embeddings");Z(this,"transformers.js_config");Object.assign(this,d),this.normalized_config=a(this)}static async from_pretrained(d,{progress_callback:u=null,config:_=null,cache_dir:f=null,local_files_only:v=!1,revision:$="main"}={}){_&&!(_ instanceof l)&&(_=new l(_));const w=_??await n(d,{progress_callback:u,config:_,cache_dir:f,local_files_only:v,revision:$});return new this(w)}}class c{static async from_pretrained(...d){return l.from_pretrained(...d)}}},"./src/env.js":(e,r,t)=>{var P,A;t.r(r),t.d(r,{apis:()=>$,env:()=>b});var s=t("?569f"),i=t("?3f59"),n=t("?154a");const a="3.5.2",o=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&((P=self.constructor)==null?void 0:P.name)==="DedicatedWorkerGlobalScope",c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,u=typeof process<"u",_=u&&((A=process==null?void 0:process.release)==null?void 0:A.name)==="node",f=!M(s),v=!M(i),$=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:v}),w=f&&v;let g="./";if(w){const z=Object(import.meta).url;z?g=i.dirname(i.dirname(n.fileURLToPath(z))):typeof __dirname<"u"&&(g=i.dirname(__dirname))}const C=w?i.join(g,"/.cache/"):null,E="/models/",x=w?i.join(g,E):E,b={version:a,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(o||l),localModelPath:x,useFS:f,useBrowserCache:c,useFSCache:f,cacheDir:C,useCustomCache:!1,customCache:null};function M(z){return Object.keys(z).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>i});var s=t("./src/utils/core.js");class i{constructor(a){Z(this,"max_length",20);Z(this,"max_new_tokens",null);Z(this,"min_length",0);Z(this,"min_new_tokens",null);Z(this,"early_stopping",!1);Z(this,"max_time",null);Z(this,"do_sample",!1);Z(this,"num_beams",1);Z(this,"num_beam_groups",1);Z(this,"penalty_alpha",null);Z(this,"use_cache",!0);Z(this,"temperature",1);Z(this,"top_k",50);Z(this,"top_p",1);Z(this,"typical_p",1);Z(this,"epsilon_cutoff",0);Z(this,"eta_cutoff",0);Z(this,"diversity_penalty",0);Z(this,"repetition_penalty",1);Z(this,"encoder_repetition_penalty",1);Z(this,"length_penalty",1);Z(this,"no_repeat_ngram_size",0);Z(this,"bad_words_ids",null);Z(this,"force_words_ids",null);Z(this,"renormalize_logits",!1);Z(this,"constraints",null);Z(this,"forced_bos_token_id",null);Z(this,"forced_eos_token_id",null);Z(this,"remove_invalid_values",!1);Z(this,"exponential_decay_length_penalty",null);Z(this,"suppress_tokens",null);Z(this,"streamer",null);Z(this,"begin_suppress_tokens",null);Z(this,"forced_decoder_ids",null);Z(this,"guidance_scale",null);Z(this,"num_return_sequences",1);Z(this,"output_attentions",!1);Z(this,"output_hidden_states",!1);Z(this,"output_scores",!1);Z(this,"return_dict_in_generate",!1);Z(this,"pad_token_id",null);Z(this,"bos_token_id",null);Z(this,"eos_token_id",null);Z(this,"encoder_no_repeat_ngram_size",0);Z(this,"decoder_start_token_id",null);Z(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(a,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>w,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>o,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>v,NoBadWordsLogitsProcessor:()=>$,NoRepeatNGramLogitsProcessor:()=>u,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>g,TopKLogitsWarper:()=>E,TopPLogitsWarper:()=>C,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var i=t("./src/utils/maths.js");class n extends s.Callable{_call(b,M){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{_call(b,M){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{constructor(){super(),this.processors=[]}push(b){this.processors.push(b)}extend(b){this.processors.push(...b)}_call(b,M){let P=M;for(const A of this.processors)P=A(b,P);return P}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(b){super(),this.bos_token_id=b}_call(b,M){for(let P=0;P<b.length;++P)if(b[P].length===1){const A=M[P].data;A.fill(-1/0),A[this.bos_token_id]=0}return M}}class c extends n{constructor(b,M){super(),this.max_length=b,this.eos_token_id=Array.isArray(M)?M:[M]}_call(b,M){for(let P=0;P<b.length;++P)if(b[P].length===this.max_length-1){const A=M[P].data;A.fill(-1/0);for(const z of this.eos_token_id)A[z]=0}return M}}class p extends n{constructor(b,M){super(),this.begin_suppress_tokens=b,this.begin_index=M}_call(b,M){for(let P=0;P<b.length;++P)if(b[P].length===this.begin_index){const A=M[P].data;for(const z of this.begin_suppress_tokens)A[z]=-1/0}return M}}class d extends n{constructor(b,M){super(),this.eos_token_id=Array.isArray(b.eos_token_id)?b.eos_token_id[0]:b.eos_token_id,this.no_timestamps_token_id=b.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=M.length,M.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=b.max_initial_timestamp_index}_call(b,M){for(let P=0;P<b.length;++P){const A=M[P].data;if(A[this.no_timestamps_token_id]=-1/0,b[P].length===this.begin_index-1){A.fill(-1/0),A[this.timestamp_begin]=0;continue}const z=b[P].slice(this.begin_index),K=z.length>=1&&z[z.length-1]>=this.timestamp_begin,Q=z.length<2||z[z.length-2]>=this.timestamp_begin;if(K&&(Q?A.subarray(this.timestamp_begin).fill(-1/0):A.subarray(0,this.eos_token_id).fill(-1/0)),b[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const q=this.timestamp_begin+this.max_initial_timestamp_index;A.subarray(q+1).fill(-1/0)}const B=(0,i.log_softmax)(A),Y=Math.log(B.subarray(this.timestamp_begin).map(Math.exp).reduce((q,X)=>q+X)),H=(0,i.max)(B.subarray(0,this.timestamp_begin))[0];Y>H&&A.subarray(0,this.timestamp_begin).fill(-1/0)}return M}}class u extends n{constructor(b){super(),this.no_repeat_ngram_size=b}getNgrams(b){const M=b.length,P=[];for(let z=0;z<M+1-this.no_repeat_ngram_size;++z){const K=[];for(let Q=0;Q<this.no_repeat_ngram_size;++Q)K.push(b[z+Q]);P.push(K.map(Number))}const A=new Map;for(const z of P){const K=z.slice(0,z.length-1),Q=JSON.stringify(K),B=A.get(Q)??[];B.push(z[z.length-1]),A.set(Q,B)}return A}getGeneratedNgrams(b,M){const P=M.slice(M.length+1-this.no_repeat_ngram_size,M.length);return b.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(b){const M=[];if(b.length+1<this.no_repeat_ngram_size)return M;{const P=this.getNgrams(b);return this.getGeneratedNgrams(P,b)}}_call(b,M){for(let P=0;P<b.length;++P){const A=M[P].data,z=this.calcBannedNgramTokens(b[P]);for(const K of z)A[K]=-1/0}return M}}class _ extends n{constructor(b){super(),this.penalty=b}_call(b,M){for(let P=0;P<b.length;++P){const A=M[P].data;for(const z of new Set(b[P])){const K=Number(z);A[K]<0?A[K]*=this.penalty:A[K]/=this.penalty}}return M}}class f extends n{constructor(b,M){super(),this.min_length=b,this.eos_token_id=Array.isArray(M)?M:[M]}_call(b,M){for(let P=0;P<b.length;++P)if(b[P].length<this.min_length){const A=M[P].data;for(const z of this.eos_token_id)A[z]=-1/0}return M}}class v extends n{constructor(b,M,P){super(),this.prompt_length_to_skip=b,this.min_new_tokens=M,this.eos_token_id=Array.isArray(P)?P:[P]}_call(b,M){for(let P=0;P<b.length;++P)if(b[P].length-this.prompt_length_to_skip<this.min_new_tokens){const z=M[P].data;for(const K of this.eos_token_id)z[K]=-1/0}return M}}class $ extends n{constructor(b,M){super(),this.bad_words_ids=b,this.eos_token_id=Array.isArray(M)?M:[M]}_call(b,M){for(let P=0;P<b.length;++P){const A=M[P].data,z=b[P];for(const K of this.bad_words_ids){if(z.length<K.length-1)continue;let Q=!0;for(let B=1;B<=K.length-1;++B)if(K.at(-B-1)!=z.at(-B)){Q=!1;break}Q&&(A[K.at(-1)]=-1/0)}}return M}}class w extends n{constructor(b){if(super(),b<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${b}.`);this.guidance_scale=b}_call(b,M){if(M.dims[0]!==2*b.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${M.dims[0]} for the logits and ${b.length} for the input ids.`);const P=b.length,A=M.slice([0,P],null),z=M.slice([P,M.dims[0]],null);for(let K=0;K<z.data.length;++K)z.data[K]+=(A.data[K]-z.data[K])*this.guidance_scale;return z}}class g extends a{constructor(b){super(),this.temperature=b}_call(b,M){const P=M.data;for(let A=0;A<P.length;++A)P[A]/=this.temperature;return M}}class C extends a{constructor(b,{filter_value:M=-1/0,min_tokens_to_keep:P=1}={}){if(super(),b<0||b>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${b}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=b,this.filter_value=M,this.min_tokens_to_keep=P}}class E extends a{constructor(b,{filter_value:M=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(b)||b<0)throw new Error(`\`top_k\` must be a positive integer, but is ${b}`);this.top_k=Math.max(b,P),this.filter_value=M}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>a});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class a extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,u){let _=d.dims.at(-1),f=d.data;if(u===-1)f=f.slice(-_);else{let v=u*_;f=f.slice(v,v+_)}return f}randomSelect(d){let u=0;for(let f=0;f<d.length;++f)u+=d[f];let _=Math.random()*u;for(let f=0;f<d.length;++f)if(_-=d[f],_<=0)return f;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new o(d)}}class o extends a{async sample(d){const u=(0,n.max)(d.data)[1];return[[BigInt(u),0]]}}class l extends a{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,i.topk)(d,u),v=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const $=this.randomSelect(v);return[f.data[$],Math.log(v[$])]})}}class c extends a{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,i.topk)(d,u),v=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},($,w)=>[f.data[w],Math.log(v[w])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>i,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class i extends s.Callable{_call(p,d){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof i&&(p=[p]),this.criteria.push(...p)}_call(p,d){const u=new Array(p.length).fill(!1);for(const _ of this.criteria){const f=_(p,d);for(let v=0;v<u.length;++v)u[v]||(u[v]=f[v])}return u}[Symbol.iterator](){return this.criteria.values()}}class a extends i{constructor(p,d=null){super(),this.max_length=p,this.max_position_embeddings=d}_call(p){return p.map(d=>d.length>=this.max_length)}}class o extends i{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,d){return p.map(u=>{const _=u.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends i{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,d){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),i=t("./src/tokenizers.js"),n=t("./src/env.js");class a{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const o=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends a{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:v=!0,decode_kwargs:$={},...w}={}){super(),this.tokenizer=d,this.skip_prompt=u,this.callback_function=_??o,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:v,...$,...w},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var $;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const u=this.next_tokens_are_prompt;if(u&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=d[0];($=this.token_callback_function)==null||$.call(this,_),this.token_cache=(0,s.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let v;u||f.endsWith(`
`)?(v=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,i.is_chinese_char)(f.charCodeAt(f.length-1))?(v=f.slice(this.print_len),this.print_len+=v.length):(v=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=v.length),this.on_finalized_text(v,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,u){var _,f;d.length>0&&((_=this.callback_function)==null||_.call(this,d)),u&&this.callback_function===o&&n.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class c extends l{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:v=null,on_chunk_end:$=null,on_finalize:w=null,time_precision:g=.02,skip_special_tokens:C=!0,decode_kwargs:E={}}={}){super(d,{skip_prompt:u,skip_special_tokens:C,callback_function:_,token_callback_function:f,decode_kwargs:E}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=v,this.on_chunk_end=$,this.on_finalize=w,this.time_precision=g,this.waiting_for_timestamp=!1}put(d){var _,f,v;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const u=d[0];if(u.length===1){const $=Number(u[0])-this.timestamp_begin;if($>=0){const w=$*this.time_precision;this.waiting_for_timestamp?(_=this.on_chunk_end)==null||_.call(this,w):(f=this.on_chunk_start)==null||f.call(this,w),this.waiting_for_timestamp=!this.waiting_for_timestamp,(v=this.token_callback_function)==null||v.call(this,u);return}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>da,ASTModel:()=>ca,ASTPreTrainedModel:()=>li,AlbertForMaskedLM:()=>J,AlbertForQuestionAnswering:()=>N,AlbertForSequenceClassification:()=>I,AlbertModel:()=>pe,AlbertPreTrainedModel:()=>Ds,AutoModel:()=>El,AutoModelForAudioClassification:()=>uf,AutoModelForAudioFrameClassification:()=>mf,AutoModelForAudioTextToText:()=>vf,AutoModelForCTC:()=>df,AutoModelForCausalLM:()=>Yh,AutoModelForDepthEstimation:()=>gf,AutoModelForDocumentQuestionAnswering:()=>hf,AutoModelForImageClassification:()=>rf,AutoModelForImageFeatureExtraction:()=>yf,AutoModelForImageMatting:()=>ff,AutoModelForImageSegmentation:()=>sf,AutoModelForImageTextToText:()=>Mf,AutoModelForImageToImage:()=>_f,AutoModelForMaskGeneration:()=>cf,AutoModelForMaskedLM:()=>Zh,AutoModelForNormalEstimation:()=>wf,AutoModelForObjectDetection:()=>of,AutoModelForPoseEstimation:()=>bf,AutoModelForQuestionAnswering:()=>ef,AutoModelForSemanticSegmentation:()=>nf,AutoModelForSeq2SeqLM:()=>qh,AutoModelForSequenceClassification:()=>Kh,AutoModelForSpeechSeq2Seq:()=>Qh,AutoModelForTextToSpectrogram:()=>Xh,AutoModelForTextToWaveform:()=>Jh,AutoModelForTokenClassification:()=>Hh,AutoModelForUniversalSegmentation:()=>af,AutoModelForVision2Seq:()=>tf,AutoModelForXVector:()=>pf,AutoModelForZeroShotObjectDetection:()=>lf,BartForConditionalGeneration:()=>Gt,BartForSequenceClassification:()=>gr,BartModel:()=>er,BartPretrainedModel:()=>Ft,BaseModelOutput:()=>we,BeitForImageClassification:()=>Su,BeitModel:()=>Cu,BeitPreTrainedModel:()=>Vo,BertForMaskedLM:()=>$e,BertForQuestionAnswering:()=>He,BertForSequenceClassification:()=>Fe,BertForTokenClassification:()=>Be,BertModel:()=>Pe,BertPreTrainedModel:()=>Se,BlenderbotForConditionalGeneration:()=>Br,BlenderbotModel:()=>wr,BlenderbotPreTrainedModel:()=>Qt,BlenderbotSmallForConditionalGeneration:()=>Fr,BlenderbotSmallModel:()=>Xr,BlenderbotSmallPreTrainedModel:()=>Qr,BloomForCausalLM:()=>Xd,BloomModel:()=>Qd,BloomPreTrainedModel:()=>Io,CLIPModel:()=>ba,CLIPPreTrainedModel:()=>Bs,CLIPSegForImageSegmentation:()=>vi,CLIPSegModel:()=>Mi,CLIPSegPreTrainedModel:()=>Vn,CLIPTextModel:()=>bo,CLIPTextModelWithProjection:()=>ya,CLIPVisionModel:()=>yo,CLIPVisionModelWithProjection:()=>Ma,CamembertForMaskedLM:()=>st,CamembertForQuestionAnswering:()=>Mr,CamembertForSequenceClassification:()=>Rt,CamembertForTokenClassification:()=>Xt,CamembertModel:()=>ct,CamembertPreTrainedModel:()=>ht,CausalLMOutput:()=>Mn,CausalLMOutputWithPast:()=>pv,ChineseCLIPModel:()=>Nn,ChineseCLIPPreTrainedModel:()=>xa,ClapAudioModelWithProjection:()=>Sm,ClapModel:()=>Pm,ClapPreTrainedModel:()=>Aa,ClapTextModelWithProjection:()=>Cm,CodeGenForCausalLM:()=>Hn,CodeGenModel:()=>bn,CodeGenPreTrainedModel:()=>Kn,CohereForCausalLM:()=>Id,CohereModel:()=>$d,CoherePreTrainedModel:()=>Mo,ConvBertForMaskedLM:()=>ts,ConvBertForQuestionAnswering:()=>R,ConvBertForSequenceClassification:()=>D,ConvBertForTokenClassification:()=>ie,ConvBertModel:()=>yt,ConvBertPreTrainedModel:()=>lr,ConvNextForImageClassification:()=>vp,ConvNextModel:()=>Mp,ConvNextPreTrainedModel:()=>sl,ConvNextV2ForImageClassification:()=>Tp,ConvNextV2Model:()=>xp,ConvNextV2PreTrainedModel:()=>nl,DFineForObjectDetection:()=>Nu,DFineModel:()=>ju,DFinePreTrainedModel:()=>qo,DPTForDepthEstimation:()=>sp,DPTModel:()=>rp,DPTPreTrainedModel:()=>el,DacDecoderModel:()=>_h,DacDecoderOutput:()=>mh,DacEncoderModel:()=>fh,DacEncoderOutput:()=>ph,DacModel:()=>hh,DacPreTrainedModel:()=>Ra,DebertaForMaskedLM:()=>rs,DebertaForQuestionAnswering:()=>$s,DebertaForSequenceClassification:()=>ms,DebertaForTokenClassification:()=>ss,DebertaModel:()=>zr,DebertaPreTrainedModel:()=>Zt,DebertaV2ForMaskedLM:()=>qr,DebertaV2ForQuestionAnswering:()=>As,DebertaV2ForSequenceClassification:()=>hs,DebertaV2ForTokenClassification:()=>ks,DebertaV2Model:()=>Is,DebertaV2PreTrainedModel:()=>Ur,DecisionTransformerModel:()=>Qm,DecisionTransformerPreTrainedModel:()=>qm,DeiTForImageClassification:()=>Ku,DeiTModel:()=>Gu,DeiTPreTrainedModel:()=>Xo,DepthAnythingForDepthEstimation:()=>ip,DepthAnythingPreTrainedModel:()=>np,DepthProForDepthEstimation:()=>dp,DepthProPreTrainedModel:()=>cp,DetrForObjectDetection:()=>Iu,DetrForSegmentation:()=>Uo,DetrModel:()=>$u,DetrObjectDetectionOutput:()=>Wo,DetrPreTrainedModel:()=>Pa,DetrSegmentationOutput:()=>ku,Dinov2ForImageClassification:()=>Pp,Dinov2Model:()=>Ep,Dinov2PreTrainedModel:()=>il,Dinov2WithRegistersForImageClassification:()=>Sp,Dinov2WithRegistersModel:()=>Cp,Dinov2WithRegistersPreTrainedModel:()=>al,DistilBertForMaskedLM:()=>Ae,DistilBertForQuestionAnswering:()=>jr,DistilBertForSequenceClassification:()=>Cr,DistilBertForTokenClassification:()=>fs,DistilBertModel:()=>Fs,DistilBertPreTrainedModel:()=>cr,DonutSwinModel:()=>yp,DonutSwinPreTrainedModel:()=>bp,EfficientNetForImageClassification:()=>Dm,EfficientNetModel:()=>Om,EfficientNetPreTrainedModel:()=>_l,ElectraForMaskedLM:()=>Oe,ElectraForQuestionAnswering:()=>Ot,ElectraForSequenceClassification:()=>ve,ElectraForTokenClassification:()=>vt,ElectraModel:()=>fe,ElectraPreTrainedModel:()=>te,EsmForMaskedLM:()=>jt,EsmForSequenceClassification:()=>ns,EsmForTokenClassification:()=>is,EsmModel:()=>ot,EsmPreTrainedModel:()=>Ye,ExaoneForCausalLM:()=>V,ExaoneModel:()=>L,ExaonePreTrainedModel:()=>k,FalconForCausalLM:()=>Em,FalconModel:()=>Tm,FalconPreTrainedModel:()=>ml,FastViTForImageClassification:()=>_u,FastViTModel:()=>fu,FastViTPreTrainedModel:()=>zo,Florence2ForConditionalGeneration:()=>fa,Florence2PreTrainedModel:()=>hi,GLPNForDepthEstimation:()=>wp,GLPNModel:()=>gp,GLPNPreTrainedModel:()=>rl,GPT2LMHeadModel:()=>Ei,GPT2Model:()=>Ti,GPT2PreTrainedModel:()=>xi,GPTBigCodeForCausalLM:()=>Ii,GPTBigCodeModel:()=>$i,GPTBigCodePreTrainedModel:()=>wn,GPTJForCausalLM:()=>Si,GPTJModel:()=>Ci,GPTJPreTrainedModel:()=>Gn,GPTNeoForCausalLM:()=>_n,GPTNeoModel:()=>Pi,GPTNeoPreTrainedModel:()=>Un,GPTNeoXForCausalLM:()=>Wn,GPTNeoXModel:()=>gn,GPTNeoXPreTrainedModel:()=>Kr,Gemma2ForCausalLM:()=>Od,Gemma2Model:()=>Fd,Gemma2PreTrainedModel:()=>xo,Gemma3ForCausalLM:()=>Ld,Gemma3Model:()=>Dd,Gemma3PreTrainedModel:()=>To,GemmaForCausalLM:()=>Ad,GemmaModel:()=>kd,GemmaPreTrainedModel:()=>vo,GlmForCausalLM:()=>T,GlmModel:()=>m,GlmPreTrainedModel:()=>Qn,GraniteForCausalLM:()=>Sd,GraniteModel:()=>Ea,GranitePreTrainedModel:()=>Ls,GroundingDinoForObjectDetection:()=>Ip,GroundingDinoPreTrainedModel:()=>$p,GroupViTModel:()=>hu,GroupViTPreTrainedModel:()=>mu,HeliumForCausalLM:()=>Oi,HeliumModel:()=>Fi,HeliumPreTrainedModel:()=>qn,HieraForImageClassification:()=>qu,HieraModel:()=>Hu,HieraPreTrainedModel:()=>Jo,HubertForCTC:()=>am,HubertForSequenceClassification:()=>om,HubertModel:()=>im,HubertPreTrainedModel:()=>Y0,IJepaForImageClassification:()=>nu,IJepaModel:()=>su,IJepaPreTrainedModel:()=>Oo,Idefics3ForConditionalGeneration:()=>fn,Idefics3PreTrainedModel:()=>jn,ImageMattingOutput:()=>Tf,JAISLMHeadModel:()=>Ta,JAISModel:()=>ut,JAISPreTrainedModel:()=>Qs,JinaCLIPModel:()=>wi,JinaCLIPPreTrainedModel:()=>qs,JinaCLIPTextModel:()=>bi,JinaCLIPVisionModel:()=>yi,LiteWhisperForConditionalGeneration:()=>ui,LlamaForCausalLM:()=>Ai,LlamaModel:()=>ki,LlamaPreTrainedModel:()=>yn,LlavaForConditionalGeneration:()=>hn,LlavaOnevisionForConditionalGeneration:()=>Gs,LlavaPreTrainedModel:()=>mi,LongT5ForConditionalGeneration:()=>We,LongT5Model:()=>Qe,LongT5PreTrainedModel:()=>Re,M2M100ForConditionalGeneration:()=>jp,M2M100Model:()=>Rp,M2M100PreTrainedModel:()=>cl,MBartForCausalLM:()=>gs,MBartForConditionalGeneration:()=>$r,MBartForSequenceClassification:()=>rr,MBartModel:()=>Sr,MBartPreTrainedModel:()=>vr,MPNetForMaskedLM:()=>an,MPNetForQuestionAnswering:()=>cn,MPNetForSequenceClassification:()=>on,MPNetForTokenClassification:()=>ln,MPNetModel:()=>nn,MPNetPreTrainedModel:()=>_s,MT5ForConditionalGeneration:()=>Dt,MT5Model:()=>gt,MT5PreTrainedModel:()=>Ze,MarianMTModel:()=>Bp,MarianModel:()=>zp,MarianPreTrainedModel:()=>ll,MaskFormerForInstanceSegmentation:()=>_p,MaskFormerModel:()=>fp,MaskFormerPreTrainedModel:()=>tl,MaskedLMOutput:()=>Dr,Metric3DForDepthEstimation:()=>pp,Metric3DPreTrainedModel:()=>up,Metric3Dv2ForDepthEstimation:()=>hp,Metric3Dv2PreTrainedModel:()=>mp,MgpstrForSceneTextRecognition:()=>eh,MgpstrModelOutput:()=>Ym,MgpstrPreTrainedModel:()=>Zm,MimiDecoderModel:()=>uh,MimiDecoderOutput:()=>lh,MimiEncoderModel:()=>dh,MimiEncoderOutput:()=>oh,MimiModel:()=>ch,MimiPreTrainedModel:()=>Ba,MistralForCausalLM:()=>Mm,MistralModel:()=>ym,MistralPreTrainedModel:()=>ul,MobileBertForMaskedLM:()=>mr,MobileBertForQuestionAnswering:()=>os,MobileBertForSequenceClassification:()=>_r,MobileBertModel:()=>as,MobileBertPreTrainedModel:()=>pr,MobileLLMForCausalLM:()=>Le,MobileLLMModel:()=>Te,MobileLLMPreTrainedModel:()=>ce,MobileNetV1ForImageClassification:()=>zm,MobileNetV1ForSemanticSegmentation:()=>Bm,MobileNetV1Model:()=>Lm,MobileNetV1PreTrainedModel:()=>Oa,MobileNetV2ForImageClassification:()=>jm,MobileNetV2ForSemanticSegmentation:()=>Nm,MobileNetV2Model:()=>Rm,MobileNetV2PreTrainedModel:()=>Da,MobileNetV3ForImageClassification:()=>Um,MobileNetV3ForSemanticSegmentation:()=>Wm,MobileNetV3Model:()=>Vm,MobileNetV3PreTrainedModel:()=>La,MobileNetV4ForImageClassification:()=>Km,MobileNetV4ForSemanticSegmentation:()=>Hm,MobileNetV4Model:()=>Gm,MobileNetV4PreTrainedModel:()=>za,MobileViTForImageClassification:()=>yu,MobileViTModel:()=>bu,MobileViTPreTrainedModel:()=>Bo,MobileViTV2ForImageClassification:()=>vu,MobileViTV2Model:()=>Mu,MobileViTV2PreTrainedModel:()=>Ro,ModelOutput:()=>be,ModernBertForMaskedLM:()=>Ve,ModernBertForSequenceClassification:()=>et,ModernBertForTokenClassification:()=>nt,ModernBertModel:()=>Ie,ModernBertPreTrainedModel:()=>qe,Moondream1ForConditionalGeneration:()=>ha,MoonshineForConditionalGeneration:()=>ma,MoonshineModel:()=>pa,MoonshinePreTrainedModel:()=>Rn,MptForCausalLM:()=>Yd,MptModel:()=>Jd,MptPreTrainedModel:()=>ko,MultiModalityCausalLM:()=>Jm,MultiModalityPreTrainedModel:()=>Xm,MusicgenForCausalLM:()=>rv,MusicgenForConditionalGeneration:()=>wl,MusicgenModel:()=>tv,MusicgenPreTrainedModel:()=>gl,NomicBertModel:()=>Ge,NomicBertPreTrainedModel:()=>lt,OPTForCausalLM:()=>eu,OPTModel:()=>Zd,OPTPreTrainedModel:()=>Ao,Olmo2ForCausalLM:()=>Tr,Olmo2Model:()=>Kt,Olmo2PreTrainedModel:()=>kt,OlmoForCausalLM:()=>Mt,OlmoModel:()=>tt,OlmoPreTrainedModel:()=>Ke,OpenELMForCausalLM:()=>Bd,OpenELMModel:()=>zd,OpenELMPreTrainedModel:()=>Eo,OwlViTForObjectDetection:()=>Tu,OwlViTModel:()=>xu,OwlViTPreTrainedModel:()=>jo,Owlv2ForObjectDetection:()=>Pu,Owlv2Model:()=>Eu,Owlv2PreTrainedModel:()=>No,PaliGemmaForConditionalGeneration:()=>ga,PaliGemmaPreTrainedModel:()=>_a,PatchTSMixerForPrediction:()=>nh,PatchTSMixerModel:()=>sh,PatchTSMixerPreTrainedModel:()=>yl,PatchTSTForPrediction:()=>rh,PatchTSTModel:()=>th,PatchTSTPreTrainedModel:()=>bl,Phi3ForCausalLM:()=>qd,Phi3Model:()=>Hd,Phi3PreTrainedModel:()=>$o,Phi3VForCausalLM:()=>_i,Phi3VPreTrainedModel:()=>wa,PhiForCausalLM:()=>Kd,PhiModel:()=>Gd,PhiPreTrainedModel:()=>So,PreTrainedModel:()=>G,PretrainedMixin:()=>Lt,PvtForImageClassification:()=>lu,PvtModel:()=>ou,PvtPreTrainedModel:()=>Do,PyAnnoteForAudioFrameClassification:()=>Kp,PyAnnoteModel:()=>Gp,PyAnnotePreTrainedModel:()=>dl,QuestionAnsweringModelOutput:()=>Nr,Qwen2ForCausalLM:()=>jd,Qwen2Model:()=>Rd,Qwen2PreTrainedModel:()=>Po,Qwen2VLForConditionalGeneration:()=>Wd,Qwen2VLPreTrainedModel:()=>Ud,Qwen3ForCausalLM:()=>Vd,Qwen3Model:()=>Nd,Qwen3PreTrainedModel:()=>Co,RFDetrForObjectDetection:()=>Bu,RFDetrModel:()=>zu,RFDetrObjectDetectionOutput:()=>Ru,RFDetrPreTrainedModel:()=>Ho,RTDetrForObjectDetection:()=>Fu,RTDetrModel:()=>Au,RTDetrObjectDetectionOutput:()=>Di,RTDetrPreTrainedModel:()=>Go,RTDetrV2ForObjectDetection:()=>Du,RTDetrV2Model:()=>Ou,RTDetrV2ObjectDetectionOutput:()=>Lu,RTDetrV2PreTrainedModel:()=>Ko,ResNetForImageClassification:()=>Xu,ResNetModel:()=>Qu,ResNetPreTrainedModel:()=>Yo,RoFormerForMaskedLM:()=>$t,RoFormerForQuestionAnswering:()=>yr,RoFormerForSequenceClassification:()=>Wt,RoFormerForTokenClassification:()=>Bt,RoFormerModel:()=>mt,RoFormerPreTrainedModel:()=>ke,RobertaForMaskedLM:()=>sr,RobertaForQuestionAnswering:()=>Or,RobertaForSequenceClassification:()=>hr,RobertaForTokenClassification:()=>fr,RobertaModel:()=>xr,RobertaPreTrainedModel:()=>Rr,SamImageSegmentationOutput:()=>Lp,SamModel:()=>Dp,SamPreTrainedModel:()=>Op,SapiensForDepthEstimation:()=>op,SapiensForNormalEstimation:()=>lp,SapiensForSemanticSegmentation:()=>ap,SapiensPreTrainedModel:()=>Sa,SegformerForImageClassification:()=>Im,SegformerForSemanticSegmentation:()=>km,SegformerModel:()=>ev,SegformerPreTrainedModel:()=>Fa,Seq2SeqLMOutput:()=>uv,SequenceClassifierOutput:()=>xt,SiglipModel:()=>Hs,SiglipPreTrainedModel:()=>Ks,SiglipTextModel:()=>gi,SiglipVisionModel:()=>va,SmolVLMForConditionalGeneration:()=>fi,SnacDecoderModel:()=>bh,SnacEncoderModel:()=>wh,SnacModel:()=>gh,SnacPreTrainedModel:()=>ja,SpeechT5ForSpeechToText:()=>fm,SpeechT5ForTextToSpeech:()=>_m,SpeechT5HifiGan:()=>gm,SpeechT5Model:()=>Z0,SpeechT5PreTrainedModel:()=>ka,SqueezeBertForMaskedLM:()=>dn,SqueezeBertForQuestionAnswering:()=>pn,SqueezeBertForSequenceClassification:()=>un,SqueezeBertModel:()=>Us,SqueezeBertPreTrainedModel:()=>Os,StableLmForCausalLM:()=>Fm,StableLmModel:()=>Am,StableLmPreTrainedModel:()=>fl,Starcoder2ForCausalLM:()=>xm,Starcoder2Model:()=>vm,Starcoder2PreTrainedModel:()=>pl,StyleTextToSpeech2Model:()=>hm,StyleTextToSpeech2PreTrainedModel:()=>mm,Swin2SRForImageSuperResolution:()=>tp,Swin2SRModel:()=>ep,Swin2SRPreTrainedModel:()=>Zo,SwinForImageClassification:()=>Yu,SwinForSemanticSegmentation:()=>Zu,SwinModel:()=>Ju,SwinPreTrainedModel:()=>Ca,T5ForConditionalGeneration:()=>xe,T5Model:()=>ue,T5PreTrainedModel:()=>oe,TableTransformerForObjectDetection:()=>Uu,TableTransformerModel:()=>Vu,TableTransformerObjectDetectionOutput:()=>Wu,TableTransformerPreTrainedModel:()=>Qo,TokenClassifierOutput:()=>Ir,TrOCRForCausalLM:()=>bm,TrOCRPreTrainedModel:()=>wm,UltravoxModel:()=>ah,UltravoxPreTrainedModel:()=>ih,UniSpeechForCTC:()=>Xp,UniSpeechForSequenceClassification:()=>Jp,UniSpeechModel:()=>Qp,UniSpeechPreTrainedModel:()=>$a,UniSpeechSatForAudioFrameClassification:()=>tm,UniSpeechSatForCTC:()=>Zp,UniSpeechSatForSequenceClassification:()=>em,UniSpeechSatModel:()=>Yp,UniSpeechSatPreTrainedModel:()=>Li,ViTForImageClassification:()=>ru,ViTMAEModel:()=>du,ViTMAEPreTrainedModel:()=>cu,ViTMSNForImageClassification:()=>pu,ViTMSNModel:()=>uu,ViTMSNPreTrainedModel:()=>Lo,ViTModel:()=>tu,ViTPreTrainedModel:()=>Fo,VisionEncoderDecoderModel:()=>pi,VitMatteForImageMatting:()=>wu,VitMattePreTrainedModel:()=>gu,VitPoseForPoseEstimation:()=>au,VitPosePreTrainedModel:()=>iu,VitsModel:()=>hl,VitsModelOutput:()=>Ef,VitsPreTrainedModel:()=>$m,Wav2Vec2BertForCTC:()=>sm,Wav2Vec2BertForSequenceClassification:()=>nm,Wav2Vec2BertModel:()=>rm,Wav2Vec2BertPreTrainedModel:()=>Ia,Wav2Vec2ForAudioFrameClassification:()=>Wp,Wav2Vec2ForCTC:()=>Vp,Wav2Vec2ForSequenceClassification:()=>Up,Wav2Vec2Model:()=>Np,Wav2Vec2PreTrainedModel:()=>Xs,WavLMForAudioFrameClassification:()=>pm,WavLMForCTC:()=>cm,WavLMForSequenceClassification:()=>dm,WavLMForXVector:()=>um,WavLMModel:()=>lm,WavLMPreTrainedModel:()=>Xn,WeSpeakerResNetModel:()=>qp,WeSpeakerResNetPreTrainedModel:()=>Hp,WhisperForConditionalGeneration:()=>di,WhisperModel:()=>ua,WhisperPreTrainedModel:()=>ci,XLMForQuestionAnswering:()=>oi,XLMForSequenceClassification:()=>ra,XLMForTokenClassification:()=>sa,XLMModel:()=>mn,XLMPreTrainedModel:()=>ls,XLMRobertaForMaskedLM:()=>ia,XLMRobertaForQuestionAnswering:()=>la,XLMRobertaForSequenceClassification:()=>aa,XLMRobertaForTokenClassification:()=>oa,XLMRobertaModel:()=>na,XLMRobertaPreTrainedModel:()=>Ws,XLMWithLMHeadModel:()=>ta,XVectorOutput:()=>xf,YolosForObjectDetection:()=>Ap,YolosModel:()=>kp,YolosObjectDetectionOutput:()=>Fp,YolosPreTrainedModel:()=>ol});var s=t("./src/configs.js"),i=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),a=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),u=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),v=t("./src/generation/stopping_criteria.js"),$=t("./src/generation/logits_sampler.js"),w=t("./src/env.js"),g=t("./src/models/whisper/generation_whisper.js"),C=t("./src/models/whisper/common_whisper.js");const E={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},x=new Map,b=new Map,M=new Map;async function P(y,S,O){var kr;let ne=((kr=O.config)==null?void 0:kr["transformers.js_config"])??{},ge=O.device??ne.device;ge&&typeof ge!="string"&&(ge.hasOwnProperty(S)?ge=ge[S]:(console.warn(`device not specified for "${S}". Using the default device.`),ge=null));const he=ge??(w.apis.IS_NODE_ENV?"cpu":"wasm"),Ee=(0,i.deviceToExecutionProviders)(he),De=ne.device_config??{};De.hasOwnProperty(he)&&(ne={...ne,...De[he]});let Ne=O.dtype??ne.dtype;if(typeof Ne!="string"&&(Ne&&Ne.hasOwnProperty(S)?Ne=Ne[S]:(Ne=n.DEFAULT_DEVICE_DTYPE_MAPPING[he]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${Ne}) for this device (${he}).`))),Ne===n.DATA_TYPES.auto){let St=ne.dtype;typeof St!="string"&&(St=St==null?void 0:St[S]),St&&St!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(St)?Ne=St:Ne=n.DEFAULT_DEVICE_DTYPE_MAPPING[he]??n.DATA_TYPES.fp32}const Je=Ne;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Je)){if(Je===n.DATA_TYPES.fp16&&he==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${he}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Je}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const ft=ne.kv_cache_dtype,bt=ft?typeof ft=="string"?ft:ft[Je]??"float32":void 0;if(bt&&!["float32","float16"].includes(bt))throw new Error(`Invalid kv_cache_dtype: ${bt}. Should be one of: float32, float16`);const pt={dtype:Je,kv_cache_dtype:bt,device:he},Ct=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Je],wt=`${S}${Ct}.onnx`,Pt=`${O.subfolder??""}/${wt}`,it={...O.session_options};it.executionProviders??(it.executionProviders=Ee);const It=ne.free_dimension_overrides;It?it.freeDimensionOverrides??(it.freeDimensionOverrides=It):he.startsWith("webnn")&&!it.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${he}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Jt=w.apis.IS_NODE_ENV&&w.env.useFSCache,nr=(0,l.getModelFile)(y,Pt,!0,O,Jt),dr=O.use_external_data_format??ne.use_external_data_format;let ar=[];if(dr){let St;typeof dr=="object"?dr.hasOwnProperty(wt)?St=dr[wt]:dr.hasOwnProperty(S)?St=dr[S]:St=!1:St=dr;const Er=+St;if(Er>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Er}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let Jr=0;Jr<Er;++Jr){const vn=`${wt}_data${Jr===0?"":"_"+Jr}`,Wr=`${O.subfolder??""}/${vn}`;ar.push(new Promise(async(cs,Na)=>{const xn=await(0,l.getModelFile)(y,Wr,!0,O,Jt);cs(xn instanceof Uint8Array?{path:vn,data:xn}:vn)}))}}else it.externalData!==void 0&&(ar=it.externalData.map(async St=>{if(typeof St.data=="string"){const Er=await(0,l.getModelFile)(y,St.data,!0,O);return{...St,data:Er}}return St}));if(ar.length>0){const St=await Promise.all(ar);w.apis.IS_NODE_ENV||(it.externalData=St)}if(he==="webgpu"){const St=(0,s.getKeyValueShapes)(O.config,{prefix:"present"});if(Object.keys(St).length>0&&!(0,i.isONNXProxy)()){const Er={};for(const Jr in St)Er[Jr]="gpu-buffer";it.preferredOutputLocation=Er}}return{buffer_or_path:await nr,session_options:it,session_config:pt}}async function A(y,S,O){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ne=>{const{buffer_or_path:ge,session_options:he,session_config:Ee}=await P(y,S[ne],O),De=await(0,i.createInferenceSession)(ge,he,Ee);return[ne,De]})))}async function z(y,S,O){return Object.fromEntries(await Promise.all(Object.keys(S).map(async ne=>{const ge=await(0,l.getModelJSON)(y,S[ne],!1,O);return[ne,ge]})))}function K(y,S){const O=Object.create(null),ne=[];for(const Ee of y.inputNames){const De=S[Ee];if(!(De instanceof u.Tensor)){ne.push(Ee);continue}O[Ee]=(0,i.isONNXProxy)()?De.clone():De}if(ne.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ne.join(", ")}.`);const ge=Object.keys(S).length,he=y.inputNames.length;if(ge>he){let Ee=Object.keys(S).filter(De=>!y.inputNames.includes(De));console.warn(`WARNING: Too many inputs were provided (${ge} > ${he}). The following inputs will be ignored: "${Ee.join(", ")}".`)}return O}let Q=Promise.resolve();async function B(y,S){const O=K(y,S);try{const ne=Object.fromEntries(Object.entries(O).map(([Ee,De])=>[Ee,De.ort_tensor])),ge=()=>y.run(ne),he=await(w.apis.IS_BROWSER_ENV||w.apis.IS_WEBWORKER_ENV?Q=Q.then(ge):ge());return Y(he)}catch(ne){const ge=Object.fromEntries(Object.entries(O).map(([he,Ee])=>{const De={type:Ee.type,dims:Ee.dims,location:Ee.location};return De.location!=="gpu-buffer"&&(De.data=Ee.data),[he,De]}));throw console.error(`An error occurred during model execution: "${ne}".`),console.error("Inputs given to model:",ge),ne}}function Y(y){for(let S in y)(0,i.isONNXTensor)(y[S])?y[S]=new u.Tensor(y[S]):typeof y[S]=="object"&&Y(y[S]);return y}function H(y){if(y instanceof u.Tensor)return y;if(y.length===0)throw Error("items must be non-empty");if(Array.isArray(y[0])){if(y.some(S=>S.length!==y[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(y.flat().map(S=>BigInt(S))),[y.length,y[0].length])}else return new u.Tensor("int64",BigInt64Array.from(y.map(S=>BigInt(S))),[1,y.length])}function q(y){return new u.Tensor("bool",[y],[1])}async function X(y,S){let{encoder_outputs:O,input_ids:ne,decoder_input_ids:ge,...he}=S;if(!O){const De=(0,o.pick)(S,y.sessions.model.inputNames);O=(await re(y,De)).last_hidden_state}return he.input_ids=ge,he.encoder_hidden_states=O,y.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(he.encoder_attention_mask=S.attention_mask),await ae(y,he,!0)}async function re(y,S){const O=y.sessions.model,ne=(0,o.pick)(S,O.inputNames);if(O.inputNames.includes("inputs_embeds")&&!ne.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ne.inputs_embeds=await y.encode_text({input_ids:S.input_ids})}if(O.inputNames.includes("token_type_ids")&&!ne.token_type_ids){if(!ne.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ne.token_type_ids=(0,u.zeros_like)(ne.input_ids)}if(O.inputNames.includes("pixel_mask")&&!ne.pixel_mask){if(!ne.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const ge=ne.pixel_values.dims;ne.pixel_mask=(0,u.ones)([ge[0],ge[2],ge[3]])}return await B(O,ne)}async function de(y,S){const O=await y.encode(S);return await y.decode(O)}async function ae(y,S,O=!1){const ne=y.sessions[O?"decoder_model_merged":"model"],{past_key_values:ge,...he}=S;if(ne.inputNames.includes("use_cache_branch")&&(he.use_cache_branch=q(!!ge)),ne.inputNames.includes("position_ids")&&he.attention_mask&&!he.position_ids){const De=["paligemma","gemma3_text","gemma3"].includes(y.config.model_type)?1:0;he.position_ids=ze(he,ge,De)}y.addPastKeyValues(he,ge);const Ee=(0,o.pick)(he,ne.inputNames);return await B(ne,Ee)}function j({modality_token_id:y,inputs_embeds:S,modality_features:O,input_ids:ne,attention_mask:ge}){const he=ne.tolist().map(Je=>Je.reduce((ft,bt,pt)=>(bt==y&&ft.push(pt),ft),[])),Ee=he.reduce((Je,ft)=>Je+ft.length,0),De=O.dims[0];if(Ee!==De)throw new Error(`Number of tokens and features do not match: tokens: ${Ee}, features ${De}`);let Ne=0;for(let Je=0;Je<he.length;++Je){const ft=he[Je],bt=S[Je];for(let pt=0;pt<ft.length;++pt)bt[ft[pt]].data.set(O[Ne++].data)}return{inputs_embeds:S,attention_mask:ge}}function F({image_token_id:y,inputs_embeds:S,image_features:O,input_ids:ne,attention_mask:ge}){return j({modality_token_id:y,inputs_embeds:S,modality_features:O,input_ids:ne,attention_mask:ge})}function U({audio_token_id:y,inputs_embeds:S,audio_features:O,input_ids:ne,attention_mask:ge}){return j({modality_token_id:y,inputs_embeds:S,modality_features:O,input_ids:ne,attention_mask:ge})}async function ee(y,{encode_function:S,merge_function:O,modality_input_name:ne,modality_output_name:ge,input_ids:he=null,attention_mask:Ee=null,position_ids:De=null,inputs_embeds:Ne=null,past_key_values:Je=null,generation_config:ft=null,logits_processor:bt=null,...pt}){const Ct=pt[ne];if(!Ne){if(Ne=await y.encode_text({input_ids:he,...pt}),Ct&&he.dims[1]!==1){const Pt=await S({[ne]:Ct,...pt});({inputs_embeds:Ne,attention_mask:Ee}=O({[ge]:Pt,inputs_embeds:Ne,input_ids:he,attention_mask:Ee}))}else if(Je&&Ct&&he.dims[1]===1){const Pt=he.dims[1],it=Object.values(Je)[0].dims.at(-2);Ee=(0,u.cat)([(0,u.ones)([he.dims[0],it]),Ee.slice(null,[Ee.dims[1]-Pt,Ee.dims[1]])],1)}}if(!De&&y.config.model_type==="qwen2_vl"){const{image_grid_thw:Pt,video_grid_thw:it}=pt;[De]=y.get_rope_index(he,Pt,it,Ee)}return await ae(y,{inputs_embeds:Ne,past_key_values:Je,attention_mask:Ee,position_ids:De,generation_config:ft,logits_processor:bt},!0)}async function _e(y,S){return await ee(y,{...S,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:y.encode_audio.bind(y),merge_function:y._merge_input_ids_with_audio_features.bind(y)})}async function le(y,S){return await ee(y,{...S,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:y.encode_image.bind(y),merge_function:y._merge_input_ids_with_image_features.bind(y)})}function Me(y,S=0){const[O,ne]=y.dims,ge=y.data,he=new BigInt64Array(ge.length);for(let Ee=0;Ee<O;++Ee){const De=Ee*ne;let Ne=BigInt(S);for(let Je=0;Je<ne;++Je){const ft=De+Je;ge[ft]===0n?he[ft]=BigInt(1):(he[ft]=Ne,Ne+=ge[ft])}}return{data:he,dims:y.dims}}function ze(y,S=null,O=0){const{input_ids:ne,inputs_embeds:ge,attention_mask:he}=y,{data:Ee,dims:De}=Me(he,O);let Ne=new u.Tensor("int64",Ee,De);if(S){const Je=-(ne??ge).dims.at(1);Ne=Ne.slice(null,[Je,null])}return Ne}function Ue(y,S,O,ne){if(O.past_key_values){const ge=Object.values(O.past_key_values)[0].dims.at(-2),{input_ids:he,attention_mask:Ee}=O;if(!(Ee&&Ee.dims[1]>he.dims[1])){if(ge<he.dims[1])O.input_ids=he.slice(null,[ge,null]);else if(y.config.image_token_index!=null&&he.data.some(De=>De==y.config.image_token_index)){const De=y.config.num_image_tokens;if(!De)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ne=he.dims[1]-(ge-De);O.input_ids=he.slice(null,[-Ne,null]),O.attention_mask=(0,u.ones)([1,ge+Ne])}}}return O}function me(y,S,O,ne){return O.past_key_values&&(S=S.map(ge=>[ge.at(-1)])),{...O,decoder_input_ids:H(S)}}function W(y,...S){return y.config.is_encoder_decoder?me(y,...S):Ue(y,...S)}function se(y,S,O,ne){const ge=!!O.past_key_values;return ne.guidance_scale!==null&&ne.guidance_scale>1&&(ge?O.input_ids=(0,u.cat)([O.input_ids,O.input_ids],0):(O.input_ids=(0,u.cat)([O.input_ids,(0,u.full_like)(O.input_ids,BigInt(ne.pad_token_id))],0),O.attention_mask=(0,u.cat)([O.attention_mask,(0,u.full_like)(O.attention_mask,0n)],0))),(ge||!O.pixel_values)&&(O.pixel_values=(0,u.full)([0,0,3,384,384],1)),ge&&(O.images_seq_mask=new u.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),O.images_emb_mask=new u.Tensor("bool",new Array(0).fill(!1),[1,1,0])),O}class G extends a.Callable{constructor(O,ne,ge){super();Z(this,"main_input_name","input_ids");Z(this,"forward_params",["input_ids","attention_mask"]);this.config=O,this.sessions=ne,this.configs=ge;const he=M.get(this.constructor),Ee=x.get(he);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Ee){case E.DecoderOnly:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=Ue;break;case E.Seq2Seq:case E.Vision2Seq:case E.Musicgen:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=me;break;case E.EncoderDecoder:this._forward=X;break;case E.ImageTextToText:this.can_generate=!0,this._forward=le,this._prepare_inputs_for_generation=W;break;case E.AudioTextToText:this.can_generate=!0,this._forward=_e,this._prepare_inputs_for_generation=W;break;case E.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=W;break;case E.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=se;break;case E.AutoEncoder:this._forward=de;break;default:this._forward=re;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ne;const O=[];for(const ge of Object.values(this.sessions))(ne=ge==null?void 0:ge.handler)!=null&&ne.dispose&&O.push(ge.handler.dispose());return await Promise.all(O)}static async from_pretrained(O,{progress_callback:ne=null,config:ge=null,cache_dir:he=null,local_files_only:Ee=!1,revision:De="main",model_file_name:Ne=null,subfolder:Je="onnx",device:ft=null,dtype:bt=null,use_external_data_format:pt=null,session_options:Ct={}}={}){let wt={progress_callback:ne,config:ge,cache_dir:he,local_files_only:Ee,revision:De,model_file_name:Ne,subfolder:Je,device:ft,dtype:bt,use_external_data_format:pt,session_options:Ct};const Pt=M.get(this),it=x.get(Pt);ge=wt.config=await s.AutoConfig.from_pretrained(O,wt);let It;if(it===E.DecoderOnly)It=await Promise.all([A(O,{model:wt.model_file_name??"model"},wt),z(O,{generation_config:"generation_config.json"},wt)]);else if(it===E.Seq2Seq||it===E.Vision2Seq)It=await Promise.all([A(O,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},wt),z(O,{generation_config:"generation_config.json"},wt)]);else if(it===E.MaskGeneration)It=await Promise.all([A(O,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},wt)]);else if(it===E.EncoderDecoder)It=await Promise.all([A(O,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},wt)]);else if(it===E.ImageTextToText){const Jt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ge.is_encoder_decoder&&(Jt.model="encoder_model"),It=await Promise.all([A(O,Jt,wt),z(O,{generation_config:"generation_config.json"},wt)])}else if(it===E.AudioTextToText){const Jt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};It=await Promise.all([A(O,Jt,wt),z(O,{generation_config:"generation_config.json"},wt)])}else if(it===E.Musicgen)It=await Promise.all([A(O,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},wt),z(O,{generation_config:"generation_config.json"},wt)]);else if(it===E.MultiModality)It=await Promise.all([A(O,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},wt),z(O,{generation_config:"generation_config.json"},wt)]);else if(it===E.Phi3V)It=await Promise.all([A(O,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},wt),z(O,{generation_config:"generation_config.json"},wt)]);else if(it===E.AutoEncoder)It=await Promise.all([A(O,{encoder_model:"encoder_model",decoder_model:"decoder_model"},wt)]);else{if(it!==E.EncoderOnly){const Jt=Pt??(ge==null?void 0:ge.model_type);Jt!=="custom"&&console.warn(`Model type for '${Jt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}It=await Promise.all([A(O,{model:wt.model_file_name??"model"},wt)])}return new this(ge,...It)}async _call(O){return await this.forward(O)}async forward(O){return await this._forward(this,O)}get generation_config(){var O;return((O=this.configs)==null?void 0:O.generation_config)??null}_get_logits_warper(O){const ne=new p.LogitsProcessorList;return O.temperature!==null&&O.temperature!==1&&ne.push(new p.TemperatureLogitsWarper(O.temperature)),O.top_k!==null&&O.top_k!==0&&ne.push(new p.TopKLogitsWarper(O.top_k)),O.top_p!==null&&O.top_p<1&&ne.push(new p.TopPLogitsWarper(O.top_p)),ne}_get_logits_processor(O,ne,ge=null){const he=new p.LogitsProcessorList;if(O.repetition_penalty!==null&&O.repetition_penalty!==1&&he.push(new p.RepetitionPenaltyLogitsProcessor(O.repetition_penalty)),O.no_repeat_ngram_size!==null&&O.no_repeat_ngram_size>0&&he.push(new p.NoRepeatNGramLogitsProcessor(O.no_repeat_ngram_size)),O.bad_words_ids!==null&&he.push(new p.NoBadWordsLogitsProcessor(O.bad_words_ids,O.eos_token_id)),O.min_length!==null&&O.eos_token_id!==null&&O.min_length>0&&he.push(new p.MinLengthLogitsProcessor(O.min_length,O.eos_token_id)),O.min_new_tokens!==null&&O.eos_token_id!==null&&O.min_new_tokens>0&&he.push(new p.MinNewTokensLengthLogitsProcessor(ne,O.min_new_tokens,O.eos_token_id)),O.forced_bos_token_id!==null&&he.push(new p.ForcedBOSTokenLogitsProcessor(O.forced_bos_token_id)),O.forced_eos_token_id!==null&&he.push(new p.ForcedEOSTokenLogitsProcessor(O.max_length,O.forced_eos_token_id)),O.begin_suppress_tokens!==null){const Ee=ne>1||O.forced_bos_token_id===null?ne:ne+1;he.push(new p.SuppressTokensAtBeginLogitsProcessor(O.begin_suppress_tokens,Ee))}return O.guidance_scale!==null&&O.guidance_scale>1&&he.push(new p.ClassifierFreeGuidanceLogitsProcessor(O.guidance_scale)),ge!==null&&he.extend(ge),he}_prepare_generation_config(O,ne,ge=d.GenerationConfig){const he={...this.config};for(const De of["decoder","generator","text_config"])De in he&&Object.assign(he,he[De]);const Ee=new ge(he);return Object.assign(Ee,this.generation_config??{}),O&&Object.assign(Ee,O),ne&&Object.assign(Ee,(0,o.pick)(ne,Object.getOwnPropertyNames(Ee))),Ee}_get_stopping_criteria(O,ne=null){const ge=new v.StoppingCriteriaList;return O.max_length!==null&&ge.push(new v.MaxLengthCriteria(O.max_length,this.config.max_position_embeddings??null)),O.eos_token_id!==null&&ge.push(new v.EosTokenCriteria(O.eos_token_id)),ne&&ge.extend(ne),ge}_validate_model_class(){if(!this.can_generate){const O=[xl,Tl,vl,Ml],ne=M.get(this.constructor),ge=new Set,he=this.config.model_type;for(const De of O){const Ne=De.get(he);Ne&&ge.add(Ne[0])}let Ee=`The current model class (${ne}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ge.size>0&&(Ee+=` Please use the following class instead: ${[...ge].join(", ")}`),Error(Ee)}}prepare_inputs_for_generation(...O){return this._prepare_inputs_for_generation(this,...O)}_update_model_kwargs_for_generation({generated_input_ids:O,outputs:ne,model_inputs:ge,is_encoder_decoder:he}){return ge.past_key_values=this.getPastKeyValues(ne,ge.past_key_values),ge.input_ids=new u.Tensor("int64",O.flat(),[O.length,1]),he||(ge.attention_mask=(0,u.cat)([ge.attention_mask,(0,u.ones)([ge.attention_mask.dims[0],1])],1)),ge.position_ids=null,ge}_prepare_model_inputs({inputs:O,bos_token_id:ne,model_kwargs:ge}){const he=(0,o.pick)(ge,this.forward_params),Ee=this.main_input_name;if(Ee in he){if(O)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else he[Ee]=O;return{inputs_tensor:he[Ee],model_inputs:he,model_input_name:Ee}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:O,model_inputs:ne,model_input_name:ge,generation_config:he}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ne.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:De,pixel_values:Ne,attention_mask:Je,...ft}=ne,bt=await this._prepare_inputs_embeds(ne);ne={...ft,...(0,o.pick)(bt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Ee}=await re(this,ne);if(he.guidance_scale!==null&&he.guidance_scale>1)Ee=(0,u.cat)([Ee,(0,u.full_like)(Ee,0)],0),"attention_mask"in ne&&(ne.attention_mask=(0,u.cat)([ne.attention_mask,(0,u.zeros_like)(ne.attention_mask)],0));else if(ne.decoder_input_ids){const De=H(ne.decoder_input_ids).dims[0];if(De!==Ee.dims[0]){if(Ee.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Ee.dims[0]}) than the decoder inputs (${De}).`);Ee=(0,u.cat)(Array.from({length:De},()=>Ee),0)}}return ne.encoder_outputs=Ee,ne}_prepare_decoder_input_ids_for_generation({batch_size:O,model_input_name:ne,model_kwargs:ge,decoder_start_token_id:he,bos_token_id:Ee,generation_config:De}){let{decoder_input_ids:Ne,...Je}=ge;if(!(Ne instanceof u.Tensor)){if(Ne)Array.isArray(Ne[0])||(Ne=Array.from({length:O},()=>Ne));else if(he??(he=Ee),this.config.model_type==="musicgen")Ne=Array.from({length:O*this.config.decoder.num_codebooks},()=>[he]);else if(Array.isArray(he)){if(he.length!==O)throw new Error(`\`decoder_start_token_id\` expcted to have length ${O} but got ${he.length}`);Ne=he}else Ne=Array.from({length:O},()=>[he]);Ne=H(Ne)}return ge.decoder_attention_mask=(0,u.ones_like)(Ne),{input_ids:Ne,model_inputs:Je}}async generate({inputs:O=null,generation_config:ne=null,logits_processor:ge=null,stopping_criteria:he=null,streamer:Ee=null,...De}){this._validate_model_class(),ne=this._prepare_generation_config(ne,De);let{inputs_tensor:Ne,model_inputs:Je,model_input_name:ft}=this._prepare_model_inputs({inputs:O,model_kwargs:De});const bt=this.config.is_encoder_decoder;bt&&("encoder_outputs"in Je||(Je=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ne,model_inputs:Je,model_input_name:ft,generation_config:ne})));let pt;bt?{input_ids:pt,model_inputs:Je}=this._prepare_decoder_input_ids_for_generation({batch_size:Je[ft].dims.at(0),model_input_name:ft,model_kwargs:Je,decoder_start_token_id:ne.decoder_start_token_id,bos_token_id:ne.bos_token_id,generation_config:ne}):pt=Je[ft];let Ct=pt.dims.at(-1);ne.max_new_tokens!==null&&(ne.max_length=Ct+ne.max_new_tokens);const wt=this._get_logits_processor(ne,Ct,ge),Pt=this._get_stopping_criteria(ne,he),it=Je[ft].dims.at(0),It=$.LogitsSampler.getSampler(ne),Jt=new Array(it).fill(0),nr=pt.tolist();Ee&&Ee.put(nr);let dr,ar={};for(;;){if(Je=this.prepare_inputs_for_generation(nr,Je,ne),dr=await this.forward(Je),ne.output_attentions&&ne.return_dict_in_generate){const Wr=this.getAttentions(dr);for(const cs in Wr)cs in ar||(ar[cs]=[]),ar[cs].push(Wr[cs])}const St=dr.logits.slice(null,-1,null),Er=wt(nr,St),Jr=[];for(let Wr=0;Wr<Er.dims.at(0);++Wr){const cs=Er[Wr],Na=await It(cs);for(const[xn,Va]of Na){const Ua=BigInt(xn);Jt[Wr]+=Va,nr[Wr].push(Ua),Jr.push([Ua]);break}}if(Ee&&Ee.put(Jr),Pt(nr).every(Wr=>Wr))break;Je=this._update_model_kwargs_for_generation({generated_input_ids:Jr,outputs:dr,model_inputs:Je,is_encoder_decoder:bt})}Ee&&Ee.end();const br=this.getPastKeyValues(dr,Je.past_key_values,!0),kr=new u.Tensor("int64",nr.flat(),[nr.length,nr[0].length]);if(ne.return_dict_in_generate)return{sequences:kr,past_key_values:br,...ar};for(const St of Object.values(dr))St.location==="gpu-buffer"&&St.dispose();return kr}getPastKeyValues(O,ne,ge=!1){const he=Object.create(null);for(const Ee in O)if(Ee.startsWith("present")){const De=Ee.replace("present","past_key_values"),Ne=Ee.includes("encoder");if(Ne&&ne?he[De]=ne[De]:he[De]=O[Ee],ne&&(!Ne||ge)){const Je=ne[De];Je.location==="gpu-buffer"&&Je.dispose()}}return he}getAttentions(O){const ne={};for(const ge of["cross_attentions","encoder_attentions","decoder_attentions"])for(const he in O)he.startsWith(ge)&&(ge in ne||(ne[ge]=[]),ne[ge].push(O[he]));return ne}addPastKeyValues(O,ne){var ge,he,Ee;if(ne)Object.assign(O,ne);else{const De=this.sessions.decoder_model_merged??this.sessions.model,Ne=((ge=De==null?void 0:De.config)==null?void 0:ge.kv_cache_dtype)??"float32",Je=Ne==="float16"?new u.DataTypeMap.float16:[],ft=((Ee=(he=O[this.main_input_name]??O.attention_mask)==null?void 0:he.dims)==null?void 0:Ee[0])??1,bt=(0,s.getKeyValueShapes)(this.config,{batch_size:ft});for(const pt in bt)O[pt]=new u.Tensor(Ne,Je,bt[pt])}}async encode_image({pixel_values:O}){const ne=(await B(this.sessions.vision_encoder,{pixel_values:O})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ne.dims[1]}).`),this.config.num_image_tokens=ne.dims[1]),ne}async encode_text({input_ids:O}){return(await B(this.sessions.embed_tokens,{input_ids:O})).inputs_embeds}async encode_audio({audio_values:O}){return(await B(this.sessions.audio_encoder,{audio_values:O})).audio_features}}class be{}class we extends be{constructor({last_hidden_state:S,hidden_states:O=null,attentions:ne=null}){super(),this.last_hidden_state=S,this.hidden_states=O,this.attentions=ne}}class Se extends G{}class Pe extends Se{}class $e extends Se{async _call(S){return new Dr(await super._call(S))}}class Fe extends Se{async _call(S){return new xt(await super._call(S))}}class Be extends Se{async _call(S){return new Ir(await super._call(S))}}class He extends Se{async _call(S){return new Nr(await super._call(S))}}class qe extends G{}class Ie extends qe{}class Ve extends qe{async _call(S){return new Dr(await super._call(S))}}class et extends qe{async _call(S){return new xt(await super._call(S))}}class nt extends qe{async _call(S){return new Ir(await super._call(S))}}class lt extends G{}class Ge extends lt{}class ke extends G{}class mt extends ke{}class $t extends ke{async _call(S){return new Dr(await super._call(S))}}class Wt extends ke{async _call(S){return new xt(await super._call(S))}}class Bt extends ke{async _call(S){return new Ir(await super._call(S))}}class yr extends ke{async _call(S){return new Nr(await super._call(S))}}class lr extends G{}class yt extends lr{}class ts extends lr{async _call(S){return new Dr(await super._call(S))}}class D extends lr{async _call(S){return new xt(await super._call(S))}}class ie extends lr{async _call(S){return new Ir(await super._call(S))}}class R extends lr{async _call(S){return new Nr(await super._call(S))}}class te extends G{}class fe extends te{}class Oe extends te{async _call(S){return new Dr(await super._call(S))}}class ve extends te{async _call(S){return new xt(await super._call(S))}}class vt extends te{async _call(S){return new Ir(await super._call(S))}}class Ot extends te{async _call(S){return new Nr(await super._call(S))}}class ht extends G{}class ct extends ht{}class st extends ht{async _call(S){return new Dr(await super._call(S))}}class Rt extends ht{async _call(S){return new xt(await super._call(S))}}class Xt extends ht{async _call(S){return new Ir(await super._call(S))}}class Mr extends ht{async _call(S){return new Nr(await super._call(S))}}class Zt extends G{}class zr extends Zt{}class rs extends Zt{async _call(S){return new Dr(await super._call(S))}}class ms extends Zt{async _call(S){return new xt(await super._call(S))}}class ss extends Zt{async _call(S){return new Ir(await super._call(S))}}class $s extends Zt{async _call(S){return new Nr(await super._call(S))}}class Ur extends G{}class Is extends Ur{}class qr extends Ur{async _call(S){return new Dr(await super._call(S))}}class hs extends Ur{async _call(S){return new xt(await super._call(S))}}class ks extends Ur{async _call(S){return new Ir(await super._call(S))}}class As extends Ur{async _call(S){return new Nr(await super._call(S))}}class cr extends G{}class Fs extends cr{}class Cr extends cr{async _call(S){return new xt(await super._call(S))}}class fs extends cr{async _call(S){return new Ir(await super._call(S))}}class jr extends cr{async _call(S){return new Nr(await super._call(S))}}class Ae extends cr{async _call(S){return new Dr(await super._call(S))}}class Ye extends G{}class ot extends Ye{}class jt extends Ye{async _call(S){return new Dr(await super._call(S))}}class ns extends Ye{async _call(S){return new xt(await super._call(S))}}class is extends Ye{async _call(S){return new Ir(await super._call(S))}}class pr extends G{}class as extends pr{}class mr extends pr{async _call(S){return new Dr(await super._call(S))}}class _r extends pr{async _call(S){return new xt(await super._call(S))}}class os extends pr{async _call(S){return new Nr(await super._call(S))}}class _s extends G{}class nn extends _s{}class an extends _s{async _call(S){return new Dr(await super._call(S))}}class on extends _s{async _call(S){return new xt(await super._call(S))}}class ln extends _s{async _call(S){return new Ir(await super._call(S))}}class cn extends _s{async _call(S){return new Nr(await super._call(S))}}class Os extends G{}class Us extends Os{}class dn extends Os{async _call(S){return new Dr(await super._call(S))}}class un extends Os{async _call(S){return new xt(await super._call(S))}}class pn extends Os{async _call(S){return new Nr(await super._call(S))}}class Ds extends G{}class pe extends Ds{}class I extends Ds{async _call(S){return new xt(await super._call(S))}}class N extends Ds{async _call(S){return new Nr(await super._call(S))}}class J extends Ds{async _call(S){return new Dr(await super._call(S))}}class oe extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ue extends oe{}class xe extends oe{}class Re extends G{}class Qe extends Re{}class We extends Re{}class Ze extends G{}class gt extends Ze{}class Dt extends Ze{}class Ft extends G{}class er extends Ft{}class Gt extends Ft{}class gr extends Ft{async _call(S){return new xt(await super._call(S))}}class vr extends G{}class Sr extends vr{}class $r extends vr{}class rr extends vr{async _call(S){return new xt(await super._call(S))}}class gs extends vr{}class Qt extends G{}class wr extends Qt{}class Br extends Qt{}class Qr extends G{}class Xr extends Qr{}class Fr extends Qr{}class Rr extends G{}class xr extends Rr{}class sr extends Rr{async _call(S){return new Dr(await super._call(S))}}class hr extends Rr{async _call(S){return new xt(await super._call(S))}}class fr extends Rr{async _call(S){return new Ir(await super._call(S))}}class Or extends Rr{async _call(S){return new Nr(await super._call(S))}}class ls extends G{}class mn extends ls{}class ta extends ls{async _call(S){return new Dr(await super._call(S))}}class ra extends ls{async _call(S){return new xt(await super._call(S))}}class sa extends ls{async _call(S){return new Ir(await super._call(S))}}class oi extends ls{async _call(S){return new Nr(await super._call(S))}}class Ws extends G{}class na extends Ws{}class ia extends Ws{async _call(S){return new Dr(await super._call(S))}}class aa extends Ws{async _call(S){return new xt(await super._call(S))}}class oa extends Ws{async _call(S){return new Ir(await super._call(S))}}class la extends Ws{async _call(S){return new Nr(await super._call(S))}}class li extends G{}class ca extends li{}class da extends li{}class ci extends G{constructor(){super(...arguments);Z(this,"requires_attention_mask",!1);Z(this,"main_input_name","input_features");Z(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ua extends ci{}class di extends ci{_prepare_generation_config(S,O){return super._prepare_generation_config(S,O,g.WhisperGenerationConfig)}_retrieve_init_tokens(S){const O=[S.decoder_start_token_id];let ne=S.language;const ge=S.task;if(S.is_multilingual){ne||(console.warn("No language specified - defaulting to English (en)."),ne="en");const Ee=`<|${(0,C.whisper_language_to_code)(ne)}|>`;O.push(S.lang_to_id[Ee]),O.push(S.task_to_id[ge??"transcribe"])}else if(ne||ge)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&O.at(-1)!==S.no_timestamps_token_id?O.push(S.no_timestamps_token_id):S.return_timestamps&&O.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),O.pop()),O.filter(he=>he!=null)}async generate({inputs:S=null,generation_config:O=null,logits_processor:ne=null,stopping_criteria:ge=null,...he}){O=this._prepare_generation_config(O,he);const Ee=he.decoder_input_ids??this._retrieve_init_tokens(O);if(O.return_timestamps&&(ne??(ne=new p.LogitsProcessorList),ne.push(new p.WhisperTimeStampLogitsProcessor(O,Ee))),O.begin_suppress_tokens&&(ne??(ne=new p.LogitsProcessorList),ne.push(new p.SuppressTokensAtBeginLogitsProcessor(O.begin_suppress_tokens,Ee.length))),O.return_token_timestamps){if(!O.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");O.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),O.output_attentions=!0,O.return_dict_in_generate=!0}const De=await super.generate({inputs:S,generation_config:O,logits_processor:ne,decoder_input_ids:Ee,...he});return O.return_token_timestamps&&(De.token_timestamps=this._extract_token_timestamps(De,O.alignment_heads,O.num_frames)),De}_extract_token_timestamps(S,O,ne=null,ge=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ne==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let he=this.config.median_filter_width;he===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),he=7);const Ee=S.cross_attentions,De=Array.from({length:this.config.decoder_layers},(Pt,it)=>(0,u.cat)(Ee.map(It=>It[it]),2)),Ne=(0,u.stack)(O.map(([Pt,it])=>{if(Pt>=De.length)throw new Error(`Layer index ${Pt} is out of bounds for cross attentions (length ${De.length}).`);return ne?De[Pt].slice(null,it,null,[0,ne]):De[Pt].slice(null,it)})).transpose(1,0,2,3),[Je,ft]=(0,u.std_mean)(Ne,-2,0,!0),bt=Ne.clone();for(let Pt=0;Pt<bt.dims[0];++Pt){const it=bt[Pt];for(let It=0;It<it.dims[0];++It){const Jt=it[It],nr=Je[Pt][It][0].data,dr=ft[Pt][It][0].data;for(let ar=0;ar<Jt.dims[0];++ar){let br=Jt[ar].data;for(let kr=0;kr<br.length;++kr)br[kr]=(br[kr]-dr[kr])/nr[kr];br.set((0,f.medianFilter)(br,he))}}}const pt=[(0,u.mean)(bt,1)],Ct=S.sequences.dims,wt=new u.Tensor("float32",new Float32Array(Ct[0]*Ct[1]),Ct);for(let Pt=0;Pt<Ct[0];++Pt){const it=pt[Pt].neg().squeeze_(0),[It,Jt]=(0,f.dynamic_time_warping)(it.tolist()),nr=Array.from({length:It.length-1},(br,kr)=>It[kr+1]-It[kr]),dr=(0,o.mergeArrays)([1],nr).map(br=>!!br),ar=[];for(let br=0;br<dr.length;++br)dr[br]&&ar.push(Jt[br]*ge);wt[Pt].data.set(ar,1)}return wt}}class ui extends di{}class Rn extends G{constructor(){super(...arguments);Z(this,"requires_attention_mask",!1);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class pa extends Rn{}class ma extends Rn{}class pi extends G{constructor(){super(...arguments);Z(this,"main_input_name","pixel_values");Z(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class mi extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class hn extends mi{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:O,input_ids:ne,attention_mask:ge}){const he=this.config.image_token_index,De=ne.tolist().map(pt=>pt.findIndex(Ct=>Ct==he)),Ne=De.every(pt=>pt===-1),Je=De.every(pt=>pt!==-1);if(!Ne&&!Je)throw new Error("Every input should contain either 0 or 1 image token.");if(Ne)return{inputs_embeds:S,attention_mask:ge};const ft=[],bt=[];for(let pt=0;pt<De.length;++pt){const Ct=De[pt],wt=S[pt],Pt=O[pt],it=ge[pt];ft.push((0,u.cat)([wt.slice([0,Ct]),Pt,wt.slice([Ct+1,wt.dims[0]])],0)),bt.push((0,u.cat)([it.slice([0,Ct]),(0,u.ones)([Pt.dims[0]]),it.slice([Ct+1,it.dims[0]])],0))}return{inputs_embeds:(0,u.stack)(ft,0),attention_mask:(0,u.stack)(bt,0)}}}class Gs extends hn{}class ha extends hn{}class hi extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Z(this,"main_input_name","inputs_embeds")}}class fa extends hi{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:O,input_ids:ne,attention_mask:ge}){return{inputs_embeds:(0,u.cat)([O,S],1),attention_mask:(0,u.cat)([(0,u.ones)(O.dims.slice(0,2)),ge],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:O,inputs_embeds:ne,attention_mask:ge}){if(!S&&!O)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let he,Ee;return S&&(he=await this.encode_text({input_ids:S})),O&&(Ee=await this.encode_image({pixel_values:O})),he&&Ee?{inputs_embeds:ne,attention_mask:ge}=this._merge_input_ids_with_image_features({inputs_embeds:he,image_features:Ee,input_ids:S,attention_mask:ge}):ne=he||Ee,{inputs_embeds:ne,attention_mask:ge}}async forward({input_ids:S,pixel_values:O,attention_mask:ne,decoder_input_ids:ge,decoder_attention_mask:he,encoder_outputs:Ee,past_key_values:De,inputs_embeds:Ne,decoder_inputs_embeds:Je}){if(Ne||({inputs_embeds:Ne,attention_mask:ne}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:O,inputs_embeds:Ne,attention_mask:ne})),!Ee){let{last_hidden_state:pt}=await re(this,{inputs_embeds:Ne,attention_mask:ne});Ee=pt}if(!Je){if(!ge)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Je=await this.encode_text({input_ids:ge})}return await ae(this,{inputs_embeds:Je,attention_mask:he,encoder_attention_mask:ne,encoder_hidden_states:Ee,past_key_values:De},!0)}}class _a extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ga extends _a{_merge_input_ids_with_image_features(S){const O=S.image_features.dims.at(-1),ne=S.image_features.view(-1,O);return F({image_token_id:this.config.image_token_index,...S,image_features:ne})}}class jn extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class fn extends jn{async encode_image({pixel_values:S,pixel_attention_mask:O}){return(await B(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:O})).image_features}_merge_input_ids_with_image_features(S){const O=S.image_features.dims.at(-1),ne=S.image_features.view(-1,O);return F({image_token_id:this.config.image_token_id,...S,image_features:ne})}}class fi extends fn{}class wa extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class _i extends wa{async forward({input_ids:S=null,attention_mask:O=null,pixel_values:ne=null,image_sizes:ge=null,position_ids:he=null,inputs_embeds:Ee=null,past_key_values:De=null,generation_config:Ne=null,logits_processor:Je=null,...ft}){if(!Ee){let pt;if(ne&&S.dims[1]!==1){if(!ge)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:pt}=await B(this.sessions.vision_encoder,{pixel_values:ne,image_sizes:ge}))}else{const Ct=this.config.normalized_config.hidden_size;pt=new u.Tensor("float32",[],[0,Ct])}({inputs_embeds:Ee}=await B(this.sessions.prepare_inputs_embeds,{input_ids:S,image_features:pt}))}return await ae(this,{inputs_embeds:Ee,past_key_values:De,attention_mask:O,position_ids:he,generation_config:Ne,logits_processor:Je},!1)}}class Bs extends G{}class ba extends Bs{}class bo extends Bs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"text_model"})}}class ya extends Bs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"text_model"})}}class yo extends Bs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"vision_model"})}}class Ma extends Bs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"vision_model"})}}class Ks extends G{}class Hs extends Ks{}class gi extends Ks{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"text_model"})}}class va extends Bs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"vision_model"})}}class xa extends G{}class Nn extends xa{}class qs extends G{}class wi extends qs{async forward(S){const O=!S.input_ids,ne=!S.pixel_values;if(O&&ne)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(O&&(S.input_ids=(0,u.ones)([S.pixel_values.dims[0],1])),ne){const{image_size:Je}=this.config.vision_config;S.pixel_values=(0,u.full)([0,3,Je,Je],0)}const{text_embeddings:ge,image_embeddings:he,l2norm_text_embeddings:Ee,l2norm_image_embeddings:De}=await super.forward(S),Ne={};return O||(Ne.text_embeddings=ge,Ne.l2norm_text_embeddings=Ee),ne||(Ne.image_embeddings=he,Ne.l2norm_image_embeddings=De),Ne}}class bi extends qs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"text_model"})}}class yi extends qs{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"vision_model"})}}class Vn extends G{}class Mi extends Vn{}class vi extends Vn{}class xi extends G{}class Ti extends xi{}class Ei extends xi{}class Qs extends G{}class ut extends Qs{}class Ta extends Qs{}class Un extends G{}class Pi extends Un{}class _n extends Un{}class Kr extends G{}class gn extends Kr{}class Wn extends Kr{}class Gn extends G{}class Ci extends Gn{}class Si extends Gn{}class wn extends G{}class $i extends wn{}class Ii extends wn{}class Kn extends G{}class bn extends Kn{}class Hn extends Kn{}class yn extends G{}class ki extends yn{}class Ai extends yn{}class qn extends G{}class Fi extends qn{}class Oi extends qn{}class Qn extends G{}class m extends Qn{}class T extends Qn{}class k extends G{}class L extends k{}class V extends k{}class ce extends G{}class Te extends ce{}class Le extends ce{}class Ke extends G{}class tt extends Ke{}class Mt extends Ke{}class kt extends G{}class Kt extends kt{}class Tr extends kt{}class Ls extends G{}class Ea extends Ls{}class Sd extends Ls{}class Mo extends G{}class $d extends Mo{}class Id extends Mo{}class vo extends G{}class kd extends vo{}class Ad extends vo{}class xo extends G{}class Fd extends xo{}class Od extends xo{}class To extends G{}class Dd extends To{}class Ld extends To{}class Eo extends G{}class zd extends Eo{}class Bd extends Eo{}class Po extends G{}class Rd extends Po{}class jd extends Po{}class Co extends G{}class Nd extends Co{}class Vd extends Co{}class Ud extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Wd extends Ud{get_rope_index(S,O,ne,ge){const{vision_config:he,image_token_id:Ee,video_token_id:De,vision_start_token_id:Ne}=this.config,Je=he.spatial_merge_size??2,ft=[];if(O||ne){let bt=S.tolist();ge||(ge=(0,u.ones_like)(S));const pt=ge.tolist(),Ct=Array.from({length:3},Jt=>Array.from({length:S.dims[0]},nr=>Array.from({length:S.dims[1]},dr=>1))),wt=O?O.tolist():[],Pt=ne?ne.tolist():[];let it=0,It=0;for(let Jt=0;Jt<bt.length;++Jt){const nr=bt[Jt].filter((ir,Pr)=>pt[Jt][Pr]==1),ar=nr.reduce((ir,Pr,Js)=>(Pr==Ne&&ir.push(Js),ir),[]).map(ir=>nr[ir+1]),br=ar.filter(ir=>ir==Ee).length,kr=ar.filter(ir=>ir==De).length;let St=[],Er=0,Jr=br,vn=kr;for(let ir=0;ir<ar.length;++ir){const Pr=nr.findIndex((En,ws)=>ws>Er&&En==Ee),Js=nr.findIndex((En,ws)=>ws>Er&&En==De),Tn=Jr>0&&Pr!==-1?Pr:nr.length+1,Yn=vn>0&&Js!==-1?Js:nr.length+1;let Wa,Pl,Cl,Sl;Tn<Yn?([Pl,Cl,Sl]=wt[it],++it,--Jr,Wa=Tn):([Pl,Cl,Sl]=Pt[It],++It,--vn,Wa=Yn);const[mv,$l,Ga]=[Number(Pl),Math.floor(Number(Cl)/Je),Math.floor(Number(Sl)/Je)],Il=Wa-Er,Pf=St.length>0?(0,f.max)(St.at(-1))[0]+1:0;St.push(Array.from({length:3*Il},(En,ws)=>Pf+ws%Il));const kl=Il+Pf,Ka=mv*$l*Ga,hv=Array.from({length:Ka},(En,ws)=>kl+Math.floor(ws/($l*Ga))),fv=Array.from({length:Ka},(En,ws)=>kl+Math.floor(ws/Ga)%$l),_v=Array.from({length:Ka},(En,ws)=>kl+ws%Ga);St.push([hv,fv,_v].flat()),Er=Wa+Ka}if(Er<nr.length){const ir=St.length>0?(0,f.max)(St.at(-1))[0]+1:0,Pr=nr.length-Er;St.push(Array.from({length:3*Pr},(Js,Tn)=>ir+Tn%Pr))}const Wr=St.reduce((ir,Pr)=>ir+Pr.length,0),cs=new Array(Wr);let Na=0;for(let ir=0;ir<3;++ir)for(let Pr=0;Pr<St.length;++Pr){const Js=St[Pr],Tn=Js.length/3;for(let Yn=ir*Tn;Yn<(ir+1)*Tn;++Yn)cs[Na++]=Js[Yn]}let xn=0;const Va=pt[Jt];for(let ir=0;ir<Va.length;++ir)if(Va[ir]==1){for(let Pr=0;Pr<3;++Pr)Ct[Pr][Jt][ir]=cs[Pr*Wr/3+xn];++xn}const Ua=(0,f.max)(cs)[0];ft.push(Ua+1-bt[Jt].length)}return[new u.Tensor("int64",Ct.flat(1/0),[3,S.dims[0],S.dims[1]]),new u.Tensor("int64",ft,[ft.length,1])]}else if(ge){const{data:bt,dims:pt}=Me(ge),Ct=BigInt64Array.from({length:3*bt.length},(Pt,it)=>bt[it%bt.length]),wt=Array.from({length:pt[0]},(Pt,it)=>(0,f.max)(bt.subarray(pt[1]*it,pt[1]*(it+1)))[0]+1n+BigInt(pt[1]));return[new u.Tensor("int64",Ct,[3,...pt]),new u.Tensor("int64",wt,[wt.length,1])]}else{const[bt,pt]=S.dims,Ct=BigInt64Array.from({length:3*bt*pt},(wt,Pt)=>BigInt(Math.floor(Pt%pt/bt)));return[new u.Tensor("int64",Ct,[3,...S.dims]),(0,u.zeros)([bt,1])]}}async encode_image({pixel_values:S,image_grid_thw:O}){return(await B(this.sessions.vision_encoder,{pixel_values:S,grid_thw:O})).image_features}_merge_input_ids_with_image_features(S){return F({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,O,ne){if(O.attention_mask&&!O.position_ids)if(!O.past_key_values)[O.position_ids,O.rope_deltas]=this.get_rope_index(O.input_ids,O.image_grid_thw,O.video_grid_thw,O.attention_mask);else{O.pixel_values=null;const ge=BigInt(Object.values(O.past_key_values)[0].dims.at(-2)),he=O.rope_deltas.map(Ee=>ge+Ee);O.position_ids=(0,u.stack)([he,he,he],0)}return O}}class So extends G{}class Gd extends So{}class Kd extends So{}class $o extends G{}class Hd extends $o{}class qd extends $o{}class Io extends G{}class Qd extends Io{}class Xd extends Io{}class ko extends G{}class Jd extends ko{}class Yd extends ko{}class Ao extends G{}class Zd extends Ao{}class eu extends Ao{}class Fo extends G{}class tu extends Fo{}class ru extends Fo{async _call(S){return new xt(await super._call(S))}}class Oo extends G{}class su extends Oo{}class nu extends Oo{async _call(S){return new xt(await super._call(S))}}class iu extends G{}class au extends iu{}class Do extends G{}class ou extends Do{}class lu extends Do{async _call(S){return new xt(await super._call(S))}}class cu extends G{}class du extends cu{}class Lo extends G{}class uu extends Lo{}class pu extends Lo{async _call(S){return new xt(await super._call(S))}}class mu extends G{}class hu extends mu{}class zo extends G{}class fu extends zo{}class _u extends zo{async _call(S){return new xt(await super._call(S))}}class gu extends G{}class wu extends gu{async _call(S){return new Tf(await super._call(S))}}class Bo extends G{}class bu extends Bo{}class yu extends Bo{async _call(S){return new xt(await super._call(S))}}class Ro extends G{}class Mu extends Ro{}class vu extends Ro{async _call(S){return new xt(await super._call(S))}}class jo extends G{}class xu extends jo{}class Tu extends jo{}class No extends G{}class Eu extends No{}class Pu extends No{}class Vo extends G{}class Cu extends Vo{}class Su extends Vo{async _call(S){return new xt(await super._call(S))}}class Pa extends G{}class $u extends Pa{}class Iu extends Pa{async _call(S){return new Wo(await super._call(S))}}class Uo extends Pa{async _call(S){return new ku(await super._call(S))}}class Wo extends be{constructor({logits:S,pred_boxes:O}){super(),this.logits=S,this.pred_boxes=O}}class ku extends be{constructor({logits:S,pred_boxes:O,pred_masks:ne}){super(),this.logits=S,this.pred_boxes=O,this.pred_masks=ne}}class Go extends G{}class Au extends Go{}class Fu extends Go{async _call(S){return new Di(await super._call(S))}}class Di extends be{constructor({logits:S,pred_boxes:O}){super(),this.logits=S,this.pred_boxes=O}}class Ko extends G{}class Ou extends Ko{}class Du extends Ko{async _call(S){return new Lu(await super._call(S))}}class Lu extends Di{}class Ho extends G{}class zu extends Ho{}class Bu extends Ho{async _call(S){return new Ru(await super._call(S))}}class Ru extends Di{}class qo extends G{}class ju extends qo{}class Nu extends qo{async _call(S){return new Di(await super._call(S))}}class Qo extends G{}class Vu extends Qo{}class Uu extends Qo{async _call(S){return new Wu(await super._call(S))}}class Wu extends Wo{}class Xo extends G{}class Gu extends Xo{}class Ku extends Xo{async _call(S){return new xt(await super._call(S))}}class Jo extends G{}class Hu extends Jo{}class qu extends Jo{async _call(S){return new xt(await super._call(S))}}class Yo extends G{}class Qu extends Yo{}class Xu extends Yo{async _call(S){return new xt(await super._call(S))}}class Ca extends G{}class Ju extends Ca{}class Yu extends Ca{async _call(S){return new xt(await super._call(S))}}class Zu extends Ca{}class Zo extends G{}class ep extends Zo{}class tp extends Zo{}class el extends G{}class rp extends el{}class sp extends el{}class np extends G{}class ip extends np{}class Sa extends G{}class ap extends Sa{}class op extends Sa{}class lp extends Sa{}class cp extends G{}class dp extends cp{}class up extends G{}class pp extends up{}class mp extends G{}class hp extends mp{}class tl extends G{}class fp extends tl{}class _p extends tl{}class rl extends G{}class gp extends rl{}class wp extends rl{}class bp extends G{}class yp extends bp{}class sl extends G{}class Mp extends sl{}class vp extends sl{async _call(S){return new xt(await super._call(S))}}class nl extends G{}class xp extends nl{}class Tp extends nl{async _call(S){return new xt(await super._call(S))}}class il extends G{}class Ep extends il{}class Pp extends il{async _call(S){return new xt(await super._call(S))}}class al extends G{}class Cp extends al{}class Sp extends al{async _call(S){return new xt(await super._call(S))}}class $p extends G{}class Ip extends $p{}class ol extends G{}class kp extends ol{}class Ap extends ol{async _call(S){return new Fp(await super._call(S))}}class Fp extends be{constructor({logits:S,pred_boxes:O}){super(),this.logits=S,this.pred_boxes=O}}class Op extends G{}class Dp extends Op{async get_image_embeddings({pixel_values:S}){return await re(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const ne=S.input_points.dims.slice(0,-1),ge=ne.reduce((he,Ee)=>he*Ee,1);S.input_labels=new u.Tensor("int64",new BigInt64Array(ge).fill(1n),ne)}const O={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(O.input_points=S.input_points),S.input_labels&&(O.input_labels=S.input_labels),S.input_boxes&&(O.input_boxes=S.input_boxes),await B(this.sessions.prompt_encoder_mask_decoder,O)}async _call(S){return new Lp(await super._call(S))}}class Lp extends be{constructor({iou_scores:S,pred_masks:O}){super(),this.iou_scores=S,this.pred_masks=O}}class ll extends G{}class zp extends ll{}class Bp extends ll{}class cl extends G{}class Rp extends cl{}class jp extends cl{}class Xs extends G{}class Np extends Xs{}class Vp extends Xs{async _call(S){return new Mn(await super._call(S))}}class Up extends Xs{async _call(S){return new xt(await super._call(S))}}class Wp extends Xs{async _call(S){return new Ir(await super._call(S))}}class dl extends G{}class Gp extends dl{}class Kp extends dl{async _call(S){return new Ir(await super._call(S))}}class Hp extends G{}class qp extends Hp{}class $a extends G{}class Qp extends $a{}class Xp extends $a{async _call(S){return new Mn(await super._call(S))}}class Jp extends $a{async _call(S){return new xt(await super._call(S))}}class Li extends G{}class Yp extends Li{}class Zp extends Li{async _call(S){return new Mn(await super._call(S))}}class em extends Li{async _call(S){return new xt(await super._call(S))}}class tm extends Li{async _call(S){return new Ir(await super._call(S))}}class Ia extends G{}class rm extends Ia{}class sm extends Ia{async _call(S){return new Mn(await super._call(S))}}class nm extends Ia{async _call(S){return new xt(await super._call(S))}}class Y0 extends G{}class im extends Xs{}class am extends Xs{async _call(S){return new Mn(await super._call(S))}}class om extends Xs{async _call(S){return new xt(await super._call(S))}}class Xn extends G{}class lm extends Xn{}class cm extends Xn{async _call(S){return new Mn(await super._call(S))}}class dm extends Xn{async _call(S){return new xt(await super._call(S))}}class um extends Xn{async _call(S){return new xf(await super._call(S))}}class pm extends Xn{async _call(S){return new Ir(await super._call(S))}}class mm extends G{}class hm extends mm{}class ka extends G{}class Z0 extends ka{}class fm extends ka{}class _m extends ka{async generate_speech(S,O,{threshold:ne=.5,minlenratio:ge=0,maxlenratio:he=20,vocoder:Ee=null}={}){const De={input_ids:S},{encoder_outputs:Ne,encoder_attention_mask:Je}=await re(this,De),ft=Ne.dims[1]/this.config.reduction_factor,bt=Math.floor(ft*he),pt=Math.floor(ft*ge),Ct=this.config.num_mel_bins;let wt=[],Pt=null,it=null,It=0;for(;;){++It;const dr=q(!!it);let ar;it?ar=it.output_sequence_out:ar=new u.Tensor("float32",new Float32Array(Ct),[1,1,Ct]);let br={use_cache_branch:dr,output_sequence:ar,encoder_attention_mask:Je,speaker_embeddings:O,encoder_hidden_states:Ne};this.addPastKeyValues(br,Pt),it=await B(this.sessions.decoder_model_merged,br),Pt=this.getPastKeyValues(it,Pt);const{prob:kr,spectrum:St}=it;if(wt.push(St),It>=pt&&(Array.from(kr.data).filter(Er=>Er>=ne).length>0||It>=bt))break}const Jt=(0,u.cat)(wt),{waveform:nr}=await B(Ee.sessions.model,{spectrogram:Jt});return{spectrogram:Jt,waveform:nr}}}class gm extends G{constructor(){super(...arguments);Z(this,"main_input_name","spectrogram")}}class wm extends G{}class bm extends wm{}class ul extends G{}class ym extends ul{}class Mm extends ul{}class pl extends G{}class vm extends pl{}class xm extends pl{}class ml extends G{}class Tm extends ml{}class Em extends ml{}class Aa extends G{}class Pm extends Aa{}class Cm extends Aa{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"text_model"})}}class Sm extends Aa{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"audio_model"})}}class $m extends G{}class hl extends $m{async _call(S){return new Ef(await super._call(S))}}class Fa extends G{}class ev extends Fa{}class Im extends Fa{}class km extends Fa{}class fl extends G{}class Am extends fl{}class Fm extends fl{}class _l extends G{}class Om extends _l{}class Dm extends _l{async _call(S){return new xt(await super._call(S))}}class gl extends G{}class tv extends gl{}class rv extends gl{}class wl extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(O){const[ne,ge]=O.dims,he=this.config.decoder.num_codebooks,Ee=ge-he;let De=0;for(let ft=0;ft<O.size;++ft){if(O.data[ft]===this.config.decoder.pad_token_id)continue;const bt=ft%ge,pt=Math.floor(ft/ge)%he,Ct=bt-pt;Ct>0&&Ct<=Ee&&(O.data[De++]=O.data[ft])}const Ne=Math.floor(ne/he),Je=De/(Ne*he);return new u.Tensor(O.type,O.data.slice(0,De),[Ne,he,Je])}prepare_inputs_for_generation(O,ne,ge){let he=structuredClone(O);for(let De=0;De<he.length;++De)for(let Ne=0;Ne<he[De].length;++Ne)De%this.config.decoder.num_codebooks>=Ne&&(he[De][Ne]=BigInt(this.config.decoder.pad_token_id));return ge.guidance_scale!==null&&ge.guidance_scale>1&&(he=he.concat(he)),super.prepare_inputs_for_generation(he,ne,ge)}async generate(O){const ne=await super.generate(O),ge=this._apply_and_filter_by_delay_pattern_mask(ne).unsqueeze_(0),{audio_values:he}=await B(this.sessions.encodec_decode,{audio_codes:ge});return he}}class Oa extends G{}class Lm extends Oa{}class zm extends Oa{async _call(S){return new xt(await super._call(S))}}class Bm extends Oa{}class Da extends G{}class Rm extends Da{}class jm extends Da{async _call(S){return new xt(await super._call(S))}}class Nm extends Da{}class La extends G{}class Vm extends La{}class Um extends La{async _call(S){return new xt(await super._call(S))}}class Wm extends La{}class za extends G{}class Gm extends za{}class Km extends za{async _call(S){return new xt(await super._call(S))}}class Hm extends za{}class qm extends G{}class Qm extends qm{}class Xm extends G{}class Jm extends Xm{constructor(...O){super(...O);Z(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(O){const ne=this._generation_mode??"text";let ge;if(ne==="text"||!O.past_key_values){const Je=this.sessions.prepare_inputs_embeds,ft=(0,o.pick)(O,Je.inputNames);ge=await B(Je,ft)}else{const Je=this.sessions.gen_img_embeds,ft=(0,o.pick)({image_ids:O.input_ids},Je.inputNames);ge=await B(Je,ft)}const he={...O,...ge},Ee=await ae(this,he),De=this.sessions[ne==="text"?"lm_head":"gen_head"];if(!De)throw new Error(`Unable to find "${De}" generation head`);const Ne=await B(De,(0,o.pick)(Ee,De.inputNames));return{...ge,...Ee,...Ne}}async generate(O){return this._generation_mode="text",super.generate(O)}async generate_images(O){this._generation_mode="image";const ne=(O.inputs??O[this.main_input_name]).dims[1],he=(await super.generate(O)).slice(null,[ne,null]),Ee=this.sessions.image_decode,{decoded_image:De}=await B(Ee,{generated_tokens:he}),Ne=De.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Je=[];for(const ft of Ne){const bt=_.RawImage.fromTensor(ft);Je.push(bt)}return Je}}class Ym extends be{constructor({char_logits:S,bpe_logits:O,wp_logits:ne}){super(),this.char_logits=S,this.bpe_logits=O,this.wp_logits=ne}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Zm extends G{}class eh extends Zm{async _call(S){return new Ym(await super._call(S))}}class bl extends G{}class th extends bl{}class rh extends bl{}class yl extends G{}class sh extends yl{}class nh extends yl{}class ih extends G{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class ah extends ih{_merge_input_ids_with_audio_features(S){const O=S.audio_features.dims.at(-1),ne=S.audio_features.view(-1,O);return U({audio_token_id:this.config.ignore_index,...S,audio_features:ne})}}class Ba extends G{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class oh extends be{constructor({audio_codes:S}){super(),this.audio_codes=S}}class lh extends be{constructor({audio_values:S}){super(),this.audio_values=S}}class ch extends Ba{async encode(S){return new oh(await B(this.sessions.encoder_model,S))}async decode(S){return new lh(await B(this.sessions.decoder_model,S))}}class dh extends Ba{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class uh extends Ba{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class Ra extends G{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class ph extends be{constructor({audio_codes:S}){super(),this.audio_codes=S}}class mh extends be{constructor({audio_values:S}){super(),this.audio_values=S}}class hh extends Ra{async encode(S){return new ph(await B(this.sessions.encoder_model,S))}async decode(S){return new mh(await B(this.sessions.decoder_model,S))}}class fh extends Ra{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class _h extends Ra{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class ja extends G{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class gh extends ja{async encode(S){return await B(this.sessions.encoder_model,S)}async decode(S){return await B(this.sessions.decoder_model,S)}}class wh extends ja{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class bh extends ja{static async from_pretrained(S,O={}){return super.from_pretrained(S,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class Lt{static async from_pretrained(S,{progress_callback:O=null,config:ne=null,cache_dir:ge=null,local_files_only:he=!1,revision:Ee="main",model_file_name:De=null,subfolder:Ne="onnx",device:Je=null,dtype:ft=null,use_external_data_format:bt=null,session_options:pt={}}={}){const Ct={progress_callback:O,config:ne,cache_dir:ge,local_files_only:he,revision:Ee,model_file_name:De,subfolder:Ne,device:Je,dtype:ft,use_external_data_format:bt,session_options:pt};if(Ct.config=await s.AutoConfig.from_pretrained(S,Ct),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const wt=Ct.config.model_type;for(const Pt of this.MODEL_CLASS_MAPPINGS){let it=Pt.get(wt);if(!it){for(const It of Pt.values())if(It[0]===wt){it=It;break}if(!it)continue}return await it[1].from_pretrained(S,Ct)}if(this.BASE_IF_FAIL)return Gh.has(wt)||console.warn(`Unknown model class "${wt}", attempting to construct from base class.`),await G.from_pretrained(S,Ct);throw Error(`Unsupported model type: ${wt}`)}}Z(Lt,"MODEL_CLASS_MAPPINGS",null),Z(Lt,"BASE_IF_FAIL",!1);const sv=new Map([["bert",["BertModel",Pe]],["modernbert",["ModernBertModel",Ie]],["nomic_bert",["NomicBertModel",Ge]],["roformer",["RoFormerModel",mt]],["electra",["ElectraModel",fe]],["esm",["EsmModel",ot]],["convbert",["ConvBertModel",yt]],["camembert",["CamembertModel",ct]],["deberta",["DebertaModel",zr]],["deberta-v2",["DebertaV2Model",Is]],["mpnet",["MPNetModel",nn]],["albert",["AlbertModel",pe]],["distilbert",["DistilBertModel",Fs]],["roberta",["RobertaModel",xr]],["xlm",["XLMModel",mn]],["xlm-roberta",["XLMRobertaModel",na]],["clap",["ClapModel",Pm]],["clip",["CLIPModel",ba]],["clipseg",["CLIPSegModel",Mi]],["chinese_clip",["ChineseCLIPModel",Nn]],["siglip",["SiglipModel",Hs]],["jina_clip",["JinaCLIPModel",wi]],["mobilebert",["MobileBertModel",as]],["squeezebert",["SqueezeBertModel",Us]],["wav2vec2",["Wav2Vec2Model",Np]],["wav2vec2-bert",["Wav2Vec2BertModel",rm]],["unispeech",["UniSpeechModel",Qp]],["unispeech-sat",["UniSpeechSatModel",Yp]],["hubert",["HubertModel",im]],["wavlm",["WavLMModel",lm]],["audio-spectrogram-transformer",["ASTModel",ca]],["vits",["VitsModel",hl]],["pyannote",["PyAnnoteModel",Gp]],["wespeaker-resnet",["WeSpeakerResNetModel",qp]],["detr",["DetrModel",$u]],["rt_detr",["RTDetrModel",Au]],["rt_detr_v2",["RTDetrV2Model",Ou]],["rf_detr",["RFDetrModel",zu]],["d_fine",["DFineModel",ju]],["table-transformer",["TableTransformerModel",Vu]],["vit",["ViTModel",tu]],["ijepa",["IJepaModel",su]],["pvt",["PvtModel",ou]],["vit_msn",["ViTMSNModel",uu]],["vit_mae",["ViTMAEModel",du]],["groupvit",["GroupViTModel",hu]],["fastvit",["FastViTModel",fu]],["mobilevit",["MobileViTModel",bu]],["mobilevitv2",["MobileViTV2Model",Mu]],["owlvit",["OwlViTModel",xu]],["owlv2",["Owlv2Model",Eu]],["beit",["BeitModel",Cu]],["deit",["DeiTModel",Gu]],["hiera",["HieraModel",Hu]],["convnext",["ConvNextModel",Mp]],["convnextv2",["ConvNextV2Model",xp]],["dinov2",["Dinov2Model",Ep]],["dinov2_with_registers",["Dinov2WithRegistersModel",Cp]],["resnet",["ResNetModel",Qu]],["swin",["SwinModel",Ju]],["swin2sr",["Swin2SRModel",ep]],["donut-swin",["DonutSwinModel",yp]],["yolos",["YolosModel",kp]],["dpt",["DPTModel",rp]],["glpn",["GLPNModel",gp]],["hifigan",["SpeechT5HifiGan",gm]],["efficientnet",["EfficientNetModel",Om]],["decision_transformer",["DecisionTransformerModel",Qm]],["patchtst",["PatchTSTForPrediction",th]],["patchtsmixer",["PatchTSMixerForPrediction",sh]],["mobilenet_v1",["MobileNetV1Model",Lm]],["mobilenet_v2",["MobileNetV2Model",Rm]],["mobilenet_v3",["MobileNetV3Model",Vm]],["mobilenet_v4",["MobileNetV4Model",Gm]],["maskformer",["MaskFormerModel",fp]],["mgp-str",["MgpstrForSceneTextRecognition",eh]],["style_text_to_speech_2",["StyleTextToSpeech2Model",hm]]]),nv=new Map([["t5",["T5Model",ue]],["longt5",["LongT5Model",Qe]],["mt5",["MT5Model",gt]],["bart",["BartModel",er]],["mbart",["MBartModel",Sr]],["marian",["MarianModel",zp]],["whisper",["WhisperModel",ua]],["m2m_100",["M2M100Model",Rp]],["blenderbot",["BlenderbotModel",wr]],["blenderbot-small",["BlenderbotSmallModel",Xr]]]),iv=new Map([["mimi",["MimiModel",ch]],["dac",["DacModel",hh]],["snac",["SnacModel",gh]]]),av=new Map([["bloom",["BloomModel",Qd]],["jais",["JAISModel",ut]],["gpt2",["GPT2Model",Ti]],["gptj",["GPTJModel",Ci]],["gpt_bigcode",["GPTBigCodeModel",$i]],["gpt_neo",["GPTNeoModel",Pi]],["gpt_neox",["GPTNeoXModel",gn]],["codegen",["CodeGenModel",bn]],["llama",["LlamaModel",ki]],["exaone",["ExaoneModel",L]],["olmo",["OlmoModel",tt]],["olmo2",["Olmo2Model",Kt]],["mobilellm",["MobileLLMModel",Te]],["granite",["GraniteModel",Ea]],["cohere",["CohereModel",$d]],["gemma",["GemmaModel",kd]],["gemma2",["Gemma2Model",Fd]],["gemma3_text",["Gemma3Model",Dd]],["helium",["HeliumModel",Fi]],["glm",["GlmModel",m]],["openelm",["OpenELMModel",zd]],["qwen2",["Qwen2Model",Rd]],["qwen3",["Qwen3Model",Nd]],["phi",["PhiModel",Gd]],["phi3",["Phi3Model",Hd]],["mpt",["MptModel",Jd]],["opt",["OPTModel",Zd]],["mistral",["MistralModel",ym]],["starcoder2",["Starcoder2Model",vm]],["falcon",["FalconModel",Tm]],["stablelm",["StableLmModel",Am]]]),Ml=new Map([["speecht5",["SpeechT5ForSpeechToText",fm]],["whisper",["WhisperForConditionalGeneration",di]],["lite-whisper",["LiteWhisperForConditionalGeneration",ui]],["moonshine",["MoonshineForConditionalGeneration",ma]]]),yh=new Map([["speecht5",["SpeechT5ForTextToSpeech",_m]]]),Mh=new Map([["vits",["VitsModel",hl]],["musicgen",["MusicgenForConditionalGeneration",wl]]]),vh=new Map([["bert",["BertForSequenceClassification",Fe]],["modernbert",["ModernBertForSequenceClassification",et]],["roformer",["RoFormerForSequenceClassification",Wt]],["electra",["ElectraForSequenceClassification",ve]],["esm",["EsmForSequenceClassification",ns]],["convbert",["ConvBertForSequenceClassification",D]],["camembert",["CamembertForSequenceClassification",Rt]],["deberta",["DebertaForSequenceClassification",ms]],["deberta-v2",["DebertaV2ForSequenceClassification",hs]],["mpnet",["MPNetForSequenceClassification",on]],["albert",["AlbertForSequenceClassification",I]],["distilbert",["DistilBertForSequenceClassification",Cr]],["roberta",["RobertaForSequenceClassification",hr]],["xlm",["XLMForSequenceClassification",ra]],["xlm-roberta",["XLMRobertaForSequenceClassification",aa]],["bart",["BartForSequenceClassification",gr]],["mbart",["MBartForSequenceClassification",rr]],["mobilebert",["MobileBertForSequenceClassification",_r]],["squeezebert",["SqueezeBertForSequenceClassification",un]]]),xh=new Map([["bert",["BertForTokenClassification",Be]],["modernbert",["ModernBertForTokenClassification",nt]],["roformer",["RoFormerForTokenClassification",Bt]],["electra",["ElectraForTokenClassification",vt]],["esm",["EsmForTokenClassification",is]],["convbert",["ConvBertForTokenClassification",ie]],["camembert",["CamembertForTokenClassification",Xt]],["deberta",["DebertaForTokenClassification",ss]],["deberta-v2",["DebertaV2ForTokenClassification",ks]],["mpnet",["MPNetForTokenClassification",ln]],["distilbert",["DistilBertForTokenClassification",fs]],["roberta",["RobertaForTokenClassification",fr]],["xlm",["XLMForTokenClassification",sa]],["xlm-roberta",["XLMRobertaForTokenClassification",oa]]]),vl=new Map([["t5",["T5ForConditionalGeneration",xe]],["longt5",["LongT5ForConditionalGeneration",We]],["mt5",["MT5ForConditionalGeneration",Dt]],["bart",["BartForConditionalGeneration",Gt]],["mbart",["MBartForConditionalGeneration",$r]],["marian",["MarianMTModel",Bp]],["m2m_100",["M2M100ForConditionalGeneration",jp]],["blenderbot",["BlenderbotForConditionalGeneration",Br]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Fr]]]),xl=new Map([["bloom",["BloomForCausalLM",Xd]],["gpt2",["GPT2LMHeadModel",Ei]],["jais",["JAISLMHeadModel",Ta]],["gptj",["GPTJForCausalLM",Si]],["gpt_bigcode",["GPTBigCodeForCausalLM",Ii]],["gpt_neo",["GPTNeoForCausalLM",_n]],["gpt_neox",["GPTNeoXForCausalLM",Wn]],["codegen",["CodeGenForCausalLM",Hn]],["llama",["LlamaForCausalLM",Ai]],["exaone",["ExaoneForCausalLM",V]],["olmo",["OlmoForCausalLM",Mt]],["olmo2",["Olmo2ForCausalLM",Tr]],["mobilellm",["MobileLLMForCausalLM",Le]],["granite",["GraniteForCausalLM",Sd]],["cohere",["CohereForCausalLM",Id]],["gemma",["GemmaForCausalLM",Ad]],["gemma2",["Gemma2ForCausalLM",Od]],["gemma3_text",["Gemma3ForCausalLM",Ld]],["helium",["HeliumForCausalLM",Oi]],["glm",["GlmForCausalLM",T]],["openelm",["OpenELMForCausalLM",Bd]],["qwen2",["Qwen2ForCausalLM",jd]],["qwen3",["Qwen3ForCausalLM",Vd]],["phi",["PhiForCausalLM",Kd]],["phi3",["Phi3ForCausalLM",qd]],["mpt",["MptForCausalLM",Yd]],["opt",["OPTForCausalLM",eu]],["mbart",["MBartForCausalLM",gs]],["mistral",["MistralForCausalLM",Mm]],["starcoder2",["Starcoder2ForCausalLM",xm]],["falcon",["FalconForCausalLM",Em]],["trocr",["TrOCRForCausalLM",bm]],["stablelm",["StableLmForCausalLM",Fm]],["phi3_v",["Phi3VForCausalLM",_i]]]),ov=new Map([["multi_modality",["MultiModalityCausalLM",Jm]]]),Th=new Map([["bert",["BertForMaskedLM",$e]],["modernbert",["ModernBertForMaskedLM",Ve]],["roformer",["RoFormerForMaskedLM",$t]],["electra",["ElectraForMaskedLM",Oe]],["esm",["EsmForMaskedLM",jt]],["convbert",["ConvBertForMaskedLM",ts]],["camembert",["CamembertForMaskedLM",st]],["deberta",["DebertaForMaskedLM",rs]],["deberta-v2",["DebertaV2ForMaskedLM",qr]],["mpnet",["MPNetForMaskedLM",an]],["albert",["AlbertForMaskedLM",J]],["distilbert",["DistilBertForMaskedLM",Ae]],["roberta",["RobertaForMaskedLM",sr]],["xlm",["XLMWithLMHeadModel",ta]],["xlm-roberta",["XLMRobertaForMaskedLM",ia]],["mobilebert",["MobileBertForMaskedLM",mr]],["squeezebert",["SqueezeBertForMaskedLM",dn]]]),Eh=new Map([["bert",["BertForQuestionAnswering",He]],["roformer",["RoFormerForQuestionAnswering",yr]],["electra",["ElectraForQuestionAnswering",Ot]],["convbert",["ConvBertForQuestionAnswering",R]],["camembert",["CamembertForQuestionAnswering",Mr]],["deberta",["DebertaForQuestionAnswering",$s]],["deberta-v2",["DebertaV2ForQuestionAnswering",As]],["mpnet",["MPNetForQuestionAnswering",cn]],["albert",["AlbertForQuestionAnswering",N]],["distilbert",["DistilBertForQuestionAnswering",jr]],["roberta",["RobertaForQuestionAnswering",Or]],["xlm",["XLMForQuestionAnswering",oi]],["xlm-roberta",["XLMRobertaForQuestionAnswering",la]],["mobilebert",["MobileBertForQuestionAnswering",os]],["squeezebert",["SqueezeBertForQuestionAnswering",pn]]]),Tl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",pi]],["idefics3",["Idefics3ForConditionalGeneration",fn]],["smolvlm",["SmolVLMForConditionalGeneration",fi]]]),Ph=new Map([["llava",["LlavaForConditionalGeneration",hn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Gs]],["moondream1",["Moondream1ForConditionalGeneration",ha]],["florence2",["Florence2ForConditionalGeneration",fa]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Wd]],["idefics3",["Idefics3ForConditionalGeneration",fn]],["smolvlm",["SmolVLMForConditionalGeneration",fi]],["paligemma",["PaliGemmaForConditionalGeneration",ga]]]),Ch=new Map([["ultravox",["UltravoxModel",ah]]]),lv=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",pi]]]),Sh=new Map([["vit",["ViTForImageClassification",ru]],["ijepa",["IJepaForImageClassification",nu]],["pvt",["PvtForImageClassification",lu]],["vit_msn",["ViTMSNForImageClassification",pu]],["fastvit",["FastViTForImageClassification",_u]],["mobilevit",["MobileViTForImageClassification",yu]],["mobilevitv2",["MobileViTV2ForImageClassification",vu]],["beit",["BeitForImageClassification",Su]],["deit",["DeiTForImageClassification",Ku]],["hiera",["HieraForImageClassification",qu]],["convnext",["ConvNextForImageClassification",vp]],["convnextv2",["ConvNextV2ForImageClassification",Tp]],["dinov2",["Dinov2ForImageClassification",Pp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Sp]],["resnet",["ResNetForImageClassification",Xu]],["swin",["SwinForImageClassification",Yu]],["segformer",["SegformerForImageClassification",Im]],["efficientnet",["EfficientNetForImageClassification",Dm]],["mobilenet_v1",["MobileNetV1ForImageClassification",zm]],["mobilenet_v2",["MobileNetV2ForImageClassification",jm]],["mobilenet_v3",["MobileNetV3ForImageClassification",Um]],["mobilenet_v4",["MobileNetV4ForImageClassification",Km]]]),$h=new Map([["detr",["DetrForObjectDetection",Iu]],["rt_detr",["RTDetrForObjectDetection",Fu]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Du]],["rf_detr",["RFDetrForObjectDetection",Bu]],["d_fine",["DFineForObjectDetection",Nu]],["table-transformer",["TableTransformerForObjectDetection",Uu]],["yolos",["YolosForObjectDetection",Ap]]]),Ih=new Map([["owlvit",["OwlViTForObjectDetection",Tu]],["owlv2",["Owlv2ForObjectDetection",Pu]],["grounding-dino",["GroundingDinoForObjectDetection",Ip]]]),Jn=new Map([["detr",["DetrForSegmentation",Uo]],["clipseg",["CLIPSegForImageSegmentation",vi]]]),kh=new Map([["segformer",["SegformerForSemanticSegmentation",km]],["sapiens",["SapiensForSemanticSegmentation",ap]],["swin",["SwinForSemanticSegmentation",Zu]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",Bm]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",Nm]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Wm]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",Hm]]]),Ah=new Map([["detr",["DetrForSegmentation",Uo]],["maskformer",["MaskFormerForInstanceSegmentation",_p]]]),Fh=new Map([["sam",["SamModel",Dp]]]),Oh=new Map([["wav2vec2",["Wav2Vec2ForCTC",Vp]],["wav2vec2-bert",["Wav2Vec2BertForCTC",sm]],["unispeech",["UniSpeechForCTC",Xp]],["unispeech-sat",["UniSpeechSatForCTC",Zp]],["wavlm",["WavLMForCTC",cm]],["hubert",["HubertForCTC",am]]]),Dh=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Up]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",nm]],["unispeech",["UniSpeechForSequenceClassification",Jp]],["unispeech-sat",["UniSpeechSatForSequenceClassification",em]],["wavlm",["WavLMForSequenceClassification",dm]],["hubert",["HubertForSequenceClassification",om]],["audio-spectrogram-transformer",["ASTForAudioClassification",da]]]),Lh=new Map([["wavlm",["WavLMForXVector",um]]]),zh=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",tm]],["wavlm",["WavLMForAudioFrameClassification",pm]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Wp]],["pyannote",["PyAnnoteForAudioFrameClassification",Kp]]]),Bh=new Map([["vitmatte",["VitMatteForImageMatting",wu]]]),cv=new Map([["patchtst",["PatchTSTForPrediction",rh]],["patchtsmixer",["PatchTSMixerForPrediction",nh]]]),Rh=new Map([["swin2sr",["Swin2SRForImageSuperResolution",tp]]]),jh=new Map([["dpt",["DPTForDepthEstimation",sp]],["depth_anything",["DepthAnythingForDepthEstimation",ip]],["glpn",["GLPNForDepthEstimation",wp]],["sapiens",["SapiensForDepthEstimation",op]],["depth_pro",["DepthProForDepthEstimation",dp]],["metric3d",["Metric3DForDepthEstimation",pp]],["metric3dv2",["Metric3Dv2ForDepthEstimation",hp]]]),Nh=new Map([["sapiens",["SapiensForNormalEstimation",lp]]]),Vh=new Map([["vitpose",["VitPoseForPoseEstimation",au]]]),Uh=new Map([["clip",["CLIPVisionModelWithProjection",Ma]],["siglip",["SiglipVisionModel",va]],["jina_clip",["JinaCLIPVisionModel",yi]]]),Wh=[[sv,E.EncoderOnly],[nv,E.EncoderDecoder],[av,E.DecoderOnly],[iv,E.AutoEncoder],[vh,E.EncoderOnly],[xh,E.EncoderOnly],[vl,E.Seq2Seq],[Ml,E.Seq2Seq],[xl,E.DecoderOnly],[ov,E.MultiModality],[Th,E.EncoderOnly],[Eh,E.EncoderOnly],[Tl,E.Vision2Seq],[Ph,E.ImageTextToText],[Ch,E.AudioTextToText],[Sh,E.EncoderOnly],[Jn,E.EncoderOnly],[Ah,E.EncoderOnly],[kh,E.EncoderOnly],[Bh,E.EncoderOnly],[cv,E.EncoderOnly],[Rh,E.EncoderOnly],[jh,E.EncoderOnly],[Nh,E.EncoderOnly],[Vh,E.EncoderOnly],[$h,E.EncoderOnly],[Ih,E.EncoderOnly],[Fh,E.MaskGeneration],[Oh,E.EncoderOnly],[Dh,E.EncoderOnly],[yh,E.Seq2Seq],[Mh,E.EncoderOnly],[Lh,E.EncoderOnly],[zh,E.EncoderOnly],[Uh,E.EncoderOnly]];for(const[y,S]of Wh)for(const[O,ne]of y.values())x.set(O,S),M.set(ne,O),b.set(O,ne);const dv=[["MusicgenForConditionalGeneration",wl,E.Musicgen],["Phi3VForCausalLM",_i,E.Phi3V],["CLIPTextModelWithProjection",ya,E.EncoderOnly],["SiglipTextModel",gi,E.EncoderOnly],["JinaCLIPTextModel",bi,E.EncoderOnly],["ClapTextModelWithProjection",Cm,E.EncoderOnly],["ClapAudioModelWithProjection",Sm,E.EncoderOnly],["DacEncoderModel",fh,E.EncoderOnly],["DacDecoderModel",_h,E.EncoderOnly],["MimiEncoderModel",dh,E.EncoderOnly],["MimiDecoderModel",uh,E.EncoderOnly],["SnacEncoderModel",wh,E.EncoderOnly],["SnacDecoderModel",bh,E.EncoderOnly]];for(const[y,S,O]of dv)x.set(y,O),M.set(S,y),b.set(y,S);const Gh=new Map([["modnet",Jn],["birefnet",Jn],["isnet",Jn],["ben",Jn]]);for(const[y,S]of Gh.entries())S.set(y,["PreTrainedModel",G]),x.set(y,E.EncoderOnly),M.set(G,y),b.set(y,G);class El extends Lt{}Z(El,"MODEL_CLASS_MAPPINGS",Wh.map(S=>S[0])),Z(El,"BASE_IF_FAIL",!0);class Kh extends Lt{}Z(Kh,"MODEL_CLASS_MAPPINGS",[vh]);class Hh extends Lt{}Z(Hh,"MODEL_CLASS_MAPPINGS",[xh]);class qh extends Lt{}Z(qh,"MODEL_CLASS_MAPPINGS",[vl]);class Qh extends Lt{}Z(Qh,"MODEL_CLASS_MAPPINGS",[Ml]);class Xh extends Lt{}Z(Xh,"MODEL_CLASS_MAPPINGS",[yh]);class Jh extends Lt{}Z(Jh,"MODEL_CLASS_MAPPINGS",[Mh]);class Yh extends Lt{}Z(Yh,"MODEL_CLASS_MAPPINGS",[xl]);class Zh extends Lt{}Z(Zh,"MODEL_CLASS_MAPPINGS",[Th]);class ef extends Lt{}Z(ef,"MODEL_CLASS_MAPPINGS",[Eh]);class tf extends Lt{}Z(tf,"MODEL_CLASS_MAPPINGS",[Tl]);class rf extends Lt{}Z(rf,"MODEL_CLASS_MAPPINGS",[Sh]);class sf extends Lt{}Z(sf,"MODEL_CLASS_MAPPINGS",[Jn]);class nf extends Lt{}Z(nf,"MODEL_CLASS_MAPPINGS",[kh]);class af extends Lt{}Z(af,"MODEL_CLASS_MAPPINGS",[Ah]);class of extends Lt{}Z(of,"MODEL_CLASS_MAPPINGS",[$h]);class lf extends Lt{}Z(lf,"MODEL_CLASS_MAPPINGS",[Ih]);class cf extends Lt{}Z(cf,"MODEL_CLASS_MAPPINGS",[Fh]);class df extends Lt{}Z(df,"MODEL_CLASS_MAPPINGS",[Oh]);class uf extends Lt{}Z(uf,"MODEL_CLASS_MAPPINGS",[Dh]);class pf extends Lt{}Z(pf,"MODEL_CLASS_MAPPINGS",[Lh]);class mf extends Lt{}Z(mf,"MODEL_CLASS_MAPPINGS",[zh]);class hf extends Lt{}Z(hf,"MODEL_CLASS_MAPPINGS",[lv]);class ff extends Lt{}Z(ff,"MODEL_CLASS_MAPPINGS",[Bh]);class _f extends Lt{}Z(_f,"MODEL_CLASS_MAPPINGS",[Rh]);class gf extends Lt{}Z(gf,"MODEL_CLASS_MAPPINGS",[jh]);class wf extends Lt{}Z(wf,"MODEL_CLASS_MAPPINGS",[Nh]);class bf extends Lt{}Z(bf,"MODEL_CLASS_MAPPINGS",[Vh]);class yf extends Lt{}Z(yf,"MODEL_CLASS_MAPPINGS",[Uh]);class Mf extends Lt{}Z(Mf,"MODEL_CLASS_MAPPINGS",[Ph]);class vf extends Lt{}Z(vf,"MODEL_CLASS_MAPPINGS",[Ch]);class uv extends be{constructor({logits:S,past_key_values:O,encoder_outputs:ne,decoder_attentions:ge=null,cross_attentions:he=null}){super(),this.logits=S,this.past_key_values=O,this.encoder_outputs=ne,this.decoder_attentions=ge,this.cross_attentions=he}}class xt extends be{constructor({logits:S,...O}){super(),this.logits=S;const ne=Object.values(O);ne.length>0&&(this.attentions=ne)}}class xf extends be{constructor({logits:S,embeddings:O}){super(),this.logits=S,this.embeddings=O}}class Ir extends be{constructor({logits:S}){super(),this.logits=S}}class Dr extends be{constructor({logits:S}){super(),this.logits=S}}class Nr extends be{constructor({start_logits:S,end_logits:O}){super(),this.start_logits=S,this.end_logits=O}}class Mn extends be{constructor({logits:S}){super(),this.logits=S}}class pv extends be{constructor({logits:S,past_key_values:O}){super(),this.logits=S,this.past_key_values=O}}class Tf extends be{constructor({alphas:S}){super(),this.alphas=S}}class Ef extends be{constructor({waveform:S,spectrogram:O}){super(),this.waveform=S,this.spectrogram=O}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(o,l){return(0,i.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(o){(0,s.validate_audio_inputs)(o,"ASTFeatureExtractor");const l=await this._extract_fbank_features(o,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let d=0;d<p.length;++d)p[d]=(p[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class a{static async from_pretrained(l,c={}){const p=await(0,i.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=p.feature_extractor_type,u=n[d];if(!u)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new u(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),a=t("./src/models/image_processors.js");class o{static async from_pretrained(c,p={}){const d=await(0,i.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),u=d.image_processor_type??d.feature_extractor_type;let _=a[u];return _||(u!==void 0&&console.warn(`Image processor type '${u}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),_=n.ImageProcessor),new _(d)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),a=t("./src/models/processors.js"),o=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,u={}){const _=await(0,i.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,u),{image_processor_type:f,feature_extractor_type:v,processor_class:$}=_;if($&&a[$])return a[$].from_pretrained(d,u);if(!f&&!v)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const w={};if(f){const C=o[f];if(!C)throw new Error(`Unknown image_processor_type: '${f}'.`);w.image_processor=new C(_)}if(v){const C=o[v];if(C)w.image_processor=new C(_);else{const E=l[v];if(!E)throw new Error(`Unknown feature_extractor_type: '${v}'.`);w.feature_extractor=new E(_)}}const g={};return new n.Processor(g,w)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o),this.mel_filters=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,i.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(o,l,c,p){let d;const u=o.length-l;if(u>0)if(c==="rand_trunc"){const _=Math.floor(Math.random()*(u+1));o=o.subarray(_,_+l),d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(u<0){let _=new Float64Array(l);if(_.set(o),p==="repeat")for(let f=o.length;f<l;f+=o.length)_.set(o.subarray(0,Math.min(o.length,l-f)),f);else if(p==="repeatpad")for(let f=o.length;f<-u;f+=o.length)_.set(o,f);o=_}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(o,l,c=null){return(0,i.spectrogram)(o,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(o,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(o,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(o,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){super(o),this.crop_pct=this.config.crop_pct??224/256}async resize(o){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[d,u]=this.get_resize_output_image_size(o,{shortest_edge:p});o=await o.resize(d,u,{resample:this.resample}),o=await o.center_crop(l,l)}else o=await o.resize(l,l,{resample:this.resample});return o}}class n extends i{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>i});var s=t("./src/models/encodec/feature_extraction_encodec.js");class i extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],d=(0,i.full)(p,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class a extends n{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(o,l,c,p={}){const[d,u,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let v=this.image_std;Array.isArray(v)||(v=new Array(_).fill(f));const $=f.map((w,g)=>-w/v[g]);return super.pad_image(o,l,c,{center:!0,constant_values:$,...p})}}class n extends i{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(a){super(a),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(o=>o*o))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(o){(0,s.validate_audio_inputs)(o,"EncodecFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=this.config.feature_size;if(o.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,o.length/l];return{input_values:new i.Tensor("float32",o,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>i.EncodecFeatureExtractor,ImageFeatureExtractor:()=>v.ImageProcessor,MoonshineFeatureExtractor:()=>o.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>u.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),i=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),a=t("./src/models/dac/feature_extraction_dac.js"),o=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),d=t("./src/models/speecht5/feature_extraction_speecht5.js"),u=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),_=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),f=t("./src/models/whisper/feature_extraction_whisper.js"),v=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class a extends s.Processor{constructor(l,c){super(l,c);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:d,task_prompts_with_input:u}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(d??{})),this.task_prompts_with_input=new Map(Object.entries(u??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[d,u]of this.task_prompts_with_input)if(p.includes(d)){c.push(u.replaceAll("{input}",p).replaceAll(d,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let u;switch(d){case"pure_text":u=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=d==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),v=[],$=[];for(const[w,g,...C]of f)v.push(g?g.trim():v.at(-1)??""),$.push(C.map((E,x)=>(Number(E)+.5)/this.size_per_bin*p[x%2]));u={labels:v,[_]:$};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:u}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,p),u=c?this.tokenizer(c,p):{};return{...d,...u}}}Z(a,"tokenizer_class",n.AutoTokenizer),Z(a,"image_processor_class",i.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o){const l=await super._call(o),c=l.pixel_values.dims,p=(0,i.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),a=t("./src/base/image_processors_utils.js");function o(c,p){const u=c.dims.at(-1)-1,_=c.tolist();_.fill(!1,0,1),_.fill(!1,u);const f=p.tolist();return _.map((v,$)=>v?$:null).filter(v=>v!==null).map(v=>f[v])}class l extends s.Processor{async _call(p,d,u={}){const _=p?await this.image_processor(p,u):{};return{...d?this.tokenizer(d,u):{},..._}}post_process_grounded_object_detection(p,d,{box_threshold:u=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:v,pred_boxes:$}=p,w=v.dims[0];if(f!==null&&f.length!==w)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const g=v.dims.at(1),C=v.sigmoid(),E=C.max(-1).tolist(),x=$.tolist().map(M=>M.map(P=>(0,a.center_to_corners_format)(P))),b=[];for(let M=0;M<w;++M){const P=f!==null?f[M]:null;P!==null&&(x[M]=x[M].map(B=>B.map((Y,H)=>Y*P[(H+1)%2])));const A=E[M],z=[],K=[],Q=[];for(let B=0;B<g;++B){const Y=A[B];if(Y<=u)continue;const H=x[M][B],q=C[M][B];z.push(Y),Q.push(H);const X=o(q.gt(_),d[M]);K.push(X)}b.push({scores:z,boxes:Q,labels:this.batch_decode(K)})}return b}}Z(l,"tokenizer_class",n.AutoTokenizer),Z(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(o){super(o),this.do_image_splitting=o.do_image_splitting??!0,this.max_image_size=o.max_image_size}get_resize_for_vision_encoder(o,l){let[c,p]=o.dims.slice(-2);const d=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*d),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(o,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(o))p=[[o]];else{if(o.length===0||!o[0])throw new Error("No images provided.");Array.isArray(o[0])?p=o:p=[o]}let d=[],u=[],_=[];const f=[],v=[];for(const M of p){let P=await Promise.all(M.map(K=>this.preprocess(K)));f.push(...P.map(K=>K.original_size)),v.push(...P.map(K=>K.reshaped_input_size)),P.forEach(K=>K.pixel_values.unsqueeze_(0));const{longest_edge:A}=this.max_image_size;let z;if(l??this.do_image_splitting){let K=new Array(P.length),Q=new Array(P.length);z=await Promise.all(P.map(async(B,Y)=>{const H=this.get_resize_for_vision_encoder(B.pixel_values,A),q=await(0,i.interpolate_4d)(B.pixel_values,{size:[H.height,H.width]}),{frames:X,num_splits_h:re,num_splits_w:de}=await this.split_image(q,this.max_image_size);return K[Y]=re,Q[Y]=de,(0,i.cat)(X,0)})),u.push(K),_.push(Q)}else{const K=[A,A];z=await Promise.all(P.map(Q=>(0,i.interpolate_4d)(Q.pixel_values,{size:K}))),u.push(new Array(P.length).fill(0)),_.push(new Array(P.length).fill(0))}d.push((0,i.cat)(z,0))}const $=d.length,[w,g,C,E]=d[0].dims;let x,b;if($===1)x=d[0].unsqueeze_(0),b=(0,i.full)([$,w,C,E],!0);else{const M=Math.max(...d.map(z=>z.dims.at(0)));b=(0,i.full)([$,M,C,E],!0);const P=b.data,A=M*C*E;for(let z=0;z<$;++z){const K=d[z].dims[0];if(K<M){d[z]=(0,i.cat)([d[z],(0,i.full)([M-K,g,C,E],0)],0);const Q=z*A+K*C*E,B=(z+1)*A;P.fill(!1,Q,B)}}x=(0,i.stack)(d,0)}return{pixel_values:x,pixel_attention_mask:b,original_sizes:f,reshaped_input_sizes:v,...c?{rows:u,cols:_}:{}}}async split_image(o,{longest_edge:l}){const c=l,p=l,d=[],[u,_]=o.dims.slice(-2);let f=0,v=0;if(u>c||_>p){f=Math.ceil(u/c),v=Math.ceil(_/p);const $=Math.ceil(u/f),w=Math.ceil(_/v);for(let E=0;E<f;++E)for(let x=0;x<v;++x){let b,M,P,A;E===f-1?(M=u-$,A=u):(M=E*$,A=(E+1)*$),x===v-1?(b=_-w,P=_):(b=x*w,P=(x+1)*w);const z=[M,b],K=[A,P],Q=await(0,i.slice)(o,z,K,[2,3]);d.push(Q)}const g=c,C=p;(u!==g||_!==C)&&(o=await(0,i.interpolate_4d)(o,{size:[g,C]}))}return d.push(o),{frames:d,num_splits_h:f,num_splits_w:v}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var a=t("./src/utils/core.js");function o(d,u,_,f,v,$){let w="";for(let g=0;g<u;++g){for(let C=0;C<_;++C)w+=f+`<row_${g+1}_col_${C+1}>`+v.repeat(d);w+=`
`}return w+=`
${f}${$}`+v.repeat(d)+`${f}`,w}function l(d,u,_,f){return`${u}${f}`+_.repeat(d)+`${u}`}function c(d,u,_,f,v,$){return d===0&&u===0?l(_,f,v,$):o(_,d,u,f,v,$)}class p extends s.Processor{constructor(){super(...arguments);Z(this,"fake_image_token","<fake_token_around_image>");Z(this,"image_token","<image>");Z(this,"global_img_token","<global-img>")}async _call(_,f=null,v={}){v.return_row_col_info??(v.return_row_col_info=!0);let $;f&&($=await this.image_processor(f,v)),Array.isArray(_)||(_=[_]);const w=$.rows??[new Array(_.length).fill(0)],g=$.cols??[new Array(_.length).fill(0)],C=this.config.image_seq_len,E=[],x=[];for(let M=0;M<_.length;++M){const P=_[M],A=w[M],z=g[M];E.push((0,a.count)(P,this.image_token));const K=A.map((Y,H)=>c(Y,z[H],C,this.fake_image_token,this.image_token,this.global_img_token)),Q=P.split(this.image_token);if(Q.length===0)throw new Error("The image token should be present in the text.");let B=Q[0];for(let Y=0;Y<K.length;++Y)B+=K[Y]+Q[Y+1];x.push(B)}return{...this.tokenizer(x),...$}}}Z(p,"image_processor_class",i.AutoImageProcessor),Z(p,"tokenizer_class",n.AutoTokenizer),Z(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>i.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,DPTFeatureExtractor:()=>d.DPTFeatureExtractor,DPTImageProcessor:()=>d.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>u.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>v.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>C.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>E.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>E.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>x.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>x.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>b.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>b.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>M.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>M.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>A.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>A.MobileViTImageProcessor,NougatImageProcessor:()=>z.NougatImageProcessor,OwlViTFeatureExtractor:()=>Q.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Q.OwlViTImageProcessor,Owlv2ImageProcessor:()=>K.Owlv2ImageProcessor,Phi3VImageProcessor:()=>B.Phi3VImageProcessor,PvtImageProcessor:()=>Y.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>q.RTDetrImageProcessor,SamImageProcessor:()=>X.SamImageProcessor,SegformerFeatureExtractor:()=>re.SegformerFeatureExtractor,SegformerImageProcessor:()=>re.SegformerImageProcessor,SiglipImageProcessor:()=>de.SiglipImageProcessor,SmolVLMImageProcessor:()=>ae.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,VLMImageProcessor:()=>$.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTImageProcessor:()=>F.ViTImageProcessor,VitMatteImageProcessor:()=>U.VitMatteImageProcessor,VitPoseImageProcessor:()=>ee.VitPoseImageProcessor,YolosFeatureExtractor:()=>_e.YolosFeatureExtractor,YolosImageProcessor:()=>_e.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),i=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=t("./src/models/clip/image_processing_clip.js"),o=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),d=t("./src/models/dpt/image_processing_dpt.js"),u=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),v=t("./src/models/idefics3/image_processing_idefics3.js"),$=t("./src/models/janus/image_processing_janus.js"),w=t("./src/models/jina_clip/image_processing_jina_clip.js"),g=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),C=t("./src/models/mask2former/image_processing_mask2former.js"),E=t("./src/models/maskformer/image_processing_maskformer.js"),x=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),b=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),M=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),A=t("./src/models/mobilevit/image_processing_mobilevit.js"),z=t("./src/models/nougat/image_processing_nougat.js"),K=t("./src/models/owlv2/image_processing_owlv2.js"),Q=t("./src/models/owlvit/image_processing_owlvit.js"),B=t("./src/models/phi3_v/image_processing_phi3_v.js"),Y=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),q=t("./src/models/rt_detr/image_processing_rt_detr.js"),X=t("./src/models/sam/image_processing_sam.js"),re=t("./src/models/segformer/image_processing_segformer.js"),de=t("./src/models/siglip/image_processing_siglip.js"),ae=t("./src/models/smolvlm/image_processing_smolvlm.js"),j=t("./src/models/swin2sr/image_processing_swin2sr.js"),F=t("./src/models/vit/image_processing_vit.js"),U=t("./src/models/vitmatte/image_processing_vitmatte.js"),ee=t("./src/models/vitpose/image_processing_vitpose.js"),_e=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(a){super({do_pad:!0,pad_size:{width:a.image_size,height:a.image_size},...a}),this.constant_values=this.config.background_color.map(o=>o*this.rescale_factor)}pad_image(a,o,l,c){return super.pad_image(a,o,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),a=t("./src/utils/core.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(d,u){super(d,u),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:u=null,chat_template:_="default"}={}){u?Array.isArray(u)||(u=[u]):u=await Promise.all(d.filter(z=>z.images).flatMap(z=>z.images).map(z=>l.RawImage.read(z)));const f=this.tokenizer,v=f.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),$=z=>f.encode(z,{add_special_tokens:!1}),w=v.split(this.image_tag),g=w.length-1;if(u.length!==g)throw new Error(`Number of images provided (${u.length}) does not match number of "${this.image_tag}" image tags (${g})`);const[C,E,x]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let b=$(w[0]),M=new Array(b.length).fill(!1);for(let z=1;z<w.length;++z){const K=new Array(this.num_image_tokens).fill(C),Q=$(w[z]);b=(0,a.mergeArrays)(b,[E],K,[x],Q);const B=new Array(this.num_image_tokens).fill(!0);M=(0,a.mergeArrays)(M,[!1],B,[!1],new Array(Q.length).fill(!1))}const P=[1,b.length],A={input_ids:new o.Tensor("int64",b,P),attention_mask:new o.Tensor("int64",new Array(b.length).fill(1),P),images_seq_mask:new o.Tensor("bool",M,P),images_emb_mask:new o.Tensor("bool",new Array(g*this.num_image_tokens).fill(!0),[1,g,this.num_image_tokens])};if(u&&u.length>0){const z=await this.image_processor(u);return z.pixel_values.unsqueeze_(0),{...A,...z}}return A}}Z(c,"image_processor_class",i.AutoImageProcessor),Z(c,"tokenizer_class",n.AutoTokenizer),Z(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(a){const{resize_mode:o,fill_color:l,interpolation:c,size:p,...d}=a,u=o==="squash"?{width:p,height:p}:o==="shortest"?{shortest_edge:p}:{longest_edge:p},_=c==="bicubic"?3:2;super({...d,size:u,resample:_,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class a extends s.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,p):{},u=c?await this.image_processor(c,p):{};return{...d,...u}}}Z(a,"tokenizer_class",n.AutoTokenizer),Z(a,"image_processor_class",i.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>i});var s=t("./src/models/maskformer/image_processing_maskformer.js");class i extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_panoptic_segmentation(...o){return(0,s.post_process_panoptic_segmentation)(...o)}post_process_instance_segmentation(...o){return(0,s.post_process_instance_segmentation)(...o)}}class n extends i{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),a=t("./src/utils/maths.js");const o={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,d){if(!o.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[u,_]=o[d],f=this[u].bind(this),[v,$]=p.dims,w=[],g=[],C=p.tolist();for(let x=0;x<v;++x){const b=C[x],M=[],P=[];for(let z=1;z<$;++z){const[K,Q]=(0,a.max)((0,a.softmax)(b[z]));if(P.push(K),Q==_)break;M.push(Q)}const A=P.length>0?P.reduce((z,K)=>z*K,1):0;g.push(M),w.push(A)}return[f(g),w]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}batch_decode([p,d,u]){const[_,f]=this._decode_helper(p,"char"),[v,$]=this._decode_helper(d,"bpe"),[w,g]=this._decode_helper(u,"wp"),C=[],E=[];for(let x=0;x<_.length;++x){const[b,M]=(0,a.max)([f[x],$[x],g[x]]);C.push([_[x],v[x],w[x]][M]),E.push(b)}return{generated_text:C,scores:E,char_preds:_,bpe_preds:v,wp_preds:w}}static async from_pretrained(...p){const d=await super.from_pretrained(...p),u=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:u,wp_tokenizer:_},d}async _call(p,d=null){const u=await this.image_processor(p);return d&&(u.labels=this.tokenizer(d).input_ids),u}}Z(l,"tokenizer_class",n.AutoTokenizer),Z(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(o){(0,s.validate_audio_inputs)(o,"MoonshineFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=[1,o.length];return{input_values:new i.Tensor("float32",o,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>a});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class a extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Z(a,"tokenizer_class",i.AutoTokenizer),Z(a,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>i});var s=t("./src/models/donut/image_processing_donut.js");class i extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>i});var s=t("./src/models/owlvit/image_processing_owlvit.js");class i extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}class n extends i{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class a extends s.Processor{}Z(a,"tokenizer_class",n.AutoTokenizer),Z(a,"image_processor_class",i.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const a="<image>";function o(c,p,d,u,_){return`${u.repeat(d*_)}${p}${c}
`}class l extends s.Processor{async _call(p,d=null,u={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(p)||(p=[p]),Array.isArray(d)||(d=[d]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let v;d.some(g=>g.includes(a))?v=d.map(g=>{const C=g.replaceAll(a,a.repeat(f)),E=C.lastIndexOf(a),x=E===-1?0:E+a.length;return C.slice(0,x)+_+C.slice(x)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),v=d.map(g=>o(g,_,f,a,p.length)));const $=this.tokenizer(v,u);return{...await this.image_processor(p,u),...$}}}Z(l,"tokenizer_class",n.AutoTokenizer),Z(l,"image_processor_class",i.AutoImageProcessor),Z(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");const n=336,a=[2,3],{ceil:o,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(u){super({...u,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=u.num_crops}calc_num_image_tokens_from_image_size(u,_){const{num_img_tokens:f}=this.config;return l((l(_/n)*l(u/n)+1)*f+1+(l(_/n)+1)*c(f))}get_resize_output_image_size(u,_){const f=this._num_crops,[v,$]=u.size;let w=v/$,g=1;for(;g*Math.ceil(g/w)<=f;)g+=1;g-=1;const C=Math.floor(g*336),E=Math.floor(C/w);return[C,E]}pad_image(u,_,f,v={}){const[$,w]=_,g=n*o($/n),C=n*o(w/n),E=[1,1,1].map((x,b)=>(x-this.image_mean[b])/this.image_std[b]);return super.pad_image(u,_,{width:C,height:g},{center:!0,constant_values:E,...v})}async _call(u,{num_crops:_=null}={}){if(this._num_crops=_??(_=this.config.num_crops),_<4||c(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(u)||(u=[u]);const f=u.length,v=await Promise.all(u.map(M=>this.preprocess(M))),$=v.map(M=>M.original_size),w=v.map(M=>M.reshaped_input_size),g=[];for(const{pixel_values:M}of v){M.unsqueeze_(0);const[P,A]=M.dims.slice(-2),z=await(0,i.interpolate_4d)(M,{size:[n,n],mode:"bicubic"});if(_>0){const K=[],Q=c(_),B=l(A/Q),Y=l(P/Q);for(let q=0;q<Q;++q)for(let X=0;X<Q;++X){let re,de,ae,j;q===Q-1?(de=P-Y,j=P):(de=q*Y,j=(q+1)*Y),X===Q-1?(re=A-B,ae=A):(re=X*B,ae=(X+1)*B);const F=[de,re],U=[j,ae],ee=await(0,i.slice)(M,F,U,a);K.push(ee)}const H=await(0,i.interpolate_4d)((0,i.cat)(K,0),{size:[n,n],mode:"bicubic"});g.push((0,i.cat)([z,H],0))}else g.push(z)}const C=(0,i.stack)(g,0),E=w.map(M=>M.map(P=>n*o(P/n))),x=new i.Tensor("int64",E.flat(),[f,2]),b=E.map(([M,P])=>this.calc_num_image_tokens_from_image_size(P,M));return{pixel_values:C,original_sizes:$,reshaped_input_sizes:w,image_sizes:x,num_img_tokens:b}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const a="<|image|>",o=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,d=null,{padding:u=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let v,$;if(d){$=await this.image_processor(d,{num_crops:f});const{num_img_tokens:w}=$,g=p.map((E,x)=>E.split(o).join(a.repeat(w[x])));v=this.tokenizer(g,{padding:u,truncation:_});const C=this.tokenizer.model.convert_tokens_to_ids([a])[0];v.input_ids.map_(E=>E==C?-E:E)}else v=this.tokenizer(p);return{...v,...$}}}Z(l,"image_processor_class",i.AutoImageProcessor),Z(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>o.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>u.PaliGemmaProcessor,Phi3VProcessor:()=>d.Phi3VProcessor,PyAnnoteProcessor:()=>_.PyAnnoteProcessor,Qwen2VLProcessor:()=>f.Qwen2VLProcessor,SamProcessor:()=>v.SamProcessor,SmolVLMProcessor:()=>$.SmolVLMProcessor,SpeechT5Processor:()=>w.SpeechT5Processor,UltravoxProcessor:()=>g.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,Wav2Vec2Processor:()=>C.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>E.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>x.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),i=t("./src/models/grounding_dino/processing_grounding_dino.js"),n=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),o=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),c=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),d=t("./src/models/phi3_v/processing_phi3_v.js"),u=t("./src/models/paligemma/processing_paligemma.js"),_=t("./src/models/pyannote/processing_pyannote.js"),f=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),v=t("./src/models/sam/processing_sam.js"),$=t("./src/models/smolvlm/processing_smolvlm.js"),w=t("./src/models/speecht5/processing_speecht5.js"),g=t("./src/models/ultravox/processing_ultravox.js"),C=t("./src/models/wav2vec2/processing_wav2vec2.js"),E=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),x=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>a});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class a extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new i.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const u of l.tolist()){const _=[];let f=-1;for(let v=0;v<u.length;++v){const $=(0,n.softmax)(u[v]),[w,g]=(0,n.max)($),[C,E]=[v,v+1];g!==f?(f=g,_.push({id:g,start:C,end:E,score:w})):(_.at(-1).end=E,_.at(-1).score+=w)}d.push(_.map(({id:v,start:$,end:w,score:g})=>({id:v,start:$*p,end:w*p,confidence:g/(w-$)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(o){return await this.feature_extractor(o)}post_process_speaker_diarization(...o){return this.feature_extractor.post_process_speaker_diarization(...o)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Z(n,"feature_extractor_class",i.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:d}=await super._call(o,...l);let u=c;const{temporal_patch_size:_,merge_size:f,patch_size:v}=this.config;u.dims[0]===1&&(u=(0,i.cat)(Array.from({length:_},()=>u),0));const $=u.dims[0]/_,w=u.dims[1],g=Math.floor(u.dims[2]/v),C=Math.floor(u.dims[3]/v),E=u.view($,_,w,Math.floor(g/f),f,v,Math.floor(C/f),f,v).permute(0,3,6,4,7,2,1,5,8).view($*g*C,w*_*v*v),x=new i.Tensor("int64",[$,g,C],[1,3]);return{pixel_values:E,image_grid_thw:x,original_sizes:p,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class a extends s.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let d,u;if(c&&(d=await this.image_processor(c),u=d.image_grid_thw),u){let f=this.image_processor.config.merge_size**2,v=0;const $=u.tolist();l=l.map(w=>{for(;w.includes("<|image_pad|>");){const g=Number($[v++].reduce((C,E)=>C*E,1n));w=w.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(g/f)))}return w.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}Z(a,"image_processor_class",i.AutoImageProcessor),Z(a,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class a extends s.ImageProcessor{reshape_input_points(l,c,p,d=!1){l=structuredClone(l);let u=(0,i.calculateDimensions)(l);if(u.length===3)d||(u=[1,...u]),l=[l];else if(u.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=c[_],v=p[_],$=[v[0]/f[0],v[1]/f[1]];for(let w=0;w<l[_].length;++w)for(let g=0;g<l[_][w].length;++g)for(let C=0;C<l[_][w][g].length;++C)l[_][w][g][C]*=$[C%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),u)}add_input_labels(l,c){let p=(0,i.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((d,u)=>d!==c.dims[u]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:d=null}={}){const u=await super._call(l);if(c&&(u.input_points=this.reshape_input_points(c,u.original_sizes,u.reshaped_input_sizes)),p){if(!u.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");u.input_labels=this.add_input_labels(p,u.input_points)}return d&&(u.input_boxes=this.reshape_input_points(d,u.original_sizes,u.reshaped_input_sizes,!0)),u}async post_process_masks(l,c,p,{mask_threshold:d=0,binarize:u=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const v=[_.height,_.width];for(let $=0;$<c.length;++$){const w=c[$],g=p[$];let C=await(0,n.interpolate_4d)(l[$],{mode:"bilinear",size:v});if(C=C.slice(null,null,[0,g[0]],[0,g[1]]),C=await(0,n.interpolate_4d)(C,{mode:"bilinear",size:w}),u){const E=C.data,x=new Uint8Array(E.length);for(let b=0;b<E.length;++b)E[b]>d&&(x[b]=1);C=new n.Tensor("bool",x,C.dims)}f.push(C)}return f}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:d=512/1500,points_per_crop:u=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...o){return await this.image_processor(...o)}post_process_masks(...o){return this.image_processor.post_process_masks(...o)}reshape_input_points(...o){return this.image_processor.reshape_input_points(...o)}}Z(n,"image_processor_class",i.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>a});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class a extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:u=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(d){const[x,b]=_.dims,M=_.data;for(let P=0;P<b;++P){let A=0;for(let B=0;B<x;++B)A+=M[B*b+P];const z=A/x;let K=0;for(let B=0;B<x;++B)K+=(M[B*b+P]-z)**2;K/=x-1;const Q=Math.sqrt(K+1e-7);for(let B=0;B<x;++B){const Y=B*b+P;M[Y]=(M[Y]-z)/Q}}}let f;if(c){const[x,b]=_.dims,M=_.data,P=x%p;if(P>0){const A=new Float32Array(b*(x+P));A.set(M),A.fill(this.config.padding_value,M.length);const z=x+P;_=new i.Tensor(_.type,A,[z,b]),u&&(f=new i.Tensor("int64",new BigInt64Array(z),[1,z]),f.data.fill(1n,0,x))}}const[v,$]=_.dims,w=this.config.stride;if(v%w!==0)throw new Error(`The number of frames (${v}) must be a multiple of the stride (${w}).`);const C=_.view(1,Math.floor(v/w),$*w),E={input_features:C};if(u){const x=C.dims[1],b=new BigInt64Array(x);if(f){const M=f.data;for(let P=1,A=0;P<v;P+=w,++A)b[A]=M[P]}else b.fill(1n);E.attention_mask=new i.Tensor("int64",b,[1,x])}return E}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_semantic_segmentation(...o){return(0,s.post_process_semantic_segmentation)(...o)}}class n extends i{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>i});var s=t("./src/models/dac/feature_extraction_dac.js");class i extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");class i extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class a extends s.Processor{async _call(l){return await this.feature_extractor(l)}}Z(a,"tokenizer_class",i.AutoTokenizer),Z(a,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(a,o,l,c={}){const[p,d,u]=o;return super.pad_image(a,o,{width:d+(l-d%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>a});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class a extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const _=c.length,{input_features:f}=await this.feature_extractor(c,{...p,max_length:_}),v=Math.round(_/this.config.encoder_ds_factor+1e-4),$=1+Math.ceil(v/this.config.stack_factor);d.audio_token_len=[$],d.audio_values=f;const w=this.config.audio_placeholder;if(!l.includes(w))throw new Error(`The input text does not contain the image token ${w}.`);l=l.replaceAll(w,w.repeat($))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...d}}}Z(a,"tokenizer_class",i.AutoTokenizer),Z(a,"feature_extractor_class",s.AutoFeatureExtractor),Z(a,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o,l){Array.isArray(o)||(o=[o]),Array.isArray(l)||(l=[l]);const c=await Promise.all(o.map(u=>this.preprocess(u))),p=await Promise.all(l.map(u=>this.preprocess(u,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,i.stack)(c.map((u,_)=>(0,i.cat)([u.pixel_values,p[_].pixel_values],0)),0),original_sizes:c.map(u=>u.original_size),reshaped_input_sizes:c.map(u=>u.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_pose_estimation(a,o,{threshold:l=null}={}){const c=a.tolist(),[p,d,u,_]=a.dims,f=[];for(let v=0;v<p;++v){const $=c[v],w=o[v],g=[];for(let C=0;C<w.length;++C){const E=w[C],x=[],b=[],M=[],P=E.at(-2)/_,A=E.at(-1)/u;for(let z=0;z<$.length;++z){let[K,Q]=[0,0],B=0,Y=-1/0;const H=$[z];for(let X=0;X<H.length;++X){const re=H[X];for(let de=0;de<re.length;++de){const ae=re[de];B+=ae,Y=Math.max(Y,ae),K+=(de+.5)*ae,Q+=X*ae}}if(l!=null&&Y<l)continue;const q=[P*K/B,A*Q/B];x.push(q),M.push(z),b.push(Y)}g.push({bbox:E,scores:b,labels:M,keypoints:x})}f.push(g)}return f}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(o){const c=o.reduce((d,u)=>d+u,0)/o.length,p=o.reduce((d,u)=>d+(u-c)**2,0)/o.length;return o.map(d=>(d-c)/Math.sqrt(p+1e-7))}async _call(o){(0,s.validate_audio_inputs)(o,"Wav2Vec2FeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));let l=o;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new i.Tensor("float32",l,c),attention_mask:new i.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>a});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class a extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Z(a,"tokenizer_class",s.AutoTokenizer),Z(a,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>a});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class a extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Z(a,"tokenizer_class",s.AutoTokenizer),Z(a,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(o){return o=o.map(l=>l*32768),(0,i.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(o){(0,s.validate_audio_inputs)(o,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(o)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[d,u,_]=l.dims;for(let f=0;f<d;++f){const v=f*u*_,$=f*_;for(let w=0;w<u;++w){const g=v+w*_;for(let C=0;C<_;++C)p[g+C]-=c[$+C]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>i,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>a});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],i=new Map(s),n=new Map([...s.map(([o,l])=>[l,o]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(o){o=o.toLowerCase();let l=n.get(o);if(l===void 0){const c=o.match(/^<\|([a-z]{2})\|>$/);if(c&&(o=c[1]),i.has(o))l=o;else{const d=o.length===2?i.keys():i.values();throw new Error(`Language "${o}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>a});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class a extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,i.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,i.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,i.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,d=(0,n.max)(p)[0];for(let u=0;u<p.length;++u)p[u]=(Math.max(p[u],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,d)):(p=new Float32Array(d),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>i});var s=t("./src/generation/configuration_utils.js");class i extends s.GenerationConfig{constructor(){super(...arguments);Z(this,"return_timestamps",null);Z(this,"return_token_timestamps",null);Z(this,"num_frames",null);Z(this,"alignment_heads",null);Z(this,"task",null);Z(this,"language",null);Z(this,"no_timestamps_token_id",null);Z(this,"prompt_ids",null);Z(this,"is_multilingual",null);Z(this,"lang_to_id",null);Z(this,"task_to_id",null);Z(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>a});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class a extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Z(a,"tokenizer_class",i.AutoTokenizer),Z(a,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}class n extends i{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),i=t("./src/utils/tensor.js"),n=t("./src/env.js");const a=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,o=async(c,p,d)=>{const u=await(0,s.createInferenceSession)(new Uint8Array(c),p);let _=Promise.resolve();return async f=>{const v=(0,s.isONNXProxy)(),$=Object.fromEntries(Object.entries(f).map(([g,C])=>[g,(v?C.clone():C).ort_tensor])),w=await(_=a?_.then(()=>u.run($)):u.run($));return Array.isArray(d)?d.map(g=>new i.Tensor(w[g])):new i.Tensor(w[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=o([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=o([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=o([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=o([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=o([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=o([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=o([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=o([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Z(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>Q,AutomaticSpeechRecognitionPipeline:()=>Y,BackgroundRemovalPipeline:()=>re,DepthEstimationPipeline:()=>_e,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>z,FillMaskPipeline:()=>C,ImageClassificationPipeline:()=>q,ImageFeatureExtractionPipeline:()=>K,ImageSegmentationPipeline:()=>X,ImageToImagePipeline:()=>ee,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>ae,Pipeline:()=>v,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>x,Text2TextGenerationPipeline:()=>E,TextClassificationPipeline:()=>$,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>U,TokenClassificationPipeline:()=>w,TranslationPipeline:()=>b,ZeroShotAudioClassificationPipeline:()=>B,ZeroShotClassificationPipeline:()=>A,ZeroShotImageClassificationPipeline:()=>de,ZeroShotObjectDetectionPipeline:()=>j,pipeline:()=>ze});var s=t("./src/tokenizers.js"),i=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var a=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function u(me){return Array.isArray(me)||(me=[me]),await Promise.all(me.map(W=>d.RawImage.read(W)))}async function _(me,W){return Array.isArray(me)||(me=[me]),await Promise.all(me.map(se=>typeof se=="string"||se instanceof URL?(0,c.read_audio)(se,W):se instanceof Float64Array?new Float32Array(se):se))}function f(me,W){W&&(me=me.map(Se=>Se|0));const[se,G,be,we]=me;return{xmin:se,ymin:G,xmax:be,ymax:we}}class v extends a.Callable{constructor({task:W,model:se,tokenizer:G=null,processor:be=null}){super(),this.task=W,this.model=se,this.tokenizer=G,this.processor=be}async dispose(){await this.model.dispose()}}class $ extends v{constructor(W){super(W)}async _call(W,{top_k:se=1}={}){const G=this.tokenizer(W,{padding:!0,truncation:!0}),be=await this.model(G),we=this.model.config.problem_type==="multi_label_classification"?$e=>$e.sigmoid():$e=>new p.Tensor("float32",(0,l.softmax)($e.data),$e.dims),Se=this.model.config.id2label,Pe=[];for(const $e of be.logits){const Fe=we($e),Be=await(0,p.topk)(Fe,se),He=Be[0].tolist(),Ie=Be[1].tolist().map((Ve,et)=>({label:Se?Se[Ve]:`LABEL_${Ve}`,score:He[et]}));se===1?Pe.push(...Ie):Pe.push(Ie)}return Array.isArray(W)||se===1?Pe:Pe[0]}}class w extends v{constructor(W){super(W)}async _call(W,{ignore_labels:se=["O"]}={}){const G=Array.isArray(W),be=this.tokenizer(G?W:[W],{padding:!0,truncation:!0}),Se=(await this.model(be)).logits,Pe=this.model.config.id2label,$e=[];for(let Fe=0;Fe<Se.dims[0];++Fe){const Be=be.input_ids[Fe],He=Se[Fe],qe=[];for(let Ie=0;Ie<He.dims[0];++Ie){const Ve=He[Ie],et=(0,l.max)(Ve.data)[1],nt=Pe?Pe[et]:`LABEL_${et}`;if(se.includes(nt))continue;const lt=this.tokenizer.decode([Be[Ie].item()],{skip_special_tokens:!0});if(lt==="")continue;const Ge=(0,l.softmax)(Ve.data);qe.push({entity:nt,score:Ge[et],index:Ie,word:lt})}$e.push(qe)}return G?$e:$e[0]}}class g extends v{constructor(W){super(W)}async _call(W,se,{top_k:G=1}={}){const be=this.tokenizer(W,{text_pair:se,padding:!0,truncation:!0}),{start_logits:we,end_logits:Se}=await this.model(be),Pe=be.input_ids.tolist(),$e=be.attention_mask.tolist(),Fe=this.tokenizer.all_special_ids,Be=[];for(let He=0;He<we.dims[0];++He){const qe=Pe[He],Ie=qe.findIndex(ke=>ke==this.tokenizer.sep_token_id);$e[He].map((ke,mt)=>ke==1&&(mt===0||mt>Ie&&Fe.findIndex($t=>$t==qe[mt])===-1));const Ve=we[He].tolist(),et=Se[He].tolist();for(let ke=1;ke<Ve.length;++ke)($e[He]==0||ke<=Ie||Fe.findIndex(mt=>mt==qe[ke])!==-1)&&(Ve[ke]=-1/0,et[ke]=-1/0);const nt=(0,l.softmax)(Ve).map((ke,mt)=>[ke,mt]),lt=(0,l.softmax)(et).map((ke,mt)=>[ke,mt]);nt[0][0]=0,lt[0][0]=0;const Ge=(0,o.product)(nt,lt).filter(ke=>ke[0][1]<=ke[1][1]).map(ke=>[ke[0][1],ke[1][1],ke[0][0]*ke[1][0]]).sort((ke,mt)=>mt[2]-ke[2]);for(let ke=0;ke<Math.min(Ge.length,G);++ke){const[mt,$t,Wt]=Ge[ke],Bt=qe.slice(mt,$t+1),yr=this.tokenizer.decode(Bt,{skip_special_tokens:!0});Be.push({answer:yr,score:Wt})}}return G===1?Be[0]:Be}}class C extends v{constructor(W){super(W)}async _call(W,{top_k:se=5}={}){const G=this.tokenizer(W,{padding:!0,truncation:!0}),{logits:be}=await this.model(G),we=[],Se=G.input_ids.tolist();for(let Pe=0;Pe<Se.length;++Pe){const $e=Se[Pe],Fe=$e.findIndex(Ve=>Ve==this.tokenizer.mask_token_id);if(Fe===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Be=be[Pe][Fe],He=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Be.data),Be.dims),se),qe=He[0].tolist(),Ie=He[1].tolist();we.push(Ie.map((Ve,et)=>{const nt=$e.slice();return nt[Fe]=Ve,{score:qe[et],token:Number(Ve),token_str:this.tokenizer.decode([Ve]),sequence:this.tokenizer.decode(nt,{skip_special_tokens:!0})}}))}return Array.isArray(W)?we:we[0]}}class E extends v{constructor(se){super(se);Z(this,"_key","generated_text")}async _call(se,G={}){Array.isArray(se)||(se=[se]),this.model.config.prefix&&(se=se.map(Fe=>this.model.config.prefix+Fe));const be=this.model.config.task_specific_params;be&&be[this.task]&&be[this.task].prefix&&(se=se.map(Fe=>be[this.task].prefix+Fe));const we=this.tokenizer,Se={padding:!0,truncation:!0};let Pe;this instanceof b&&"_build_translation_inputs"in we?Pe=we._build_translation_inputs(se,Se,G):Pe=we(se,Se);const $e=await this.model.generate({...Pe,...G});return we.batch_decode($e,{skip_special_tokens:!0}).map(Fe=>({[this._key]:Fe}))}}class x extends E{constructor(se){super(se);Z(this,"_key","summary_text")}}class b extends E{constructor(se){super(se);Z(this,"_key","translation_text")}}function M(me){return Array.isArray(me)&&me.every(W=>"role"in W&&"content"in W)}class P extends v{constructor(W){super(W)}async _call(W,se={}){let G=!1,be=!1,we;if(typeof W=="string")we=W=[W];else if(Array.isArray(W)&&W.every(Ie=>typeof Ie=="string"))G=!0,we=W;else{if(M(W))W=[W];else if(Array.isArray(W)&&W.every(M))G=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");be=!0,we=W.map(Ie=>this.tokenizer.apply_chat_template(Ie,{tokenize:!1,add_generation_prompt:!0}))}const Se=se.add_special_tokens??!1,Pe=be?!1:se.return_full_text??!0;this.tokenizer.padding_side="left";const $e=this.tokenizer(we,{add_special_tokens:Se,padding:!0,truncation:!0}),Fe=await this.model.generate({...$e,...se}),Be=this.tokenizer.batch_decode(Fe,{skip_special_tokens:!0});let He;!Pe&&$e.input_ids.dims.at(-1)>0&&(He=this.tokenizer.batch_decode($e.input_ids,{skip_special_tokens:!0}).map(Ie=>Ie.length));const qe=Array.from({length:W.length},Ie=>[]);for(let Ie=0;Ie<Be.length;++Ie){const Ve=Math.floor(Ie/Fe.dims[0]*W.length);He&&(Be[Ie]=Be[Ie].slice(He[Ve])),qe[Ve].push({generated_text:be?[...W[Ve],{role:"assistant",content:Be[Ie]}]:Be[Ie]})}return!G&&qe.length===1?qe[0]:qe}}class A extends v{constructor(W){super(W),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([se,G])=>[se.toLowerCase(),G])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(W,se,{hypothesis_template:G="This example is {}.",multi_label:be=!1}={}){const we=Array.isArray(W);we||(W=[W]),Array.isArray(se)||(se=[se]);const Se=se.map(Fe=>G.replace("{}",Fe)),Pe=be||se.length===1,$e=[];for(const Fe of W){const Be=[];for(const Ie of Se){const Ve=this.tokenizer(Fe,{text_pair:Ie,padding:!0,truncation:!0}),et=await this.model(Ve);Pe?Be.push([et.logits.data[this.contradiction_id],et.logits.data[this.entailment_id]]):Be.push(et.logits.data[this.entailment_id])}const qe=(Pe?Be.map(Ie=>(0,l.softmax)(Ie)[1]):(0,l.softmax)(Be)).map((Ie,Ve)=>[Ie,Ve]).sort((Ie,Ve)=>Ve[0]-Ie[0]);$e.push({sequence:Fe,labels:qe.map(Ie=>se[Ie[1]]),scores:qe.map(Ie=>Ie[0])})}return we?$e:$e[0]}}class z extends v{constructor(W){super(W)}async _call(W,{pooling:se="none",normalize:G=!1,quantize:be=!1,precision:we="binary"}={}){const Se=this.tokenizer(W,{padding:!0,truncation:!0}),Pe=await this.model(Se);let $e=Pe.last_hidden_state??Pe.logits??Pe.token_embeddings;if(se!=="none")if(se==="mean")$e=(0,p.mean_pooling)($e,Se.attention_mask);else if(se==="cls")$e=$e.slice(null,0);else throw Error(`Pooling method '${se}' not supported.`);return G&&($e=$e.normalize(2,-1)),be&&($e=(0,p.quantize_embeddings)($e,we)),$e}}class K extends v{constructor(W){super(W)}async _call(W,{pool:se=null}={}){const G=await u(W),{pixel_values:be}=await this.processor(G),we=await this.model({pixel_values:be});let Se;if(se){if(!("pooler_output"in we))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Se=we.pooler_output}else Se=we.last_hidden_state??we.logits??we.image_embeds;return Se}}class Q extends v{constructor(W){super(W)}async _call(W,{top_k:se=5}={}){const G=this.processor.feature_extractor.config.sampling_rate,be=await _(W,G),we=this.model.config.id2label,Se=[];for(const Pe of be){const $e=await this.processor(Pe),Be=(await this.model($e)).logits[0],He=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Be.data),Be.dims),se),qe=He[0].tolist(),Ve=He[1].tolist().map((et,nt)=>({label:we?we[et]:`LABEL_${et}`,score:qe[nt]}));Se.push(Ve)}return Array.isArray(W)?Se:Se[0]}}class B extends v{constructor(W){super(W)}async _call(W,se,{hypothesis_template:G="This is a sound of {}."}={}){const be=!Array.isArray(W);be&&(W=[W]);const we=se.map(Be=>G.replace("{}",Be)),Se=this.tokenizer(we,{padding:!0,truncation:!0}),Pe=this.processor.feature_extractor.config.sampling_rate,$e=await _(W,Pe),Fe=[];for(const Be of $e){const He=await this.processor(Be),qe=await this.model({...Se,...He}),Ie=(0,l.softmax)(qe.logits_per_audio.data);Fe.push([...Ie].map((Ve,et)=>({score:Ve,label:se[et]})))}return be?Fe[0]:Fe}}class Y extends v{constructor(W){super(W)}async _call(W,se={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(W,se);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(W,se);case"moonshine":return this._call_moonshine(W,se);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(W,se){se.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),se.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const G=!Array.isArray(W);G&&(W=[W]);const be=this.processor.feature_extractor.config.sampling_rate,we=await _(W,be),Se=[];for(const Pe of we){const $e=await this.processor(Pe),Be=(await this.model($e)).logits[0],He=[];for(const Ie of Be)He.push((0,l.max)(Ie.data)[1]);const qe=this.tokenizer.decode(He);Se.push({text:qe})}return G?Se[0]:Se}async _call_whisper(W,se){const G=se.return_timestamps??!1,be=se.chunk_length_s??0,we=se.force_full_sequences??!1;let Se=se.stride_length_s??null;const Pe={...se};G==="word"&&(Pe.return_token_timestamps=!0,Pe.return_timestamps=!1);const $e=!Array.isArray(W);$e&&(W=[W]);const Fe=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Be=this.processor.feature_extractor.config.hop_length,He=this.processor.feature_extractor.config.sampling_rate,qe=await _(W,He),Ie=[];for(const Ve of qe){let et=[];if(be>0){if(Se===null)Se=be/6;else if(be<=Se)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Ge=He*be,ke=He*Se,mt=Ge-2*ke;let $t=0;for(;;){const Wt=$t+Ge,Bt=Ve.subarray($t,Wt),yr=await this.processor(Bt),lr=$t===0,yt=Wt>=Ve.length;if(et.push({stride:[Bt.length,lr?0:ke,yt?0:ke],input_features:yr.input_features,is_last:yt}),yt)break;$t+=mt}}else et=[{stride:[Ve.length,0,0],input_features:(await this.processor(Ve)).input_features,is_last:!0}];for(const Ge of et){Pe.num_frames=Math.floor(Ge.stride[0]/Be);const ke=await this.model.generate({inputs:Ge.input_features,...Pe});G==="word"?(Ge.tokens=ke.sequences.tolist()[0],Ge.token_timestamps=ke.token_timestamps.tolist()[0].map(mt=>(0,l.round)(mt,2))):Ge.tokens=ke[0].tolist(),Ge.stride=Ge.stride.map(mt=>mt/He)}const[nt,lt]=this.tokenizer._decode_asr(et,{time_precision:Fe,return_timestamps:G,force_full_sequences:we});Ie.push({text:nt,...lt})}return $e?Ie[0]:Ie}async _call_moonshine(W,se){const G=!Array.isArray(W);G&&(W=[W]);const be=this.processor.feature_extractor.config.sampling_rate,we=await _(W,be),Se=[];for(const Pe of we){const $e=await this.processor(Pe),Fe=Math.floor(Pe.length/be)*6,Be=await this.model.generate({max_new_tokens:Fe,...se,...$e}),He=this.processor.batch_decode(Be,{skip_special_tokens:!0})[0];Se.push({text:He})}return G?Se[0]:Se}}class H extends v{constructor(W){super(W)}async _call(W,se={}){const G=Array.isArray(W),be=await u(W),{pixel_values:we}=await this.processor(be),Se=[];for(const Pe of we){Pe.dims=[1,...Pe.dims];const $e=await this.model.generate({inputs:Pe,...se}),Fe=this.tokenizer.batch_decode($e,{skip_special_tokens:!0}).map(Be=>({generated_text:Be.trim()}));Se.push(Fe)}return G?Se:Se[0]}}class q extends v{constructor(W){super(W)}async _call(W,{top_k:se=5}={}){const G=await u(W),{pixel_values:be}=await this.processor(G),we=await this.model({pixel_values:be}),Se=this.model.config.id2label,Pe=[];for(const $e of we.logits){const Fe=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)($e.data),$e.dims),se),Be=Fe[0].tolist(),qe=Fe[1].tolist().map((Ie,Ve)=>({label:Se?Se[Ie]:`LABEL_${Ie}`,score:Be[Ve]}));Pe.push(qe)}return Array.isArray(W)?Pe:Pe[0]}}class X extends v{constructor(W){super(W),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(W,{threshold:se=.5,mask_threshold:G=.5,overlap_mask_area_threshold:be=.8,label_ids_to_fuse:we=null,target_sizes:Se=null,subtask:Pe=null}={}){if(Array.isArray(W)&&W.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Fe=await u(W),Be=Fe.map(Ge=>[Ge.height,Ge.width]),He=await this.processor(Fe),{inputNames:qe,outputNames:Ie}=this.model.sessions.model;if(!qe.includes("pixel_values")){if(qe.length!==1)throw Error(`Expected a single input name, but got ${qe.length} inputs: ${qe}.`);const Ge=qe[0];if(Ge in He)throw Error(`Input name ${Ge} already exists in the inputs.`);He[Ge]=He.pixel_values}const Ve=await this.model(He);let et=null;if(Pe!==null)et=this.subtasks_mapping[Pe];else if(this.processor.image_processor){for(const[Ge,ke]of Object.entries(this.subtasks_mapping))if(ke in this.processor.image_processor){et=this.processor.image_processor[ke].bind(this.processor.image_processor),Pe=Ge;break}}const nt=this.model.config.id2label,lt=[];if(Pe)if(Pe==="panoptic"||Pe==="instance"){const Ge=et(Ve,se,G,be,we,Se??Be)[0],ke=Ge.segmentation;for(const mt of Ge.segments_info){const $t=new Uint8ClampedArray(ke.data.length);for(let Bt=0;Bt<ke.data.length;++Bt)ke.data[Bt]===mt.id&&($t[Bt]=255);const Wt=new d.RawImage($t,ke.dims[1],ke.dims[0],1);lt.push({score:mt.score,label:nt[mt.label_id],mask:Wt})}}else if(Pe==="semantic"){const{segmentation:Ge,labels:ke}=et(Ve,Se??Be)[0];for(const mt of ke){const $t=new Uint8ClampedArray(Ge.data.length);for(let Bt=0;Bt<Ge.data.length;++Bt)Ge.data[Bt]===mt&&($t[Bt]=255);const Wt=new d.RawImage($t,Ge.dims[1],Ge.dims[0],1);lt.push({score:null,label:nt[mt],mask:Wt})}}else throw Error(`Subtask ${Pe} not supported.`);else{const ke=Ve[Ie[0]];for(let mt=0;mt<Be.length;++mt){const $t=Be[mt],Wt=ke[mt];Wt.data.some(yr=>yr<-1e-5||yr>1+1e-5)&&Wt.sigmoid_();const Bt=await d.RawImage.fromTensor(Wt.mul_(255).to("uint8")).resize($t[1],$t[0]);lt.push({label:null,score:null,mask:Bt})}}return lt}}class re extends X{constructor(W){super(W)}async _call(W,se={}){if(Array.isArray(W)&&W.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const be=await u(W),we=await super._call(W,se);return be.map((Pe,$e)=>{const Fe=Pe.clone();return Fe.putAlpha(we[$e].mask),Fe})}}class de extends v{constructor(W){super(W)}async _call(W,se,{hypothesis_template:G="This is a photo of {}"}={}){const be=Array.isArray(W),we=await u(W),Se=se.map(qe=>G.replace("{}",qe)),Pe=this.tokenizer(Se,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:$e}=await this.processor(we),Fe=await this.model({...Pe,pixel_values:$e}),Be=this.model.config.model_type==="siglip"?qe=>qe.sigmoid().data:qe=>(0,l.softmax)(qe.data),He=[];for(const qe of Fe.logits_per_image){const Ve=[...Be(qe)].map((et,nt)=>({score:et,label:se[nt]}));Ve.sort((et,nt)=>nt.score-et.score),He.push(Ve)}return be?He:He[0]}}class ae extends v{constructor(W){super(W)}async _call(W,{threshold:se=.9,percentage:G=!1}={}){const be=Array.isArray(W);if(be&&W.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const we=await u(W),Se=G?null:we.map(Ie=>[Ie.height,Ie.width]),{pixel_values:Pe,pixel_mask:$e}=await this.processor(we),Fe=await this.model({pixel_values:Pe,pixel_mask:$e}),Be=this.processor.image_processor.post_process_object_detection(Fe,se,Se),He=this.model.config.id2label,qe=Be.map(Ie=>Ie.boxes.map((Ve,et)=>({score:Ie.scores[et],label:He[Ie.classes[et]],box:f(Ve,!G)})));return be?qe:qe[0]}}class j extends v{constructor(W){super(W)}async _call(W,se,{threshold:G=.1,top_k:be=null,percentage:we=!1}={}){const Se=Array.isArray(W),Pe=await u(W),$e=this.tokenizer(se,{padding:!0,truncation:!0}),Fe=await this.processor(Pe),Be=[];for(let He=0;He<Pe.length;++He){const qe=Pe[He],Ie=we?null:[[qe.height,qe.width]],Ve=Fe.pixel_values[He].unsqueeze_(0),et=await this.model({...$e,pixel_values:Ve});let nt;if("post_process_grounded_object_detection"in this.processor){const lt=this.processor.post_process_grounded_object_detection(et,$e.input_ids,{box_threshold:G,text_threshold:G,target_sizes:Ie})[0];nt=lt.boxes.map((Ge,ke)=>({score:lt.scores[ke],label:lt.labels[ke],box:f(Ge,!we)}))}else{const lt=this.processor.image_processor.post_process_object_detection(et,G,Ie,!0)[0];nt=lt.boxes.map((Ge,ke)=>({score:lt.scores[ke],label:se[lt.classes[ke]],box:f(Ge,!we)}))}nt.sort((lt,Ge)=>Ge.score-lt.score),be!==null&&(nt=nt.slice(0,be)),Be.push(nt)}return Se?Be:Be[0]}}class F extends v{constructor(W){super(W)}async _call(W,se,G={}){const be=(await u(W))[0],{pixel_values:we}=await this.processor(be),Se=`<s_docvqa><s_question>${se}</s_question><s_answer>`,Pe=this.tokenizer(Se,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,$e=await this.model.generate({inputs:we,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Pe,...G}),Be=this.tokenizer.batch_decode($e)[0].match(/<s_answer>(.*?)<\/s_answer>/);let He=null;return Be&&Be.length>=2&&(He=Be[1].trim()),[{answer:He}]}}class U extends v{constructor(se){super(se);Z(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=se.vocoder??null}async _call(se,{speaker_embeddings:G=null}={}){return this.processor?this._call_text_to_spectrogram(se,{speaker_embeddings:G}):this._call_text_to_waveform(se)}async _call_text_to_waveform(se){const G=this.tokenizer(se,{padding:!0,truncation:!0}),{waveform:be}=await this.model(G),we=this.model.config.sampling_rate;return new c.RawAudio(be.data,we)}async _call_text_to_spectrogram(se,{speaker_embeddings:G}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await i.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof G=="string"||G instanceof URL)&&(G=new Float32Array(await(await fetch(G)).arrayBuffer())),G instanceof Float32Array)G=new p.Tensor("float32",G,[1,G.length]);else if(!(G instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:be}=this.tokenizer(se,{padding:!0,truncation:!0}),{waveform:we}=await this.model.generate_speech(be,G,{vocoder:this.vocoder}),Se=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(we.data,Se)}}class ee extends v{constructor(W){super(W)}async _call(W){const se=await u(W),G=await this.processor(se),be=await this.model(G),we=[];for(const Se of be.reconstruction){const Pe=Se.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");we.push(d.RawImage.fromTensor(Pe))}return we.length>1?we:we[0]}}class _e extends v{constructor(W){super(W)}async _call(W){const se=await u(W),G=await this.processor(se),{predicted_depth:be}=await this.model(G),we=[];for(let Se=0;Se<se.length;++Se){const Pe=be[Se],[$e,Fe]=Pe.dims.slice(-2),[Be,He]=se[Se].size,qe=(await(0,p.interpolate_4d)(Pe.view(1,1,$e,Fe),{size:[He,Be],mode:"bilinear"})).view(He,Be),Ie=qe.min().item(),Ve=qe.max().item(),et=qe.sub(Ie).div_(Ve-Ie).mul_(255).to("uint8").unsqueeze(0),nt=d.RawImage.fromTensor(et);we.push({predicted_depth:qe,depth:nt})}return we.length>1?we:we[0]}}const le=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:$,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:w,model:i.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:g,model:i.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:C,model:i.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:x,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:b,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:E,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:P,model:i.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:A,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Q,model:i.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:B,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:Y,model:[i.AutoModelForSpeechSeq2Seq,i.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:U,model:[i.AutoModelForTextToWaveform,i.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:H,model:i.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:q,model:i.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:X,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:re,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:de,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ae,model:i.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:j,model:i.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:F,model:i.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ee,model:i.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:_e,model:i.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:z,model:i.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:K,model:[i.AutoModelForImageFeatureExtraction,i.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Me=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ze(me,W=null,{progress_callback:se=null,config:G=null,cache_dir:be=null,local_files_only:we=!1,revision:Se="main",device:Pe=null,dtype:$e=null,subfolder:Fe="onnx",use_external_data_format:Be=null,model_file_name:He=null,session_options:qe={}}={}){me=Me[me]??me;const Ie=le[me.split("_",1)[0]];if(!Ie)throw Error(`Unsupported pipeline: ${me}. Must be one of [${Object.keys(le)}]`);W||(W=Ie.default.model,console.log(`No model specified. Using default model: "${W}".`));const Ve={progress_callback:se,config:G,cache_dir:be,local_files_only:we,revision:Se,device:Pe,dtype:$e,subfolder:Fe,use_external_data_format:Be,model_file_name:He,session_options:qe},et=new Map([["tokenizer",Ie.tokenizer],["model",Ie.model],["processor",Ie.processor]]),nt=await Ue(et,W,Ve);nt.task=me,(0,o.dispatchCallback)(se,{status:"ready",task:me,model:W});const lt=Ie.pipeline;return new lt(nt)}async function Ue(me,W,se){const G=Object.create(null),be=[];for(const[we,Se]of me.entries()){if(!Se)continue;let Pe;Array.isArray(Se)?Pe=new Promise(async($e,Fe)=>{var He,qe;let Be;for(const Ie of Se){if(Ie===null){$e(null);return}try{$e(await Ie.from_pretrained(W,se));return}catch(Ve){if((He=Ve.message)!=null&&He.includes("Unsupported model type"))Be=Ve;else if((qe=Ve.message)!=null&&qe.includes("Could not locate file"))Be=Ve;else{Fe(Ve);return}}}Fe(Be)}):Pe=Se.from_pretrained(W,se),G[we]=Pe,be.push(Pe)}await Promise.all(be);for(const[we,Se]of Object.entries(G))G[we]=await Se;return G}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Ot,AutoTokenizer:()=>Ds,BartTokenizer:()=>Is,BertTokenizer:()=>vt,BlenderbotSmallTokenizer:()=>cn,BlenderbotTokenizer:()=>ln,BloomTokenizer:()=>As,CLIPTokenizer:()=>_s,CamembertTokenizer:()=>rs,CodeGenTokenizer:()=>os,CodeLlamaTokenizer:()=>Cr,CohereTokenizer:()=>un,ConvBertTokenizer:()=>Mr,DebertaTokenizer:()=>st,DebertaV2Tokenizer:()=>Rt,DistilBertTokenizer:()=>zr,ElectraTokenizer:()=>ss,EsmTokenizer:()=>ot,FalconTokenizer:()=>Ae,GPT2Tokenizer:()=>Ur,GPTNeoXTokenizer:()=>Ye,GemmaTokenizer:()=>ns,Grok1Tokenizer:()=>is,HerbertTokenizer:()=>Xt,LlamaTokenizer:()=>Fs,M2M100Tokenizer:()=>mr,MBart50Tokenizer:()=>hs,MBartTokenizer:()=>qr,MPNetTokenizer:()=>jr,MarianTokenizer:()=>an,MgpstrTokenizer:()=>pn,MobileBertTokenizer:()=>ht,NllbTokenizer:()=>as,NougatTokenizer:()=>Us,PreTrainedTokenizer:()=>ve,Qwen2Tokenizer:()=>jt,RoFormerTokenizer:()=>Zt,RobertaTokenizer:()=>ks,SiglipTokenizer:()=>nn,SpeechT5Tokenizer:()=>Os,SqueezeBertTokenizer:()=>ct,T5Tokenizer:()=>$s,TokenizerModel:()=>K,VitsTokenizer:()=>dn,Wav2Vec2CTCTokenizer:()=>on,WhisperTokenizer:()=>_r,XLMRobertaTokenizer:()=>fs,XLMTokenizer:()=>ms,is_chinese_char:()=>C});var s=t("./src/utils/generic.js"),i=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),a=t("./src/utils/maths.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function d(pe,I){const N=await Promise.all([(0,n.getModelJSON)(pe,"tokenizer.json",!0,I),(0,n.getModelJSON)(pe,"tokenizer_config.json",!0,I)]);return I.legacy!==null&&(N[1].legacy=I.legacy),N}function u(pe,I){const N=[];let J=0;for(const oe of pe.matchAll(I)){const ue=oe[0];J<oe.index&&N.push(pe.slice(J,oe.index)),ue.length>0&&N.push(ue),J=oe.index+ue.length}return J<pe.length&&N.push(pe.slice(J)),N}function _(pe,I=!0){if(pe.Regex!==void 0){let N=pe.Regex.replace(/\\([#&~])/g,"$1");for(const[J,oe]of A)N=N.replaceAll(J,oe);return new RegExp(N,"gu")}else if(pe.String!==void 0){const N=(0,i.escapeRegExp)(pe.String);return new RegExp(I?N:`(${N})`,"gu")}else return console.warn("Unknown pattern type:",pe),null}function f(pe){return new Map(Object.entries(pe))}function v(pe){const I=pe.dims;switch(I.length){case 1:return pe.tolist();case 2:if(I[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${I.length}.`)}}function $(pe){return pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function w(pe){return pe.replace(new RegExp("\\p{M}","gu"),"")}function g(pe){return w(pe.toLowerCase())}function C(pe){return pe>=19968&&pe<=40959||pe>=13312&&pe<=19903||pe>=131072&&pe<=173791||pe>=173824&&pe<=177983||pe>=177984&&pe<=178207||pe>=178208&&pe<=183983||pe>=63744&&pe<=64255||pe>=194560&&pe<=195103}function E(pe,I,N){const J=[];let oe=0;for(;oe<pe.length;){if(J.push(pe[oe]),(I.get(pe[oe])??N)!==N){++oe;continue}for(;++oe<pe.length&&(I.get(pe[oe])??N)===N;)I.get(J.at(-1))!==N&&(J[J.length-1]+=pe[oe])}return J}function x(pe){return pe.match(/\S+/g)||[]}const b="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",M=new RegExp(`^[${b}]+$`,"gu"),P=".,!?…。，、।۔،",A=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class z{constructor(I){this.content=I.content,this.id=I.id,this.single_word=I.single_word??!1,this.lstrip=I.lstrip??!1,this.rstrip=I.rstrip??!1,this.special=I.special??!1,this.normalized=I.normalized??null}}class K extends s.Callable{constructor(I){super(),this.config=I,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(I,...N){switch(I.type){case"WordPiece":return new Q(I);case"Unigram":return new B(I,...N);case"BPE":return new q(I);default:if(I.vocab)return Array.isArray(I.vocab)?new B(I,...N):Object.hasOwn(I,"continuing_subword_prefix")&&Object.hasOwn(I,"unk_token")?Object.hasOwn(I,"merges")?new q(I):new Q(I):new X(I,...N);throw new Error(`Unknown TokenizerModel type: ${I.type}`)}}_call(I){return I=this.encode(I),this.fuse_unk&&(I=E(I,this.tokens_to_ids,this.unk_token_id)),I}encode(I){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(I){return I.map(N=>this.tokens_to_ids.get(N)??this.unk_token_id)}convert_ids_to_tokens(I){return I.map(N=>this.vocab[N]??this.unk_token)}}class Q extends K{constructor(I){super(I),this.tokens_to_ids=f(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.max_input_chars_per_word=I.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[N,J]of this.tokens_to_ids)this.vocab[J]=N}encode(I){const N=[];for(const J of I){const oe=[...J];if(oe.length>this.max_input_chars_per_word){N.push(this.unk_token);continue}let ue=!1,xe=0;const Re=[];for(;xe<oe.length;){let Qe=oe.length,We=null;for(;xe<Qe;){let Ze=oe.slice(xe,Qe).join("");if(xe>0&&(Ze=this.config.continuing_subword_prefix+Ze),this.tokens_to_ids.has(Ze)){We=Ze;break}--Qe}if(We===null){ue=!0;break}Re.push(We),xe=Qe}ue?N.push(this.unk_token):N.push(...Re)}return N}}class B extends K{constructor(I,N){super(I);const J=I.vocab.length;this.vocab=new Array(J),this.scores=new Array(J);for(let oe=0;oe<J;++oe)[this.vocab[oe],this.scores[oe]]=I.vocab[oe];this.unk_token_id=I.unk_id,this.unk_token=this.vocab[I.unk_id],this.tokens_to_ids=new Map(this.vocab.map((oe,ue)=>[oe,ue])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(I){const N=I.chars,J=1;let oe=0;for(;oe<N.length;){let ue=!1;const xe=N.slice(oe).join(""),Re=this.trie.commonPrefixSearch(xe);for(const Qe of Re){const We=this.tokens_to_ids.get(Qe),Ze=this.scores[We],gt=(0,i.len)(Qe);I.insert(oe,gt,Ze,We),!ue&&gt===J&&(ue=!0)}ue||I.insert(oe,J,this.unk_score,this.unk_token_id),oe+=J}}tokenize(I){const N=new l.TokenLattice(I,this.bos_token_id,this.eos_token_id);return this.populateNodes(N),N.tokens()}encode(I){const N=[];for(const J of I){const oe=this.tokenize(J);N.push(...oe)}return N}}const Y=(()=>{const pe=[...Array.from({length:94},(oe,ue)=>ue+33),...Array.from({length:12},(oe,ue)=>ue+161),...Array.from({length:82},(oe,ue)=>ue+174)],I=pe.slice();let N=0;for(let oe=0;oe<256;++oe)pe.includes(oe)||(pe.push(oe),I.push(256+N),N+=1);const J=I.map(oe=>String.fromCharCode(oe));return Object.fromEntries(pe.map((oe,ue)=>[oe,J[ue]]))})(),H=(0,i.reverseDictionary)(Y);class q extends K{constructor(I){super(I),this.tokens_to_ids=f(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[J,oe]of this.tokens_to_ids)this.vocab[oe]=J;const N=Array.isArray(I.merges[0]);this.merges=N?I.merges:I.merges.map(J=>J.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((J,oe)=>[JSON.stringify(J),oe])),this.end_of_word_suffix=I.end_of_word_suffix,this.continuing_subword_suffix=I.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(I){if(I.length===0)return[];const N=this.cache.get(I);if(N!==void 0)return N;const J=Array.from(I);this.end_of_word_suffix&&(J[J.length-1]+=this.end_of_word_suffix);let oe=[];if(J.length>1){const ue=new l.PriorityQueue((Qe,We)=>Qe.score<We.score);let xe={token:J[0],bias:0,prev:null,next:null},Re=xe;for(let Qe=1;Qe<J.length;++Qe){const We={bias:Qe/J.length,token:J[Qe],prev:Re,next:null};Re.next=We,this._add_node(ue,Re),Re=We}for(;!ue.isEmpty();){const Qe=ue.pop();if(Qe.deleted||!Qe.next||Qe.next.deleted)continue;if(Qe.deleted=!0,Qe.next.deleted=!0,Qe.prev){const Ze={...Qe.prev};Qe.prev.deleted=!0,Qe.prev=Ze,Ze.prev?Ze.prev.next=Ze:xe=Ze}const We={token:Qe.token+Qe.next.token,bias:Qe.bias,prev:Qe.prev,next:Qe.next.next};We.prev?(We.prev.next=We,this._add_node(ue,We.prev)):xe=We,We.next&&(We.next.prev=We,this._add_node(ue,We))}for(let Qe=xe;Qe!==null;Qe=Qe.next)oe.push(Qe.token)}else oe=J;if(this.continuing_subword_suffix)for(let ue=0;ue<oe.length-1;++ue)oe[ue]+=this.continuing_subword_suffix;return I.length<this.max_length_to_cache&&this.cache.put(I,oe),oe}_add_node(I,N){const J=this.bpe_ranks.get(JSON.stringify([N.token,N.next.token]));J!==void 0&&(N.score=J+N.bias,I.push(N))}encode(I){const N=[];for(const J of I){if(this.ignore_merges&&this.tokens_to_ids.has(J)){N.push(J);continue}const oe=this.bpe(J);for(const ue of oe)if(this.tokens_to_ids.has(ue))N.push(ue);else if(this.byte_fallback){const xe=Array.from(this.text_encoder.encode(ue)).map(Re=>`<0x${Re.toString(16).toUpperCase().padStart(2,"0")}>`);xe.every(Re=>this.tokens_to_ids.has(Re))?N.push(...xe):N.push(this.unk_token)}else N.push(this.unk_token)}return N}}class X extends K{constructor(I,N){super(I),this.tokens_to_ids=f(N.target_lang?I.vocab[N.target_lang]:I.vocab),this.bos_token=N.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=N.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=N.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[J,oe]of this.tokens_to_ids)this.vocab[oe]=J}encode(I){return I}}class re extends s.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"BertNormalizer":return new me(I);case"Precompiled":return new yt(I);case"Sequence":return new Ue(I);case"Replace":return new de(I);case"NFC":return new j(I);case"NFD":return new F(I);case"NFKC":return new U(I);case"NFKD":return new ee(I);case"Strip":return new _e(I);case"StripAccents":return new le(I);case"Lowercase":return new Me(I);case"Prepend":return new ze(I);default:throw new Error(`Unknown Normalizer type: ${I.type}`)}}normalize(I){throw Error("normalize should be implemented in subclass.")}_call(I){return this.normalize(I)}}class de extends re{normalize(I){const N=_(this.config.pattern);return N===null?I:I.replaceAll(N,this.config.content)}}class ae extends re{constructor(){super(...arguments);Z(this,"form")}normalize(N){return N=N.normalize(this.form),N}}class j extends ae{constructor(){super(...arguments);Z(this,"form","NFC")}}class F extends ae{constructor(){super(...arguments);Z(this,"form","NFD")}}class U extends ae{constructor(){super(...arguments);Z(this,"form","NFKC")}}class ee extends ae{constructor(){super(...arguments);Z(this,"form","NFKD")}}class _e extends re{normalize(I){return this.config.strip_left&&this.config.strip_right?I=I.trim():(this.config.strip_left&&(I=I.trimStart()),this.config.strip_right&&(I=I.trimEnd())),I}}class le extends re{normalize(I){return I=w(I),I}}class Me extends re{normalize(I){return I=I.toLowerCase(),I}}class ze extends re{normalize(I){return I=this.config.prepend+I,I}}class Ue extends re{constructor(I){super(I),this.normalizers=I.normalizers.map(N=>re.fromConfig(N))}normalize(I){return this.normalizers.reduce((N,J)=>J.normalize(N),I)}}class me extends re{_tokenize_chinese_chars(I){const N=[];for(let J=0;J<I.length;++J){const oe=I[J],ue=oe.charCodeAt(0);C(ue)?(N.push(" "),N.push(oe),N.push(" ")):N.push(oe)}return N.join("")}stripAccents(I){return I.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(I){switch(I){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(I)}}_clean_text(I){const N=[];for(const J of I){const oe=J.charCodeAt(0);oe===0||oe===65533||this._is_control(J)||(/^\s$/.test(J)?N.push(" "):N.push(J))}return N.join("")}normalize(I){return this.config.clean_text&&(I=this._clean_text(I)),this.config.handle_chinese_chars&&(I=this._tokenize_chinese_chars(I)),this.config.lowercase?(I=I.toLowerCase(),this.config.strip_accents!==!1&&(I=this.stripAccents(I))):this.config.strip_accents&&(I=this.stripAccents(I)),I}}class W extends s.Callable{static fromConfig(I){if(I===null)return null;switch(I.type){case"BertPreTokenizer":return new se(I);case"Sequence":return new ts(I);case"Whitespace":return new D(I);case"WhitespaceSplit":return new ie(I);case"Metaspace":return new yr(I);case"ByteLevel":return new G(I);case"Split":return new be(I);case"Punctuation":return new we(I);case"Digits":return new Se(I);case"Replace":return new R(I);default:throw new Error(`Unknown PreTokenizer type: ${I.type}`)}}pre_tokenize_text(I,N){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(I,N){return(Array.isArray(I)?I.map(J=>this.pre_tokenize_text(J,N)):this.pre_tokenize_text(I,N)).flat()}_call(I,N){return this.pre_tokenize(I,N)}}class se extends W{constructor(I){super(),this.pattern=new RegExp(`[^\\s${b}]+|[${b}]`,"gu")}pre_tokenize_text(I,N){return I.trim().match(this.pattern)||[]}}class G extends W{constructor(I){super(),this.config=I,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Y,this.text_encoder=new TextEncoder}pre_tokenize_text(I,N){return this.add_prefix_space&&!I.startsWith(" ")&&(I=" "+I),(this.use_regex?I.match(this.pattern)||[]:[I]).map(oe=>Array.from(this.text_encoder.encode(oe),ue=>this.byte_encoder[ue]).join(""))}}class be extends W{constructor(I){super(),this.config=I,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(I,N){var J;return this.pattern===null?[]:this.config.invert?I.match(this.pattern)||[]:((J=this.config.behavior)==null?void 0:J.toLowerCase())==="removed"?I.split(this.pattern).filter(oe=>oe):u(I,this.pattern)}}class we extends W{constructor(I){super(),this.config=I,this.pattern=new RegExp(`[^${b}]+|[${b}]+`,"gu")}pre_tokenize_text(I,N){return I.match(this.pattern)||[]}}class Se extends W{constructor(I){super(),this.config=I;const N=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(N,"gu")}pre_tokenize_text(I,N){return I.match(this.pattern)||[]}}class Pe extends s.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"TemplateProcessing":return new Be(I);case"ByteLevel":return new He(I);case"RobertaProcessing":return new Fe(I);case"BertProcessing":return new $e(I);case"Sequence":return new qe(I);default:throw new Error(`Unknown PostProcessor type: ${I.type}`)}}post_process(I,...N){throw Error("post_process should be implemented in subclass.")}_call(I,...N){return this.post_process(I,...N)}}class $e extends Pe{constructor(I){super(I),this.cls=I.cls[0],this.sep=I.sep[0]}post_process(I,N=null,{add_special_tokens:J=!0}={}){J&&(I=(0,i.mergeArrays)([this.cls],I,[this.sep]));let oe=new Array(I.length).fill(0);if(N!==null){const ue=J&&this instanceof Fe?[this.sep]:[],xe=J?[this.sep]:[];I=(0,i.mergeArrays)(I,ue,N,xe),oe=(0,i.mergeArrays)(oe,new Array(N.length+ue.length+xe.length).fill(1))}return{tokens:I,token_type_ids:oe}}}class Fe extends $e{}class Be extends Pe{constructor(I){super(I),this.single=I.single,this.pair=I.pair}post_process(I,N=null,{add_special_tokens:J=!0}={}){const oe=N===null?this.single:this.pair;let ue=[],xe=[];for(const Re of oe)"SpecialToken"in Re?J&&(ue.push(Re.SpecialToken.id),xe.push(Re.SpecialToken.type_id)):"Sequence"in Re&&(Re.Sequence.id==="A"?(ue=(0,i.mergeArrays)(ue,I),xe=(0,i.mergeArrays)(xe,new Array(I.length).fill(Re.Sequence.type_id))):Re.Sequence.id==="B"&&(ue=(0,i.mergeArrays)(ue,N),xe=(0,i.mergeArrays)(xe,new Array(N.length).fill(Re.Sequence.type_id))));return{tokens:ue,token_type_ids:xe}}}class He extends Pe{post_process(I,N=null){return N&&(I=(0,i.mergeArrays)(I,N)),{tokens:I}}}class qe extends Pe{constructor(I){super(I),this.processors=I.processors.map(N=>Pe.fromConfig(N))}post_process(I,N=null,J={}){let oe;for(const ue of this.processors)if(ue instanceof He)I=ue.post_process(I).tokens,N&&(N=ue.post_process(N).tokens);else{const xe=ue.post_process(I,N,J);I=xe.tokens,oe=xe.token_type_ids}return{tokens:I,token_type_ids:oe}}}class Ie extends s.Callable{constructor(I){super(),this.config=I,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=I.trim_offsets}static fromConfig(I){if(I===null)return null;switch(I.type){case"WordPiece":return new Ge(I);case"Metaspace":return new lr(I);case"ByteLevel":return new ke(I);case"Replace":return new Ve(I);case"ByteFallback":return new et(I);case"Fuse":return new nt(I);case"Strip":return new lt(I);case"Sequence":return new $t(I);case"CTC":return new mt(I);case"BPEDecoder":return new Wt(I);default:throw new Error(`Unknown Decoder type: ${I.type}`)}}_call(I){return this.decode(I)}decode(I){return this.decode_chain(I).join("")}decode_chain(I){throw Error("`decode_chain` should be implemented in subclass.")}}class Ve extends Ie{decode_chain(I){const N=_(this.config.pattern);return N===null?I:I.map(J=>J.replaceAll(N,this.config.content))}}class et extends Ie{constructor(I){super(I),this.text_decoder=new TextDecoder}decode_chain(I){const N=[];let J=[];for(const oe of I){let ue=null;if(oe.length===6&&oe.startsWith("<0x")&&oe.endsWith(">")){const xe=parseInt(oe.slice(3,5),16);isNaN(xe)||(ue=xe)}if(ue!==null)J.push(ue);else{if(J.length>0){const xe=this.text_decoder.decode(Uint8Array.from(J));N.push(xe),J=[]}N.push(oe)}}if(J.length>0){const oe=this.text_decoder.decode(Uint8Array.from(J));N.push(oe),J=[]}return N}}class nt extends Ie{decode_chain(I){return[I.join("")]}}class lt extends Ie{constructor(I){super(I),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(I){return I.map(N=>{let J=0;for(let ue=0;ue<this.start&&N[ue]===this.content;++ue){J=ue+1;continue}let oe=N.length;for(let ue=0;ue<this.stop;++ue){const xe=N.length-ue-1;if(N[xe]===this.content){oe=xe;continue}else break}return N.slice(J,oe)})}}class Ge extends Ie{constructor(I){super(I),this.cleanup=I.cleanup}decode_chain(I){return I.map((N,J)=>(J!==0&&(N.startsWith(this.config.prefix)?N=N.replace(this.config.prefix,""):N=" "+N),this.cleanup&&(N=$(N)),N))}}class ke extends Ie{constructor(I){super(I),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(I){const N=I.join(""),J=new Uint8Array([...N].map(ue=>this.byte_decoder[ue]));return this.text_decoder.decode(J)}decode_chain(I){const N=[];let J=[];for(const oe of I)this.added_tokens.find(ue=>ue.content===oe)!==void 0?(J.length>0&&(N.push(this.convert_tokens_to_string(J)),J=[]),N.push(oe)):J.push(oe);return J.length>0&&N.push(this.convert_tokens_to_string(J)),N}}class mt extends Ie{constructor(I){super(I),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(I){if(I.length===0)return"";const N=[I[0]];for(let ue=1;ue<I.length;++ue)I[ue]!==N.at(-1)&&N.push(I[ue]);let oe=N.filter(ue=>ue!==this.pad_token).join("");return this.cleanup&&(oe=$(oe).replaceAll(this.word_delimiter_token," ").trim()),oe}decode_chain(I){return[this.convert_tokens_to_string(I)]}}class $t extends Ie{constructor(I){super(I),this.decoders=I.decoders.map(N=>Ie.fromConfig(N))}decode_chain(I){return this.decoders.reduce((N,J)=>J.decode_chain(N),I)}}class Wt extends Ie{constructor(I){super(I),this.suffix=this.config.suffix}decode_chain(I){return I.map((N,J)=>N.replaceAll(this.suffix,J===I.length-1?"":" "))}}class Bt extends Ie{decode_chain(I){let N="";for(let J=1;J<I.length;J+=2)N+=I[J];return[N]}}class yr extends W{constructor(I){super(),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement,this.strRep=I.str_rep||this.replacement,this.prepend_scheme=I.prepend_scheme??"always"}pre_tokenize_text(I,{section_index:N=void 0}={}){let J=I.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!J.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&N===0)&&(J=this.strRep+J),[J]}}class lr extends Ie{constructor(I){super(I),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement}decode_chain(I){const N=[];for(let J=0;J<I.length;++J){let oe=I[J].replaceAll(this.replacement," ");this.addPrefixSpace&&J==0&&oe.startsWith(" ")&&(oe=oe.substring(1)),N.push(oe)}return N}}class yt extends re{constructor(I){super(I),this.charsmap=I.precompiled_charsmap}normalize(I){return I=I.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),I=I.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),I.includes("～")?I=I.split("～").map(J=>J.normalize("NFKC")).join("～"):I=I.normalize("NFKC"),I}}class ts extends W{constructor(I){super(),this.tokenizers=I.pretokenizers.map(N=>W.fromConfig(N))}pre_tokenize_text(I,N){return this.tokenizers.reduce((J,oe)=>oe.pre_tokenize(J,N),[I])}}class D extends W{constructor(I){super()}pre_tokenize_text(I,N){return I.match(/\w+|[^\w\s]+/g)||[]}}class ie extends W{constructor(I){super()}pre_tokenize_text(I,N){return x(I)}}class R extends W{constructor(I){super(),this.config=I,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(I,N){return this.pattern===null?[I]:[I.replaceAll(this.pattern,this.config.content)]}}const te=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function fe(pe,I,N,J){for(const oe of Object.keys(pe)){const ue=I-pe[oe].length,xe=N(oe),Re=new Array(ue).fill(xe);pe[oe]=J==="right"?(0,i.mergeArrays)(pe[oe],Re):(0,i.mergeArrays)(Re,pe[oe])}}function Oe(pe,I){for(const N of Object.keys(pe))pe[N].length=I}class ve extends s.Callable{constructor(N,J){super();Z(this,"return_token_type_ids",!1);Z(this,"padding_side","right");this._tokenizer_config=J,this.normalizer=re.fromConfig(N.normalizer),this.pre_tokenizer=W.fromConfig(N.pre_tokenizer),this.model=K.fromConfig(N.model,J),this.post_processor=Pe.fromConfig(N.post_processor),this.decoder=Ie.fromConfig(N.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const oe of N.added_tokens){const ue=new z(oe);this.added_tokens.push(ue),this.model.tokens_to_ids.set(ue.content,ue.id),this.model.vocab[ue.id]=ue.content,ue.special&&(this.special_tokens.push(ue.content),this.all_special_ids.push(ue.id))}if(this.additional_special_tokens=J.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(oe=>oe.content)),this.added_tokens_map=new Map(this.added_tokens.map(oe=>[oe.content,oe])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=J.model_max_length,this.remove_space=J.remove_space,this.clean_up_tokenization_spaces=J.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=J.do_lowercase_and_remove_accent??!1,J.padding_side&&(this.padding_side=J.padding_side),this.legacy=!1,this.chat_template=J.chat_template??null,Array.isArray(this.chat_template)){const oe=Object.create(null);for(const{name:ue,template:xe}of this.chat_template){if(typeof ue!="string"||typeof xe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');oe[ue]=xe}this.chat_template=oe}this._compiled_template_cache=new Map}getToken(...N){for(const J of N){const oe=this._tokenizer_config[J];if(oe)if(typeof oe=="object"){if(oe.__type==="AddedToken")return oe.content;throw Error(`Unknown token: ${oe}`)}else return oe}return null}static async from_pretrained(N,{progress_callback:J=null,config:oe=null,cache_dir:ue=null,local_files_only:xe=!1,revision:Re="main",legacy:Qe=null}={}){const We=await d(N,{progress_callback:J,config:oe,cache_dir:ue,local_files_only:xe,revision:Re,legacy:Qe});return new this(...We)}_call(N,{text_pair:J=null,add_special_tokens:oe=!0,padding:ue=!1,truncation:xe=null,max_length:Re=null,return_tensor:Qe=!0,return_token_type_ids:We=null}={}){const Ze=Array.isArray(N);let gt;if(Ze){if(N.length===0)throw Error("text array must be non-empty");if(J!==null){if(Array.isArray(J)){if(N.length!==J.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");gt=N.map((Ft,er)=>this._encode_plus(Ft,{text_pair:J[er],add_special_tokens:oe,return_token_type_ids:We}))}else gt=N.map(Ft=>this._encode_plus(Ft,{add_special_tokens:oe,return_token_type_ids:We}))}else{if(N==null)throw Error("text may not be null or undefined");if(Array.isArray(J))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");gt=[this._encode_plus(N,{text_pair:J,add_special_tokens:oe,return_token_type_ids:We})]}if(Re===null?Re=this.model_max_length:xe===null&&(ue===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Re=this.model_max_length):ue===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),xe=!0)),ue===!0&&(Re=Math.min((0,a.max)(gt.map(Ft=>Ft.input_ids.length))[0],Re??1/0)),Re=Math.min(Re,this.model_max_length??1/0),ue||xe)for(let Ft=0;Ft<gt.length;++Ft)gt[Ft].input_ids.length!==Re&&(gt[Ft].input_ids.length>Re?xe&&Oe(gt[Ft],Re):ue&&fe(gt[Ft],Re,er=>er==="input_ids"?this.pad_token_id:0,this.padding_side));const Dt={};if(Qe){if(!(ue&&xe)&&gt.some(er=>{var Gt;for(const gr of Object.keys(er))if(er[gr].length!==((Gt=gt[0][gr])==null?void 0:Gt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Ft=[gt.length,gt[0].input_ids.length];for(const er of Object.keys(gt[0]))Dt[er]=new o.Tensor("int64",BigInt64Array.from(gt.flatMap(Gt=>Gt[er]).map(BigInt)),Ft)}else{for(const Ft of Object.keys(gt[0]))Dt[Ft]=gt.map(er=>er[Ft]);if(!Ze)for(const Ft of Object.keys(Dt))Dt[Ft]=Dt[Ft][0]}return Dt}_encode_text(N){if(N===null)return null;const J=this.added_tokens_splitter.split(N);for(let ue=0;ue<J.length;++ue){const xe=this.added_tokens_map.get(J[ue]);xe&&(xe.lstrip&&ue>0&&(J[ue-1]=J[ue-1].trimEnd()),xe.rstrip&&ue<J.length-1&&(J[ue+1]=J[ue+1].trimStart()))}return J.flatMap((ue,xe)=>{if(ue.length===0)return[];if(this.added_tokens_map.has(ue))return[ue];if(this.remove_space===!0&&(ue=ue.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ue=g(ue)),this.normalizer!==null&&(ue=this.normalizer(ue)),ue.length===0)return[];const Re=this.pre_tokenizer!==null?this.pre_tokenizer(ue,{section_index:xe}):[ue];return this.model(Re)})}_encode_plus(N,{text_pair:J=null,add_special_tokens:oe=!0,return_token_type_ids:ue=null}={}){const{tokens:xe,token_type_ids:Re}=this._tokenize_helper(N,{pair:J,add_special_tokens:oe}),Qe=this.model.convert_tokens_to_ids(xe),We={input_ids:Qe,attention_mask:new Array(Qe.length).fill(1)};return(ue??this.return_token_type_ids)&&Re&&(We.token_type_ids=Re),We}_tokenize_helper(N,{pair:J=null,add_special_tokens:oe=!1}={}){const ue=this._encode_text(N),xe=this._encode_text(J);return this.post_processor?this.post_processor(ue,xe,{add_special_tokens:oe}):{tokens:(0,i.mergeArrays)(ue??[],xe??[])}}tokenize(N,{pair:J=null,add_special_tokens:oe=!1}={}){return this._tokenize_helper(N,{pair:J,add_special_tokens:oe}).tokens}encode(N,{text_pair:J=null,add_special_tokens:oe=!0,return_token_type_ids:ue=null}={}){return this._encode_plus(N,{text_pair:J,add_special_tokens:oe,return_token_type_ids:ue}).input_ids}batch_decode(N,J={}){return N instanceof o.Tensor&&(N=N.tolist()),N.map(oe=>this.decode(oe,J))}decode(N,J={}){if(N instanceof o.Tensor&&(N=v(N)),!Array.isArray(N)||N.length===0||!(0,i.isIntegralNumber)(N[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(N,J)}decode_single(N,{skip_special_tokens:J=!1,clean_up_tokenization_spaces:oe=null}){let ue=this.model.convert_ids_to_tokens(N);J&&(ue=ue.filter(Re=>!this.special_tokens.includes(Re)));let xe=this.decoder?this.decoder(ue):ue.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(xe=xe.replaceAll(this.decoder.end_of_word_suffix," "),J&&(xe=xe.trim())),(oe??this.clean_up_tokenization_spaces)&&(xe=$(xe)),xe}get_chat_template({chat_template:N=null,tools:J=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const oe=this.chat_template;if(N!==null&&Object.hasOwn(oe,N))N=oe[N];else if(N===null)if(J!==null&&"tool_use"in oe)N=oe.tool_use;else if("default"in oe)N=oe.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(oe).sort()}.`)}else if(N===null)if(this.chat_template)N=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return N}apply_chat_template(N,{tools:J=null,documents:oe=null,chat_template:ue=null,add_generation_prompt:xe=!1,tokenize:Re=!0,padding:Qe=!1,truncation:We=!1,max_length:Ze=null,return_tensor:gt=!0,return_dict:Dt=!1,tokenizer_kwargs:Ft={},...er}={}){if(ue=this.get_chat_template({chat_template:ue,tools:J}),typeof ue!="string")throw Error(`chat_template must be a string, but got ${typeof ue}`);let Gt=this._compiled_template_cache.get(ue);Gt===void 0&&(Gt=new c.Template(ue),this._compiled_template_cache.set(ue,Gt));const gr=Object.create(null);for(const Sr of te){const $r=this.getToken(Sr);$r&&(gr[Sr]=$r)}const vr=Gt.render({messages:N,add_generation_prompt:xe,tools:J,documents:oe,...gr,...er});if(Re){const Sr=this._call(vr,{add_special_tokens:!1,padding:Qe,truncation:We,max_length:Ze,return_tensor:gt,...Ft});return Dt?Sr:Sr.input_ids}return vr}}class vt extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Ot extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class ht extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class ct extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class st extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Rt extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Xt extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Mr extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Zt extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class zr extends ve{}class rs extends ve{}class ms extends ve{constructor(N,J){super(N,J);Z(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ss extends ve{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class $s extends ve{}class Ur extends ve{}class Is extends ve{}class qr extends ve{constructor(I,N){super(I,N),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(I,N,J){return pr(this,I,N,J)}}class hs extends qr{}class ks extends ve{}class As extends ve{}const cr="▁";class Fs extends ve{constructor(N,J){super(N,J);Z(this,"padding_side","left");this.legacy=J.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new yr({replacement:cr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(N){if(N===null)return null;if(this.legacy||N.length===0)return super._encode_text(N);let J=super._encode_text(cr+N.replaceAll(cr," "));return J.length>1&&J[0]===cr&&this.special_tokens.includes(J[1])&&(J=J.slice(1)),J}}class Cr extends ve{}class fs extends ve{}class jr extends ve{}class Ae extends ve{}class Ye extends ve{}class ot extends ve{}class jt extends ve{}class ns extends ve{}class is extends ve{}function pr(pe,I,N,J){if(!("language_codes"in pe)||!Array.isArray(pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in pe)||!(pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in pe)||typeof pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const oe=J.src_lang,ue=J.tgt_lang;if(!pe.language_codes.includes(ue))throw new Error(`Target language code "${ue}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);if(oe!==void 0){if(!pe.language_codes.includes(oe))throw new Error(`Source language code "${oe}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);for(const xe of pe.post_processor.config.single)if("SpecialToken"in xe&&pe.languageRegex.test(xe.SpecialToken.id)){xe.SpecialToken.id=pe.lang_to_token(oe);break}}return J.forced_bos_token_id=pe.model.convert_tokens_to_ids([pe.lang_to_token(ue)])[0],pe._call(I,N)}class as extends ve{constructor(I,N){super(I,N),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(I,N,J){return pr(this,I,N,J)}}class mr extends ve{constructor(I,N){super(I,N),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)).map(J=>J.slice(2,-2)),this.lang_to_token=J=>`__${J}__`}_build_translation_inputs(I,N,J){return pr(this,I,N,J)}}class _r extends ve{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(I,{return_timestamps:N=!1,return_language:J=!1,time_precision:oe=null,force_full_sequences:ue=!0}={}){if(oe===null)throw Error("Must specify time_precision");let xe=null;const Re=N==="word";function Qe(){return{language:xe,timestamp:[null,null],text:""}}const We=[];let Ze=Qe(),gt=0;const Dt=this.timestamp_begin,er=Dt+1500;let Gt=[],gr=[],vr=!1,Sr=null;const $r=new Set(this.all_special_ids);for(const Qt of I){const wr=Qt.tokens,Br=Re?Qt.token_timestamps:null;let Qr=null,Xr=Dt;if("stride"in Qt){const[xr,sr,hr]=Qt.stride;if(gt-=sr,Sr=xr-hr,sr&&(Xr=sr/oe+Dt),hr)for(let fr=wr.length-1;fr>=0;--fr){const Or=Number(wr[fr]);if(Or>=Dt){if(Qr!==null&&(Or-Dt)*oe<Sr)break;Qr=Or}}}let Fr=[],Rr=[];for(let xr=0;xr<wr.length;++xr){const sr=Number(wr[xr]);if($r.has(sr)){const hr=this.decode([sr]),fr=p.WHISPER_LANGUAGE_MAPPING.get(hr.slice(2,-2));if(fr!==void 0){if(xe!==null&&fr!==xe&&!N){Gt.push(Fr);const Or=this.findLongestCommonSequence(Gt)[0],ls=this.decode(Or);Ze.text=ls,We.push(Ze),Gt=[],Fr=[],Ze=Qe()}xe=Ze.language=fr}}else if(sr>=Dt&&sr<=er){const hr=(sr-Dt)*oe+gt,fr=(0,a.round)(hr,2);if(Qr!==null&&sr>=Qr)vr=!0;else if(vr||Gt.length>0&&sr<Xr)vr=!1;else if(Ze.timestamp[0]===null)Ze.timestamp[0]=fr;else if(fr!==Ze.timestamp[0]){Ze.timestamp[1]=fr,Gt.push(Fr),Re&&gr.push(Rr);const[Or,ls]=this.findLongestCommonSequence(Gt,gr),mn=this.decode(Or);Ze.text=mn,Re&&(Ze.words=this.collateWordTimestamps(Or,ls,xe)),We.push(Ze),Gt=[],Fr=[],gr=[],Rr=[],Ze=Qe()}}else if(Fr.push(sr),Re){let hr=(0,a.round)(Br[xr]+gt,2),fr;if(xr+1<Br.length){fr=(0,a.round)(Br[xr+1]+gt,2);const Or=this.decode([sr]);M.test(Or)&&(fr=(0,a.round)(Math.min(hr+oe,fr),2))}else fr=null;Rr.push([hr,fr])}}if("stride"in Qt){const[xr,sr,hr]=Qt.stride;gt+=xr-hr}Fr.length>0?(Gt.push(Fr),Re&&gr.push(Rr)):Gt.every(xr=>xr.length===0)&&(Ze=Qe(),Gt=[],Fr=[],gr=[],Rr=[])}if(Gt.length>0){if(ue&&N)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Qt,wr]=this.findLongestCommonSequence(Gt,gr),Br=this.decode(Qt);Ze.text=Br,Re&&(Ze.words=this.collateWordTimestamps(Qt,wr,xe)),We.push(Ze)}let rr=Object.create(null);const gs=We.map(Qt=>Qt.text).join("");if(N||J){for(let Qt=0;Qt<We.length;++Qt){const wr=We[Qt];N||delete wr.timestamp,J||delete wr.language}if(Re){const Qt=[];for(const wr of We)for(const Br of wr.words)Qt.push(Br);rr={chunks:Qt}}else rr={chunks:We}}return[gs,rr]}findLongestCommonSequence(I,N=null){let J=I[0],oe=J.length,ue=[];const xe=Array.isArray(N)&&N.length>0;let Re=xe?[]:null,Qe=xe?N[0]:null;for(let We=1;We<I.length;++We){const Ze=I[We];let gt=0,Dt=[oe,oe,0,0];const Ft=Ze.length;for(let rr=1;rr<oe+Ft;++rr){const gs=Math.max(0,oe-rr),Qt=Math.min(oe,oe+Ft-rr),wr=J.slice(gs,Qt),Br=Math.max(0,rr-oe),Qr=Math.min(Ft,rr),Xr=Ze.slice(Br,Qr);if(wr.length!==Xr.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Fr;xe?Fr=wr.filter((sr,hr)=>sr===Xr[hr]&&Qe[gs+hr]<=N[We][Br+hr]).length:Fr=wr.filter((sr,hr)=>sr===Xr[hr]).length;const Rr=rr/1e4,xr=Fr/rr+Rr;Fr>1&&xr>gt&&(gt=xr,Dt=[gs,Qt,Br,Qr])}const[er,Gt,gr,vr]=Dt,Sr=Math.floor((Gt+er)/2),$r=Math.floor((vr+gr)/2);ue.push(...J.slice(0,Sr)),J=Ze.slice($r),oe=J.length,xe&&(Re.push(...Qe.slice(0,Sr)),Qe=N[We].slice($r))}return ue.push(...J),xe?(Re.push(...Qe),[ue,Re]):[ue,[]]}collateWordTimestamps(I,N,J){const[oe,ue,xe]=this.combineTokensIntoWords(I,J),Re=[];for(let Qe=0;Qe<oe.length;++Qe){const We=xe[Qe];Re.push({text:oe[Qe],timestamp:[N[We.at(0)][0],N[We.at(-1)][1]]})}return Re}combineTokensIntoWords(I,N,J=`"'“¡¿([{-`,oe=`"'.。,，!！?？:：”)]}、`){N=N??"english";let ue,xe,Re;return["chinese","japanese","thai","lao","myanmar"].includes(N)?[ue,xe,Re]=this.splitTokensOnUnicode(I):[ue,xe,Re]=this.splitTokensOnSpaces(I),this.mergePunctuations(ue,xe,Re,J,oe)}decode(I,N){let J;return N!=null&&N.decode_with_timestamps?(I instanceof o.Tensor&&(I=v(I)),J=this.decodeWithTimestamps(I,N)):J=super.decode(I,N),J}decodeWithTimestamps(I,N){const J=(N==null?void 0:N.time_precision)??.02,oe=Array.from(this.all_special_ids).at(-1)+1;let ue=[[]];for(let xe of I)if(xe=Number(xe),xe>=oe){const Re=((xe-oe)*J).toFixed(2);ue.push(`<|${Re}|>`),ue.push([])}else ue[ue.length-1].push(xe);return ue=ue.map(xe=>typeof xe=="string"?xe:super.decode(xe,N)),ue.join("")}splitTokensOnUnicode(I){const N=this.decode(I,{decode_with_timestamps:!0}),J="�",oe=[],ue=[],xe=[];let Re=[],Qe=[],We=0;for(let Ze=0;Ze<I.length;++Ze){const gt=I[Ze];Re.push(gt),Qe.push(Ze);const Dt=this.decode(Re,{decode_with_timestamps:!0});(!Dt.includes(J)||N[We+Dt.indexOf(J)]===J)&&(oe.push(Dt),ue.push(Re),xe.push(Qe),Re=[],Qe=[],We+=Dt.length)}return[oe,ue,xe]}splitTokensOnSpaces(I){const[N,J,oe]=this.splitTokensOnUnicode(I),ue=[],xe=[],Re=[],Qe=new RegExp(`^[${b}]$`,"gu");for(let We=0;We<N.length;++We){const Ze=N[We],gt=J[We],Dt=oe[We],Ft=gt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),er=Ze.startsWith(" "),Gt=Ze.trim(),gr=Qe.test(Gt);if(Ft||er||gr||ue.length===0)ue.push(Ze),xe.push(gt),Re.push(Dt);else{const vr=ue.length-1;ue[vr]+=Ze,xe[vr].push(...gt),Re[vr].push(...Dt)}}return[ue,xe,Re]}mergePunctuations(I,N,J,oe,ue){const xe=structuredClone(I),Re=structuredClone(N),Qe=structuredClone(J);let We=xe.length-2,Ze=xe.length-1;for(;We>=0;)xe[We].startsWith(" ")&&oe.includes(xe[We].trim())?(xe[Ze]=xe[We]+xe[Ze],Re[Ze]=(0,i.mergeArrays)(Re[We],Re[Ze]),Qe[Ze]=(0,i.mergeArrays)(Qe[We],Qe[Ze]),xe[We]="",Re[We]=[],Qe[We]=[]):Ze=We,--We;for(We=0,Ze=1;Ze<xe.length;)!xe[We].endsWith(" ")&&ue.includes(xe[Ze])?(xe[We]+=xe[Ze],Re[We]=(0,i.mergeArrays)(Re[We],Re[Ze]),Qe[We]=(0,i.mergeArrays)(Qe[We],Qe[Ze]),xe[Ze]="",Re[Ze]=[],Qe[Ze]=[]):We=Ze,++Ze;return[xe.filter(gt=>gt),Re.filter(gt=>gt.length>0),Qe.filter(gt=>gt.length>0)]}}class os extends ve{}class _s extends ve{}class nn extends ve{}class an extends ve{constructor(I,N){super(I,N),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(J=>this.languageRegex.test(J)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(I){if(I===null)return null;const[N,...J]=I.trim().split(this.languageRegex);if(J.length===0)return super._encode_text(N);if(J.length===2){const[oe,ue]=J;return this.supported_language_codes.includes(oe)||console.warn(`Unsupported language code "${oe}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,i.mergeArrays)([oe],super._encode_text(ue))}}}class on extends ve{}class ln extends ve{}class cn extends ve{}class Os extends ve{}class Us extends ve{}class dn extends ve{constructor(I,N){super(I,N),this.decoder=new Bt({})}}class un extends ve{}class pn extends ve{}class Ds{static async from_pretrained(I,{progress_callback:N=null,config:J=null,cache_dir:oe=null,local_files_only:ue=!1,revision:xe="main",legacy:Re=null}={}){var Dt;const[Qe,We]=await d(I,{progress_callback:N,config:J,cache_dir:oe,local_files_only:ue,revision:xe,legacy:Re}),Ze=((Dt=We.tokenizer_class)==null?void 0:Dt.replace(/Fast$/,""))??"PreTrainedTokenizer";let gt=this.TOKENIZER_CLASS_MAPPING[Ze];return gt||(console.warn(`Unknown tokenizer class "${Ze}", attempting to construct from base class.`),gt=ve),new gt(Qe,We)}}Z(Ds,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:$s,DistilBertTokenizer:zr,CamembertTokenizer:rs,DebertaTokenizer:st,DebertaV2Tokenizer:Rt,BertTokenizer:vt,HerbertTokenizer:Xt,ConvBertTokenizer:Mr,RoFormerTokenizer:Zt,XLMTokenizer:ms,ElectraTokenizer:ss,MobileBertTokenizer:ht,SqueezeBertTokenizer:ct,AlbertTokenizer:Ot,GPT2Tokenizer:Ur,BartTokenizer:Is,MBartTokenizer:qr,MBart50Tokenizer:hs,RobertaTokenizer:ks,WhisperTokenizer:_r,CodeGenTokenizer:os,CLIPTokenizer:_s,SiglipTokenizer:nn,MarianTokenizer:an,BloomTokenizer:As,NllbTokenizer:as,M2M100Tokenizer:mr,LlamaTokenizer:Fs,CodeLlamaTokenizer:Cr,XLMRobertaTokenizer:fs,MPNetTokenizer:jr,FalconTokenizer:Ae,GPTNeoXTokenizer:Ye,EsmTokenizer:ot,Wav2Vec2CTCTokenizer:on,BlenderbotTokenizer:ln,BlenderbotSmallTokenizer:cn,SpeechT5Tokenizer:Os,NougatTokenizer:Us,VitsTokenizer:dn,Qwen2Tokenizer:jt,GemmaTokenizer:ns,Grok1Tokenizer:is,CohereTokenizer:un,MgpstrTokenizer:pn,PreTrainedTokenizer:ve})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>Q,hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>C,read_audio:()=>c,spectrogram:()=>P,window_function:()=>A});var s=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),a=t("./src/env.js"),o=t("?7a2c"),l=t("./src/utils/tensor.js");async function c(B,Y){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,s.getFile)(B)).arrayBuffer(),q=new AudioContext({sampleRate:Y});typeof Y>"u"&&console.warn(`No sampling rate provided, using default of ${q.sampleRate}Hz.`);const X=await q.decodeAudioData(H);let re;if(X.numberOfChannels===2){const de=Math.sqrt(2),ae=X.getChannelData(0),j=X.getChannelData(1);re=new Float32Array(ae.length);for(let F=0;F<X.length;++F)re[F]=de*(ae[F]+j[F])/2}else re=X.getChannelData(0);return re}function p(B,Y){if(B<1)return new Float64Array;if(B===1)return new Float64Array([1]);const H=1-Y,q=2*Math.PI/(B-1),X=new Float64Array(B);for(let re=0;re<B;++re)X[re]=Y-H*Math.cos(re*q);return X}function d(B){return p(B,.5)}function u(B){return p(B,.54)}const _={htk:B=>2595*Math.log10(1+B/700),kaldi:B=>1127*Math.log(1+B/700),slaney:(B,Y=1e3,H=15,q=27/Math.log(6.4))=>B>=Y?H+Math.log(B/Y)*q:3*B/200};function f(B,Y="htk"){const H=_[Y];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof B=="number"?H(B):B.map(q=>H(q))}const v={htk:B=>700*(10**(B/2595)-1),kaldi:B=>700*(Math.exp(B/1127)-1),slaney:(B,Y=1e3,H=15,q=Math.log(6.4)/27)=>B>=H?Y*Math.exp(q*(B-H)):200*B/3};function $(B,Y="htk"){const H=v[Y];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof B=="number"?H(B):B.map(q=>H(q))}function w(B,Y){const H=Float64Array.from({length:Y.length-1},(de,ae)=>Y[ae+1]-Y[ae]),q=Array.from({length:B.length},()=>new Array(Y.length));for(let de=0;de<B.length;++de){const ae=q[de];for(let j=0;j<Y.length;++j)ae[j]=Y[j]-B[de]}const X=Y.length-2,re=Array.from({length:X},()=>new Array(B.length));for(let de=0;de<B.length;++de){const ae=q[de];for(let j=0;j<X;++j){const F=-ae[j]/H[j],U=ae[j+2]/H[j+1];re[j][de]=Math.max(0,Math.min(F,U))}}return re}function g(B,Y,H){const q=(Y-B)/(H-1);return Float64Array.from({length:H},(X,re)=>B+q*re)}function C(B,Y,H,q,X,re=null,de="htk",ae=!1){if(re!==null&&re!=="slaney")throw new Error('norm must be one of null or "slaney"');if(B<2)throw new Error(`Require num_frequency_bins: ${B} >= 2`);if(H>q)throw new Error(`Require min_frequency: ${H} <= max_frequency: ${q}`);const j=f(H,de),F=f(q,de),U=g(j,F,Y+2);let ee=$(U,de),_e;if(ae){const Me=X/((B-1)*2);_e=f(Float64Array.from({length:B},(ze,Ue)=>Ue*Me),de),ee=U}else _e=g(0,Math.floor(X/2),B);const le=w(_e,ee);if(re!==null&&re==="slaney")for(let Me=0;Me<Y;++Me){const ze=le[Me],Ue=2/(ee[Me+2]-ee[Me]);for(let me=0;me<B;++me)ze[me]*=Ue}return le}function E(B,Y,H){const q=new B.constructor(B.length+Y+H),X=B.length-1;for(let re=0;re<B.length;++re)q[Y+re]=B[re];for(let re=1;re<=Y;++re)q[Y-re]=B[(0,n.calculateReflectOffset)(re,X)];for(let re=1;re<=H;++re)q[X+Y+re]=B[(0,n.calculateReflectOffset)(X-re,X)];return q}function x(B,Y,H,q,X){if(H<=0)throw new Error("reference must be greater than zero");if(q<=0)throw new Error("min_value must be greater than zero");H=Math.max(q,H);const re=Math.log10(H);for(let de=0;de<B.length;++de)B[de]=Y*Math.log10(Math.max(q,B[de])-re);if(X!==null){if(X<=0)throw new Error("db_range must be greater than zero");const de=(0,i.max)(B)[0]-X;for(let ae=0;ae<B.length;++ae)B[ae]=Math.max(B[ae],de)}return B}function b(B,Y=1,H=1e-5,q=null){return x(B,20,Y,H,q)}function M(B,Y=1,H=1e-10,q=null){return x(B,10,Y,H,q)}async function P(B,Y,H,q,{fft_length:X=null,power:re=1,center:de=!0,pad_mode:ae="reflect",onesided:j=!0,preemphasis:F=null,mel_filters:U=null,mel_floor:ee=1e-10,log_mel:_e=null,reference:le=1,min_value:Me=1e-10,db_range:ze=null,remove_dc_offset:Ue=null,min_num_frames:me=null,max_num_frames:W=null,do_pad:se=!0,transpose:G=!1}={}){const be=Y.length;if(X===null&&(X=H),H>X)throw Error(`frame_length (${H}) may not be larger than fft_length (${X})`);if(be!==H)throw new Error(`Length of the window (${be}) must equal frame_length (${H})`);if(q<=0)throw new Error("hop_length must be greater than zero");if(re===null&&U!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(de){if(ae!=="reflect")throw new Error(`pad_mode="${ae}" not implemented yet.`);const nt=Math.floor((X-1)/2)+1;B=E(B,nt,nt)}let we=Math.floor(1+Math.floor((B.length-H)/q));me!==null&&we<me&&(we=me);const Se=j?Math.floor(X/2)+1:X;let Pe=we,$e=we;W!==null&&(W>we?se&&($e=W):$e=Pe=W);const Fe=new i.FFT(X),Be=new Float64Array(X),He=new Float64Array(Fe.outputBufferSize),qe=new Float32Array(Se*$e);for(let nt=0;nt<Pe;++nt){const lt=nt*q,Ge=Math.min(B.length-lt,H);Ge!==H&&Be.fill(0,0,H);for(let ke=0;ke<Ge;++ke)Be[ke]=B[lt+ke];if(Ue){let ke=0;for(let $t=0;$t<Ge;++$t)ke+=Be[$t];const mt=ke/Ge;for(let $t=0;$t<Ge;++$t)Be[$t]-=mt}if(F!==null){for(let ke=Ge-1;ke>=1;--ke)Be[ke]-=F*Be[ke-1];Be[0]*=1-F}for(let ke=0;ke<Y.length;++ke)Be[ke]*=Y[ke];Fe.realTransform(He,Be);for(let ke=0;ke<Se;++ke){const mt=ke<<1;qe[ke*$e+nt]=He[mt]**2+He[mt+1]**2}}if(re!==null&&re!==2){const nt=2/re;for(let lt=0;lt<qe.length;++lt)qe[lt]**=nt}const Ie=U.length;let Ve=await(0,l.matmul)(new l.Tensor("float32",U.flat(),[Ie,Se]),new l.Tensor("float32",qe,[Se,$e]));G&&(Ve=Ve.transpose(1,0));const et=Ve.data;for(let nt=0;nt<et.length;++nt)et[nt]=Math.max(ee,et[nt]);if(re!==null&&_e!==null){const nt=Math.min(et.length,Pe*Ie);switch(_e){case"log":for(let lt=0;lt<nt;++lt)et[lt]=Math.log(et[lt]);break;case"log10":for(let lt=0;lt<nt;++lt)et[lt]=Math.log10(et[lt]);break;case"dB":if(re===1)b(et,le,Me,ze);else if(re===2)M(et,le,Me,ze);else throw new Error(`Cannot use log_mel option '${_e}' with power ${re}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_e}'`)}}return Ve}function A(B,Y,{periodic:H=!0,frame_length:q=null,center:X=!0}={}){const re=H?B+1:B;let de;switch(Y){case"boxcar":de=new Float64Array(re).fill(1);break;case"hann":case"hann_window":de=d(re);break;case"hamming":de=u(re);break;case"povey":de=d(re).map(ae=>Math.pow(ae,.85));break;default:throw new Error(`Unknown window type ${Y}.`)}if(H&&(de=de.subarray(0,B)),q===null)return de;if(B>q)throw new Error(`Length of the window (${B}) may not be larger than frame_length (${q})`);return de}function z(B,Y){let H=44;const q=new ArrayBuffer(H+B.length*4),X=new DataView(q);K(X,0,"RIFF"),X.setUint32(4,36+B.length*4,!0),K(X,8,"WAVE"),K(X,12,"fmt "),X.setUint32(16,16,!0),X.setUint16(20,3,!0),X.setUint16(22,1,!0),X.setUint32(24,Y,!0),X.setUint32(28,Y*4,!0),X.setUint16(32,4,!0),X.setUint16(34,32,!0),K(X,36,"data"),X.setUint32(40,B.length*4,!0);for(let re=0;re<B.length;++re,H+=4)X.setFloat32(H,B[re],!0);return q}function K(B,Y,H){for(let q=0;q<H.length;++q)B.setUint8(Y+q,H.charCodeAt(q))}class Q{constructor(Y,H){this.audio=Y,this.sampling_rate=H}toWav(){return z(this.audio,this.sampling_rate)}toBlob(){const Y=this.toWav();return new Blob([Y],{type:"audio/wav"})}async save(Y){let H;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=n.saveBlob}else if(a.apis.IS_FS_AVAILABLE)H=async(q,X)=>{let re=await X.arrayBuffer();o.writeFileSync(q,Buffer.from(re))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(Y,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>i,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>o});const s="https://github.com/huggingface/transformers.js/issues/new/choose",i="config.json",n="preprocessor_config.json",a=n,o="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>_,count:()=>w,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>o,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>$,mergeArrays:()=>d,pick:()=>v,pop:()=>p,product:()=>u,reverseDictionary:()=>i,saveBlob:()=>f});function s(g,C){g&&g(C)}function i(g){return Object.fromEntries(Object.entries(g).map(([C,E])=>[E,C]))}function n(g){return g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(g){var C,E,x;return((x=(E=(C=g==null?void 0:g.prototype)==null?void 0:C.__proto__)==null?void 0:E.constructor)==null?void 0:x.name)==="TypedArray"}function o(g){return Number.isInteger(g)||typeof g=="bigint"}function l(g){return g==null||g===-1}function c(g){const C=[];let E=g;for(;Array.isArray(E);)C.push(E.length),E=E[0];return C}function p(g,C,E=void 0){const x=g[C];if(x!==void 0)return delete g[C],x;if(E===void 0)throw Error(`Key ${C} does not exist in object.`);return E}function d(...g){return Array.prototype.concat.apply([],g)}function u(...g){return g.reduce((C,E)=>C.flatMap(x=>E.map(b=>[x,b])))}function _(g,C){return Math.abs((g+C)%(2*C)-C)}function f(g,C){const E=URL.createObjectURL(C),x=document.createElement("a");x.href=E,x.download=g,x.click(),x.remove(),URL.revokeObjectURL(E)}function v(g,C){return Object.assign({},...C.map(E=>{if(g[E]!==void 0)return{[E]:g[E]}}))}function $(g){let C=0;for(const E of g)++C;return C}function w(g,C){let E=0;for(const x of g)x===C&&++E;return E}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>i,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>s,TokenLattice:()=>a});class s{constructor(d=(_,f)=>_>f,u=1/0){this._heap=[],this._comparator=d,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const u of d)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const _=this._smallest();this._comparator(u,this._heap[_])&&(this._heap[_]=u,this._siftUpFrom(_))}return this.size}pop(){const d=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),d}replace(d){const u=this.peek();return this._heap[0]=d,this._siftDown(),u}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,u){return this._comparator(this._heap[d],this._heap[u])}_swap(d,u){const _=this._heap[d];this._heap[d]=this._heap[u],this._heap[u]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const u=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,u),d=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class i{constructor(){this.root=n.default()}extend(d){for(const u of d)this.push(u)}push(d){let u=this.root;for(const _ of d){let f=u.children.get(_);f===void 0&&(f=n.default(),u.children.set(_,f)),u=f}u.isLeaf=!0}*commonPrefixSearch(d){let u=this.root;if(u===void 0)return;let _="";for(const f of d){if(_+=f,u=u.children.get(f),u===void 0)return;u.isLeaf&&(yield _)}}}class n{constructor(d,u){this.isLeaf=d,this.children=u}static default(){return new n(!1,new Map)}}class a{constructor(d,u,_){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new o(this.bosTokenId,0,0,0,0),v=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(v.clone()),this.beginNodes[this.len].push(v),this.endNodes[0].push(f)}insert(d,u,_,f){const v=this.nodes.length,$=new o(f,v,d,u,_);this.beginNodes[d].push($),this.endNodes[d+u].push($),this.nodes.push($)}viterbi(){const d=this.len;let u=0;for(;u<=d;){if(this.beginNodes[u].length==0)return[];for(let w of this.beginNodes[u]){w.prev=null;let g=0,C=null;for(let E of this.endNodes[u]){const x=E.backtraceScore+w.score;(C===null||x>g)&&(C=E.clone(),g=x)}if(C!==null)w.prev=C,w.backtraceScore=g;else return[]}++u}const _=[],v=this.beginNodes[d][0].prev;if(v===null)return[];let $=v.clone();for(;$.prev!==null;)_.push($.clone()),$=$.clone().prev.clone();return _.reverse(),_}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class o{constructor(d,u,_,f,v){this.tokenId=d,this.nodeId=u,this.pos=_,this.length=f,this.score=v,this.prev=null,this.backtraceScore=0}clone(){const d=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){var _;const u=Object.create(null);for(const f of d){let v=u;for(let $=0;$<f.length;++$)v=v[_=f[$]]??(v[_]=Object.create(null));v.end=f}return u}split(d){const u=[],_=d.length;let f=0,v=0;for(;v<_;){let $=this.trie,w=null,g=v;for(;g<_&&($=$[d[g]]);)$.end&&(w=$.end),++g;w?(v>f&&u.push(d.slice(f,v)),u.push(w),v+=w.length,f=v):++v}return f<_&&u.push(d.slice(f)),u}}class c{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const u=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,u),u}put(d,u){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,u),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>o,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),i=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),o=Object.freeze({[i.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let i=function(...n){return i._call(...n)};return Object.setPrototypeOf(i,new.target.prototype)}_call(...i){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>o,getFile:()=>_,getModelFile:()=>g,getModelJSON:()=>C});var s=t("?7a2c"),i=t("?a42a"),n=t("./src/env.js"),a=t("./src/utils/core.js");const o=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(M){if(this.filePath=M,this.headers=new Headers,this.exists=s.existsSync(M),this.exists){this.status=200,this.statusText="OK";let P=s.statSync(M);this.headers.set("content-length",P.size.toString()),this.updateContentType();const A=s.createReadStream(M);this.body=new ReadableStream({start(z){A.on("data",K=>z.enqueue(K)),A.on("end",()=>z.close()),A.on("error",K=>z.error(K))},cancel(){A.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const M=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[M]??"application/octet-stream")}clone(){let M=new c(this.filePath);return M.exists=this.exists,M.status=this.status,M.statusText=this.statusText,M.headers=new Headers(this.headers),M}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const M=await s.promises.readFile(this.filePath);return new Blob([M],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(b,M=null,P=null){let A;try{A=new URL(b)}catch{return!1}return!(M&&!M.includes(A.protocol)||P&&!P.includes(A.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function u(b){return!(!d.test(b)||b.includes("..")||b.includes("--")||b.endsWith(".git")||b.endsWith(".ipynb"))}async function _(b){var M;if(n.env.useFS&&!p(b,["http:","https:","blob:"]))return new c(b instanceof URL?b.protocol==="file:"?b.pathname:b.toString():b);if(typeof process<"u"&&((M=process==null?void 0:process.release)==null?void 0:M.name)==="node"){const P=!!(js!=null&&js.TESTING_REMOTELY),A=n.env.version,z=new Headers;if(z.set("User-Agent",`transformers.js/${A}; is_ci/${P};`),p(b,["http:","https:"],["huggingface.co","hf.co"])){const Q=(js==null?void 0:js.HF_TOKEN)??(js==null?void 0:js.HF_ACCESS_TOKEN);Q&&z.set("Authorization",`Bearer ${Q}`)}return fetch(b,{headers:z})}else return fetch(b)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function v(b,M,P){if(!P)return null;const A=f[b]??`Error (${b}) occurred while trying to load file`;throw Error(`${A}: "${M}".`)}class ${constructor(M){this.path=M}async match(M){let P=i.join(this.path,M),A=new c(P);if(A.exists)return A}async put(M,P,A=void 0){let z=i.join(this.path,M);try{const K=P.headers.get("Content-Length"),Q=parseInt(K??"0");let B=0;await s.promises.mkdir(i.dirname(z),{recursive:!0});const Y=s.createWriteStream(z),H=P.body.getReader();for(;;){const{done:q,value:X}=await H.read();if(q)break;await new Promise((de,ae)=>{Y.write(X,j=>{if(j){ae(j);return}de()})}),B+=X.length;const re=Q?B/Q*100:0;A==null||A({progress:re,loaded:B,total:Q})}Y.close()}catch(K){try{await s.promises.unlink(z)}catch{}throw K}}}async function w(b,...M){for(let P of M)try{let A=await b.match(P);if(A)return A}catch{continue}}async function g(b,M,P=!0,A={},z=!1){if(!n.env.allowLocalModels){if(A.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,a.dispatchCallback)(A.progress_callback,{status:"initiate",name:b,file:M});let K;if(!K&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");K=n.env.customCache}if(!K&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{K=await caches.open("transformers-cache")}catch(ee){console.warn("An error occurred while opening the browser cache:",ee)}}if(!K&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");K=new $(A.cache_dir??n.env.cacheDir)}const Q=A.revision??"main",B=x(b,M),Y=u(b),H=Y?x(n.env.localModelPath,B):B,q=x(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",b).replaceAll("{revision}",encodeURIComponent(Q)),M);let X;const re=K instanceof $?Q==="main"?B:x(b,Q,M):q;let de=!1,ae;K&&(ae=await w(K,H,re));const j=ae!==void 0;if(ae===void 0){if(n.env.allowLocalModels)if(p(B,["http:","https:"])){if(A.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${B}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${B}.`)}else try{ae=await _(H),X=H}catch(_e){console.warn(`Unable to load from local path "${H}": "${_e}"`)}if(ae===void 0||ae.status===404){if(A.local_files_only||!n.env.allowRemoteModels){if(P)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${H}".`);return null}if(!Y)throw Error(`Local file missing at "${H}" and download aborted due to invalid model ID "${b}".`);if(ae=await _(q),ae.status!==200)return v(ae.status,q,P);X=re}de=K&&typeof Response<"u"&&ae instanceof Response&&ae.status===200}(0,a.dispatchCallback)(A.progress_callback,{status:"download",name:b,file:M});let F;if(!(n.apis.IS_NODE_ENV&&z)){let ee;A.progress_callback?j&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ee=new Uint8Array(await ae.arrayBuffer()),(0,a.dispatchCallback)(A.progress_callback,{status:"progress",name:b,file:M,progress:100,loaded:ee.length,total:ee.length})):ee=await E(ae,_e=>{(0,a.dispatchCallback)(A.progress_callback,{status:"progress",name:b,file:M,..._e})}):ee=new Uint8Array(await ae.arrayBuffer()),F=ee}if(de&&X&&await K.match(X)===void 0&&(F?await K.put(X,new Response(F,{headers:ae.headers})).catch(ee=>{console.warn(`Unable to add response to browser cache: ${ee}.`)}):await K.put(X,ae,A.progress_callback)),(0,a.dispatchCallback)(A.progress_callback,{status:"done",name:b,file:M}),F){if(!n.apis.IS_NODE_ENV&&z)throw new Error("Cannot return path in a browser environment.");return F}if(ae instanceof c)return ae.filePath;const U=await(K==null?void 0:K.match(X));if(U instanceof c)return U.filePath;if(U instanceof Response)return new Uint8Array(await U.arrayBuffer());if(typeof U=="string")return U;throw new Error("Unable to get model file path or buffer.")}async function C(b,M,P=!0,A={}){const z=await g(b,M,P,A,!1);if(z===null)return{};const Q=new TextDecoder("utf-8").decode(z);return JSON.parse(Q)}async function E(b,M){const P=b.headers.get("Content-Length");P===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let A=parseInt(P??"0"),z=new Uint8Array(A),K=0;const Q=b.body.getReader();async function B(){const{done:Y,value:H}=await Q.read();if(Y)return;const q=K+H.length;if(q>A){A=q;const re=new Uint8Array(A);re.set(z),z=re}z.set(H,K),K=q;const X=K/A*100;return M({progress:X,loaded:K,total:A}),B()}return await B(),z}function x(...b){return b=b.map((M,P)=>(P&&(M=M.replace(new RegExp("^/"),"")),P!==b.length-1&&(M=M.replace(new RegExp("/$"),"")),M)),b.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>v});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),n=t("./src/env.js"),a=t("./src/utils/tensor.js"),o=t("?2b25");let l,c,p;const d=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(d)l=($,w)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas($,w)},p=self.createImageBitmap,c=self.ImageData;else if(o)p=async $=>{const g=(await $.metadata()).channels,{data:C,info:E}=await $.rotate().raw().toBuffer({resolveWithObject:!0}),x=new f(new Uint8ClampedArray(C),E.width,E.height,E.channels);return g!==void 0&&g!==E.channels&&x.convert(g),x};else throw new Error("Unable to load image processing library.");const u={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(w,g,C,E){this.data=w,this.width=g,this.height=C,this.channels=E}get size(){return[this.width,this.height]}static async read(w){if(w instanceof f)return w;if(typeof w=="string"||w instanceof URL)return await this.fromURL(w);if(w instanceof Blob)return await this.fromBlob(w);if(typeof HTMLCanvasElement<"u"&&w instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&w instanceof OffscreenCanvas)return this.fromCanvas(w);throw new Error(`Unsupported input type: ${typeof w}`)}static fromCanvas(w){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const C=w.getContext("2d").getImageData(0,0,w.width,w.height).data;return new f(C,w.width,w.height,4)}static async fromURL(w){const g=await(0,i.getFile)(w);if(g.status!==200)throw new Error(`Unable to read image from "${w}" (${g.status} ${g.statusText})`);const C=await g.blob();return this.fromBlob(C)}static async fromBlob(w){if(d){const g=await p(w),C=l(g.width,g.height).getContext("2d");return C.drawImage(g,0,0),new this(C.getImageData(0,0,g.width,g.height).data,g.width,g.height,4)}else{const g=o(await w.arrayBuffer());return await p(g)}}static fromTensor(w,g="CHW"){if(w.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${w.dims.length} dimensions.`);if(g==="CHW")w=w.transpose(1,2,0);else if(g!=="HWC")throw new Error(`Unsupported channel format: ${g}`);if(!(w.data instanceof Uint8ClampedArray||w.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${w.type}`);switch(w.dims[2]){case 1:case 2:case 3:case 4:return new f(w.data,w.dims[1],w.dims[0],w.dims[2]);default:throw new Error(`Unsupported number of channels: ${w.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const w=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let g=0,C=0;g<this.data.length;g+=this.channels){const E=this.data[g],x=this.data[g+1],b=this.data[g+2];w[C++]=Math.round(.2989*E+.587*x+.114*b)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const w=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=this.data[g];break;case 4:for(let g=0,C=0;g<this.data.length;g+=4)w[C++]=this.data[g],w[C++]=this.data[g+1],w[C++]=this.data[g+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const w=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=this.data[g],w[C++]=255;break;case 3:for(let g=0,C=0;g<this.data.length;g+=3)w[C++]=this.data[g],w[C++]=this.data[g+1],w[C++]=this.data[g+2],w[C++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(w,this.width,this.height,4)}putAlpha(w){if(w.width!==this.width||w.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${w.width}x${w.height}`);if(w.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${w.channels}`);const g=this.data,C=w.data,E=this.width*this.height;if(this.channels===3){const x=new Uint8ClampedArray(E*4);for(let b=0,M=0,P=0;b<E;++b)x[P++]=g[M++],x[P++]=g[M++],x[P++]=g[M++],x[P++]=C[b];return this._update(x,this.width,this.height,4)}else if(this.channels===4){for(let x=0;x<E;++x)g[4*x+3]=C[x];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(w,g,{resample:C=2}={}){if(this.width===w&&this.height===g)return this;let E=u[C]??C;const x=(0,s.isNullishDimension)(w),b=(0,s.isNullishDimension)(g);if(x&&b)return this;if(x?w=g/this.height*this.width:b&&(g=w/this.width*this.height),d){const M=this.channels,P=this.toCanvas(),A=l(w,g).getContext("2d");return A.drawImage(P,0,0,w,g),new f(A.getImageData(0,0,w,g).data,w,g,4).convert(M)}else{let M=this.toSharp();switch(E){case"box":case"hamming":(E==="box"||E==="hamming")&&(console.warn(`Resampling method ${E} is not yet supported. Using bilinear instead.`),E="bilinear");case"nearest":case"bilinear":case"bicubic":M=M.affine([w/this.width,0,0,g/this.height],{interpolator:E});break;case"lanczos":M=M.resize({width:w,height:g,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${E} is not supported.`)}return await p(M)}}async pad([w,g,C,E]){if(w=Math.max(w,0),g=Math.max(g,0),C=Math.max(C,0),E=Math.max(E,0),w===0&&g===0&&C===0&&E===0)return this;if(d){const x=this.channels,b=this.toCanvas(),M=this.width+w+g,P=this.height+C+E,A=l(M,P).getContext("2d");return A.drawImage(b,0,0,this.width,this.height,w,C,this.width,this.height),new f(A.getImageData(0,0,M,P).data,M,P,4).convert(x)}else{const x=this.toSharp().extend({left:w,right:g,top:C,bottom:E});return await p(x)}}async crop([w,g,C,E]){if(w=Math.max(w,0),g=Math.max(g,0),C=Math.min(C,this.width-1),E=Math.min(E,this.height-1),w===0&&g===0&&C===this.width-1&&E===this.height-1)return this;const x=C-w+1,b=E-g+1;if(d){const M=this.channels,P=this.toCanvas(),A=l(x,b).getContext("2d");return A.drawImage(P,w,g,x,b,0,0,x,b),new f(A.getImageData(0,0,x,b).data,x,b,4).convert(M)}else{const M=this.toSharp().extract({left:w,top:g,width:x,height:b});return await p(M)}}async center_crop(w,g){if(this.width===w&&this.height===g)return this;const C=(this.width-w)/2,E=(this.height-g)/2;if(d){const x=this.channels,b=this.toCanvas(),M=l(w,g).getContext("2d");let P=0,A=0,z=0,K=0;return C>=0?P=C:z=-C,E>=0?A=E:K=-E,M.drawImage(b,P,A,w,g,z,K,w,g),new f(M.getImageData(0,0,w,g).data,w,g,4).convert(x)}else{let x=this.toSharp();if(C>=0&&E>=0)x=x.extract({left:Math.floor(C),top:Math.floor(E),width:w,height:g});else if(C<=0&&E<=0){const b=Math.floor(-E),M=Math.floor(-C);x=x.extend({top:b,left:M,right:w-this.width-M,bottom:g-this.height-b})}else{let b=[0,0],M=0;E<0?(b[0]=Math.floor(-E),b[1]=g-this.height-b[0]):M=Math.floor(E);let P=[0,0],A=0;C<0?(P[0]=Math.floor(-C),P[1]=w-this.width-P[0]):A=Math.floor(C),x=x.extend({top:b[0],bottom:b[1],left:P[0],right:P[1]}).extract({left:A,top:M,width:w,height:g})}return await p(x)}}async toBlob(w="image/png",g=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:w,quality:g})}toTensor(w="CHW"){let g=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(w!=="HWC")if(w==="CHW")g=g.permute(2,0,1);else throw new Error(`Unsupported channel format: ${w}`);return g}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const w=this.clone().rgba(),g=l(w.width,w.height),C=new c(w.data,w.width,w.height);return g.getContext("2d").putImageData(C,0,0),g}split(){const{data:w,width:g,height:C,channels:E}=this,x=w.constructor,b=w.length/E,M=Array.from({length:E},()=>new x(b));for(let P=0;P<b;++P){const A=E*P;for(let z=0;z<E;++z)M[z][P]=w[A+z]}return M.map(P=>new f(P,g,C,1))}_update(w,g,C,E=null){return this.data=w,this.width=g,this.height=C,E!==null&&(this.channels=E),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(w){if(this.channels===w)return this;switch(w){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(w){if(d){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const g=w.split(".").pop().toLowerCase(),C=_.get(g)??"image/png",E=await this.toBlob(C);(0,s.saveBlob)(w,E)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(w);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return o(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const v=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>v,bankers_round:()=>g,cos_sim:()=>l,dot:()=>o,dynamic_time_warping:()=>C,interpolate_data:()=>s,log_softmax:()=>a,magnitude:()=>c,max:()=>d,medianFilter:()=>$,min:()=>p,permute_data:()=>i,round:()=>w,softmax:()=>n});function s(E,[x,b,M],[P,A],z="bilinear",K=!1){const Q=A/M,B=P/b,Y=new E.constructor(P*A*x),H=b*M,q=P*A;for(let X=0;X<P;++X)for(let re=0;re<A;++re){const de=X*A+re,ae=(re+.5)/Q-.5,j=(X+.5)/B-.5;let F=Math.floor(ae),U=Math.floor(j);const ee=Math.min(F+1,M-1),_e=Math.min(U+1,b-1);F=Math.max(F,0),U=Math.max(U,0);const le=ae-F,Me=j-U,ze=(1-le)*(1-Me),Ue=le*(1-Me),me=(1-le)*Me,W=le*Me,se=U*M,G=_e*M,be=se+F,we=se+ee,Se=G+F,Pe=G+ee;for(let $e=0;$e<x;++$e){const Fe=$e*H;Y[$e*q+de]=ze*E[Fe+be]+Ue*E[Fe+we]+me*E[Fe+Se]+W*E[Fe+Pe]}}return Y}function i(E,x,b){const M=new Array(b.length),P=new Array(b.length);for(let K=b.length-1,Q=1;K>=0;--K)P[K]=Q,M[K]=x[b[K]],Q*=M[K];const A=b.map((K,Q)=>P[b.indexOf(Q)]),z=new E.constructor(E.length);for(let K=0;K<E.length;++K){let Q=0;for(let B=x.length-1,Y=K;B>=0;--B)Q+=Y%x[B]*A[B],Y=Math.floor(Y/x[B]);z[Q]=E[K]}return[z,M]}function n(E){const x=d(E)[0],b=E.map(A=>Math.exp(A-x)),M=b.reduce((A,z)=>A+z,0);return b.map(A=>A/M)}function a(E){const x=d(E)[0];let b=0;for(let A=0;A<E.length;++A)b+=Math.exp(E[A]-x);const M=Math.log(b);return E.map(A=>A-x-M)}function o(E,x){let b=0;for(let M=0;M<E.length;++M)b+=E[M]*x[M];return b}function l(E,x){const b=o(E,x),M=c(E),P=c(x);return b/(M*P)}function c(E){return Math.sqrt(E.reduce((x,b)=>x+b*b,0))}function p(E){if(E.length===0)throw Error("Array must not be empty");let x=E[0],b=0;for(let M=1;M<E.length;++M)E[M]<x&&(x=E[M],b=M);return[x,b]}function d(E){if(E.length===0)throw Error("Array must not be empty");let x=E[0],b=0;for(let M=1;M<E.length;++M)E[M]>x&&(x=E[M],b=M);return[x,b]}function u(E){return E>0&&(E&E-1)===0}class _{constructor(x){if(this.size=x|0,this.size<=1||!u(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=x<<1,this.table=new Float64Array(this.size*2);for(let M=0;M<this.table.length;M+=2){const P=Math.PI*M/this.size;this.table[M]=Math.cos(P),this.table[M+1]=-Math.sin(P)}let b=0;for(let M=1;this.size>M;M<<=1)++b;this._width=b%2===0?b-1:b,this._bitrev=new Int32Array(1<<this._width);for(let M=0;M<this._bitrev.length;++M){this._bitrev[M]=0;for(let P=0;P<this._width;P+=2){const A=this._width-P-2;this._bitrev[M]|=(M>>>P&3)<<A}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(x,b){const M=b||new Array(x.length>>>1);for(let P=0;P<x.length;P+=2)M[P>>>1]=x[P];return M}toComplexArray(x,b){const M=b||this.createComplexArray();for(let P=0;P<M.length;P+=2)M[P]=x[P>>>1],M[P+1]=0;return M}transform(x,b){if(x===b)throw new Error("Input and output buffers must be different");this._transform4(x,b,1)}realTransform(x,b){if(x===b)throw new Error("Input and output buffers must be different");this._realTransform4(x,b,1)}inverseTransform(x,b){if(x===b)throw new Error("Input and output buffers must be different");this._transform4(x,b,-1);for(let M=0;M<x.length;++M)x[M]/=this.size}_transform4(x,b,M){const P=this._csize;let z=1<<this._width,K=P/z<<1,Q,B;const Y=this._bitrev;if(K===4)for(Q=0,B=0;Q<P;Q+=K,++B){const q=Y[B];this._singleTransform2(b,x,Q,q,z)}else for(Q=0,B=0;Q<P;Q+=K,++B){const q=Y[B];this._singleTransform4(b,x,Q,q,z,M)}const H=this.table;for(z>>=2;z>=2;z>>=2){K=P/z<<1;const q=K>>>2;for(Q=0;Q<P;Q+=K){const X=Q+q-1;for(let re=Q,de=0;re<X;re+=2,de+=z){const ae=re,j=ae+q,F=j+q,U=F+q,ee=x[ae],_e=x[ae+1],le=x[j],Me=x[j+1],ze=x[F],Ue=x[F+1],me=x[U],W=x[U+1],se=H[de],G=M*H[de+1],be=le*se-Me*G,we=le*G+Me*se,Se=H[2*de],Pe=M*H[2*de+1],$e=ze*Se-Ue*Pe,Fe=ze*Pe+Ue*Se,Be=H[3*de],He=M*H[3*de+1],qe=me*Be-W*He,Ie=me*He+W*Be,Ve=ee+$e,et=_e+Fe,nt=ee-$e,lt=_e-Fe,Ge=be+qe,ke=we+Ie,mt=M*(be-qe),$t=M*(we-Ie);x[ae]=Ve+Ge,x[ae+1]=et+ke,x[j]=nt+$t,x[j+1]=lt-mt,x[F]=Ve-Ge,x[F+1]=et-ke,x[U]=nt-$t,x[U+1]=lt+mt}}}}_singleTransform2(x,b,M,P,A){const z=x[P],K=x[P+1],Q=x[P+A],B=x[P+A+1];b[M]=z+Q,b[M+1]=K+B,b[M+2]=z-Q,b[M+3]=K-B}_singleTransform4(x,b,M,P,A,z){const K=A*2,Q=A*3,B=x[P],Y=x[P+1],H=x[P+A],q=x[P+A+1],X=x[P+K],re=x[P+K+1],de=x[P+Q],ae=x[P+Q+1],j=B+X,F=Y+re,U=B-X,ee=Y-re,_e=H+de,le=q+ae,Me=z*(H-de),ze=z*(q-ae);b[M]=j+_e,b[M+1]=F+le,b[M+2]=U+ze,b[M+3]=ee-Me,b[M+4]=j-_e,b[M+5]=F-le,b[M+6]=U-ze,b[M+7]=ee+Me}_realTransform4(x,b,M){const P=this._csize;let z=1<<this._width,K=P/z<<1,Q,B;const Y=this._bitrev;if(K===4)for(Q=0,B=0;Q<P;Q+=K,++B){const X=Y[B];this._singleRealTransform2(b,x,Q,X>>>1,z>>>1)}else for(Q=0,B=0;Q<P;Q+=K,++B){const X=Y[B];this._singleRealTransform4(b,x,Q,X>>>1,z>>>1,M)}const H=this.table;for(z>>=2;z>=2;z>>=2){K=P/z<<1;const X=K>>>1,re=X>>>1,de=re>>>1;for(Q=0;Q<P;Q+=K)for(let ae=0,j=0;ae<=de;ae+=2,j+=z){const F=Q+ae,U=F+re,ee=U+re,_e=ee+re,le=x[F],Me=x[F+1],ze=x[U],Ue=x[U+1],me=x[ee],W=x[ee+1],se=x[_e],G=x[_e+1],be=le,we=Me,Se=H[j],Pe=M*H[j+1],$e=ze*Se-Ue*Pe,Fe=ze*Pe+Ue*Se,Be=H[2*j],He=M*H[2*j+1],qe=me*Be-W*He,Ie=me*He+W*Be,Ve=H[3*j],et=M*H[3*j+1],nt=se*Ve-G*et,lt=se*et+G*Ve,Ge=be+qe,ke=we+Ie,mt=be-qe,$t=we-Ie,Wt=$e+nt,Bt=Fe+lt,yr=M*($e-nt),lr=M*(Fe-lt);if(x[F]=Ge+Wt,x[F+1]=ke+Bt,x[U]=mt+lr,x[U+1]=$t-yr,ae===0){x[ee]=Ge-Wt,x[ee+1]=ke-Bt;continue}if(ae===de)continue;const yt=Q+re-ae,ts=Q+X-ae;x[yt]=mt-M*lr,x[yt+1]=-$t-M*yr,x[ts]=Ge-M*Wt,x[ts+1]=-ke+M*Bt}}const q=P>>>1;for(let X=2;X<q;X+=2)x[P-X]=x[X],x[P-X+1]=-x[X+1]}_singleRealTransform2(x,b,M,P,A){const z=x[P],K=x[P+A];b[M]=z+K,b[M+1]=0,b[M+2]=z-K,b[M+3]=0}_singleRealTransform4(x,b,M,P,A,z){const K=A*2,Q=A*3,B=x[P],Y=x[P+A],H=x[P+K],q=x[P+Q],X=B+H,re=B-H,de=Y+q,ae=z*(Y-q);b[M]=X+de,b[M+1]=0,b[M+2]=re,b[M+3]=-ae,b[M+4]=X-de,b[M+5]=0,b[M+6]=re,b[M+7]=ae}}class f{constructor(x){const b=2*(x-1),M=2*(2*x-1),P=2**Math.ceil(Math.log2(M));this.bufferSize=P,this._a=b;const A=new Float64Array(M),z=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const K=-2*Math.PI/x,Q=Math.cos(K),B=Math.sin(K);for(let Y=0;Y<M>>1;++Y){const H=(Y+1-x)**2/2,q=Math.sqrt(Q**2+B**2)**H,X=H*Math.atan2(B,Q),re=2*Y;A[re]=q*Math.cos(X),A[re+1]=q*Math.sin(X),z[re]=A[re],z[re+1]=-A[re+1]}this._slicedChirpBuffer=A.subarray(b,M),this._f=new _(P>>1),this._f.transform(this._chirpBuffer,z)}_transform(x,b,M){const P=this._buffer1,A=this._buffer2,z=this._outBuffer1,K=this._outBuffer2,Q=this._chirpBuffer,B=this._slicedChirpBuffer,Y=this._a;if(M)for(let H=0;H<B.length;H+=2){const q=H+1,X=H>>1,re=b[X];P[H]=re*B[H],P[q]=re*B[q]}else for(let H=0;H<B.length;H+=2){const q=H+1;P[H]=b[H]*B[H]-b[q]*B[q],P[q]=b[H]*B[q]+b[q]*B[H]}this._f.transform(z,P);for(let H=0;H<Q.length;H+=2){const q=H+1;A[H]=z[H]*Q[H]-z[q]*Q[q],A[q]=z[H]*Q[q]+z[q]*Q[H]}this._f.inverseTransform(K,A);for(let H=0;H<K.length;H+=2){const q=K[H+Y],X=K[H+Y+1],re=B[H],de=B[H+1];x[H]=q*re-X*de,x[H+1]=q*de+X*re}}transform(x,b){this._transform(x,b,!1)}realTransform(x,b){this._transform(x,b,!0)}}class v{constructor(x){this.fft_length=x,this.isPowerOfTwo=u(x),this.isPowerOfTwo?(this.fft=new _(x),this.outputBufferSize=2*x):(this.fft=new f(x),this.outputBufferSize=this.fft.bufferSize)}realTransform(x,b){this.fft.realTransform(x,b)}transform(x,b){this.fft.transform(x,b)}}function $(E,x){if(x%2===0||x<=0)throw new Error("Window size must be a positive odd number");const b=new E.constructor(E.length),M=new E.constructor(x),P=Math.floor(x/2);for(let A=0;A<E.length;++A){let z=0;for(let K=-P;K<=P;++K){let Q=A+K;Q<0?Q=Math.abs(Q):Q>=E.length&&(Q=2*(E.length-1)-Q),M[z++]=E[Q]}M.sort(),b[A]=M[P]}return b}function w(E,x){const b=Math.pow(10,x);return Math.round(E*b)/b}function g(E){const x=Math.round(E);return Math.abs(E)%1===.5?x%2===0?x:x-1:x}function C(E){const x=E.length,b=E[0].length,M=[x+1,b+1],P=Array.from({length:M[0]},()=>Array(M[1]).fill(1/0));P[0][0]=0;const A=Array.from({length:M[0]},()=>Array(M[1]).fill(-1));for(let Y=1;Y<M[1];++Y)for(let H=1;H<M[0];++H){const q=P[H-1][Y-1],X=P[H-1][Y],re=P[H][Y-1];let de,ae;q<X&&q<re?(de=q,ae=0):X<q&&X<re?(de=X,ae=1):(de=re,ae=2),P[H][Y]=E[H-1][Y-1]+de,A[H][Y]=ae}for(let Y=0;Y<M[1];++Y)A[0][Y]=2;for(let Y=0;Y<M[0];++Y)A[Y][0]=1;let z=x,K=b,Q=[],B=[];for(;z>0||K>0;)switch(Q.push(z-1),B.push(K-1),A[z][K]){case 0:--z,--K;break;case 1:--z;break;case 2:--K;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${z}, ${K}]. Please file a bug report.`)}return Q.reverse(),B.reverse(),[Q,B]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>a,Tensor:()=>o,cat:()=>b,full:()=>B,full_like:()=>Y,interpolate:()=>p,interpolate_4d:()=>d,layer_norm:()=>g,matmul:()=>u,mean:()=>z,mean_pooling:()=>w,ones:()=>H,ones_like:()=>q,permute:()=>c,quantize_embeddings:()=>ae,rand:()=>de,rfft:()=>_,slice:()=>$,stack:()=>M,std_mean:()=>A,topk:()=>f,zeros:()=>X,zeros_like:()=>re});var s=t("./src/utils/maths.js"),i=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class o{constructor(...F){Z(this,"ort_tensor");return(0,i.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new i.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(U,ee)=>{if(typeof ee=="string"){let _e=Number(ee);if(Number.isInteger(_e))return U._getitem(_e)}return U[ee]},set:(U,ee,_e)=>U[ee]=_e})}get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...U]=this.dims;if(U.length>0){const ee=U.reduce((_e,le)=>_e*le);for(let _e=0;_e<F;++_e)yield this._subarray(_e,ee,U)}else yield*this.data}_getitem(F){const[U,...ee]=this.dims;if(F=x(F,U),ee.length>0){const _e=ee.reduce((le,Me)=>le*Me);return this._subarray(F,_e,ee)}else return new o(this.type,[this.data[F]],ee)}indexOf(F){const U=this.data;for(let ee=0;ee<U.length;++ee)if(U[ee]==F)return ee;return-1}_subarray(F,U,ee){const _e=F*U,le=(F+1)*U,Me="subarray"in this.data?this.data.subarray(_e,le):this.data.slice(_e,le);return new o(this.type,Me,ee)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=1/(1+Math.exp(-F[U]));return this}map(F){return this.clone().map_(F)}map_(F){const U=this.data;for(let ee=0;ee<U.length;++ee)U[ee]=F(U[ee],ee,U);return this}mul(F){return this.clone().mul_(F)}mul_(F){const U=this.data;for(let ee=0;ee<U.length;++ee)U[ee]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const U=this.data;for(let ee=0;ee<U.length;++ee)U[ee]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const U=this.data;for(let ee=0;ee<U.length;++ee)U[ee]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const U=this.data;for(let ee=0;ee<U.length;++ee)U[ee]-=F;return this}clone(){return new o(this.type,this.data.slice(),this.dims.slice())}slice(...F){const U=[],ee=[];for(let me=0;me<this.dims.length;++me){let W=F[me];if(W==null)ee.push([0,this.dims[me]]),U.push(this.dims[me]);else if(typeof W=="number")W=x(W,this.dims[me],me),ee.push([W,W+1]);else if(Array.isArray(W)&&W.length===2){let[se,G]=W;if(se=se===null?0:x(se,this.dims[me],me,!1),G=G===null?this.dims[me]:x(G,this.dims[me],me,!1),se>G)throw new Error(`Invalid slice: ${W}`);const be=[Math.max(se,0),Math.min(G,this.dims[me])];ee.push(be),U.push(be[1]-be[0])}else throw new Error(`Invalid slice: ${W}`)}const _e=ee.map(([me,W])=>W-me),le=_e.reduce((me,W)=>me*W),Me=this.data,ze=new Me.constructor(le),Ue=this.stride();for(let me=0;me<le;++me){let W=0;for(let se=_e.length-1,G=me;se>=0;--se){const be=_e[se];W+=(G%be+ee[se][0])*Ue[se],G=Math.floor(G/be)}ze[me]=Me[W]}return new o(this.type,ze,U)}permute(...F){return c(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,U=!1){return this.norm(1,F,U)}norm(F="fro",U=null,ee=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const _e=this.data,le=(me,W)=>me+W**F;if(U===null){const me=_e.reduce(le,0)**(1/F);return new o(this.type,[me],[])}const[Me,ze,Ue]=P(le,this,U,ee);if(F!==1)for(let me=0;me<ze.length;++me)ze[me]=ze[me]**(1/F);return new o(Me,ze,Ue)}normalize_(F=2,U=1){U=x(U,this.dims.length);const ee=this.norm(F,U,!0),_e=this.data,le=ee.data;for(let Me=0;Me<_e.length;++Me){let ze=0;for(let Ue=this.dims.length-1,me=Me,W=1;Ue>=0;--Ue){const se=this.dims[Ue];if(Ue!==U){const G=me%se;ze+=G*W,W*=this.dims[Ue]}me=Math.floor(me/se)}_e[Me]/=le[ze]}return this}normalize(F=2,U=1){return this.clone().normalize_(F,U)}stride(){return K(this.dims)}squeeze(F=null){return new o(this.type,this.data,C(this.dims,F))}squeeze_(F=null){return this.dims=C(this.dims,F),this}unsqueeze(F=null){return new o(this.type,this.data,E(this.dims,F))}unsqueeze_(F=null){return this.dims=E(this.dims,F),this}flatten_(F=0,U=-1){U=(U+this.dims.length)%this.dims.length;let ee=this.dims.slice(0,F),_e=this.dims.slice(F,U+1),le=this.dims.slice(U+1);return this.dims=[...ee,_e.reduce((Me,ze)=>Me*ze,1),...le],this}flatten(F=0,U=-1){return this.clone().flatten_(F,U)}view(...F){let U=-1;for(let _e=0;_e<F.length;++_e)if(F[_e]===-1){if(U!==-1)throw new Error("Only one dimension can be inferred");U=_e}const ee=this.data;if(U!==-1){const _e=F.reduce((le,Me,ze)=>ze!==U?le*Me:le,1);F[U]=ee.length/_e}return new o(this.type,ee,F)}neg_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=-F[U];return this}neg(){return this.clone().neg_()}gt(F){const U=new Uint8Array(this.data.length),ee=this.data;for(let _e=0;_e<ee.length;++_e)U[_e]=ee[_e]>F?1:0;return new o("bool",U,this.dims)}lt(F){const U=new Uint8Array(this.data.length),ee=this.data;for(let _e=0;_e<ee.length;++_e)U[_e]=ee[_e]<F?1:0;return new o("bool",U,this.dims)}clamp_(F,U){const ee=this.data;for(let _e=0;_e<ee.length;++_e)ee[_e]=Math.min(Math.max(ee[_e],F),U);return this}clamp(F,U){return this.clone().clamp_(F,U)}round_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=Math.round(F[U]);return this}round(){return this.clone().round_()}mean(F=null,U=!1){return z(this,F,U)}min(F=null,U=!1){if(F===null){const Me=(0,s.min)(this.data)[0];return new o(this.type,[Me],[])}const[ee,_e,le]=P((Me,ze)=>Math.min(Me,ze),this,F,U,1/0);return new o(ee,_e,le)}max(F=null,U=!1){if(F===null){const Me=(0,s.max)(this.data)[0];return new o(this.type,[Me],[])}const[ee,_e,le]=P((Me,ze)=>Math.max(Me,ze),this,F,U,-1/0);return new o(ee,_e,le)}argmin(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const ee=(0,s.min)(this.data)[1];return new o("int64",[BigInt(ee)],[])}argmax(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const ee=(0,s.max)(this.data)[1];return new o("int64",[BigInt(ee)],[])}to(F){if(this.type===F)return this;if(!a.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let U;const ee=["int64","uint64"].includes(this.type),_e=["int64","uint64"].includes(F);return ee&&!_e?U=Number:!ee&&_e&&(U=BigInt),new o(F,a[F].from(this.data,U),this.dims)}}function l(j,F){const U=j.length,ee=F.reduce((le,Me)=>le*Me);if(U!==ee)throw Error(`cannot reshape array of size ${U} into shape (${F})`);let _e=j;for(let le=F.length-1;le>=0;le--)_e=_e.reduce((Me,ze)=>{let Ue=Me[Me.length-1];return Ue.length<F[le]?Ue.push(ze):Me.push([ze]),Me},[[]]);return _e[0]}function c(j,F){const[U,ee]=(0,s.permute_data)(j.data,j.dims,F);return new o(j.type,U,ee)}function p(j,[F,U],ee="bilinear",_e=!1){const le=j.dims.at(-3)??1,Me=j.dims.at(-2),ze=j.dims.at(-1);let Ue=(0,s.interpolate_data)(j.data,[le,Me,ze],[F,U],ee,_e);return new o(j.type,Ue,[le,F,U])}async function d(j,{size:F=null,mode:U="bilinear"}={}){if(j.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let ee;if(F.length===2)ee=[...j.dims.slice(0,2),...F];else if(F.length===3)ee=[j.dims[0],...F];else if(F.length===4)ee=F;else throw new Error("`size` must be of length 2, 3, or 4.");let _e;if(U==="nearest")_e=await n.TensorOpRegistry.nearest_interpolate_4d;else if(U==="bilinear")_e=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(U==="bicubic")_e=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${U}`);const le=new o("int64",new BigInt64Array(ee.map(BigInt)),[ee.length]);return await _e({x:j,s:le})}async function u(j,F){return await(await n.TensorOpRegistry.matmul)({a:j,b:F})}async function _(j,F){return await(await n.TensorOpRegistry.rfft)({x:j,a:F})}async function f(j,F){const U=await n.TensorOpRegistry.top_k;return F==null?F=j.dims.at(-1):F=Math.min(F,j.dims.at(-1)),await U({x:j,k:new o("int64",[BigInt(F)],[1])})}const v=j=>new o("int64",j,[j.length]);async function $(j,F,U,ee,_e){return await(await n.TensorOpRegistry.slice)({x:j,s:v(F),e:v(U),a:v(ee),t:v(_e??new Array(ee.length).fill(1))})}function w(j,F){const U=j.data,ee=F.data,_e=[j.dims[0],j.dims[2]],le=new U.constructor(_e[0]*_e[1]),[Me,ze,Ue]=j.dims;let me=0;for(let W=0;W<Me;++W){const se=W*Ue*ze;for(let G=0;G<Ue;++G){let be=0,we=0;const Se=W*ze,Pe=se+G;for(let Fe=0;Fe<ze;++Fe){const Be=Number(ee[Se+Fe]);we+=Be,be+=U[Pe+Fe*Ue]*Be}const $e=be/we;le[me++]=$e}}return new o(j.type,le,_e)}function g(j,F,{eps:U=1e-5}={}){if(j.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ee,_e]=j.dims;if(F.length!==1&&F[0]!==_e)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[le,Me]=A(j,1,0,!0),ze=le.data,Ue=Me.data,me=j.data,W=new me.constructor(me.length);for(let se=0;se<ee;++se){const G=se*_e;for(let be=0;be<_e;++be){const we=G+be;W[we]=(me[we]-Ue[se])/(ze[se]+U)}}return new o(j.type,W,j.dims)}function C(j,F){return j=j.slice(),F===null?j=j.filter(U=>U!==1):typeof F=="number"?j[F]===1&&j.splice(F,1):Array.isArray(F)&&(j=j.filter((U,ee)=>U!==1||!F.includes(ee))),j}function E(j,F){return F=x(F,j.length+1),j=j.slice(),j.splice(F,0,1),j}function x(j,F,U=null,ee=!0){if(j<-F||j>=F){if(ee)throw new Error(`IndexError: index ${j} is out of bounds for dimension${U===null?"":" "+U} with size ${F}`);return j<-F?0:F}return j<0&&(j=(j%F+F)%F),j}function b(j,F=0){F=x(F,j[0].dims.length);const U=j[0].dims.slice();U[F]=j.reduce((Me,ze)=>Me+ze.dims[F],0);const ee=U.reduce((Me,ze)=>Me*ze,1),_e=new j[0].data.constructor(ee),le=j[0].type;if(F===0){let Me=0;for(const ze of j){const Ue=ze.data;_e.set(Ue,Me),Me+=Ue.length}}else{let Me=0;for(let ze=0;ze<j.length;++ze){const{data:Ue,dims:me}=j[ze];for(let W=0;W<Ue.length;++W){let se=0;for(let G=me.length-1,be=W,we=1;G>=0;--G){const Se=me[G];let Pe=be%Se;G===F&&(Pe+=Me),se+=Pe*we,we*=U[G],be=Math.floor(be/Se)}_e[se]=Ue[W]}Me+=me[F]}}return new o(le,_e,U)}function M(j,F=0){return b(j.map(U=>U.unsqueeze(F)),F)}function P(j,F,U=null,ee=!1,_e=null){const le=F.data,Me=F.dims;U=x(U,Me.length);const ze=Me.slice();ze[U]=1;const Ue=new le.constructor(le.length/Me[U]);_e!==null&&Ue.fill(_e);for(let me=0;me<le.length;++me){let W=0;for(let se=Me.length-1,G=me,be=1;se>=0;--se){const we=Me[se];if(se!==U){const Se=G%we;W+=Se*be,be*=ze[se]}G=Math.floor(G/we)}Ue[W]=j(Ue[W],le[me],me,W)}return ee||ze.splice(U,1),[F.type,Ue,ze]}function A(j,F=null,U=1,ee=!1){const _e=j.data,le=j.dims;if(F===null){const be=_e.reduce(($e,Fe)=>$e+Fe,0)/_e.length,we=Math.sqrt(_e.reduce(($e,Fe)=>$e+(Fe-be)**2,0)/(_e.length-U)),Se=new o(j.type,[be],[]);return[new o(j.type,[we],[]),Se]}F=x(F,le.length);const Me=z(j,F,ee),ze=Me.data,[Ue,me,W]=P((G,be,we,Se)=>G+(be-ze[Se])**2,j,F,ee);for(let G=0;G<me.length;++G)me[G]=Math.sqrt(me[G]/(le[F]-U));return[new o(Ue,me,W),Me]}function z(j,F=null,U=!1){const ee=j.dims,_e=j.data;if(F===null){const Ue=_e.reduce((me,W)=>me+W,0);return new o(j.type,[Ue/_e.length],[])}F=x(F,ee.length);const[le,Me,ze]=P((Ue,me)=>Ue+me,j,F,U);if(ee[F]!==1)for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]/=ee[F];return new o(le,Me,ze)}function K(j){const F=new Array(j.length);for(let U=j.length-1,ee=1;U>=0;--U)F[U]=ee,ee*=j[U];return F}function Q(j,F,U,ee){const _e=j.reduce((le,Me)=>le*Me,1);return new o(U,new ee(_e).fill(F),j)}function B(j,F){let U,ee;if(typeof F=="number")U="float32",ee=Float32Array;else if(typeof F=="bigint")U="int64",ee=BigInt64Array;else if(typeof F=="boolean")U="bool",ee=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return Q(j,F,U,ee)}function Y(j,F){return B(j.dims,F)}function H(j){return Q(j,1n,"int64",BigInt64Array)}function q(j){return H(j.dims)}function X(j){return Q(j,0n,"int64",BigInt64Array)}function re(j){return X(j.dims)}function de(j){const F=j.reduce((U,ee)=>U*ee,1);return new o("float32",Float32Array.from({length:F},()=>Math.random()),j)}function ae(j,F){if(j.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(j.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const U=F==="binary",ee=U?"int8":"uint8",_e=U?Int8Array:Uint8Array,le=j.data,Me=new _e(le.length/8);for(let ze=0;ze<le.length;++ze){const Ue=le[ze]>0?1:0,me=Math.floor(ze/8),W=ze%8;Me[me]|=Ue<<7-W,U&&W===0&&(Me[me]-=128)}return new o(ee,Me,[j.dims[0],j.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>a,RawVideoFrame:()=>n,load_video:()=>o});var s=t("./src/utils/image.js"),i=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class a{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,u)=>new n(d,(u+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function o(l,{num_frames:c=null,fps:p=null}={}){if(!i.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const d=[],u=document.createElement("video");if(u.crossOrigin="anonymous",u.muted=!0,typeof l=="string")u.src=l;else if(l instanceof Blob)u.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)u.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(C=>u.onloadedmetadata=C),u.seekable.start(0)===u.seekable.end(0)){const E=await(await fetch(u.src)).blob();u.src=URL.createObjectURL(E),await new Promise(x=>u.onloadedmetadata=x)}const _=u.duration;let f,v;c!=null?(f=c,v=c===1?0:_/(c-1)):(v=1/p,f=Math.floor(_/v));let $=[];for(let C=0;C<f;++C)$.push(c===1?_/2:C*v);const w=document.createElement("canvas");w.width=u.videoWidth,w.height=u.videoHeight;const g=w.getContext("2d",{willReadFrequently:!0});for(const C of $){u.currentTime=C,await new Promise(M=>{u.onseeked=M}),g.drawImage(u,0,0,w.width,w.height);const E=g.getImageData(0,0,w.width,w.height),x=new s.RawImage(E.data,w.width,w.height,4),b=new n(x,C);d.push(b)}return u.remove(),new a(d,_)}}},db={};function Nt(e){var r=db[e];if(r!==void 0)return r.exports;var t=db[e]={exports:{}};return TT[e](t,t.exports,Nt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Nt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var i=Object.create(null);Nt.r(i);var n={};r=r||[null,e({}),e([]),e(e)];for(var a=s&2&&t;typeof a=="object"&&!~r.indexOf(a);a=e(a))Object.getOwnPropertyNames(a).forEach(o=>n[o]=()=>t[o]);return n.default=()=>t,Nt.d(i,n),i}})();Nt.d=(e,r)=>{for(var t in r)Nt.o(r,t)&&!Nt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};Nt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);Nt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var h={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Nt.r(h),Nt.d(h,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>i.AutoConfig,AutoFeatureExtractor:()=>u.AutoFeatureExtractor,AutoImageProcessor:()=>v.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>g.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>C.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>x.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>E.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>w.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>x.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>x.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>w.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>w.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>E.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>w.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>x.LogitsProcessor,LogitsProcessorList:()=>x.LogitsProcessorList,LogitsWarper:()=>x.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>E.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>w.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>x.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>x.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>w.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>x.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>x.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>w.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>w.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>w.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>i.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>$.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>w.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>a.RawImage,RawVideo:()=>o.RawVideo,RawVideoFrame:()=>o.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>x.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>w.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>w.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>E.StoppingCriteria,StoppingCriteriaList:()=>E.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>x.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>x.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>C.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>x.TopKLogitsWarper,TopPLogitsWarper:()=>x.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>w.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>w.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>w.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>w.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>w.WhisperProcessor,WhisperTextStreamer:()=>C.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>x.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>i.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>a.load_image,load_video:()=>o.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Nt("./src/env.js"),r=Nt("./src/pipelines.js"),t=Nt("./src/models.js"),s=Nt("./src/tokenizers.js"),i=Nt("./src/configs.js"),n=Nt("./src/utils/audio.js"),a=Nt("./src/utils/image.js"),o=Nt("./src/utils/video.js"),l=Nt("./src/utils/tensor.js"),c=Nt("./src/utils/maths.js"),p=Nt("./src/base/feature_extraction_utils.js"),d=Nt("./src/models/feature_extractors.js"),u=Nt("./src/models/auto/feature_extraction_auto.js"),_=Nt("./src/base/image_processors_utils.js"),f=Nt("./src/models/image_processors.js"),v=Nt("./src/models/auto/image_processing_auto.js"),$=Nt("./src/base/processing_utils.js"),w=Nt("./src/models/processors.js"),g=Nt("./src/models/auto/processing_auto.js"),C=Nt("./src/generation/streamers.js"),E=Nt("./src/generation/stopping_criteria.js"),x=Nt("./src/generation/logits_process.js")})();h.ASTFeatureExtractor;h.ASTForAudioClassification;h.ASTModel;h.ASTPreTrainedModel;h.AlbertForMaskedLM;h.AlbertForQuestionAnswering;h.AlbertForSequenceClassification;h.AlbertModel;h.AlbertPreTrainedModel;h.AlbertTokenizer;h.AudioClassificationPipeline;h.AutoConfig;h.AutoFeatureExtractor;h.AutoImageProcessor;h.AutoModel;h.AutoModelForAudioClassification;h.AutoModelForAudioFrameClassification;h.AutoModelForAudioTextToText;h.AutoModelForCTC;h.AutoModelForCausalLM;h.AutoModelForDepthEstimation;h.AutoModelForDocumentQuestionAnswering;h.AutoModelForImageClassification;h.AutoModelForImageFeatureExtraction;h.AutoModelForImageMatting;h.AutoModelForImageSegmentation;h.AutoModelForImageTextToText;h.AutoModelForImageToImage;h.AutoModelForMaskGeneration;h.AutoModelForMaskedLM;h.AutoModelForNormalEstimation;h.AutoModelForObjectDetection;h.AutoModelForPoseEstimation;h.AutoModelForQuestionAnswering;h.AutoModelForSemanticSegmentation;h.AutoModelForSeq2SeqLM;h.AutoModelForSequenceClassification;h.AutoModelForSpeechSeq2Seq;h.AutoModelForTextToSpectrogram;h.AutoModelForTextToWaveform;h.AutoModelForTokenClassification;h.AutoModelForUniversalSegmentation;h.AutoModelForVision2Seq;h.AutoModelForXVector;h.AutoModelForZeroShotObjectDetection;h.AutoProcessor;h.AutoTokenizer;h.AutomaticSpeechRecognitionPipeline;h.BackgroundRemovalPipeline;h.BartForConditionalGeneration;h.BartForSequenceClassification;h.BartModel;h.BartPretrainedModel;h.BartTokenizer;h.BaseModelOutput;h.BaseStreamer;h.BeitFeatureExtractor;h.BeitForImageClassification;h.BeitModel;h.BeitPreTrainedModel;h.BertForMaskedLM;h.BertForQuestionAnswering;h.BertForSequenceClassification;h.BertForTokenClassification;h.BertModel;h.BertPreTrainedModel;h.BertTokenizer;h.BitImageProcessor;h.BlenderbotForConditionalGeneration;h.BlenderbotModel;h.BlenderbotPreTrainedModel;h.BlenderbotSmallForConditionalGeneration;h.BlenderbotSmallModel;h.BlenderbotSmallPreTrainedModel;h.BlenderbotSmallTokenizer;h.BlenderbotTokenizer;h.BloomForCausalLM;h.BloomModel;h.BloomPreTrainedModel;h.BloomTokenizer;h.CLIPFeatureExtractor;h.CLIPImageProcessor;h.CLIPModel;h.CLIPPreTrainedModel;h.CLIPSegForImageSegmentation;h.CLIPSegModel;h.CLIPSegPreTrainedModel;h.CLIPTextModel;h.CLIPTextModelWithProjection;h.CLIPTokenizer;h.CLIPVisionModel;h.CLIPVisionModelWithProjection;h.CamembertForMaskedLM;h.CamembertForQuestionAnswering;h.CamembertForSequenceClassification;h.CamembertForTokenClassification;h.CamembertModel;h.CamembertPreTrainedModel;h.CamembertTokenizer;h.CausalLMOutput;h.CausalLMOutputWithPast;h.ChineseCLIPFeatureExtractor;h.ChineseCLIPModel;h.ChineseCLIPPreTrainedModel;h.ClapAudioModelWithProjection;h.ClapFeatureExtractor;h.ClapModel;h.ClapPreTrainedModel;h.ClapTextModelWithProjection;h.ClassifierFreeGuidanceLogitsProcessor;h.CodeGenForCausalLM;h.CodeGenModel;h.CodeGenPreTrainedModel;h.CodeGenTokenizer;h.CodeLlamaTokenizer;h.CohereForCausalLM;h.CohereModel;h.CoherePreTrainedModel;h.CohereTokenizer;h.ConvBertForMaskedLM;h.ConvBertForQuestionAnswering;h.ConvBertForSequenceClassification;h.ConvBertForTokenClassification;h.ConvBertModel;h.ConvBertPreTrainedModel;h.ConvBertTokenizer;h.ConvNextFeatureExtractor;h.ConvNextForImageClassification;h.ConvNextImageProcessor;h.ConvNextModel;h.ConvNextPreTrainedModel;h.ConvNextV2ForImageClassification;h.ConvNextV2Model;h.ConvNextV2PreTrainedModel;h.DFineForObjectDetection;h.DFineModel;h.DFinePreTrainedModel;h.DPTFeatureExtractor;h.DPTForDepthEstimation;h.DPTImageProcessor;h.DPTModel;h.DPTPreTrainedModel;h.DacDecoderModel;h.DacDecoderOutput;h.DacEncoderModel;h.DacEncoderOutput;h.DacFeatureExtractor;h.DacModel;h.DacPreTrainedModel;h.DataTypeMap;h.DebertaForMaskedLM;h.DebertaForQuestionAnswering;h.DebertaForSequenceClassification;h.DebertaForTokenClassification;h.DebertaModel;h.DebertaPreTrainedModel;h.DebertaTokenizer;h.DebertaV2ForMaskedLM;h.DebertaV2ForQuestionAnswering;h.DebertaV2ForSequenceClassification;h.DebertaV2ForTokenClassification;h.DebertaV2Model;h.DebertaV2PreTrainedModel;h.DebertaV2Tokenizer;h.DecisionTransformerModel;h.DecisionTransformerPreTrainedModel;h.DeiTFeatureExtractor;h.DeiTForImageClassification;h.DeiTImageProcessor;h.DeiTModel;h.DeiTPreTrainedModel;h.DepthAnythingForDepthEstimation;h.DepthAnythingPreTrainedModel;h.DepthEstimationPipeline;h.DepthProForDepthEstimation;h.DepthProPreTrainedModel;h.DetrFeatureExtractor;h.DetrForObjectDetection;h.DetrForSegmentation;h.DetrImageProcessor;h.DetrModel;h.DetrObjectDetectionOutput;h.DetrPreTrainedModel;h.DetrSegmentationOutput;h.Dinov2ForImageClassification;h.Dinov2Model;h.Dinov2PreTrainedModel;h.Dinov2WithRegistersForImageClassification;h.Dinov2WithRegistersModel;h.Dinov2WithRegistersPreTrainedModel;h.DistilBertForMaskedLM;h.DistilBertForQuestionAnswering;h.DistilBertForSequenceClassification;h.DistilBertForTokenClassification;h.DistilBertModel;h.DistilBertPreTrainedModel;h.DistilBertTokenizer;h.DocumentQuestionAnsweringPipeline;h.DonutFeatureExtractor;h.DonutImageProcessor;h.DonutSwinModel;h.DonutSwinPreTrainedModel;h.EfficientNetForImageClassification;h.EfficientNetImageProcessor;h.EfficientNetModel;h.EfficientNetPreTrainedModel;h.ElectraForMaskedLM;h.ElectraForQuestionAnswering;h.ElectraForSequenceClassification;h.ElectraForTokenClassification;h.ElectraModel;h.ElectraPreTrainedModel;h.ElectraTokenizer;h.EncodecFeatureExtractor;h.EosTokenCriteria;h.EsmForMaskedLM;h.EsmForSequenceClassification;h.EsmForTokenClassification;h.EsmModel;h.EsmPreTrainedModel;h.EsmTokenizer;h.ExaoneForCausalLM;h.ExaoneModel;h.ExaonePreTrainedModel;h.FFT;h.FalconForCausalLM;h.FalconModel;h.FalconPreTrainedModel;h.FalconTokenizer;h.FastViTForImageClassification;h.FastViTModel;h.FastViTPreTrainedModel;h.FeatureExtractionPipeline;h.FeatureExtractor;h.FillMaskPipeline;h.Florence2ForConditionalGeneration;h.Florence2PreTrainedModel;h.Florence2Processor;h.ForcedBOSTokenLogitsProcessor;h.ForcedEOSTokenLogitsProcessor;h.GLPNFeatureExtractor;h.GLPNForDepthEstimation;h.GLPNModel;h.GLPNPreTrainedModel;h.GPT2LMHeadModel;h.GPT2Model;h.GPT2PreTrainedModel;h.GPT2Tokenizer;h.GPTBigCodeForCausalLM;h.GPTBigCodeModel;h.GPTBigCodePreTrainedModel;h.GPTJForCausalLM;h.GPTJModel;h.GPTJPreTrainedModel;h.GPTNeoForCausalLM;h.GPTNeoModel;h.GPTNeoPreTrainedModel;h.GPTNeoXForCausalLM;h.GPTNeoXModel;h.GPTNeoXPreTrainedModel;h.GPTNeoXTokenizer;h.Gemma2ForCausalLM;h.Gemma2Model;h.Gemma2PreTrainedModel;h.Gemma3ForCausalLM;h.Gemma3Model;h.Gemma3PreTrainedModel;h.GemmaForCausalLM;h.GemmaModel;h.GemmaPreTrainedModel;h.GemmaTokenizer;h.GlmForCausalLM;h.GlmModel;h.GlmPreTrainedModel;h.GraniteForCausalLM;h.GraniteModel;h.GranitePreTrainedModel;h.Grok1Tokenizer;h.GroundingDinoForObjectDetection;h.GroundingDinoImageProcessor;h.GroundingDinoPreTrainedModel;h.GroundingDinoProcessor;h.GroupViTModel;h.GroupViTPreTrainedModel;h.HeliumForCausalLM;h.HeliumModel;h.HeliumPreTrainedModel;h.HerbertTokenizer;h.HieraForImageClassification;h.HieraModel;h.HieraPreTrainedModel;h.HubertForCTC;h.HubertForSequenceClassification;h.HubertModel;h.HubertPreTrainedModel;h.IJepaForImageClassification;h.IJepaModel;h.IJepaPreTrainedModel;h.Idefics3ForConditionalGeneration;h.Idefics3ImageProcessor;h.Idefics3PreTrainedModel;h.Idefics3Processor;h.ImageClassificationPipeline;h.ImageFeatureExtractionPipeline;h.ImageFeatureExtractor;h.ImageMattingOutput;h.ImageProcessor;h.ImageSegmentationPipeline;h.ImageToImagePipeline;h.ImageToTextPipeline;h.InterruptableStoppingCriteria;h.JAISLMHeadModel;h.JAISModel;h.JAISPreTrainedModel;h.JinaCLIPImageProcessor;h.JinaCLIPModel;h.JinaCLIPPreTrainedModel;h.JinaCLIPProcessor;h.JinaCLIPTextModel;h.JinaCLIPVisionModel;h.LiteWhisperForConditionalGeneration;h.LlamaForCausalLM;h.LlamaModel;h.LlamaPreTrainedModel;h.LlamaTokenizer;h.LlavaForConditionalGeneration;h.LlavaOnevisionForConditionalGeneration;h.LlavaOnevisionImageProcessor;h.LlavaPreTrainedModel;h.LogitsProcessor;h.LogitsProcessorList;h.LogitsWarper;h.LongT5ForConditionalGeneration;h.LongT5Model;h.LongT5PreTrainedModel;h.M2M100ForConditionalGeneration;h.M2M100Model;h.M2M100PreTrainedModel;h.M2M100Tokenizer;h.MBart50Tokenizer;h.MBartForCausalLM;h.MBartForConditionalGeneration;h.MBartForSequenceClassification;h.MBartModel;h.MBartPreTrainedModel;h.MBartTokenizer;h.MPNetForMaskedLM;h.MPNetForQuestionAnswering;h.MPNetForSequenceClassification;h.MPNetForTokenClassification;h.MPNetModel;h.MPNetPreTrainedModel;h.MPNetTokenizer;h.MT5ForConditionalGeneration;h.MT5Model;h.MT5PreTrainedModel;h.MarianMTModel;h.MarianModel;h.MarianPreTrainedModel;h.MarianTokenizer;h.Mask2FormerImageProcessor;h.MaskFormerFeatureExtractor;h.MaskFormerForInstanceSegmentation;h.MaskFormerImageProcessor;h.MaskFormerModel;h.MaskFormerPreTrainedModel;h.MaskedLMOutput;h.MaxLengthCriteria;h.Metric3DForDepthEstimation;h.Metric3DPreTrainedModel;h.Metric3Dv2ForDepthEstimation;h.Metric3Dv2PreTrainedModel;h.MgpstrForSceneTextRecognition;h.MgpstrModelOutput;h.MgpstrPreTrainedModel;h.MgpstrProcessor;h.MgpstrTokenizer;h.MimiDecoderModel;h.MimiDecoderOutput;h.MimiEncoderModel;h.MimiEncoderOutput;h.MimiModel;h.MimiPreTrainedModel;h.MinLengthLogitsProcessor;h.MinNewTokensLengthLogitsProcessor;h.MistralForCausalLM;h.MistralModel;h.MistralPreTrainedModel;h.MobileBertForMaskedLM;h.MobileBertForQuestionAnswering;h.MobileBertForSequenceClassification;h.MobileBertModel;h.MobileBertPreTrainedModel;h.MobileBertTokenizer;h.MobileLLMForCausalLM;h.MobileLLMModel;h.MobileLLMPreTrainedModel;h.MobileNetV1FeatureExtractor;h.MobileNetV1ForImageClassification;h.MobileNetV1ForSemanticSegmentation;h.MobileNetV1ImageProcessor;h.MobileNetV1Model;h.MobileNetV1PreTrainedModel;h.MobileNetV2FeatureExtractor;h.MobileNetV2ForImageClassification;h.MobileNetV2ForSemanticSegmentation;h.MobileNetV2ImageProcessor;h.MobileNetV2Model;h.MobileNetV2PreTrainedModel;h.MobileNetV3FeatureExtractor;h.MobileNetV3ForImageClassification;h.MobileNetV3ForSemanticSegmentation;h.MobileNetV3ImageProcessor;h.MobileNetV3Model;h.MobileNetV3PreTrainedModel;h.MobileNetV4FeatureExtractor;h.MobileNetV4ForImageClassification;h.MobileNetV4ForSemanticSegmentation;h.MobileNetV4ImageProcessor;h.MobileNetV4Model;h.MobileNetV4PreTrainedModel;h.MobileViTFeatureExtractor;h.MobileViTForImageClassification;h.MobileViTImageProcessor;h.MobileViTModel;h.MobileViTPreTrainedModel;h.MobileViTV2ForImageClassification;h.MobileViTV2Model;h.MobileViTV2PreTrainedModel;h.ModelOutput;h.ModernBertForMaskedLM;h.ModernBertForSequenceClassification;h.ModernBertForTokenClassification;h.ModernBertModel;h.ModernBertPreTrainedModel;h.Moondream1ForConditionalGeneration;h.MoonshineFeatureExtractor;h.MoonshineForConditionalGeneration;h.MoonshineModel;h.MoonshinePreTrainedModel;h.MoonshineProcessor;h.MptForCausalLM;h.MptModel;h.MptPreTrainedModel;h.MultiModalityCausalLM;h.MultiModalityPreTrainedModel;h.MusicgenForCausalLM;h.MusicgenForConditionalGeneration;h.MusicgenModel;h.MusicgenPreTrainedModel;h.NllbTokenizer;h.NoBadWordsLogitsProcessor;h.NoRepeatNGramLogitsProcessor;h.NomicBertModel;h.NomicBertPreTrainedModel;h.NougatImageProcessor;h.NougatTokenizer;h.OPTForCausalLM;h.OPTModel;h.OPTPreTrainedModel;h.ObjectDetectionPipeline;h.Olmo2ForCausalLM;h.Olmo2Model;h.Olmo2PreTrainedModel;h.OlmoForCausalLM;h.OlmoModel;h.OlmoPreTrainedModel;h.OpenELMForCausalLM;h.OpenELMModel;h.OpenELMPreTrainedModel;h.OwlViTFeatureExtractor;h.OwlViTForObjectDetection;h.OwlViTImageProcessor;h.OwlViTModel;h.OwlViTPreTrainedModel;h.OwlViTProcessor;h.Owlv2ForObjectDetection;h.Owlv2ImageProcessor;h.Owlv2Model;h.Owlv2PreTrainedModel;h.PaliGemmaForConditionalGeneration;h.PaliGemmaPreTrainedModel;h.PaliGemmaProcessor;h.PatchTSMixerForPrediction;h.PatchTSMixerModel;h.PatchTSMixerPreTrainedModel;h.PatchTSTForPrediction;h.PatchTSTModel;h.PatchTSTPreTrainedModel;h.Phi3ForCausalLM;h.Phi3Model;h.Phi3PreTrainedModel;h.Phi3VForCausalLM;h.Phi3VImageProcessor;h.Phi3VPreTrainedModel;h.Phi3VProcessor;h.PhiForCausalLM;h.PhiModel;h.PhiPreTrainedModel;h.Pipeline;h.PreTrainedModel;h.PreTrainedTokenizer;h.PretrainedConfig;h.PretrainedMixin;h.Processor;h.PvtForImageClassification;h.PvtImageProcessor;h.PvtModel;h.PvtPreTrainedModel;h.PyAnnoteFeatureExtractor;h.PyAnnoteForAudioFrameClassification;h.PyAnnoteModel;h.PyAnnotePreTrainedModel;h.PyAnnoteProcessor;h.QuestionAnsweringModelOutput;h.QuestionAnsweringPipeline;h.Qwen2ForCausalLM;h.Qwen2Model;h.Qwen2PreTrainedModel;h.Qwen2Tokenizer;h.Qwen2VLForConditionalGeneration;h.Qwen2VLImageProcessor;h.Qwen2VLPreTrainedModel;h.Qwen2VLProcessor;h.Qwen3ForCausalLM;h.Qwen3Model;h.Qwen3PreTrainedModel;h.RFDetrForObjectDetection;h.RFDetrModel;h.RFDetrObjectDetectionOutput;h.RFDetrPreTrainedModel;h.RTDetrForObjectDetection;h.RTDetrImageProcessor;h.RTDetrModel;h.RTDetrObjectDetectionOutput;h.RTDetrPreTrainedModel;h.RTDetrV2ForObjectDetection;h.RTDetrV2Model;h.RTDetrV2ObjectDetectionOutput;h.RTDetrV2PreTrainedModel;h.RawAudio;h.RawImage;h.RawVideo;h.RawVideoFrame;h.RepetitionPenaltyLogitsProcessor;h.ResNetForImageClassification;h.ResNetModel;h.ResNetPreTrainedModel;h.RoFormerForMaskedLM;h.RoFormerForQuestionAnswering;h.RoFormerForSequenceClassification;h.RoFormerForTokenClassification;h.RoFormerModel;h.RoFormerPreTrainedModel;h.RoFormerTokenizer;h.RobertaForMaskedLM;h.RobertaForQuestionAnswering;h.RobertaForSequenceClassification;h.RobertaForTokenClassification;h.RobertaModel;h.RobertaPreTrainedModel;h.RobertaTokenizer;h.SamImageProcessor;h.SamImageSegmentationOutput;h.SamModel;h.SamPreTrainedModel;h.SamProcessor;h.SapiensForDepthEstimation;h.SapiensForNormalEstimation;h.SapiensForSemanticSegmentation;h.SapiensPreTrainedModel;h.SeamlessM4TFeatureExtractor;h.SegformerFeatureExtractor;h.SegformerForImageClassification;h.SegformerForSemanticSegmentation;h.SegformerImageProcessor;h.SegformerModel;h.SegformerPreTrainedModel;h.Seq2SeqLMOutput;h.SequenceClassifierOutput;h.SiglipImageProcessor;h.SiglipModel;h.SiglipPreTrainedModel;h.SiglipTextModel;h.SiglipTokenizer;h.SiglipVisionModel;h.SmolVLMForConditionalGeneration;h.SmolVLMImageProcessor;h.SmolVLMProcessor;h.SnacDecoderModel;h.SnacEncoderModel;h.SnacFeatureExtractor;h.SnacModel;h.SnacPreTrainedModel;h.SpeechT5FeatureExtractor;h.SpeechT5ForSpeechToText;h.SpeechT5ForTextToSpeech;h.SpeechT5HifiGan;h.SpeechT5Model;h.SpeechT5PreTrainedModel;h.SpeechT5Processor;h.SpeechT5Tokenizer;h.SqueezeBertForMaskedLM;h.SqueezeBertForQuestionAnswering;h.SqueezeBertForSequenceClassification;h.SqueezeBertModel;h.SqueezeBertPreTrainedModel;h.SqueezeBertTokenizer;h.StableLmForCausalLM;h.StableLmModel;h.StableLmPreTrainedModel;h.Starcoder2ForCausalLM;h.Starcoder2Model;h.Starcoder2PreTrainedModel;h.StoppingCriteria;h.StoppingCriteriaList;h.StyleTextToSpeech2Model;h.StyleTextToSpeech2PreTrainedModel;h.SummarizationPipeline;h.SuppressTokensAtBeginLogitsProcessor;h.Swin2SRForImageSuperResolution;h.Swin2SRImageProcessor;h.Swin2SRModel;h.Swin2SRPreTrainedModel;h.SwinForImageClassification;h.SwinForSemanticSegmentation;h.SwinModel;h.SwinPreTrainedModel;h.T5ForConditionalGeneration;h.T5Model;h.T5PreTrainedModel;h.T5Tokenizer;h.TableTransformerForObjectDetection;h.TableTransformerModel;h.TableTransformerObjectDetectionOutput;h.TableTransformerPreTrainedModel;h.TemperatureLogitsWarper;h.Tensor;h.Text2TextGenerationPipeline;h.TextClassificationPipeline;h.TextGenerationPipeline;h.TextStreamer;h.TextToAudioPipeline;h.TokenClassificationPipeline;h.TokenClassifierOutput;h.TokenizerModel;h.TopKLogitsWarper;h.TopPLogitsWarper;h.TrOCRForCausalLM;h.TrOCRPreTrainedModel;h.TranslationPipeline;h.UltravoxModel;h.UltravoxPreTrainedModel;h.UltravoxProcessor;h.UniSpeechForCTC;h.UniSpeechForSequenceClassification;h.UniSpeechModel;h.UniSpeechPreTrainedModel;h.UniSpeechSatForAudioFrameClassification;h.UniSpeechSatForCTC;h.UniSpeechSatForSequenceClassification;h.UniSpeechSatModel;h.UniSpeechSatPreTrainedModel;h.VLChatProcessor;h.VLMImageProcessor;h.ViTFeatureExtractor;h.ViTForImageClassification;h.ViTImageProcessor;h.ViTMAEModel;h.ViTMAEPreTrainedModel;h.ViTMSNForImageClassification;h.ViTMSNModel;h.ViTMSNPreTrainedModel;h.ViTModel;h.ViTPreTrainedModel;h.VisionEncoderDecoderModel;h.VitMatteForImageMatting;h.VitMatteImageProcessor;h.VitMattePreTrainedModel;h.VitPoseForPoseEstimation;h.VitPoseImageProcessor;h.VitPosePreTrainedModel;h.VitsModel;h.VitsModelOutput;h.VitsPreTrainedModel;h.VitsTokenizer;h.Wav2Vec2BertForCTC;h.Wav2Vec2BertForSequenceClassification;h.Wav2Vec2BertModel;h.Wav2Vec2BertPreTrainedModel;h.Wav2Vec2CTCTokenizer;h.Wav2Vec2FeatureExtractor;h.Wav2Vec2ForAudioFrameClassification;h.Wav2Vec2ForCTC;h.Wav2Vec2ForSequenceClassification;h.Wav2Vec2Model;h.Wav2Vec2PreTrainedModel;h.Wav2Vec2Processor;h.Wav2Vec2ProcessorWithLM;h.WavLMForAudioFrameClassification;h.WavLMForCTC;h.WavLMForSequenceClassification;h.WavLMForXVector;h.WavLMModel;h.WavLMPreTrainedModel;h.WeSpeakerFeatureExtractor;h.WeSpeakerResNetModel;h.WeSpeakerResNetPreTrainedModel;h.WhisperFeatureExtractor;h.WhisperForConditionalGeneration;h.WhisperModel;h.WhisperPreTrainedModel;h.WhisperProcessor;h.WhisperTextStreamer;h.WhisperTimeStampLogitsProcessor;h.WhisperTokenizer;h.XLMForQuestionAnswering;h.XLMForSequenceClassification;h.XLMForTokenClassification;h.XLMModel;h.XLMPreTrainedModel;h.XLMRobertaForMaskedLM;h.XLMRobertaForQuestionAnswering;h.XLMRobertaForSequenceClassification;h.XLMRobertaForTokenClassification;h.XLMRobertaModel;h.XLMRobertaPreTrainedModel;h.XLMRobertaTokenizer;h.XLMTokenizer;h.XLMWithLMHeadModel;h.XVectorOutput;h.YolosFeatureExtractor;h.YolosForObjectDetection;h.YolosImageProcessor;h.YolosModel;h.YolosObjectDetectionOutput;h.YolosPreTrainedModel;h.ZeroShotAudioClassificationPipeline;h.ZeroShotClassificationPipeline;h.ZeroShotImageClassificationPipeline;h.ZeroShotObjectDetectionPipeline;h.bankers_round;h.cat;h.cos_sim;h.dot;h.dynamic_time_warping;var ET=h.env;h.full;h.full_like;h.getKeyValueShapes;h.hamming;h.hanning;h.interpolate;h.interpolate_4d;h.interpolate_data;h.is_chinese_char;h.layer_norm;h.load_image;h.load_video;h.log_softmax;h.magnitude;h.matmul;h.max;h.mean;h.mean_pooling;h.medianFilter;h.mel_filter_bank;h.min;h.ones;h.ones_like;h.permute;h.permute_data;var PT=h.pipeline;h.quantize_embeddings;h.rand;h.read_audio;h.rfft;h.round;h.slice;h.softmax;h.spectrogram;h.stack;h.std_mean;h.topk;h.window_function;h.zeros;h.zeros_like;ET.allowLocalModels=!1;async function CT(e,r=null){try{const s=await PT("image-segmentation","Xenova/segformer_b2_clothes",{revision:"main",cache_dir:"./model_cache",quantized:!1}),i=await Promise.race([s(e),new Promise((n,a)=>setTimeout(()=>a(new Error("Segmentation timed out after 60s")),6e4))]);if(Array.isArray(i))return r&&r.length>0?i.filter(n=>n.label!==null&&r.includes(n.label)).map(n=>({label:n.label,mask:n.mask})):i.map(n=>({label:n.label,mask:n.mask}));throw new Error("Unexpected segmentation output format")}catch(t){throw console.error("Segmentation error:",t),t}}function Cd(e){return new Promise((r,t)=>{const s=new Image;s.crossOrigin="Anonymous",s.onload=()=>r(s),s.onerror=t,s.src=e})}function ST(e,r=.6){const{width:t,height:s,data:i}=e,n=new Uint8ClampedArray(i.length);let a=s,o=0,l=t,c=0;for(let u=0;u<s;u++)for(let _=0;_<t;_++){const f=u*t+_;i[f]>128&&(a=Math.min(a,u),o=Math.max(o,u),l=Math.min(l,_),c=Math.max(c,_))}const p=o-a,d=a+Math.floor(p*r);console.log(`Face bounds: Y(${a}-${o}), X(${l}-${c})`),console.log(`Face height: ${p}, Cutoff at Y: ${d} (${r*100}%)`);for(let u=0;u<s;u++)for(let _=0;_<t;_++){const f=u*t+_;i[f]>128&&u<=d?n[f]=i[f]:n[f]=0}return{width:t,height:s,data:n}}async function $T(e,r,t,s=.6){t==null||t("Looking for face in image...");const i=r.find(u=>u.label.toLowerCase()==="face");if(!i)return console.warn("No face segment found in segmentation output"),t==null||t("No face detected in image"),null;t==null||t("Face detected, extracting face data...");const n=await Cd(e),a=document.createElement("canvas");a.width=n.width,a.height=n.height;const o=a.getContext("2d");if(!o)throw new Error("Failed to get canvas rendering context");t==null||t(`Processing top ${s*100}% of face area...`),o.drawImage(n,0,0);const l=o.getImageData(0,0,a.width,a.height);if(console.log("Original face mask dimensions:",i.mask.width,"x",i.mask.height),console.log("Image dimensions:",n.width,"x",n.height),i.mask.data.length===0)return console.warn("Face mask has no data"),t==null||t("Face mask is empty"),null;const c=ST(i.mask,s);let p=0,d=0;for(let u=0;u<c.data.length;u++)c.data[u]>128&&p++,i.mask.data[u]>128&&d++;return console.log(`Partial face mask: ${p} pixels (${(p/d*100).toFixed(1)}% of original)`),t==null||t(`Partial face data extracted successfully (${p} pixels)`),{originalImage:n,faceMask:c,faceImageData:l}}async function IT(e,r,t){t==null||t("Loading original image...");const s=await Cd(e);t==null||t("Preparing canvas for partial face removal...");const i=document.createElement("canvas");i.width=s.width,i.height=s.height;const n=i.getContext("2d");if(!n)throw new Error("Failed to get canvas rendering context");n.drawImage(s,0,0);const a=n.getImageData(0,0,i.width,i.height);t==null||t("Calculating partial face area coordinates...");const{faceMask:o}=r,l=o.width/i.width,c=o.height/i.height;console.log("Partial face removal - Scale factors:",l,c),t==null||t("Blurring partial face area...");let p=0;const d=i.width*i.height;let u=0;for(let _=0;_<i.height;_++)for(let f=0;f<i.width;f++){if(u++,u%Math.floor(d/10)===0){const w=Math.floor(u/d*100);t==null||t(`Blurring partial face area... ${w}%`)}const v=Math.floor(f*l),$=Math.floor(_*c);if(v>=0&&v<o.width&&$>=0&&$<o.height){const w=$*o.width+v;if(w<o.data.length&&o.data[w]>128){p++;const g=(_*i.width+f)*4;let C=0,E=0,x=0,b=0;const M=5;for(let P=-M;P<=M;P++)for(let A=-M;A<=M;A++){const z=f+A,K=_+P;if(z>=0&&z<i.width&&K>=0&&K<i.height){const Q=(K*i.width+z)*4;C+=a.data[Q],E+=a.data[Q+1],x+=a.data[Q+2],b++}}b>0&&(a.data[g]=C/b,a.data[g+1]=E/b,a.data[g+2]=x/b)}}}return console.log(`Processed ${p} partial face pixels for blurring`),p===0?(console.warn("No partial face pixels were blurred - check mask scaling"),t==null||t("Warning: No partial face pixels were processed")):t==null||t(`Partial face removal complete - processed ${p} pixels`),t==null||t("Finalizing partially faceless image..."),n.putImageData(a,0,0),new Promise((_,f)=>{i.toBlob(v=>{if(!v){f(new Error("Failed to create partially faceless image blob"));return}t==null||t("Converting to base64...");const $=new FileReader;$.onloadend=()=>{t==null||t("Partially faceless image created successfully"),_($.result)},$.onerror=f,$.readAsDataURL(v)},"image/jpeg",.95)})}const kT=async e=>{try{const t=await(await fetch(e)).blob();return new Promise((s,i)=>{const n=new FileReader;n.onloadend=()=>s(n.result),n.onerror=i,n.readAsDataURL(t)})}catch(r){throw console.error("Error converting image URL to base64:",r),r}},AT=async(e,r,t="https://vton-middle-api.vercel.app/api/tryon",s="idm-vton")=>{try{const n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({service:s,humanImage:e,garmentImage:r})});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const a=await n.json();if(!a.success)throw new Error(a.error||"Virtual try-on failed");return a}catch(i){throw console.error("Virtual try-on API error:",i),i}};async function FT(e,r,t){t==null||t("Loading try-on result image...");const{faceMask:s,faceImageData:i}=r,n=await Cd(e);t==null||t("Preparing canvas for face recovery...");const a=document.createElement("canvas");a.width=n.width,a.height=n.height;const o=a.getContext("2d");if(!o)throw new Error("Failed to get canvas rendering context");o.drawImage(n,0,0);const l=o.getImageData(0,0,a.width,a.height);return t==null||t("Blending original face back into image..."),OT(l,i,s,a.width,a.height,t),t==null||t("Finalizing recovered face image..."),o.putImageData(l,0,0),new Promise((c,p)=>{a.toBlob(d=>{if(!d){p(new Error("Failed to create recovered face blob"));return}t==null||t("Converting to base64...");const u=new FileReader;u.onloadend=()=>{t==null||t("Face recovery completed successfully"),c(u.result)},u.onerror=p,u.readAsDataURL(d)},"image/jpeg",.95)})}function OT(e,r,t,s,i,n){const a=e.data,o=r.data,l=r.width/s,c=r.height/i,p=t.width/r.width,d=t.height/r.height,u=s*i;let _=0;for(let f=0;f<i;f++)for(let v=0;v<s;v++){if(_++,_%Math.floor(u/20)===0){const b=Math.floor(_/u*100);n==null||n(`Blending face... ${b}%`)}const $=Math.floor(v*l),w=Math.floor(f*c),g=Math.floor($*p),E=Math.floor(w*d)*t.width+g,x=t.data[E];if(x>128){const b=(f*s+v)*4,M=(w*r.width+$)*4,P=x/255;a[b]=Math.round(o[M]*P+a[b]*(1-P)),a[b+1]=Math.round(o[M+1]*P+a[b+1]*(1-P)),a[b+2]=Math.round(o[M+2]*P+a[b+2]*(1-P))}}}const DT=({garment:e})=>{const[r,t]=qt.useState(null),[s,i]=qt.useState(null),[n,a]=qt.useState(null),[o,l]=qt.useState(null),[c,p]=qt.useState(null),[d,u]=qt.useState(!1),[_,f]=qt.useState(!1),[,v]=qt.useState(""),[$]=qt.useState(.6),[w,g]=qt.useState("idle"),[C,E]=qt.useState(null),[x,b]=qt.useState("gemini"),M=yv,P=w!=="idle",A=async q=>{if(!(!q.target.files||!q.target.files[0]))try{E(null),a(null),l(null),i(null),p(null),u(!1),f(!1);const X=q.target.files[0],re=URL.createObjectURL(X);t(re),await z(re)}catch(X){console.error("Upload error:",X),E(X instanceof Error?X.message:"Error uploading image"),g("idle")}},z=async q=>{if(q){g("segmentation"),E(null),v("");try{v("Running image segmentation..."),console.log("Running segmentation with face parts:",$f);const X=await CT(q,$f);console.log("Segmentation output:",X.map(de=>de.label)),g("face-processing");const re=await $T(q,X,de=>v(de),$);if(re){console.log("Face data extracted successfully"),p(re);const de=await IT(q,re,ae=>v(ae));i(de),e&&e.url?await K(de,e,re):(g("idle"),v(""))}else{console.warn("No face detected in the image, using original image"),E("No face detected in the image. Try a photo with a clearer face."),p(null),v("");const de=await kT(q);i(de),e&&e.url?await K(de,e,null):g("idle")}}catch(X){console.error("Processing error:",X),E(X instanceof Error?X.message:"An error occurred during image processing"),g("idle"),v("")}}},K=async(q,X,re)=>{if(!q||!(X!=null&&X.url)){console.error("Missing required parameters for try-on");return}g("tryon"),E(null);try{const de=await AT(q,X.url,M,x);if(de.success&&de.data){a(de.data.outputImage),l(null),f(!1);const ae=re!==void 0?re:c,j=de.data.isRecoverable&&ae!==null;console.log("Face recovery capability:",{apiRecoverable:de.data.isRecoverable,hasFaceData:ae!==null,canRecover:j,currentFaceData:re!==void 0?"passed":"from state"}),u(j)}else throw new Error(de.error||"Virtual try-on failed")}catch(de){console.error("Try-on error:",de),E(de instanceof Error?de.message:"An error occurred during virtual try-on")}finally{g("idle")}},Q=async()=>{if(!(!n||!c)){if(_){f(!1);return}if(o)f(!0);else try{g("face-recovery"),E(null),v("");const q=await FT(n,c,X=>v(X));l(q),f(!0)}catch(q){console.error("Face recovery error:",q),E(q instanceof Error?q.message:"An error occurred during face recovery")}finally{g("idle"),v("")}}},B=q=>w===q,Y=()=>_&&o?o:n,H=({image:q,placeholderText:X,isLoading:re,alt:de,delay:ae})=>Xe.jsx(Ys.div,{className:"bg-gray-100 rounded-lg aspect-square flex items-center justify-center overflow-hidden",initial:{opacity:0},animate:{opacity:1},transition:{duration:.5,delay:ae},children:Xe.jsx($v,{mode:"wait",children:re?Xe.jsx(Ys.div,{className:"w-16 h-16 border-4 border-gray-300 border-t-gray-600 rounded-full",animate:{rotate:360},transition:{duration:1,repeat:Number.POSITIVE_INFINITY,ease:"linear"},exit:{opacity:0}},"loader"):q?Xe.jsx(Ys.img,{src:q,alt:de,className:"w-full h-full object-contain",initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},transition:{duration:.3}},"image"):Xe.jsx(Ys.span,{className:"text-gray-400 text-lg",initial:{opacity:0},animate:{opacity:1},children:X},"placeholder")})});return Xe.jsxs("div",{className:"bg-white flex flex-col items-center px-4 mt-20 mb-20",children:[Xe.jsx(Ys.h1,{className:"text-2xl font-bold text-center mb-6",initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:.5},children:Vt("virtualTryOn.title")}),C&&Xe.jsx(Ys.div,{className:"w-full max-w-7xl bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:C}),P&&Xe.jsxs(Ys.div,{className:"w-full max-w-7xl bg-blue-50 border border-blue-200 text-blue-700 px-4 py-3 rounded-md mb-6",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:[w==="segmentation"&&Vt("virtualTryOn.statusMessages.analyzingImage"),w==="face-processing"&&Vt("virtualTryOn.statusMessages.processingFace"),w==="tryon"&&Vt("virtualTryOn.statusMessages.generatingResult"),w==="face-recovery"&&Vt("virtualTryOn.statusMessages.recoveringFace")]}),Xe.jsxs("div",{className:"w-full max-w-7xl mb-6",children:[Xe.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:Vt("virtualTryOn.selectService")}),Xe.jsxs("select",{value:x,onChange:q=>b(q.target.value),disabled:P,className:"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",children:[Xe.jsx("option",{value:"gemini",children:Vt("virtualTryOn.fasterLessAccurate")}),Xe.jsx("option",{value:"idm-vton",children:Vt("virtualTryOn.slowerMoreAccurate")})]})]}),Xe.jsxs("div",{className:"w-full max-w-7xl grid grid-cols-1 md:grid-cols-4 gap-4 mb-8",children:[Xe.jsx(H,{image:r,placeholderText:Vt("virtualTryOn.placeholders.yourPhoto"),isLoading:!1,alt:"Original Photo",delay:.1}),Xe.jsx(H,{image:s,placeholderText:Vt("virtualTryOn.placeholders.facelessPhoto"),isLoading:B("face-processing"),alt:"Faceless Photo",delay:.2}),Xe.jsx(H,{image:e==null?void 0:e.url,placeholderText:Vt("virtualTryOn.placeholders.selectGarment"),isLoading:!1,alt:"Garment",delay:.3}),Xe.jsx(H,{image:Y(),placeholderText:Vt("virtualTryOn.placeholders.result"),isLoading:B("tryon")||B("face-recovery"),alt:"Result",delay:.4})]}),Xe.jsxs(Ys.div,{className:"flex flex-col sm:flex-row gap-4",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.4},children:[Xe.jsxs("label",{className:`py-3 px-6 rounded-md font-medium transition-colors duration-200 ${P?"bg-gray-300 text-gray-500 cursor-not-allowed":"bg-gray-200 hover:bg-gray-300 text-gray-800 cursor-pointer"}`,children:[Vt("virtualTryOn.uploadImage"),Xe.jsx("input",{type:"file",accept:"image/*",className:"hidden",onChange:A,disabled:P})]}),s&&e&&Xe.jsx("button",{onClick:()=>K(s,e),disabled:P,className:`py-3 px-6 rounded-md font-medium transition-colors duration-200 ${P?"bg-blue-300 text-blue-100 cursor-not-allowed":"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer"}`,children:P?Vt("virtualTryOn.processing"):Vt("virtualTryOn.tryOn")}),n&&c&&d&&Xe.jsx("button",{onClick:Q,disabled:P,className:`py-3 px-6 rounded-md font-medium transition-colors duration-200 ${P?"bg-green-300 text-green-100 cursor-not-allowed":_?"bg-orange-500 hover:bg-orange-600 text-white cursor-pointer":"bg-green-500 hover:bg-green-600 text-white cursor-pointer"}`,children:P?Vt("virtualTryOn.processing"):_?Vt("virtualTryOn.removeFace"):Vt("virtualTryOn.recoverFace")})]})]})},LT=({description:e})=>Xe.jsxs("div",{children:[Xe.jsx("h2",{className:"text-xl font-bold mb-4",children:Vt("lbl.description")}),Xe.jsx("div",{className:"border border-gray-200 rounded-[12px] p-4",dangerouslySetInnerHTML:{__html:e}})]}),zT=({author:e,isVerified:r=!1,rating:t,content:s,date:i})=>Xe.jsxs("div",{className:"border border-gray-200 rounded-[12px] p-6 mb-4",children:[Xe.jsx("div",{className:"flex justify-between items-start mb-2",children:Xe.jsxs("div",{children:[Xe.jsx("div",{className:"mb-2",children:Xe.jsx(ub,{rating:t})}),Xe.jsxs("div",{className:"flex items-center",children:[Xe.jsx("span",{className:"font-medium mr-2",children:e}),r&&Xe.jsx("span",{className:"bg-green-500 rounded-full w-4 h-4 flex items-center justify-center",children:Xe.jsx("span",{className:"text-white text-xs",children:"✓"})}),Xe.jsxs("p",{className:"text-sm text-gray-500 mx-5",children:[Vt("lbl.postOn")," ",kv(i)]})]})]})}),Xe.jsx("p",{className:"text-gray-700 my-2",children:s})]}),BT=({productId:e})=>{const{reviews:r,pageable:t,loading:s,error:i,fetchReviews:n}=Av(),[a,o]=qt.useState(0),[l,c]=qt.useState([]),p=5;qt.useEffect(()=>{c([]),o(0),n(0,p,["createdAt,desc"],void 0,void 0,void 0,void 0,e)},[e]),qt.useEffect(()=>{r&&r.length>0&&c(a===0?r:u=>{const _=new Set(u.map(v=>v.id)),f=r.filter(v=>!_.has(v.id));return[...u,...f]})},[r,a]);const d=()=>{if(t&&a<t.totalPages-1){const u=a+1;o(u),n(u,p,["createdAt,desc"],void 0,void 0,void 0,void 0,e)}};return s&&a===0?Xe.jsx("div",{className:"flex justify-center items-center mb-8",children:Xe.jsx("div",{className:"loader",children:Vt("lbl.loading")})}):i?Xe.jsx("div",{className:"text-red-500",children:i}):Xe.jsxs("div",{className:"mt-8 mb-8",children:[Xe.jsx("div",{className:"flex justify-between items-center mb-6",children:Xe.jsxs("h2",{className:"text-xl font-bold",children:[Vt("lbl.allReviews")," ",Xe.jsxs("span",{className:"text-gray-500 font-normal",children:["(",(t==null?void 0:t.totalElements)||0,")"]})]})}),l&&l.length>0?Xe.jsxs(Xe.Fragment,{children:[l.map(u=>Xe.jsx(zT,{author:u.userName,isVerified:!0,rating:u.rating,content:u.comment,date:u.createdAt},u.id)),t&&a<t.totalPages-1&&Xe.jsx("button",{className:"w-full py-3 border border-gray-300 rounded-[12px] text-gray-600 hover:bg-gray-50 transition-colors",onClick:d,disabled:s,children:s?Vt("btn.loading"):Vt("btn.loadMoreReviews")})]}):Xe.jsx("p",{className:"text-gray-500 text-center py-6",children:Vt("lbl.noReviewsYet")})]})},RT=()=>{const[e,r]=qt.useState(!1);return{loading:e,fetchProductImages:async s=>{r(!0);try{return(await Pv(s)).data||null}finally{r(!1)}}}},{TIME_OUT_ADD_TO_CART:jT}=Dv,ZT=()=>{const{id:e}=Iv(),{fetchProductById:r,loading:t}=Cv(),{loading:s,fetchProductImages:i}=RT(),{loading:n,fetchProductColorSizes:a}=Sv(),[o,l]=qt.useState([]),[c,p]=qt.useState([]),[d,u]=qt.useState(),[_,f]=qt.useState([]),[v,$]=qt.useState([]),[w,g]=qt.useState(!1),{userInfo:C}=Cf(M=>M.auth),E=Cf(M=>M.auth.isAuthenticated),{addCartItem:x}=Ov();qt.useEffect(()=>{(async()=>{if(!e)return;const P=await r(e),A=await i(e),z=await a(e);if(z){$(z);const K=z.map(B=>B.color).filter((B,Y,H)=>Y===H.findIndex(q=>q.id===B.id)),Q=z.map(B=>B.size).filter((B,Y,H)=>Y===H.findIndex(q=>q.id===B.id));l(K),p(Q)}P&&u(P),A&&f(A)})()},[e]);const b=async(M,P)=>{if(!(C!=null&&C.id)||!E){Al(Vt("error.loginRequired"));return}if(!M){Al(Vt("error.quantityRequired"));return}if(P===""){Al(Vt("error.itemRequired"));return}const A={userId:C==null?void 0:C.id,itemId:P,quantity:M};await x(A)&&(g(!0),setTimeout(()=>{g(!1)},jT))};return t||s||n?Xe.jsx(Fv,{}):Xe.jsxs("div",{className:"mt-10 px-4 py-8 font-sans",children:[Xe.jsx(Mv,{items:[{label:Vt("breadcrumb.home"),path:"/"},{label:Vt("breadcrumb.detailProduct"),path:"/product"}]}),Xe.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-4",children:[_&&Xe.jsx(Lv,{images:_}),d&&Xe.jsx(Bv,{product:d,colors:o,productColorSize:v,sizes:c,isAdding:w,handleAddToCart:b})]}),Xe.jsx(DT,{garment:_[0]}),(d==null?void 0:d.description)&&Xe.jsx(LT,{description:d.description}),Xe.jsx(BT,{productId:d==null?void 0:d.id})]})};export{ZT as default};
