import{m as p,r as a}from"./index-CKvSTObc.js";const h="/orders",y=async r=>(await p.post(`${h}/checkout`,r)).data,m=async r=>(await p.post("/vn-payment/create",r)).data,k=async r=>{const{keyword:s,status:o,page:c=0,size:u=10,sort:n}=r,e=new URLSearchParams;return s&&e.append("keyword",s),o&&e.append("status",o),e.append("page",c.toString()),e.append("size",u.toString()),n&&n.length>0&&n.forEach(d=>{e.append("sort",d)}),(await p.get(`${h}/search?${e.toString()}`)).data},P=()=>{const[r,s]=a.useState(!1),[o,c]=a.useState(null);return{loading:r,orderResponse:o,performCheckout:async n=>{s(!0);try{const e=await y(n);return e.isSuccess&&e.data&&c(e.data),s(!1),e}catch{s(!1);return}}}},C=r=>{const[s,o]=a.useState(r||{page:0,size:10}),[c,u]=a.useState([]),[n,e]=a.useState(!1),[l,d]=a.useState(),i=a.useCallback(async()=>{e(!0),console.log("Fetching orders with params:",s);try{const t=await k(s);t.isSuccess&&t.data&&(u(t.data.content),d(t.data))}finally{e(!1)}},[s]),g=a.useCallback(t=>{o(f=>t.keyword!==void 0||t.status!==void 0||t.size!==void 0?{...f,...t,page:0}:{...f,...t})},[]),S=a.useCallback(async()=>{await i()},[i]);return a.useEffect(()=>{i()},[i]),{orders:c,loading:n,pageable:l,searchParams:s,setSearchParams:g,refresh:S}};export{C as a,m as c,P as u};
