import{r as l}from"./index-CxKmREMg.js";import{c as a}from"./request-BhcxZV3V.js";const o="/users",c={getUserById:async e=>(await a.get(`${o}/${e}`)).data,getUserByToken:async()=>(await a.get(`${o}/me`)).data,createUser:async e=>(await a.post(o,e)).data,updateUser:async(e,s)=>(await a.put(`${o}/${e}`,s)).data,changePassword:async(e,s)=>(await a.post(`${o}/${e}/change-password`,s)).data},B=async e=>(await a.post("/auth/login",e)).data,E=async e=>(await a.post("/auth/refresh-token",e)).data,I=async e=>(await a.post("/auth/logout",e)).data,T=async e=>(await a.post("/auth/validate-token",null,{headers:{Authorization:e}})).data,i=async e=>(await a.post(`/users/confirm-email?token=${encodeURIComponent(e)}`,null)).data,p=async e=>(await a.post(`/users/resend-confirmation?email=${encodeURIComponent(e)}`,null)).data,C=async e=>(await a.post(`/auth/outbound/authentication?code=${e}`,null)).data,S=()=>{const[e,s]=l.useState(null),[u,t]=l.useState(!1);return{user:e,loading:u,fetchUserById:async n=>{t(!0);try{const r=await c.getUserById(n);return s(r.data||null),r.data||null}catch{return null}finally{t(!1)}},createUser:async n=>{t(!0);try{return(await c.createUser(n)).data||null}catch{return null}finally{t(!1)}},updateUser:async(n,r)=>{try{return(await c.updateUser(n,r)).data||null}catch{return null}},changePassword:async(n,r)=>{t(!0);try{return await c.changePassword(n,r),!0}catch{return!1}finally{t(!1)}},fetchUserByToken:async()=>{t(!0);try{return(await c.getUserByToken()).data||null}finally{t(!1)}},confirmUserEmail:async n=>{t(!0);try{return(await i(n)).isSuccess}catch{return!1}finally{t(!1)}},resendUserConfirmationEmail:async n=>{t(!0);try{return(await p(n)).isSuccess}catch{return!1}finally{t(!1)}}}};export{I as a,B as l,C as o,E as r,S as u,T as v};
